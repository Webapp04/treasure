[{"/Users/apple/Documents/treasure/src/index.js":"1","/Users/apple/Documents/treasure/src/App.js":"2","/Users/apple/Documents/treasure/src/redux/store/index.js":"3","/Users/apple/Documents/treasure/src/hooks/useWidowDimensions.js":"4","/Users/apple/Documents/treasure/src/routes/index.js":"5","/Users/apple/Documents/treasure/src/redux/store/rootReducer.js":"6","/Users/apple/Documents/treasure/src/layouts/UserLayout/index.js":"7","/Users/apple/Documents/treasure/src/storybook/atom/Modal/modal.jsx":"8","/Users/apple/Documents/treasure/src/hooks/useFirstLoad.js":"9","/Users/apple/Documents/treasure/src/redux/slice/userSlice.js":"10","/Users/apple/Documents/treasure/src/redux/slice/balanceSlice.js":"11","/Users/apple/Documents/treasure/src/redux/slice/alertSlice.js":"12","/Users/apple/Documents/treasure/src/redux/slice/createButtonSlice.js":"13","/Users/apple/Documents/treasure/src/redux/slice/filterSlice.js":"14","/Users/apple/Documents/treasure/src/redux/slice/themeSlice.js":"15","/Users/apple/Documents/treasure/src/redux/slice/currentTokenSlice.js":"16","/Users/apple/Documents/treasure/src/redux/slice/providerSlice.js":"17","/Users/apple/Documents/treasure/src/redux/slice/rewardSlice.js":"18","/Users/apple/Documents/treasure/src/redux/slice/loaderSlice.js":"19","/Users/apple/Documents/treasure/src/redux/slice/nftSlice.js":"20","/Users/apple/Documents/treasure/src/redux/slice/scaleSlice.js":"21","/Users/apple/Documents/treasure/src/redux/slice/whiteListSlice.js":"22","/Users/apple/Documents/treasure/src/redux/slice/tokenCountSlice.js":"23","/Users/apple/Documents/treasure/src/redux/slice/targetSlice.js":"24","/Users/apple/Documents/treasure/src/redux/slice/pendingLoaderSlice.js":"25","/Users/apple/Documents/treasure/src/redux/slice/accountSlice.js":"26","/Users/apple/Documents/treasure/src/redux/slice/timeStampSlice.js":"27","/Users/apple/Documents/treasure/src/redux/slice/chestSlice.js":"28","/Users/apple/Documents/treasure/src/redux/slice/logoutSlice.js":"29","/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleRewards.js":"30","/Users/apple/Documents/treasure/src/hooks/blockchain/useWalletConnect.js":"31","/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleNFT.js":"32","/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleLpStaking.js":"33","/Users/apple/Documents/treasure/src/hooks/blockchain/useFaucet.js":"34","/Users/apple/Documents/treasure/src/hooks/dom/useHandleModal.js":"35","/Users/apple/Documents/treasure/src/components/HeaderBar/index.js":"36","/Users/apple/Documents/treasure/src/components/FAQsPage/index.js":"37","/Users/apple/Documents/treasure/src/components/common/InputRange/index.js":"38","/Users/apple/Documents/treasure/src/components/NavBar/index.js":"39","/Users/apple/Documents/treasure/src/components/common/CustomAlert/index.js":"40","/Users/apple/Documents/treasure/src/components/Footer/index.js":"41","/Users/apple/Documents/treasure/src/components/common/Modals/TransactionLoadingModal/index.js":"42","/Users/apple/Documents/treasure/src/storybook/atom/Loader/loader.jsx":"43","/Users/apple/Documents/treasure/src/components/HomePage/index.js":"44","/Users/apple/Documents/treasure/src/storybook/molecule/Faucet/faucet.jsx":"45","/Users/apple/Documents/treasure/src/hooks/loader/useHandleLoader.js":"46","/Users/apple/Documents/treasure/src/hooks/auth/useHandleAuth.js":"47","/Users/apple/Documents/treasure/src/hooks/customer/useHandleCustomer.js":"48","/Users/apple/Documents/treasure/src/hooks/theme/useHandleTheme.js":"49","/Users/apple/Documents/treasure/src/hooks/socket/useHandleSocket.js":"50","/Users/apple/Documents/treasure/src/constant/alert.js":"51","/Users/apple/Documents/treasure/src/hooks/rewards/useGetRewardDashboardInfo.js":"52","/Users/apple/Documents/treasure/src/hooks/rewards/useUpdateClaimableBonusRewardBalance.js":"53","/Users/apple/Documents/treasure/src/constant/blockchain.js":"54","/Users/apple/Documents/treasure/src/redux/action/index.js":"55","/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleContracts.js":"56","/Users/apple/Documents/treasure/src/storybook/atom/Icon/icon.jsx":"57","/Users/apple/Documents/treasure/src/api/AirdropApi.js":"58","/Users/apple/Documents/treasure/src/components/Dashboard/index.js":"59","/Users/apple/Documents/treasure/src/hooks/rewards/useGetVeTresrBonusRewards.js":"60","/Users/apple/Documents/treasure/src/hooks/rewards/useGetVeTresrPerHour.js":"61","/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpTresrBonusRewardPerSecond.js":"62","/Users/apple/Documents/treasure/src/hooks/rewards/useUpdateBurnedEmissionInfo.js":"63","/Users/apple/Documents/treasure/src/hooks/rewards/useGetBurned.js":"64","/Users/apple/Documents/treasure/src/hooks/rewards/useGetCumulativeLevels.js":"65","/Users/apple/Documents/treasure/src/hooks/rewards/useGetEmission.js":"66","/Users/apple/Documents/treasure/src/hooks/rewards/useGetDaysToMax.js":"67","/Users/apple/Documents/treasure/src/hooks/rewards/useGetMaxVeTresr.js":"68","/Users/apple/Documents/treasure/src/hooks/rewards/useGetPendingTotalRewards.js":"69","/Users/apple/Documents/treasure/src/hooks/rewards/useGetVeTresrBonusRewardPerSecond.js":"70","/Users/apple/Documents/treasure/src/hooks/rewards/useGetPenddingBonusReward.js":"71","/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpSmrtBonusRewardPerSecond.js":"72","/Users/apple/Documents/treasure/src/hooks/rewards/useGetKeyLevelBonusRewardPerSecond.js":"73","/Users/apple/Documents/treasure/src/hooks/rewards/useGetTotalRewards.js":"74","/Users/apple/Documents/treasure/src/hooks/rewards/useGetKeyLevelBonusReward.js":"75","/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpSmrtBonusReward.js":"76","/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpTresrBonusReward.js":"77","/Users/apple/Documents/treasure/src/hooks/rewards/useGetPendingVeTresr.js":"78","/Users/apple/Documents/treasure/src/hooks/rewards/useGetClaimedVeTresr.js":"79","/Users/apple/Documents/treasure/src/hooks/rewards/useClaimVeTresr.js":"80","/Users/apple/Documents/treasure/src/hooks/rewards/useClaimAllBase.js":"81","/Users/apple/Documents/treasure/src/hooks/rewards/useClaimBonus.js":"82","/Users/apple/Documents/treasure/src/hooks/rewards/useClaimBase.js":"83","/Users/apple/Documents/treasure/src/hooks/nft/useGetNFkeyInfo.js":"84","/Users/apple/Documents/treasure/src/hooks/nft/useGetAVAXBalance.js":"85","/Users/apple/Documents/treasure/src/hooks/nft/useUpdateProfileBalance.js":"86","/Users/apple/Documents/treasure/src/hooks/nft/useClaimTresrRewards.js":"87","/Users/apple/Documents/treasure/src/hooks/rewards/useWithdrawMasterChef.js":"88","/Users/apple/Documents/treasure/src/hooks/rewards/useDepositMasterChef.js":"89","/Users/apple/Documents/treasure/src/hooks/rewards/useGetMasterChefRewards.js":"90","/Users/apple/Documents/treasure/src/hooks/rewards/useClaimAll.js":"91","/Users/apple/Documents/treasure/src/hooks/nft/useApproveSMRTRtoContract.js":"92","/Users/apple/Documents/treasure/src/hooks/nft/useBatchMint.js":"93","/Users/apple/Documents/treasure/src/hooks/nft/useApproveSMRTRByAmount.js":"94","/Users/apple/Documents/treasure/src/hooks/nft/useUnstake.js":"95","/Users/apple/Documents/treasure/src/hooks/nft/useBulkStake.js":"96","/Users/apple/Documents/treasure/src/hooks/nft/useStake.js":"97","/Users/apple/Documents/treasure/src/hooks/nft/useUpgradeKey.js":"98","/Users/apple/Documents/treasure/src/hooks/nft/useApproveSMRTR.js":"99","/Users/apple/Documents/treasure/src/hooks/nft/useUnlockTreasure.js":"100","/Users/apple/Documents/treasure/src/hooks/nft/useReloadNFTItemBalance.js":"101","/Users/apple/Documents/treasure/src/hooks/nft/useGetZoneCommission.js":"102","/Users/apple/Documents/treasure/src/hooks/nft/useBalanceOfTRESR.js":"103","/Users/apple/Documents/treasure/src/hooks/nft/useGetRewardsReleased.js":"104","/Users/apple/Documents/treasure/src/hooks/nft/useLoadNFTBalance.js":"105","/Users/apple/Documents/treasure/src/hooks/nft/useMint.js":"106","/Users/apple/Documents/treasure/src/hooks/nft/useBulkUpgradeKeys.js":"107","/Users/apple/Documents/treasure/src/hooks/nft/useGetFreeSMRTR.js":"108","/Users/apple/Documents/treasure/src/hooks/nft/useBalanceOfSMRTR.js":"109","/Users/apple/Documents/treasure/src/hooks/nft/useGetTresrRewardsBalance.js":"110","/Users/apple/Documents/treasure/src/hooks/nft/useGetTotalSupply.js":"111","/Users/apple/Documents/treasure/src/hooks/nft/useGetBurnedSmarter.js":"112","/Users/apple/Documents/treasure/src/hooks/nft/useGetKeyLevelP.js":"113","/Users/apple/Documents/treasure/src/hooks/nft/useGetAccountZone.js":"114","/Users/apple/Documents/treasure/src/hooks/nft/useBalanceOfERC20.js":"115","/Users/apple/Documents/treasure/src/hooks/nft/useGetBurnedTresr.js":"116","/Users/apple/Documents/treasure/src/hooks/nft/useGetBonousPoolAllocation.js":"117","/Users/apple/Documents/treasure/src/hooks/nft/useGetPoolAllocation.js":"118","/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewards.js":"119","/Users/apple/Documents/treasure/src/hooks/nft/useGetPendingAllBaseReward.js":"120","/Users/apple/Documents/treasure/src/hooks/nft/useGetBonousRewardPerSecond.js":"121","/Users/apple/Documents/treasure/src/hooks/nft/useGetUpgradeDealy.js":"122","/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardList.js":"123","/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardPerSecond.js":"124","/Users/apple/Documents/treasure/src/hooks/nft/useGetAmountUpgradeKey.js":"125","/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardByTokens.js":"126","/Users/apple/Documents/treasure/src/hooks/nft/useGetUnlockCost.js":"127","/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardsListPerSecond.js":"128","/Users/apple/Documents/treasure/src/hooks/nft/useTargetUpgradeDate.js":"129","/Users/apple/Documents/treasure/src/hooks/nft/useGetProbToOpen.js":"130","/Users/apple/Documents/treasure/src/hooks/nft/useGetBonousReward.js":"131","/Users/apple/Documents/treasure/src/hooks/nft/useTimeToTreasureAvailable.js":"132","/Users/apple/Documents/treasure/src/utils/blockchain.js":"133","/Users/apple/Documents/treasure/src/hooks/nft/useGetStartUpgradeDelay.js":"134","/Users/apple/Documents/treasure/src/hooks/useCommon.js":"135","/Users/apple/Documents/treasure/src/utils/connectors.js":"136","/Users/apple/Documents/treasure/src/constant/faqs.js":"137","/Users/apple/Documents/treasure/src/constant/marketplace.js":"138","/Users/apple/Documents/treasure/src/api/CollectionApi.js":"139","/Users/apple/Documents/treasure/src/constant/createPage.js":"140","/Users/apple/Documents/treasure/src/hooks/dom/useOutsideClick.js":"141","/Users/apple/Documents/treasure/src/api/TokenApi.js":"142","/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleAuction.js":"143","/Users/apple/Documents/treasure/src/api/AuthApi.js":"144","/Users/apple/Documents/treasure/src/utils/localStorage.js":"145","/Users/apple/Documents/treasure/src/constant/singleNFTPage.js":"146","/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleMarketplace.js":"147","/Users/apple/Documents/treasure/src/api/CustomerApi.js":"148","/Users/apple/Documents/treasure/src/api/FileApi.js":"149","/Users/apple/Documents/treasure/src/redux/action/loaderAction.js":"150","/Users/apple/Documents/treasure/src/redux/action/balanceAction.js":"151","/Users/apple/Documents/treasure/src/redux/action/filtersAction.js":"152","/Users/apple/Documents/treasure/src/components/NavBarEditModeMobile/stylesMobile.js":"153","/Users/apple/Documents/treasure/src/redux/action/scaleAction.js":"154","/Users/apple/Documents/treasure/src/redux/action/createButtonAction.js":"155","/Users/apple/Documents/treasure/src/components/NavBarEditModeMobile/index.js":"156","/Users/apple/Documents/treasure/src/utils/index.js":"157","/Users/apple/Documents/treasure/src/redux/action/rewardAction.js":"158","/Users/apple/Documents/treasure/src/redux/action/nftAction.js":"159","/Users/apple/Documents/treasure/src/redux/action/alertAction.js":"160","/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleTresrStaking.js":"161","/Users/apple/Documents/treasure/src/api/Base.js":"162","/Users/apple/Documents/treasure/src/components/common/Modals/WalletConnectModal/index.js":"163","/Users/apple/Documents/treasure/src/components/AccountComponent/index.js":"164","/Users/apple/Documents/treasure/src/constant/navigation.js":"165","/Users/apple/Documents/treasure/src/constant/approveLoadingModal.js":"166","/Users/apple/Documents/treasure/src/components/NavBarEditMode/index.js":"167","/Users/apple/Documents/treasure/src/components/common/MarketplaceButton/index.js":"168","/Users/apple/Documents/treasure/src/storybook/atom/Icon/index.jsx":"169","/Users/apple/Documents/treasure/src/components/common/CustomDropdown/index.js":"170","/Users/apple/Documents/treasure/src/components/FAQsPage/FAQsItem/index.js":"171","/Users/apple/Documents/treasure/src/hooks/useCountdown.js":"172","/Users/apple/Documents/treasure/src/components/common/Modals/LoadingMintModal/index.js":"173","/Users/apple/Documents/treasure/src/components/HomePage/ConnectWallet/index.js":"174","/Users/apple/Documents/treasure/src/components/HomePage/HomeZoneListNew/index.js":"175","/Users/apple/Documents/treasure/src/components/NFTFooter/index.js":"176","/Users/apple/Documents/treasure/src/storybook/atom/Button/button.jsx":"177","/Users/apple/Documents/treasure/src/storybook/molecule/Tab/tab.jsx":"178","/Users/apple/Documents/treasure/src/storybook/molecule/Navbar/navbar.jsx":"179","/Users/apple/Documents/treasure/src/storybook/atom/CustomAlert/customAlert.jsx":"180","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardGameTab/index.js":"181","/Users/apple/Documents/treasure/src/storybook/atom/Tooltip/tooltip.jsx":"182","/Users/apple/Documents/treasure/src/hooks/token/useHandleToken.js":"183","/Users/apple/Documents/treasure/src/storybook/atom/InputRange/inputRange.jsx":"184","/Users/apple/Documents/treasure/src/components/common/Modals/ActivateAllKeysModal/index.js":"185","/Users/apple/Documents/treasure/src/components/common/Modals/SuccessKeyUpgradeModal/index.js":"186","/Users/apple/Documents/treasure/src/components/common/Modals/ExpandedNFTView/index.js":"187","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardMobileModal/index.js":"188","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardNotWhitelisted/index.js":"189","/Users/apple/Documents/treasure/src/components/common/Modals/ApproveLoadingModal/index.js":"190","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTab/index.js":"191","/Users/apple/Documents/treasure/src/hooks/alert/useHandleToastAlert.js":"192","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/DeactivateKeyModal/index.js":"193","/Users/apple/Documents/treasure/src/components/common/Modals/TreasureWarningModal/index.js":"194","/Users/apple/Documents/treasure/src/components/common/Modals/UpgradeKeyModal/index.js":"195","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardKeyRewards/index.js":"196","/Users/apple/Documents/treasure/src/components/common/Modals/OpenTreasureBoxModal/index.js":"197","/Users/apple/Documents/treasure/src/components/common/Modals/UpgradeAllKeysModal/index.js":"198","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/ActivateKeyModal/index.js":"199","/Users/apple/Documents/treasure/src/components/NavBarEditModeMobile/stylesTablet.js":"200","/Users/apple/Documents/treasure/src/storybook/molecule/FounderKeyCard/founderKeyCard.jsx":"201","/Users/apple/Documents/treasure/src/components/common/DashboardModals/TreasureBoxModal/index.js":"202","/Users/apple/Documents/treasure/src/components/NavBarEditMode/styles.js":"203","/Users/apple/Documents/treasure/src/hooks/useTimer.js":"204","/Users/apple/Documents/treasure/src/components/common/Modals/LoadingMintModal/customStyles.js":"205","/Users/apple/Documents/treasure/src/hooks/blockchain/useGetTokenPrice.js":"206","/Users/apple/Documents/treasure/src/api/EventApi.js":"207","/Users/apple/Documents/treasure/src/constant/singleCollectionPage.js":"208","/Users/apple/Documents/treasure/src/components/AccountComponent/SocialLinkComponent/index.js":"209","/Users/apple/Documents/treasure/src/storybook/molecule/Profile/profile.jsx":"210","/Users/apple/Documents/treasure/src/storybook/molecule/TotalRewardTab/totalRewardTab.jsx":"211","/Users/apple/Documents/treasure/src/storybook/molecule/AccountCard/accountCard.jsx":"212","/Users/apple/Documents/treasure/src/components/common/Modals/SuccessMintModal/index.js":"213","/Users/apple/Documents/treasure/src/constant/reg.js":"214","/Users/apple/Documents/treasure/src/components/common/Modals/MintConfirmationModal/index.js":"215","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTreasureTile/index.js":"216","/Users/apple/Documents/treasure/src/components/HomePage/HomeMint/index.js":"217","/Users/apple/Documents/treasure/src/storybook/molecule/Footer/footer.jsx":"218","/Users/apple/Documents/treasure/src/hooks/useMakeSound.js":"219","/Users/apple/Documents/treasure/src/storybook/molecule/ConnectWallet/connectWallet.jsx":"220","/Users/apple/Documents/treasure/src/storybook/molecule/HomeZoneListNew/homeZoneListNew.jsx":"221","/Users/apple/Documents/treasure/src/storybook/molecule/RewardBox/rewardBox.jsx":"222","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardVotingEscrow/index.js":"223","/Users/apple/Documents/treasure/src/storybook/molecule/FounderKeyTab/founderKeyTab.jsx":"224","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardBonusCard/index.js":"225","/Users/apple/Documents/treasure/src/components/common/Modals/UpgradeAllKeysModal/KeyItem/index.js":"226","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTotalPoolReward/index.js":"227","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTresrSmartrAvaxStakingWrapper/index.js":"228","/Users/apple/Documents/treasure/src/api/PriceApi.js":"229","/Users/apple/Documents/treasure/src/storybook/molecule/KeyRewardCard/keyRewardCard.jsx":"230","/Users/apple/Documents/treasure/src/storybook/atom/SingleSelect/singleSelect.jsx":"231","/Users/apple/Documents/treasure/src/utils/socials.js":"232","/Users/apple/Documents/treasure/src/storybook/atom/Label/label.jsx":"233","/Users/apple/Documents/treasure/src/storybook/molecule/WalletCard/walletCard.jsx":"234","/Users/apple/Documents/treasure/src/storybook/molecule/TreasureBox/treasureBox.jsx":"235","/Users/apple/Documents/treasure/src/storybook/molecule/ZoneItem/zoneItem.jsx":"236","/Users/apple/Documents/treasure/src/storybook/molecule/TimedMarketplaceButton/timedMarketplaceButton.jsx":"237","/Users/apple/Documents/treasure/src/storybook/molecule/SmallKeyTimer/smallKeyTimer.jsx":"238","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/OnStakeTRESRModal/index.js":"239","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/OnUnstakeTRESRModal/index.js":"240","/Users/apple/Documents/treasure/src/storybook/molecule/VotingCard/votingCard.jsx":"241","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTresrSmartrAvaxStaking/index.js":"242","/Users/apple/Documents/treasure/src/components/common/Tooltip/index.js":"243","/Users/apple/Documents/treasure/src/storybook/molecule/BonusCard/bonusCard.jsx":"244","/Users/apple/Documents/treasure/src/storybook/molecule/TotalPoolReward/totalPoolReward.jsx":"245","/Users/apple/Documents/treasure/src/storybook/molecule/TreasureTier/treasureTier.stories.jsx":"246","/Users/apple/Documents/treasure/src/storybook/molecule/Timer/timer.jsx":"247","/Users/apple/Documents/treasure/src/storybook/molecule/PoolReward/poolReward.jsx":"248","/Users/apple/Documents/treasure/src/storybook/molecule/VotingESCrow/votinEsCrow.jsx":"249","/Users/apple/Documents/treasure/src/storybook/molecule/KeyReward/keyReward.jsx":"250","/Users/apple/Documents/treasure/src/storybook/molecule/BonusRewardCard/bonusRewardCard.jsx":"251","/Users/apple/Documents/treasure/src/storybook/molecule/TreasureTier/treasureTier.jsx":"252"},{"size":396,"mtime":1691642489187,"results":"253","hashOfConfig":"254"},{"size":3158,"mtime":1694080028977,"results":"255","hashOfConfig":"254"},{"size":151,"mtime":1691642489199,"results":"256","hashOfConfig":"254"},{"size":748,"mtime":1691662017332,"results":"257","hashOfConfig":"254"},{"size":2156,"mtime":1690876815131,"results":"258","hashOfConfig":"254"},{"size":1893,"mtime":1692610056966,"results":"259","hashOfConfig":"254"},{"size":4428,"mtime":1694080578535,"results":"260","hashOfConfig":"254"},{"size":2438,"mtime":1694413548220,"results":"261","hashOfConfig":"254"},{"size":3143,"mtime":1692614155004,"results":"262","hashOfConfig":"254"},{"size":494,"mtime":1691642489198,"results":"263","hashOfConfig":"254"},{"size":6634,"mtime":1692687382645,"results":"264","hashOfConfig":"254"},{"size":918,"mtime":1691642489192,"results":"265","hashOfConfig":"254"},{"size":1029,"mtime":1691642489194,"results":"266","hashOfConfig":"254"},{"size":888,"mtime":1691642489195,"results":"267","hashOfConfig":"254"},{"size":528,"mtime":1691642489197,"results":"268","hashOfConfig":"254"},{"size":579,"mtime":1691642489194,"results":"269","hashOfConfig":"254"},{"size":526,"mtime":1691642489196,"results":"270","hashOfConfig":"254"},{"size":4728,"mtime":1692609494817,"results":"271","hashOfConfig":"254"},{"size":993,"mtime":1691642489195,"results":"272","hashOfConfig":"254"},{"size":1228,"mtime":1692602098069,"results":"273","hashOfConfig":"254"},{"size":692,"mtime":1691642489196,"results":"274","hashOfConfig":"254"},{"size":534,"mtime":1691642489199,"results":"275","hashOfConfig":"254"},{"size":532,"mtime":1691649889962,"results":"276","hashOfConfig":"254"},{"size":548,"mtime":1691649875425,"results":"277","hashOfConfig":"254"},{"size":552,"mtime":1691661674267,"results":"278","hashOfConfig":"254"},{"size":554,"mtime":1691649828791,"results":"279","hashOfConfig":"254"},{"size":523,"mtime":1691649884241,"results":"280","hashOfConfig":"254"},{"size":529,"mtime":1691642489193,"results":"281","hashOfConfig":"254"},{"size":1334,"mtime":1692610056966,"results":"282","hashOfConfig":"254"},{"size":9144,"mtime":1691995341261,"results":"283","hashOfConfig":"254"},{"size":2392,"mtime":1691770511783,"results":"284","hashOfConfig":"254"},{"size":12589,"mtime":1691786773248,"results":"285","hashOfConfig":"254"},{"size":10032,"mtime":1692613602791,"results":"286","hashOfConfig":"254"},{"size":2294,"mtime":1691767735530,"results":"287","hashOfConfig":"254"},{"size":264,"mtime":1691662017324,"results":"288","hashOfConfig":"254"},{"size":6253,"mtime":1693842947278,"results":"289","hashOfConfig":"254"},{"size":370,"mtime":1690876815087,"results":"290","hashOfConfig":"254"},{"size":881,"mtime":1694080536811,"results":"291","hashOfConfig":"254"},{"size":50914,"mtime":1694152731566,"results":"292","hashOfConfig":"254"},{"size":1274,"mtime":1694080028988,"results":"293","hashOfConfig":"254"},{"size":366,"mtime":1690876815087,"results":"294","hashOfConfig":"254"},{"size":5007,"mtime":1694080029002,"results":"295","hashOfConfig":"254"},{"size":2133,"mtime":1694418323978,"results":"296","hashOfConfig":"254"},{"size":5930,"mtime":1693842947281,"results":"297","hashOfConfig":"254"},{"size":900,"mtime":1694414259475,"results":"298","hashOfConfig":"254"},{"size":422,"mtime":1691649811809,"results":"299","hashOfConfig":"254"},{"size":2199,"mtime":1691750811776,"results":"300","hashOfConfig":"254"},{"size":968,"mtime":1691665749819,"results":"301","hashOfConfig":"254"},{"size":998,"mtime":1691645332004,"results":"302","hashOfConfig":"254"},{"size":8698,"mtime":1692610056964,"results":"303","hashOfConfig":"254"},{"size":4105,"mtime":1690876815125,"results":"304","hashOfConfig":"254"},{"size":1357,"mtime":1691989195569,"results":"305","hashOfConfig":"254"},{"size":1641,"mtime":1692611063338,"results":"306","hashOfConfig":"254"},{"size":4577,"mtime":1690876815126,"results":"307","hashOfConfig":"254"},{"size":2237,"mtime":1692610056965,"results":"308","hashOfConfig":"254"},{"size":14260,"mtime":1692610056955,"results":"309","hashOfConfig":"254"},{"size":1378,"mtime":1694411923114,"results":"310","hashOfConfig":"254"},{"size":602,"mtime":1690876814820,"results":"311","hashOfConfig":"254"},{"size":28016,"mtime":1694153693166,"results":"312","hashOfConfig":"254"},{"size":1007,"mtime":1692610056963,"results":"313","hashOfConfig":"254"},{"size":805,"mtime":1691990452394,"results":"314","hashOfConfig":"254"},{"size":941,"mtime":1691990206720,"results":"315","hashOfConfig":"254"},{"size":1080,"mtime":1691990966144,"results":"316","hashOfConfig":"254"},{"size":901,"mtime":1691991096506,"results":"317","hashOfConfig":"254"},{"size":804,"mtime":1691991384929,"results":"318","hashOfConfig":"254"},{"size":934,"mtime":1691991202825,"results":"319","hashOfConfig":"254"},{"size":838,"mtime":1691998678704,"results":"320","hashOfConfig":"254"},{"size":788,"mtime":1691990609287,"results":"321","hashOfConfig":"254"},{"size":1099,"mtime":1692610056963,"results":"322","hashOfConfig":"254"},{"size":935,"mtime":1691992062175,"results":"323","hashOfConfig":"254"},{"size":830,"mtime":1691991473685,"results":"324","hashOfConfig":"254"},{"size":935,"mtime":1691991789412,"results":"325","hashOfConfig":"254"},{"size":941,"mtime":1691995427937,"results":"326","hashOfConfig":"254"},{"size":853,"mtime":1691992888996,"results":"327","hashOfConfig":"254"},{"size":1012,"mtime":1692611057117,"results":"328","hashOfConfig":"254"},{"size":1008,"mtime":1692610056962,"results":"329","hashOfConfig":"254"},{"size":1011,"mtime":1692610056962,"results":"330","hashOfConfig":"254"},{"size":855,"mtime":1691993037679,"results":"331","hashOfConfig":"254"},{"size":856,"mtime":1691993158234,"results":"332","hashOfConfig":"254"},{"size":707,"mtime":1691993385548,"results":"333","hashOfConfig":"254"},{"size":2008,"mtime":1692610056961,"results":"334","hashOfConfig":"254"},{"size":2853,"mtime":1691993721549,"results":"335","hashOfConfig":"254"},{"size":2266,"mtime":1692610056961,"results":"336","hashOfConfig":"254"},{"size":2371,"mtime":1692610056957,"results":"337","hashOfConfig":"254"},{"size":597,"mtime":1691642489182,"results":"338","hashOfConfig":"254"},{"size":2238,"mtime":1691767540973,"results":"339","hashOfConfig":"254"},{"size":2247,"mtime":1692610056957,"results":"340","hashOfConfig":"254"},{"size":1205,"mtime":1691995088732,"results":"341","hashOfConfig":"254"},{"size":721,"mtime":1691995389204,"results":"342","hashOfConfig":"254"},{"size":766,"mtime":1692610056963,"results":"343","hashOfConfig":"254"},{"size":3240,"mtime":1692610056961,"results":"344","hashOfConfig":"254"},{"size":1461,"mtime":1691770747695,"results":"345","hashOfConfig":"254"},{"size":3476,"mtime":1692688540005,"results":"346","hashOfConfig":"254"},{"size":1457,"mtime":1691770715266,"results":"347","hashOfConfig":"254"},{"size":2220,"mtime":1692610056960,"results":"348","hashOfConfig":"254"},{"size":2307,"mtime":1692610056956,"results":"349","hashOfConfig":"254"},{"size":2265,"mtime":1692610056959,"results":"350","hashOfConfig":"254"},{"size":2292,"mtime":1692610056960,"results":"351","hashOfConfig":"254"},{"size":1840,"mtime":1692610056956,"results":"352","hashOfConfig":"254"},{"size":2273,"mtime":1692610056960,"results":"353","hashOfConfig":"254"},{"size":917,"mtime":1692610056959,"results":"354","hashOfConfig":"254"},{"size":643,"mtime":1691765511793,"results":"355","hashOfConfig":"254"},{"size":832,"mtime":1691770810088,"results":"356","hashOfConfig":"254"},{"size":562,"mtime":1692610056958,"results":"357","hashOfConfig":"254"},{"size":773,"mtime":1692610056959,"results":"358","hashOfConfig":"254"},{"size":3532,"mtime":1692688560007,"results":"359","hashOfConfig":"254"},{"size":2283,"mtime":1692610056956,"results":"360","hashOfConfig":"254"},{"size":1651,"mtime":1691770998081,"results":"361","hashOfConfig":"254"},{"size":854,"mtime":1691770783055,"results":"362","hashOfConfig":"254"},{"size":1184,"mtime":1692610056959,"results":"363","hashOfConfig":"254"},{"size":569,"mtime":1691783497578,"results":"364","hashOfConfig":"254"},{"size":905,"mtime":1691783602749,"results":"365","hashOfConfig":"254"},{"size":855,"mtime":1692612850215,"results":"366","hashOfConfig":"254"},{"size":594,"mtime":1691783080462,"results":"367","hashOfConfig":"254"},{"size":722,"mtime":1691783874544,"results":"368","hashOfConfig":"254"},{"size":730,"mtime":1691782701676,"results":"369","hashOfConfig":"254"},{"size":807,"mtime":1691783164091,"results":"370","hashOfConfig":"254"},{"size":863,"mtime":1691782548761,"results":"371","hashOfConfig":"254"},{"size":972,"mtime":1691785368139,"results":"372","hashOfConfig":"254"},{"size":901,"mtime":1692610056958,"results":"373","hashOfConfig":"254"},{"size":800,"mtime":1691785160968,"results":"374","hashOfConfig":"254"},{"size":600,"mtime":1691784423182,"results":"375","hashOfConfig":"254"},{"size":804,"mtime":1691785715695,"results":"376","hashOfConfig":"254"},{"size":669,"mtime":1691785893772,"results":"377","hashOfConfig":"254"},{"size":690,"mtime":1691786173440,"results":"378","hashOfConfig":"254"},{"size":767,"mtime":1691786930755,"results":"379","hashOfConfig":"254"},{"size":728,"mtime":1691786318730,"results":"380","hashOfConfig":"254"},{"size":887,"mtime":1691786035869,"results":"381","hashOfConfig":"254"},{"size":779,"mtime":1691784196975,"results":"382","hashOfConfig":"254"},{"size":850,"mtime":1692610056958,"results":"383","hashOfConfig":"254"},{"size":742,"mtime":1691784788496,"results":"384","hashOfConfig":"254"},{"size":988,"mtime":1691786490321,"results":"385","hashOfConfig":"254"},{"size":913,"mtime":1690876815135,"results":"386","hashOfConfig":"254"},{"size":620,"mtime":1691784580918,"results":"387","hashOfConfig":"254"},{"size":1085,"mtime":1690876815130,"results":"388","hashOfConfig":"254"},{"size":949,"mtime":1690876815135,"results":"389","hashOfConfig":"254"},{"size":942,"mtime":1690876815126,"results":"390","hashOfConfig":"254"},{"size":10359,"mtime":1690876815126,"results":"391","hashOfConfig":"254"},{"size":851,"mtime":1690876814821,"results":"392","hashOfConfig":"254"},{"size":865,"mtime":1690876815126,"results":"393","hashOfConfig":"254"},{"size":651,"mtime":1691662017325,"results":"394","hashOfConfig":"254"},{"size":632,"mtime":1691662017308,"results":"395","hashOfConfig":"254"},{"size":6100,"mtime":1691768261558,"results":"396","hashOfConfig":"254"},{"size":176,"mtime":1690876814820,"results":"397","hashOfConfig":"254"},{"size":421,"mtime":1690876815135,"results":"398","hashOfConfig":"254"},{"size":6162,"mtime":1693842947283,"results":"399","hashOfConfig":"254"},{"size":8481,"mtime":1691769201256,"results":"400","hashOfConfig":"254"},{"size":425,"mtime":1690876814821,"results":"401","hashOfConfig":"254"},{"size":527,"mtime":1690876814822,"results":"402","hashOfConfig":"254"},{"size":381,"mtime":1691649538692,"results":"403","hashOfConfig":"254"},{"size":2872,"mtime":1692687815299,"results":"404","hashOfConfig":"254"},{"size":307,"mtime":1691642489189,"results":"405","hashOfConfig":"254"},{"size":539,"mtime":1691642489149,"results":"406","hashOfConfig":"254"},{"size":248,"mtime":1691642489190,"results":"407","hashOfConfig":"254"},{"size":395,"mtime":1691642489189,"results":"408","hashOfConfig":"254"},{"size":2863,"mtime":1694152720432,"results":"409","hashOfConfig":"254"},{"size":1277,"mtime":1690876815135,"results":"410","hashOfConfig":"254"},{"size":1504,"mtime":1692611050103,"results":"411","hashOfConfig":"254"},{"size":393,"mtime":1692602082679,"results":"412","hashOfConfig":"254"},{"size":288,"mtime":1691642489188,"results":"413","hashOfConfig":"254"},{"size":7953,"mtime":1692689758770,"results":"414","hashOfConfig":"254"},{"size":2230,"mtime":1690876814820,"results":"415","hashOfConfig":"254"},{"size":1503,"mtime":1694080029007,"results":"416","hashOfConfig":"254"},{"size":7198,"mtime":1691642489126,"results":"417","hashOfConfig":"254"},{"size":2628,"mtime":1694080029010,"results":"418","hashOfConfig":"254"},{"size":2394,"mtime":1690876815125,"results":"419","hashOfConfig":"254"},{"size":2880,"mtime":1694152359645,"results":"420","hashOfConfig":"254"},{"size":735,"mtime":1692958526790,"results":"421","hashOfConfig":"254"},{"size":3597,"mtime":1694411955426,"results":"422","hashOfConfig":"254"},{"size":2181,"mtime":1691642489153,"results":"423","hashOfConfig":"254"},{"size":633,"mtime":1690876815087,"results":"424","hashOfConfig":"254"},{"size":1241,"mtime":1693897410678,"results":"425","hashOfConfig":"254"},{"size":6808,"mtime":1694147870207,"results":"426","hashOfConfig":"254"},{"size":2364,"mtime":1693842947279,"results":"427","hashOfConfig":"254"},{"size":8881,"mtime":1694080028986,"results":"428","hashOfConfig":"254"},{"size":1317,"mtime":1694080028986,"results":"429","hashOfConfig":"254"},{"size":1451,"mtime":1694412552702,"results":"430","hashOfConfig":"254"},{"size":1684,"mtime":1694416950002,"results":"431","hashOfConfig":"254"},{"size":8013,"mtime":1694415849752,"results":"432","hashOfConfig":"254"},{"size":1672,"mtime":1694412930319,"results":"433","hashOfConfig":"254"},{"size":6630,"mtime":1694080028978,"results":"434","hashOfConfig":"254"},{"size":975,"mtime":1694414845895,"results":"435","hashOfConfig":"254"},{"size":3178,"mtime":1694080029011,"results":"436","hashOfConfig":"254"},{"size":432,"mtime":1694413176339,"results":"437","hashOfConfig":"254"},{"size":4454,"mtime":1694080028989,"results":"438","hashOfConfig":"254"},{"size":2625,"mtime":1694080029000,"results":"439","hashOfConfig":"254"},{"size":995,"mtime":1694080028995,"results":"440","hashOfConfig":"254"},{"size":430,"mtime":1694091546535,"results":"441","hashOfConfig":"254"},{"size":2914,"mtime":1691642489133,"results":"442","hashOfConfig":"254"},{"size":3255,"mtime":1694153336332,"results":"443","hashOfConfig":"254"},{"size":1706,"mtime":1692688053971,"results":"444","hashOfConfig":"254"},{"size":496,"mtime":1691662017317,"results":"445","hashOfConfig":"254"},{"size":1394,"mtime":1694080028980,"results":"446","hashOfConfig":"254"},{"size":744,"mtime":1694148338026,"results":"447","hashOfConfig":"254"},{"size":1777,"mtime":1694080029006,"results":"448","hashOfConfig":"254"},{"size":2769,"mtime":1694080028979,"results":"449","hashOfConfig":"254"},{"size":3915,"mtime":1694080028998,"results":"450","hashOfConfig":"254"},{"size":6770,"mtime":1694080029004,"results":"451","hashOfConfig":"254"},{"size":1428,"mtime":1694080028980,"results":"452","hashOfConfig":"254"},{"size":469,"mtime":1691642489150,"results":"453","hashOfConfig":"254"},{"size":2259,"mtime":1694415043936,"results":"454","hashOfConfig":"254"},{"size":5576,"mtime":1694080028988,"results":"455","hashOfConfig":"254"},{"size":408,"mtime":1691642489149,"results":"456","hashOfConfig":"254"},{"size":220,"mtime":1691662017331,"results":"457","hashOfConfig":"254"},{"size":458,"mtime":1690876815116,"results":"458","hashOfConfig":"254"},{"size":387,"mtime":1691662017319,"results":"459","hashOfConfig":"254"},{"size":209,"mtime":1690876814821,"results":"460","hashOfConfig":"254"},{"size":641,"mtime":1690876815126,"results":"461","hashOfConfig":"254"},{"size":2380,"mtime":1691642489126,"results":"462","hashOfConfig":"254"},{"size":2168,"mtime":1694416161336,"results":"463","hashOfConfig":"254"},{"size":851,"mtime":1694417436646,"results":"464","hashOfConfig":"254"},{"size":4758,"mtime":1694080029019,"results":"465","hashOfConfig":"254"},{"size":6381,"mtime":1694080029001,"results":"466","hashOfConfig":"254"},{"size":46,"mtime":1690876815126,"results":"467","hashOfConfig":"254"},{"size":969,"mtime":1694080028997,"results":"468","hashOfConfig":"254"},{"size":1491,"mtime":1694080028982,"results":"469","hashOfConfig":"254"},{"size":4225,"mtime":1691642489140,"results":"470","hashOfConfig":"254"},{"size":2139,"mtime":1694414493952,"results":"471","hashOfConfig":"254"},{"size":322,"mtime":1691662017329,"results":"472","hashOfConfig":"254"},{"size":731,"mtime":1694414223496,"results":"473","hashOfConfig":"254"},{"size":6040,"mtime":1694415353333,"results":"474","hashOfConfig":"254"},{"size":10004,"mtime":1694416609204,"results":"475","hashOfConfig":"254"},{"size":8241,"mtime":1694080028983,"results":"476","hashOfConfig":"254"},{"size":3629,"mtime":1694080029022,"results":"477","hashOfConfig":"254"},{"size":4200,"mtime":1694080028978,"results":"478","hashOfConfig":"254"},{"size":3984,"mtime":1692679250358,"results":"479","hashOfConfig":"254"},{"size":5848,"mtime":1694080028982,"results":"480","hashOfConfig":"254"},{"size":10262,"mtime":1692689358839,"results":"481","hashOfConfig":"254"},{"size":404,"mtime":1690876814823,"results":"482","hashOfConfig":"254"},{"size":2657,"mtime":1694415549246,"results":"483","hashOfConfig":"254"},{"size":1783,"mtime":1694080029018,"results":"484","hashOfConfig":"254"},{"size":2100,"mtime":1690876815135,"results":"485","hashOfConfig":"254"},{"size":885,"mtime":1694413287532,"results":"486","hashOfConfig":"254"},{"size":2812,"mtime":1694414737046,"results":"487","hashOfConfig":"254"},{"size":2787,"mtime":1694417549778,"results":"488","hashOfConfig":"254"},{"size":2777,"mtime":1694417988114,"results":"489","hashOfConfig":"254"},{"size":1093,"mtime":1694417122206,"results":"490","hashOfConfig":"254"},{"size":618,"mtime":1693296117915,"results":"491","hashOfConfig":"254"},{"size":1661,"mtime":1694080028981,"results":"492","hashOfConfig":"254"},{"size":1492,"mtime":1694080028981,"results":"493","hashOfConfig":"254"},{"size":1208,"mtime":1694417772750,"results":"494","hashOfConfig":"254"},{"size":813,"mtime":1694080028983,"results":"495","hashOfConfig":"254"},{"size":546,"mtime":1690876815125,"results":"496","hashOfConfig":"254"},{"size":12228,"mtime":1694413985375,"results":"497","hashOfConfig":"254"},{"size":3137,"mtime":1694417379927,"results":"498","hashOfConfig":"254"},{"size":350,"mtime":1694417583298,"results":"499","hashOfConfig":"254"},{"size":992,"mtime":1694417163920,"results":"500","hashOfConfig":"254"},{"size":4436,"mtime":1694415965044,"results":"501","hashOfConfig":"254"},{"size":3334,"mtime":1694417848836,"results":"502","hashOfConfig":"254"},{"size":749,"mtime":1693457899388,"results":"503","hashOfConfig":"254"},{"size":4059,"mtime":1694414111723,"results":"504","hashOfConfig":"254"},{"size":785,"mtime":1694417620499,"results":"505","hashOfConfig":"254"},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6tql6",{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522"},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529"},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","suppressedMessages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","suppressedMessages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","suppressedMessages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","suppressedMessages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","suppressedMessages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","suppressedMessages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","suppressedMessages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","suppressedMessages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","suppressedMessages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609"},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","suppressedMessages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","suppressedMessages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619"},{"filePath":"620","messages":"621","suppressedMessages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","suppressedMessages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629"},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639"},{"filePath":"640","messages":"641","suppressedMessages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","suppressedMessages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646"},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","suppressedMessages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","suppressedMessages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683"},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","suppressedMessages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693"},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","suppressedMessages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","suppressedMessages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","suppressedMessages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","suppressedMessages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","suppressedMessages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"718","messages":"719","suppressedMessages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","suppressedMessages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724"},{"filePath":"725","messages":"726","suppressedMessages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","suppressedMessages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","suppressedMessages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","suppressedMessages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","suppressedMessages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","suppressedMessages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","suppressedMessages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","suppressedMessages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","suppressedMessages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","suppressedMessages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","suppressedMessages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","suppressedMessages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761"},{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","suppressedMessages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","suppressedMessages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","suppressedMessages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","suppressedMessages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","suppressedMessages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","suppressedMessages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","suppressedMessages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","suppressedMessages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","suppressedMessages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792"},{"filePath":"793","messages":"794","suppressedMessages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","suppressedMessages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","suppressedMessages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","suppressedMessages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","suppressedMessages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","suppressedMessages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","suppressedMessages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","suppressedMessages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","suppressedMessages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","suppressedMessages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"823"},{"filePath":"824","messages":"825","suppressedMessages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","suppressedMessages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","suppressedMessages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","suppressedMessages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","suppressedMessages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","suppressedMessages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","suppressedMessages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","suppressedMessages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"854","messages":"855","suppressedMessages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857"},{"filePath":"858","messages":"859","suppressedMessages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","suppressedMessages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"864","messages":"865","suppressedMessages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","suppressedMessages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870"},{"filePath":"871","messages":"872","suppressedMessages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"874"},{"filePath":"875","messages":"876","suppressedMessages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878"},{"filePath":"879","messages":"880","suppressedMessages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","suppressedMessages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","suppressedMessages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"888","messages":"889","suppressedMessages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","suppressedMessages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894"},{"filePath":"895","messages":"896","suppressedMessages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"898","messages":"899","suppressedMessages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"901","messages":"902","suppressedMessages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904"},{"filePath":"905","messages":"906","suppressedMessages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","suppressedMessages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","suppressedMessages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","suppressedMessages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"917","messages":"918","suppressedMessages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","suppressedMessages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","suppressedMessages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","suppressedMessages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"932","messages":"933","suppressedMessages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","suppressedMessages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"938","messages":"939","suppressedMessages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941"},{"filePath":"942","messages":"943","suppressedMessages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"945","messages":"946","suppressedMessages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"948","messages":"949","suppressedMessages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"951","messages":"952","suppressedMessages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"954","messages":"955","suppressedMessages":"956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"957","messages":"958","suppressedMessages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"960","messages":"961","suppressedMessages":"962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"963","messages":"964","suppressedMessages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"966","messages":"967","suppressedMessages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"969","messages":"970","suppressedMessages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"972","messages":"973","suppressedMessages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"975","messages":"976","suppressedMessages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"978","messages":"979","suppressedMessages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"981","messages":"982","suppressedMessages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"984","messages":"985","suppressedMessages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"987","messages":"988","suppressedMessages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"990","messages":"991","suppressedMessages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"993","messages":"994","suppressedMessages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996"},{"filePath":"997","messages":"998","suppressedMessages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1000","messages":"1001","suppressedMessages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1003","messages":"1004","suppressedMessages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1006","messages":"1007","suppressedMessages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1009","messages":"1010","suppressedMessages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012"},{"filePath":"1013","messages":"1014","suppressedMessages":"1015","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1016","messages":"1017","suppressedMessages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019"},{"filePath":"1020","messages":"1021","suppressedMessages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1023","messages":"1024","suppressedMessages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026"},{"filePath":"1027","messages":"1028","suppressedMessages":"1029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1030","messages":"1031","suppressedMessages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1033"},{"filePath":"1034","messages":"1035","suppressedMessages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","suppressedMessages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1040","messages":"1041","suppressedMessages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1043","messages":"1044","suppressedMessages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1046","messages":"1047","suppressedMessages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049"},{"filePath":"1050","messages":"1051","suppressedMessages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1053"},{"filePath":"1054","messages":"1055","suppressedMessages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1057","messages":"1058","suppressedMessages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1060"},{"filePath":"1061","messages":"1062","suppressedMessages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1064","messages":"1065","suppressedMessages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067"},{"filePath":"1068","messages":"1069","suppressedMessages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071"},{"filePath":"1072","messages":"1073","suppressedMessages":"1074","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075"},{"filePath":"1076","messages":"1077","suppressedMessages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079"},{"filePath":"1080","messages":"1081","suppressedMessages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1083"},{"filePath":"1084","messages":"1085","suppressedMessages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1087","messages":"1088","suppressedMessages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1090","messages":"1091","suppressedMessages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1093","messages":"1094","suppressedMessages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1096"},{"filePath":"1097","messages":"1098","suppressedMessages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1100","messages":"1101","suppressedMessages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","suppressedMessages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1106","messages":"1107","suppressedMessages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","suppressedMessages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1112","messages":"1113","suppressedMessages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1115","messages":"1116","suppressedMessages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1118","messages":"1119","suppressedMessages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1121","messages":"1122","suppressedMessages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1124","messages":"1125","suppressedMessages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","suppressedMessages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1130","messages":"1131","suppressedMessages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","suppressedMessages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136"},{"filePath":"1137","messages":"1138","suppressedMessages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1140","messages":"1141","suppressedMessages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","suppressedMessages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1146","messages":"1147","suppressedMessages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149"},{"filePath":"1150","messages":"1151","suppressedMessages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","suppressedMessages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1156","messages":"1157","suppressedMessages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1159","messages":"1160","suppressedMessages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1162","messages":"1163","suppressedMessages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1165","messages":"1166","suppressedMessages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1168","messages":"1169","suppressedMessages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1171","messages":"1172","suppressedMessages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1174"},{"filePath":"1175","messages":"1176","suppressedMessages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1178","messages":"1179","suppressedMessages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1181"},{"filePath":"1182","messages":"1183","suppressedMessages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1185","messages":"1186","suppressedMessages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1188","messages":"1189","suppressedMessages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1191","messages":"1192","suppressedMessages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1194","messages":"1195","suppressedMessages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197"},{"filePath":"1198","messages":"1199","suppressedMessages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1201"},{"filePath":"1202","messages":"1203","suppressedMessages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","suppressedMessages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1208","messages":"1209","suppressedMessages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1211","messages":"1212","suppressedMessages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214"},{"filePath":"1215","messages":"1216","suppressedMessages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1218"},{"filePath":"1219","messages":"1220","suppressedMessages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222"},{"filePath":"1223","messages":"1224","suppressedMessages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1226"},{"filePath":"1227","messages":"1228","suppressedMessages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1230"},{"filePath":"1231","messages":"1232","suppressedMessages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1234"},{"filePath":"1235","messages":"1236","suppressedMessages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238"},{"filePath":"1239","messages":"1240","suppressedMessages":"1241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1242","messages":"1243","suppressedMessages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1245","messages":"1246","suppressedMessages":"1247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1248","messages":"1249","suppressedMessages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1251","messages":"1252","suppressedMessages":"1253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1254","messages":"1255","suppressedMessages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1257"},{"filePath":"1258","messages":"1259","suppressedMessages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261"},{"filePath":"1262","messages":"1263","suppressedMessages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1265","messages":"1266","suppressedMessages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268"},{"filePath":"1269","messages":"1270","suppressedMessages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272"},{"filePath":"1273","messages":"1274","suppressedMessages":"1275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1276","messages":"1277","suppressedMessages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1279","messages":"1280","suppressedMessages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1282","messages":"1283","suppressedMessages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1285","messages":"1286","suppressedMessages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288"},{"filePath":"1289","messages":"1290","suppressedMessages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1292","messages":"1293","suppressedMessages":"1294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1295"},{"filePath":"1296","messages":"1297","suppressedMessages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299"},{"filePath":"1300","messages":"1301","suppressedMessages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1303","messages":"1304","suppressedMessages":"1305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1306","messages":"1307","suppressedMessages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1309","messages":"1310","suppressedMessages":"1311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1312"},{"filePath":"1313","messages":"1314","suppressedMessages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1316","messages":"1317","suppressedMessages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319"},"/Users/apple/Documents/treasure/src/index.js",[],[],"/Users/apple/Documents/treasure/src/App.js",["1320","1321","1322"],[],"import Routers from \"./routes\";\nimport UserLayout from \"./layouts/UserLayout\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nimport { Web3ReactProvider } from \"@web3-react/core\";\n\nimport \"./App.css\";\nimport \"./assets/styles/index.scss\";\nimport \"./assets/styles/variables.css\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport metaMaskPng from \"assets/wallet/metamask.png\";\nimport trustPng from \"assets/wallet/trust.png\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 30000;\n  return library;\n}\n\nfunction getMobileOperatingSystem() {\n  let userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return \"Windows Phone\";\n  }\n\n  if (/android/i.test(userAgent)) {\n    return \"Android\";\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return \"iOS\";\n  }\n\n  return \"unknown\";\n}\n\nfunction App() {\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 450;\n  const deviceOS = getMobileOperatingSystem();\n  if (!window?.ethereum) {\n    return (\n      <>\n        <p className=\"homePage__title mt-10\">Mint Your Founder’s Key</p>\n        <Modal\n          isModalOpen={true}\n          className={`max-w-[458px] max-h-[280px] px-[20px] py-[40px] ${\n            isMobile ? \"h-[180px]\" : \"h-[280px]\"\n          }`}\n          withCrossIcon\n        >\n          <p className={\"modal__title\"}>Connect Wallet</p>\n\n          <div className=\"mintCModal__buttons max-md:mt-[20px] modal__text\">\n            <div style={{ width: \"70px\", height: \"70px\" }}>\n              <a\n                href={\n                  deviceOS == \"iOS\"\n                    ? \"https://apps.apple.com/us/app/metamask-blockchain-wallet/id1438144202\"\n                    : \"https://play.google.com/store/apps/details?id=io.metamask&hl=en_US&gl=US\"\n                }\n              >\n                <img src={metaMaskPng} style={{ borderRadius: \"20px\" }} />\n                <div>Metamask</div>\n              </a>\n            </div>\n            <div style={{ width: \"70px\", height: \"70px\" }}>\n              <a\n                href={\n                  deviceOS === \"iOS\"\n                    ? \"https://apps.apple.com/ng/app/trust-crypto-bitcoin-wallet/id1288339409\"\n                    : \"https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp\"\n                }\n              >\n                {/* <a href=\"Contacts://\"> */}\n                <img src={trustPng} style={{ borderRadius: \"20px\" }} />\n                <div className=\"text-center\">Trust</div>\n              </a>\n            </div>\n          </div>\n        </Modal>\n      </>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <Web3ReactProvider getLibrary={getLibrary}>\n          <UserLayout>\n            <Routers />\n          </UserLayout>\n        </Web3ReactProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/apple/Documents/treasure/src/redux/store/index.js",[],[],"/Users/apple/Documents/treasure/src/hooks/useWidowDimensions.js",[],[],"/Users/apple/Documents/treasure/src/routes/index.js",["1323"],[],"import { Routes, Route } from \"react-router-dom\";\n\nimport HomePage from '../components/HomePage'\nimport Dashboard from '../components/Dashboard'\nimport FAQsPage from \"../components/FAQsPage\";\n\nexport default function Routers() {\n    return (\n        <>\n            <Routes>\n                <Route path={`/`} element={<HomePage />}/>\n                <Route path={`/game`} element={<Dashboard />}/>\n                <Route path={`/game/dashboard`} element={<Dashboard />}/>\n                {/* <Route path={`/game/faq`} element={<FAQsPage />}/> */}\n                {/* <Route path={`/marketplace`} element={<LandingMarketplace/>}/> */}\n                {/* <Route path={`/reward`} element={<Reward />}/> */}\n                {/* <Route path={`/reward/:id`} element={<RewardInfo />}/> */}\n                {/* <Route path={`/vote`} element={<VotePage />}/>\n                <Route path={`/vote/:id`} element={<VoteInfo />}/>\n                <Route path={`/vote/create`} element={<VoteCreate />}/> */}\n                {/* <Route path={`/marketplace/:contractAddress/:tokenID`} element={<SingleNFTPage/>}/> */}\n                {/* <Route path={`/account/:walletId`} element={<Marketplace/>}/>\n                <Route path={`/account/:walletId/favourites`} element={<Marketplace/>}/>\n                <Route path={`/account/:walletId/auctions`} element={<Marketplace/>}/> */}\n                {/* <Route path={`/allNFTs`} element={<AllNFTsPage/>}/> */}\n                {/* <Route path={`/collections`} element={<AllNFTsPage/>}/> */}\n                {/*<Route path={`/collections`} element={<AllCollections/>}/>*/}\n                {/* <Route path={`/collections/:contractAddress`} element={<SingleCollectionPage/>}/> */}\n                {/* <Route path={`/collections/:contractAddress/allItems`} element={<SingleCollectionPage/>}/> */}\n                {/* <Route path={`/collections/:contractAddress/activity`} element={<SingleCollectionPage/>}/> */}\n                {/* <Route path={`/create/nft`} element={<CreateNFTPage/>}/> */}\n                {/* <Route path={`/create/collection`} element={<CreateCollectionPage/>}/> */}\n            </Routes>\n        </>\n    );\n};\n","/Users/apple/Documents/treasure/src/redux/store/rootReducer.js",[],[],"/Users/apple/Documents/treasure/src/layouts/UserLayout/index.js",["1324"],[],"import { useEffect, useState } from \"react\";\nimport HeaderBar from \"../../components/HeaderBar\";\nimport useEffectFirstLoad from \"../../hooks/useFirstLoad\";\nimport { useLocation } from \"react-router-dom\";\nimport NavBar from \"../../components/NavBar\";\nimport React from \"react\";\nimport Footer from \"../../components/Footer\";\nimport CustomAlert from \"../../components/common/CustomAlert\";\nimport useFaucet from \"../../hooks/blockchain/useFaucet\";\nimport TransactionLoadingModal from \"../../components/common/Modals/TransactionLoadingModal\";\nimport useHandleModal from \"../../hooks/dom/useHandleModal\";\nimport InputRange from \"../../components/common/InputRange\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport {\n  selectLoaderComponentActive,\n  selectLoaderIsActive,\n  selectLoaderOpacityLevel,\n} from \"redux/slice/loaderSlice\";\nimport { selectScaleIsActive } from \"redux/slice/scaleSlice\";\nimport Faucet from \"storybook/molecule/Faucet/faucet\";\nimport Loader from \"storybook/atom/Loader/loader\";\n\nexport default function UserLayout({ children }) {\n  const user = useSelector(selectUser);\n  const scaleIsActive = useSelector(selectScaleIsActive);\n  const loaderIsActive = useSelector(selectLoaderIsActive);\n  const loaderComponentActive = useSelector(selectLoaderComponentActive);\n  const loaderOpacity = useSelector(selectLoaderOpacityLevel);\n  const location = useLocation();\n  const faucet = useFaucet();\n  const handleTransactionLoadingModal = useHandleModal();\n  const [showFaucet, toggleFaucet] = useState(false);\n  const [isAccountOpen, setIsAccountOpen] = useState(false);\n\n  const isHomePage = location?.pathname === \"/\";\n  const isCollectionPage = location?.pathname?.includes(\"collections\");\n  const isAccountPage = location?.pathname?.includes(\"account\");\n  const isGame = location?.pathname?.includes(\"game\");\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 850;\n\n  const handleToggleFaucet = () => toggleFaucet(!showFaucet);\n\n  const onGetTresr = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getTRESR().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onGetSmrtr = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getSMRTR().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onGetTresrLP = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getTRESRLP().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onGetSmrtrLP = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getSMRTRLP().finally(() => handleTransactionLoadingModal.close());\n  };\n\n  useEffectFirstLoad();\n\n  return (\n    <>\n      <div id=\"layout-wrapper\">\n        {loaderComponentActive && (\n          <div className=\"w-screen h-screen bg-[#ffffff10] fixed left-0 top-0 z-50\">\n            <Loader\n              variant=\"pageLoader\"\n              isLoaderActive={true}\n              opacityLevel={0}\n              customClass=\"mt-[30rem]\"\n            />\n          </div>\n        )}\n        <HeaderBar\n          setIsAccountOpen={setIsAccountOpen}\n          isAccountOpen={isAccountOpen}\n        />\n        <CustomAlert />\n        <div className={`main-content main-content__bg`}>\n          {!isHomePage && !loaderIsActive && <NavBar />}\n          <div className=\"page-content\">{children}</div>\n        </div>\n        <Footer />\n        {isGame && loaderIsActive && (\n          <Loader\n            variant=\"fullPageLoader\"\n            isLoaderActive={loaderIsActive}\n            opacityLevel={loaderOpacity}\n          />\n        )}\n        {scaleIsActive && (isCollectionPage || isAccountPage) && (\n          <div className=\"main__range\">\n            <InputRange />\n          </div>\n        )}\n        {!isMobile && (\n          <div className=\"footerFaucet\">\n            <Faucet\n              user={user}\n              showFaucet={showFaucet}\n              handleToggleFaucet={handleToggleFaucet}\n              onGetTresr={onGetTresr}\n              onGetSmrtr={onGetSmrtr}\n              onGetTresrLP={onGetTresrLP}\n              onGetSmrtrLP={onGetSmrtrLP}\n            />\n          </div>\n        )}\n        {handleTransactionLoadingModal?.isActive && (\n          <TransactionLoadingModal\n            isOpen={handleTransactionLoadingModal?.isActive}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","/Users/apple/Documents/treasure/src/storybook/atom/Modal/modal.jsx",["1325"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport Icon from \"../Icon/icon\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\n\nconst Modal = ({\n  custom,\n  withoutBlur,\n  isModalOpen,\n  handleClose,\n  children,\n  withCrossIcon,\n  isDark,\n  isFullModalBg,\n  className,\n  bgImg,\n}) => {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(isModalOpen ? isModalOpen : false);\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 640;\n\n  const onClose = () => {\n    setIsOpen(false);\n    handleClose();\n  };\n\n  useEffect(() => {\n    isModalOpen && setIsOpen(isModalOpen);\n  }, [isModalOpen]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!ref?.current?.contains(event.target)) {\n        setIsOpen(false);\n        handleClose();\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n  }, [ref]);\n\n  return ReactDOM.createPortal(\n    <>\n      {/* <button onClick={() => setIsOpen(!isOpen)}>Open</button> */}\n      {isOpen && (\n        <div\n          className={classNames(\"modal__overview\", {\n            blurredModal: !withoutBlur,\n          })}\n        >\n          <div\n            ref={ref}\n            className={classNames(\"\", {\n              \"modal__overview--wrapper\": !isMobile,\n              \"modal__overview--wrapper--mobile\": isMobile,\n              [className]: Boolean(className),\n            })}\n            style={{\n              backgroundImage: bgImg ? `url(${bgImg})` : \"none\",\n            }}\n          >\n            {withCrossIcon && !isMobile && (\n              <div\n                onClick={onClose}\n                className={`modal__exit ${\n                  isFullModalBg ? \"modal__exit--noPadding\" : \"\"\n                }`}\n              >\n                <Icon\n                  iconName={isDark ? \"exitDark\" : \"exitLight\"}\n                  className=\"modal__exit--line\"\n                />\n                <Icon iconName={\"close\"} className=\"modal__exit--bg\" />\n              </div>\n            )}\n            {isMobile && !custom && (\n              <div className=\"BarAccordian\">\n                <div></div>\n              </div>\n            )}\n            {children}\n          </div>\n        </div>\n      )}\n    </>,\n    document?.getElementById(\"modal-root\")\n  );\n};\n\nexport default Modal;\n","/Users/apple/Documents/treasure/src/hooks/useFirstLoad.js",[],["1326","1327"],"/Users/apple/Documents/treasure/src/redux/slice/userSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/balanceSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/alertSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/createButtonSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/filterSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/themeSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/currentTokenSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/providerSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/rewardSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/loaderSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/nftSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/scaleSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/whiteListSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/tokenCountSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/targetSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/pendingLoaderSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/accountSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/timeStampSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/chestSlice.js",[],[],"/Users/apple/Documents/treasure/src/redux/slice/logoutSlice.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleRewards.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useWalletConnect.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleNFT.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleLpStaking.js",["1328"],[],"import { useMemo } from \"react\";\nimport { parseEther } from \"ethers/lib/utils\";\nimport { hexToNumber } from \"../../utils/blockchain\";\nimport useHandleRewards from \"./useHandleRewards\";\nimport AirdropApi from \"api/AirdropApi\";\nimport {\n  ALERT_STATUS_FAILURE,\n  ALERT_STATUS_SUCCESS,\n  STAKE_SMRTR_LP_ALERT,\n  STAKE_TRESR_LP_ALERT,\n  UNSTAKE_SMRTR_LP_ALERT,\n  UNSTAKE_TRESR_LP_ALERT,\n} from \"constant/alert\";\nimport ACTIONS from \"redux/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport {\n  useContractLpCoinSMRTRAVAXWithSigner,\n  useContractLpCoinTRESRAVAXWithSigner,\n  useContractLpStakingSMRTRAVAXWithSigner,\n  useContractLpStakingTRESRAVAXWithSigner,\n} from \"./useHandleContracts\";\n\nexport default function useHandleLpStaking() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const handleContractLpCoinSMRTRAVAXWithSigner =\n    useContractLpCoinSMRTRAVAXWithSigner();\n  const handleContractLpCoinTRESRAVAXWithSigner =\n    useContractLpCoinTRESRAVAXWithSigner();\n  const handleContractLpStakingSMRTRAVAXWithSigner =\n    useContractLpStakingSMRTRAVAXWithSigner();\n  const handleContractLpStakingTRESRAVAXWithSigner =\n    useContractLpStakingTRESRAVAXWithSigner();\n  const handleRewards = useHandleRewards();\n\n  const approveLP = async (balance, isTRESR = true) => {\n    if (isTRESR) {\n      const contractLpCoinTRESRAVAXWithSigner =\n        await handleContractLpCoinTRESRAVAXWithSigner;\n      return contractLpCoinTRESRAVAXWithSigner\n        .approve(\n          process.env.REACT_APP_LP_TRESRAVAX_STAKING_ADDRESS,\n          parseEther(balance?.toString()).toString()\n        )\n        .then(async (tx) => {\n          await tx.wait();\n          ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n          return true;\n        })\n        .catch((err) => {\n          throw err;\n        });\n    } else {\n      const contractLpCoinSMRTRAVAXWithSigner =\n        await handleContractLpCoinSMRTRAVAXWithSigner;\n      return contractLpCoinSMRTRAVAXWithSigner\n        .approve(\n          process.env.REACT_APP_LP_SMRTRAVAX_STAKING_ADDRESS,\n          parseEther(balance?.toString()).toString()\n        )\n        .then(async (tx) => {\n          await tx.wait();\n          ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n          return true;\n        })\n        .catch((err) => {\n          throw err;\n        });\n    }\n  };\n\n  const balanceOfLp = async () => {\n    const contractLpCoinTRESRAVAXWithSigner =\n      await handleContractLpCoinTRESRAVAXWithSigner;\n    contractLpCoinTRESRAVAXWithSigner\n      .balanceOf(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_TRESRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / Math.pow(10, 18)\n        );\n      })\n      .catch(() => null);\n\n    const contractLpCoinSMRTRAVAXWithSigner =\n      await handleContractLpCoinSMRTRAVAXWithSigner;\n    contractLpCoinSMRTRAVAXWithSigner\n      ?.balanceOf(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_SMRTRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / Math.pow(10, 18)\n        );\n      })\n      .catch(() => null);\n  };\n\n  const balanceOfStakedLp = async () => {\n    if (!user?.wallet_id) return;\n    const contractLpStakingSMRTRAVAXWithSigner =\n      await handleContractLpStakingSMRTRAVAXWithSigner;\n    const contractLpStakingTRESRAVAXWithSigner =\n      await handleContractLpStakingTRESRAVAXWithSigner;\n    contractLpStakingTRESRAVAXWithSigner\n      ?.stakedBalanceOf(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_STAKED_TRESRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / Math.pow(10, 18)\n        );\n      })\n      .catch(() => null);\n\n    contractLpStakingTRESRAVAXWithSigner\n      ?.portion(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_TOTAL_STAKED_TRESRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / 1e34\n        );\n      })\n      .catch(() => null);\n\n    contractLpStakingTRESRAVAXWithSigner\n      ?.totalStaked()\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_COMMUNITY_STAKED_TRESRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / Math.pow(10, 18)\n        );\n      })\n      .catch(() => null);\n\n    contractLpStakingSMRTRAVAXWithSigner\n      ?.stakedBalanceOf(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_STAKED_SMRTRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / Math.pow(10, 18)\n        );\n      })\n      .catch(() => null);\n\n    contractLpStakingSMRTRAVAXWithSigner\n      ?.portion(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_TOTAL_STAKED_SMRTRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / 1e34\n        );\n      })\n      .catch(() => null);\n\n    contractLpStakingSMRTRAVAXWithSigner\n      ?.totalStaked()\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_LP_COMMUNITY_STAKED_SMRTRAVAX(\n          dispatch,\n          hexToNumber(tx._hex) / Math.pow(10, 18)\n        );\n      })\n      .catch(() => null);\n  };\n\n  const stake = async (amount, isTRESR = true) => {\n    await handleRewards.depositMasterChef(isTRESR ? 1 : 0, amount);\n\n    // const isApprove = await approveLP(amount, isTRESR);\n    // if (!isApprove) return null;\n\n    if (isTRESR) {\n      const contractLpStakingTRESRAVAXWithSigner =\n        await handleContractLpStakingTRESRAVAXWithSigner;\n      contractLpStakingTRESRAVAXWithSigner\n        ?.deposit(parseEther(amount?.toString())?.toString())\n        .then(async (tx) => {\n          new AirdropApi().logger({\n            wallet_id: user?.wallet_id,\n            type: \"PENDING\",\n            action: \"stakeTresrAvaxLP\",\n            description: \"stakeTresrAvaxLP\",\n            tx: JSON.stringify(tx),\n          });\n\n          await tx.wait();\n          ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n          await balanceOfStakedLp();\n          await balanceOfLp();\n          await handleRewards.getJlpTresrBonusReward();\n\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_SUCCESS,\n            STAKE_TRESR_LP_ALERT(true, amount)\n          );\n\n          return true;\n        })\n        .catch(() => {\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            STAKE_TRESR_LP_ALERT(false, amount)\n          );\n          return null;\n        });\n    } else {\n      const contractLpStakingSMRTRAVAXWithSigner =\n        await handleContractLpStakingSMRTRAVAXWithSigner;\n      contractLpStakingSMRTRAVAXWithSigner\n        ?.deposit(parseEther(amount?.toString())?.toString())\n        .then(async (tx) => {\n          new AirdropApi().logger({\n            wallet_id: user?.wallet_id,\n            type: \"PENDING\",\n            action: \"stakeSmrtrAvaxLP\",\n            description: \"stakeSmrtrAvaxLP\",\n            tx: JSON.stringify(tx),\n          });\n\n          await tx.wait();\n          ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n          await balanceOfStakedLp();\n          await balanceOfLp();\n          await handleRewards.getJlpSmrtBonusReward();\n\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_SUCCESS,\n            STAKE_SMRTR_LP_ALERT(true, amount)\n          );\n\n          return true;\n        })\n        .catch(() => {\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            STAKE_SMRTR_LP_ALERT(false, amount)\n          );\n          return null;\n        });\n    }\n  };\n\n  const unstake = async (amount, isTRESR = true) => {\n    await handleRewards.withdrawMasterChef(isTRESR ? 1 : 0, amount);\n\n    const valueToUnstake = parseEther(amount?.toString())?.toString();\n\n    if (isTRESR) {\n      const contractLpStakingTRESRAVAXWithSigner =\n        await handleContractLpStakingTRESRAVAXWithSigner;\n      return contractLpStakingTRESRAVAXWithSigner\n        ?.withdraw(valueToUnstake)\n        .then(async (tx) => {\n          new AirdropApi().logger({\n            wallet_id: user?.wallet_id,\n            type: \"PENDING\",\n            action: \"unstakeTresrAvaxLP\",\n            description: \"unstakeTresrAvaxLP\",\n            tx: JSON.stringify(tx),\n          });\n\n          await tx.wait();\n          ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n          await balanceOfStakedLp();\n          await balanceOfLp();\n          await handleRewards.getJlpTresrBonusReward();\n\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_SUCCESS,\n            UNSTAKE_TRESR_LP_ALERT(true, amount)\n          );\n        })\n        .catch(() => {\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            UNSTAKE_TRESR_LP_ALERT(false, amount)\n          );\n          return null;\n        });\n    } else {\n      const contractLpStakingSMRTRAVAXWithSigner =\n        await handleContractLpStakingSMRTRAVAXWithSigner;\n      return contractLpStakingSMRTRAVAXWithSigner()\n        ?.withdraw(valueToUnstake)\n        .then(async (tx) => {\n          new AirdropApi().logger({\n            wallet_id: user?.wallet_id,\n            type: \"PENDING\",\n            action: \"unstakeSmrtrAvaxLP\",\n            description: \"unstakeSmrtrAvaxLP\",\n            tx: JSON.stringify(tx),\n          });\n\n          await tx.wait();\n          ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n          await balanceOfStakedLp();\n          await balanceOfLp();\n          await handleRewards.getJlpSmrtBonusReward();\n\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_SUCCESS,\n            UNSTAKE_SMRTR_LP_ALERT(true, amount)\n          );\n        })\n        .catch(() => {\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            UNSTAKE_SMRTR_LP_ALERT(false, amount)\n          );\n          return null;\n        });\n    }\n  };\n\n  return {\n    approveLP,\n    balanceOfLp,\n    balanceOfStakedLp,\n    stake,\n    unstake,\n  };\n}\n","/Users/apple/Documents/treasure/src/hooks/blockchain/useFaucet.js",[],[],"/Users/apple/Documents/treasure/src/hooks/dom/useHandleModal.js",[],[],"/Users/apple/Documents/treasure/src/components/HeaderBar/index.js",["1329","1330","1331"],["1332","1333","1334","1335"],"import { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport useHandleAuth from \"../../hooks/auth/useHandleAuth\";\nimport useHandleTheme from \"../../hooks/theme/useHandleTheme\";\nimport useCommon from \"../../hooks/useCommon\";\nimport useHandleLoader from \"../../hooks/loader/useHandleLoader\";\nimport useHandleModal from \"../../hooks/dom/useHandleModal\";\nimport WalletConnectModal from \"../common/Modals/WalletConnectModal\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { walletconnect } from \"../../utils/connectors\";\nimport { toast } from \"react-toastify\";\nimport useFaucet from \"hooks/blockchain/useFaucet\";\n\nimport { useSelector } from \"react-redux\";\nimport {\n  selectAvaxBalance,\n  selectLpSMRTRAVAXBalance,\n  selectLpTRESRAVAXBalance,\n  selectSmrtrBalance,\n  selectTresrBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport Navbar from \"storybook/molecule/Navbar/navbar\";\nimport { selectLoaderComponentActive } from \"redux/slice/loaderSlice\";\n\nexport default function HeaderBar({ setIsAccountOpen, isAccountOpen }) {\n  const [totalTRESRBalance, setTotalTRESRBalance] = useState(0);\n  const user = useSelector(selectUser);\n  const theme = useSelector(selectTheme);\n  const loaderComponentActive = useSelector(selectLoaderComponentActive);\n  const avaxBalance = useSelector(selectAvaxBalance);\n  const smrtrBalance = useSelector(selectSmrtrBalance);\n  const tresrBalance = useSelector(selectTresrBalance);\n  const lpSMRTRAVAXBalance = useSelector(selectLpSMRTRAVAXBalance);\n  const lpTRESRAVAXBalance = useSelector(selectLpTRESRAVAXBalance);\n  const handleWalletConnectModal = useHandleModal();\n  const faucet = useFaucet();\n  const handleTransactionLoadingModal = useHandleModal();\n  const context = useWeb3React();\n  const { library, activate, deactivate } = context;\n  const isDark = theme === \"dark\";\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    //FIXME: check if this is correct practice\n    if (window?.localStorage?.getItem(\"isWalletConnected\") === \"true\") {\n      handleWalletConnect();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    let closeBtn = document.querySelector(\n      \".walletconnect-modal__close__wrapper\"\n    );\n    if (closeBtn) {\n      closeBtn.addEventListener(\"click\", () => {\n        deactivate();\n        window?.localStorage?.removeItem(\"isWalletConnected\");\n      });\n    }\n  }, [document.querySelector(\".walletconnect-modal__close__wrapper\")]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // const isAccountPage = location?.pathname?.includes('account');\n  // const isGame = location?.pathname?.includes('/game');\n  // const isMint = location?.pathname === '/';\n\n  const { americanFormatNumber } = useCommon();\n  const handleAuth = useHandleAuth();\n  const handleTheme = useHandleTheme();\n  const handleLoader = useHandleLoader();\n  const balanceAvax = americanFormatNumber(avaxBalance, 3);\n  const balanceSmrtr = americanFormatNumber(smrtrBalance, 3);\n  const balanceTresr = americanFormatNumber(tresrBalance, 3);\n  const [veClaimedTresr, setVeClaimedTresr] = useState(0);\n  const balanceLpSMRTRAVAX = americanFormatNumber(lpSMRTRAVAXBalance, 3);\n  const balanceLpTRESRAVAX = americanFormatNumber(lpTRESRAVAXBalance, 3);\n  const titleWalletAddress = `${user?.wallet_id?.substr(\n    0,\n    6\n  )}...${user?.wallet_id?.substr(-4)}`;\n  // const filterNavigationList = NAVIGATION_LIST?.filter(item => item?.isUser ? user?._id : true);\n\n  const onConnectWallet = () => handleLoader.loaderWrapper(handleAuth.login, 2);\n\n  const onGetTresr = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getTRESR().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onGetSmrtr = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getSMRTR().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onGetTresrLP = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getTRESRLP().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onGetSmrtrLP = () => {\n    handleTransactionLoadingModal.open();\n    faucet.getSMRTRLP().finally(() => handleTransactionLoadingModal.close());\n  };\n  const navigateToAccount = () => {\n    setIsAccountOpen(false);\n    navigate(`/account/${user?.wallet_id}`);\n  };\n  const onDisconnect = () => {\n    setIsAccountOpen(false);\n    handleAuth.logout();\n  };\n\n  const handleWalletConnect = async () => {\n    await activate(\n      walletconnect,\n      (error) => {\n        handleWalletConnectModal.close();\n        toast.error(error.message);\n        handleAuth.logout();\n      },\n      false\n    );\n  };\n\n  const openConnectWalletModal = () => {\n    handleWalletConnectModal.open();\n  };\n\n  useEffect(() => {\n    if (library) {\n      onConnectWallet();\n      localStorage.setItem(\"isWalletConnected\", \"true\");\n    }\n  }, [library]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"Header_wrapper\">\n      <Navbar\n        theme={theme}\n        totalTRESRBalance={totalTRESRBalance}\n        loaderComponentActive={loaderComponentActive}\n        user={user}\n        isDark={isDark}\n        balanceAvax={balanceAvax}\n        openConnectWalletModal={openConnectWalletModal}\n        titleWalletAddress={titleWalletAddress}\n        navigateToAccount={navigateToAccount}\n        avaxBalance={avaxBalance}\n        balanceSmrtr={balanceSmrtr}\n        balanceTresr={balanceTresr}\n        veClaimedTresr={veClaimedTresr}\n        balanceLpSMRTRAVAX={balanceLpSMRTRAVAX}\n        balanceLpTRESRAVAX={balanceLpTRESRAVAX}\n        onDisconnect={onDisconnect}\n        onGetTresr={onGetTresr}\n        onGetSmrtr={onGetSmrtr}\n        onGetTresrLP={onGetTresrLP}\n        onGetSmrtrLP={onGetSmrtrLP}\n        handleLoader={handleLoader}\n        handleAuth={handleAuth}\n      />\n      {handleWalletConnectModal.isActive && (\n        <WalletConnectModal\n          isOpen={handleWalletConnectModal.isActive}\n          onClose={handleWalletConnectModal.close}\n          connectMetamask={onConnectWallet}\n          connectWalletConnect={handleWalletConnect}\n        />\n      )}\n    </div>\n  );\n}\n","/Users/apple/Documents/treasure/src/components/FAQsPage/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/InputRange/index.js",[],[],"/Users/apple/Documents/treasure/src/components/NavBar/index.js",["1336","1337","1338","1339","1340"],["1341","1342","1343","1344"],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.scss\";\nimport filterIcon from \"../../assets/images/marketplace/icon-filter.svg\";\nimport filterIconLight from \"../../assets/images/marketplace/darkTheme/filter_light.svg\";\nimport filterIconClose from \"../../assets/images/marketplace/filter-light-close.svg\";\nimport filterIconLightClose from \"../../assets/images/marketplace/darkTheme/icon-filter-close.svg\";\nimport cn from \"classnames\";\nimport {\n  FILTER_BLOCKCHAIN,\n  FILTER_PRICE,\n  FILTER_SORT_BY,\n  FILTER_SORT_BY_OPTIONS,\n  FILTER_STATUS,\n  FILTERS_CRITERIONS,\n  FILTERS_OPTIONS,\n  NAVBAR_ITEMS_ACCOUNT_PAGE,\n  NAVBAR_ITEMS_ALL_NFTS_PAGE,\n  NAVBAR_ITEMS_GAME_PAGE,\n} from \"../../constant/marketplace\";\nimport NavBarEditMode from \"../NavBarEditMode\";\nimport AccountComponent from \"../AccountComponent\";\nimport defaultBanner from \"../../assets/images/marketplace/navbar_banner.jpg\";\nimport useWindowDimensions from \"../../hooks/useWidowDimensions\";\nimport NavBarEditModeMobile from \"../NavBarEditModeMobile\";\nimport { useLocation } from \"react-router-dom\";\nimport crossBlack from \"../../assets/images/cross_black.svg\";\nimport CustomDropdown from \"../common/CustomDropdown\";\nimport {\n  AVAILABLE_CURRENCY,\n  SUCCESS_AUCTION_TEXT,\n  SUCCESS_CREATE_TEST,\n  SUCCESS_LISTING_TEXT,\n} from \"../../constant/singleNFTPage\";\nimport goBackArrowLight from \"../../assets/images/singleNFTPage/arrow_left_light.svg\";\nimport goBackArrowDark from \"../../assets/images/singleNFTPage/arrow_left_dark.svg\";\nimport { useNavigate } from \"react-router-dom\";\nimport MarketplaceButton from \"../common/MarketplaceButton\";\nimport FileApi from \"../../api/FileApi\";\nimport { hexToNumber } from \"../../utils/blockchain\";\nimport useHandleMarketplace from \"../../hooks/blockchain/useHandleMarketplace\";\nimport TransactionLoadingModal from \"../common/Modals/TransactionLoadingModal\";\nimport useHandleModal from \"../../hooks/dom/useHandleModal\";\nimport LoadingMintModal from \"../common/Modals/LoadingMintModal\";\nimport {\n  CREATE_STATUS_IS_APPROVED,\n  CREATE_STATUS_IS_MINTED,\n  CREATE_STATUS_IS_PUT_ON_SALE,\n  CREATE_STATUS_IS_UPLOADED,\n  CREATE_STATUS_IS_UPLOADING,\n} from \"../../constant/createPage\";\nimport CollectionApi from \"../../api/CollectionApi\";\nimport {\n  ALERT_STATUS_FAILURE,\n  APPROVE_MESSAGE_FAILURE,\n  FILE_LOADING_MESSAGE_FAILURE,\n  LISTING_MESSAGE_FAILURE,\n  METADATA_LOADING_MESSAGE_FAILURE,\n  MINT_MESSAGE_FAILURE,\n} from \"../../constant/alert\";\nimport { convertDateToUnix, formatterUS } from \"../../utils\";\nimport useHandleLoader from \"../../hooks/loader/useHandleLoader\";\nimport useHandleNFT from \"../../hooks/blockchain/useHandleNFT\";\nimport useHandleAuction from \"../../hooks/blockchain/useHandleAuction\";\nimport {\n  COMMUNITY_COLLECTION_ADDRESS,\n  NFKEY_COLLECTION_ADDRESS,\n} from \"../../constant/blockchain\";\nimport crossIcon from \"../../assets/images/cross_keyList_white.svg\";\nimport crossIconBlack from \"../../assets/images/cross_keyList_black.svg\";\nimport useOutsideClick from \"../../hooks/dom/useOutsideClick\";\nimport { customStylesMobile } from \"../NavBarEditModeMobile/stylesMobile\";\nimport useHandleRewards from \"hooks/blockchain/useHandleRewards\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectBurnedSmrtrBalance,\n  selectBurnedTresrBalance,\n  selectPoolAllocationBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport ACTIONS from \"redux/action\";\nimport {\n  selectCreateButtonCreatedData,\n  selectCreateButtonIsDisabled,\n} from \"redux/slice/createButtonSlice\";\nimport { selectBonusPoolAllocation } from \"redux/slice/rewardSlice\";\nimport Tab from \"storybook/molecule/Tab/tab\";\nimport Button from \"storybook/atom/Button/button\";\nimport Tooltip from \"storybook/atom/Tooltip/tooltip\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const user = useSelector(selectUser);\n  const burnedSmrtrBalance = useSelector(selectBurnedSmrtrBalance);\n  const burnedTresrBalance = useSelector(selectBurnedTresrBalance);\n  const poolAllocationBalance = useSelector(selectPoolAllocationBalance);\n  const claimableBonusPoolAllocationReward = useSelector(\n    selectBonusPoolAllocation\n  );\n  const createButtonIsDisabled = useSelector(selectCreateButtonIsDisabled);\n  const createButtonCreatedData = useSelector(selectCreateButtonCreatedData);\n  const location = useLocation();\n  const handleMarketplace = useHandleMarketplace();\n  const navigate = useNavigate();\n  const isDark = theme === \"dark\";\n  const headerRef = useRef();\n  const poolRef = useRef();\n  const burnRef = useRef();\n  const tryItOutRef = useRef();\n  const handleTransactionLoadingModal = useHandleModal();\n  const handleLoadingMintModal = useHandleModal();\n  const handleLoader = useHandleLoader();\n  const handleNFT = useHandleNFT();\n  const handleAuction = useHandleAuction();\n  const handleRewards = useHandleRewards();\n  const contractAddress = location?.pathname?.split(\"/\")[2];\n  const isAuction = !!createButtonCreatedData?.priceStep?.length;\n  const isOnSale =\n    !!createButtonCreatedData?.price?.length &&\n    !createButtonCreatedData?.priceStep?.length;\n  const isNFKey =\n    contractAddress?.toLowerCase() ===\n    process.env.REACT_APP_NFKEY_ADDRESS?.toLowerCase();\n\n  const [isMobileFilterOpen, setIsMobileFilterOpen] = useState(false);\n  const [activeLink, setActiveLink] = useState(0);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [isShownFilters, setIsShownFilters] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState(0);\n  const [selectedFilterOption, setSelectedFilterOption] = useState([]);\n  const [, /*filterSortBy*/ setFilterSortBy] = useState(null);\n  const [filterCurrency, setFilterCurrency] = useState(null);\n  const [filterMinPrice, setFilterMinPrice] = useState(null);\n  const [filterMaxPrice, setFilterMaxPrice] = useState(null);\n  const [headerOffsetTop, setHeaderOffsetTop] = useState(false);\n  const [navbarItems, setNavbarItems] = useState([]);\n  const [loadingStatus, setLoadingStatus] = useState(\n    CREATE_STATUS_IS_UPLOADING\n  );\n  const [isOpenBurn, setIsOpenBurn] = useState(false);\n  const [isOpenPool, setIsOpenPool] = useState(false);\n  const [isOpenTryItOut, setIsOpenTryItOut] = useState(false);\n  const [metadataLink, setMetadataLink] = useState(\"\");\n  const [metadata, setMetadata] = useState({});\n  const [tokenLinks, setTokenLinks] = useState({});\n  const [newTokenID, setNewTokenID] = useState(null);\n\n  const [filtersObject, setFiltersObject] = useState({\n    price: null,\n    blockchain: [],\n    status: [],\n    sortBy: null,\n  });\n\n  const windowParams = useWindowDimensions();\n  const isDesktop = windowParams?.width > 1024;\n  const isMobile = windowParams?.width <= 450;\n  const isAccountPage = location?.pathname?.includes(\"account\");\n  const isMarketplace = location?.pathname?.includes(\"marketplace\");\n  const isOneNFTPage = location?.pathname?.includes(\"marketplace/\");\n  const isOneCollectionPage = location?.pathname?.includes(\"collections/\");\n  const isCreatePage = location?.pathname?.includes(\"create/\");\n  const isAllNFTPage =\n    location?.pathname === \"/allNFTs\" || location?.pathname === \"collections\";\n  const isGamePage = location?.pathname?.includes(\"game\");\n\n  const setStickyHeader = () => {\n    if (!headerRef?.current?.classList) return;\n\n    if (window?.pageYOffset - 2 >= headerOffsetTop)\n      headerRef?.current?.classList?.add(\"sticky\");\n    else headerRef?.current?.classList?.remove(\"sticky\");\n  };\n\n  const onClickTab = (item, key) => {\n    setActiveLink(key);\n    if (item?.link === \"/account\") navigate(`${item?.link}/${user?.wallet_id}`);\n    else if (item?.link === \"/account/favourites\")\n      navigate(`account/${user?.wallet_id}/favourites`);\n    else if (item?.link === \"/account/auctions\")\n      navigate(`account/${user?.wallet_id}/auctions`);\n    else if (item?.link === \"collections/allItems\")\n      navigate(`collections/${contractAddress}/allItems`);\n    else if (item?.link === \"collections/activity\")\n      navigate(`collections/${contractAddress}/activity`);\n    else navigate(item?.link);\n  };\n\n  const onToggleFilters = () => {\n    setIsShownFilters(!isShownFilters);\n    setSelectedFilter(0);\n    if (isMobile) setIsMobileFilterOpen(!isMobileFilterOpen);\n  };\n\n  const onSelectFilter = (value) => setSelectedFilter(value);\n\n  const onAddFilter = (item) => {\n    if (selectedFilter === FILTER_SORT_BY) {\n      setFilterSortBy(item);\n      return setFiltersObject({ ...filtersObject, sortBy: item });\n    }\n\n    if (selectedFilterOption?.includes(item))\n      setSelectedFilterOption(\n        selectedFilterOption?.filter((filter) => filter !== item)\n      );\n    else\n      setSelectedFilterOption([\n        ...selectedFilterOption?.filter(\n          (filter) => !FILTER_SORT_BY_OPTIONS.includes(filter)\n        ),\n        item,\n      ]);\n\n    if (selectedFilter === FILTER_STATUS) {\n      setFiltersObject({\n        ...filtersObject,\n        status: filtersObject?.status?.includes(item)\n          ? filtersObject?.status?.filter((i) => i !== item)\n          : [...filtersObject?.status, item],\n      });\n    }\n\n    if (selectedFilter === FILTER_BLOCKCHAIN) {\n      setFiltersObject({\n        ...filtersObject,\n        blockchain: filtersObject?.blockchain?.includes(item)\n          ? filtersObject?.blockchain?.filter((i) => i !== item)\n          : [...filtersObject?.blockchain, item],\n      });\n    }\n  };\n\n  const onDeleteFilter = (filter, value) => {\n    if (filter === \"price\") setFiltersObject({ ...filtersObject, price: null });\n    if (filter === \"blockchain\")\n      setFiltersObject({\n        ...filtersObject,\n        blockchain: filtersObject?.blockchain?.filter((item) => item !== value),\n      });\n    if (filter === \"status\")\n      setFiltersObject({\n        ...filtersObject,\n        status: filtersObject?.status?.filter((item) => item !== value),\n      });\n    if (filter === \"sortBy\")\n      setFiltersObject({ ...filtersObject, sortBy: null });\n  };\n\n  const onClearAllFilters = () => {\n    setSelectedFilterOption([]);\n    setFiltersObject({ price: null, blockchain: [], status: [], sortBy: null });\n    setFilterSortBy(null);\n    setFilterCurrency(null);\n    setFilterMinPrice(null);\n    setFilterMaxPrice(null);\n  };\n\n  const onChangeCurrency = (item) => {\n    setFilterCurrency(item?.label);\n    setFiltersObject({\n      ...filtersObject,\n      price: { ...filtersObject?.price, currency: item },\n    });\n\n    if (filterMinPrice || filterMaxPrice) {\n      setSelectedFilterOption(\n        [\n          ...selectedFilterOption?.filter(\n            (i) => !i?.includes(\"Min\") && !i?.includes(\"Max\")\n          ),\n          filterMinPrice ? `Min ${filterMinPrice} ${item?.label}` : null,\n          filterMaxPrice ? `Max ${filterMaxPrice} ${item?.label}` : null,\n        ]?.filter((i) => !!i)\n      );\n    }\n  };\n\n  const onChangeMinPrice = (event) => {\n    setFilterMinPrice(event?.target?.value);\n\n    setSelectedFilterOption([\n      ...selectedFilterOption?.filter((item) => !item?.includes(\"Min\")),\n      `Min ${event?.target?.value} ${filterCurrency}`,\n    ]);\n\n    setFiltersObject({\n      ...filtersObject,\n      price: { ...filtersObject?.price, min: event?.target?.value },\n    });\n  };\n\n  const onChangeMaxPrice = (event) => {\n    setFilterMaxPrice(event?.target?.value);\n\n    setSelectedFilterOption([\n      ...selectedFilterOption?.filter((item) => !item?.includes(\"Max\")),\n      `Max ${event?.target?.value} ${filterCurrency}`,\n    ]);\n\n    setFiltersObject({\n      ...filtersObject,\n      price: { ...filtersObject?.price, max: event?.target?.value },\n    });\n  };\n\n  const setPriceFilterText = () => {\n    const min = filtersObject?.price?.min\n      ? `Min ${filtersObject?.price?.min}`\n      : \"\";\n    const max = filtersObject?.price?.max\n      ? `Max ${filtersObject?.price?.max}`\n      : \"\";\n    const currency = filtersObject?.price?.currency\n      ? `${filtersObject?.price?.currency?.label}`\n      : \"\";\n\n    return filtersObject?.price?.max\n      ? `${min} ${currency}, ${max} ${currency}`\n      : `${min} ${currency}`;\n  };\n\n  const onGoBack = () =>\n    navigate(\n      isNFKey\n        ? `/collections/${NFKEY_COLLECTION_ADDRESS}`\n        : `/collections/${COMMUNITY_COLLECTION_ADDRESS}`\n    );\n  const onClickMint = () => navigate(\"/\");\n\n  const onToggleBurn = () => {\n    setIsOpenBurn(!isOpenBurn);\n    setIsOpenPool(false);\n\n    //if (!isOpenBurn) setTimeout(() => setIsOpenTryItOut(true), 300);\n  };\n\n  const onTogglePool = () => {\n    setIsOpenPool(!isOpenPool);\n    setIsOpenBurn(false);\n\n    //if (!isOpenPool) setTimeout(() => setIsOpenTryItOut(true), 300);\n  };\n\n  const handleMint = async () => {\n    const tokenID = await handleMarketplace\n      .mint(user?.wallet_id, metadataLink)\n      .then((res) => {\n        isOnSale || isAuction\n          ? setLoadingStatus(CREATE_STATUS_IS_MINTED)\n          : handleTransactionLoadingModal.close();\n        return hexToNumber(res?.events[0]?.args[2]?._hex);\n      })\n      .catch(() => {\n        handleTransactionLoadingModal.close();\n        handleLoadingMintModal.close();\n        setLoadingStatus(CREATE_STATUS_IS_UPLOADING);\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          MINT_MESSAGE_FAILURE\n        );\n        return null;\n      });\n\n    if (!tokenID) return;\n\n    setNewTokenID(tokenID);\n\n    await new CollectionApi().createToken(\n      process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n      tokenID,\n      tokenLinks[1],\n      user?.wallet_id,\n      metadata\n    );\n  };\n\n  const handleApproveListing = () => {\n    handleMarketplace\n      .approveListing(\n        newTokenID,\n        process.env.REACT_APP_COMMUNITY_COLLECTION_ADDRESS\n      )\n      .then(async (transaction) => {\n        if (transaction?.status) {\n          setLoadingStatus(CREATE_STATUS_IS_APPROVED);\n        }\n      })\n      .catch(async () => {\n        handleLoadingMintModal.close();\n\n        if (loadingStatus === CREATE_STATUS_IS_MINTED) {\n          ACTIONS.SET_CREATE_BUTTON(\n            dispatch,\n            false,\n            {},\n            true,\n            SUCCESS_CREATE_TEST({ newTokenID })\n          );\n          navigate(\n            `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${newTokenID}`\n          );\n          await handleLoader.loaderWrapper(\n            () =>\n              handleNFT.reloadNFTItemBalance(\n                process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n                newTokenID\n              ),\n            2\n          );\n        }\n\n        setLoadingStatus(CREATE_STATUS_IS_UPLOADING);\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          APPROVE_MESSAGE_FAILURE,\n          tokenLinks[1]\n        );\n        return null;\n      });\n  };\n\n  const handleApproveAuction = () => {\n    handleAuction\n      .approveAuction(\n        newTokenID,\n        process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS\n      )\n      .then(async (transaction) => {\n        if (transaction.status) {\n          setLoadingStatus(CREATE_STATUS_IS_APPROVED);\n        }\n      })\n      .catch(async () => {\n        handleLoadingMintModal.close();\n\n        if (loadingStatus === CREATE_STATUS_IS_MINTED) {\n          ACTIONS.SET_CREATE_BUTTON(\n            dispatch,\n            false,\n            {},\n            true,\n            SUCCESS_CREATE_TEST({ newTokenID })\n          );\n          navigate(\n            `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${newTokenID}`\n          );\n          await handleLoader.loaderWrapper(\n            () =>\n              handleNFT.reloadNFTItemBalance(\n                process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n                newTokenID\n              ),\n            2\n          );\n        }\n\n        setLoadingStatus(CREATE_STATUS_IS_UPLOADING);\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          APPROVE_MESSAGE_FAILURE,\n          tokenLinks[1]\n        );\n        return null;\n      });\n  };\n\n  const onStartListing = () => {\n    handleMarketplace\n      .createListing(\n        convertDateToUnix(\n          createButtonCreatedData?.selectedDate?.from,\n          createButtonCreatedData?.selectedTime?.timeStart\n        ),\n        convertDateToUnix(\n          createButtonCreatedData?.selectedDate?.to,\n          createButtonCreatedData?.selectedTime?.timeEnd\n        ),\n        (+createButtonCreatedData?.price * 10 ** 18).toString(),\n        newTokenID,\n        createButtonCreatedData?.selectedCurrency?.address !==\n          \"0x0000000000000000000000000000000000000000\",\n        createButtonCreatedData?.selectedCurrency?.address,\n        process.env.REACT_APP_COMMUNITY_COLLECTION_ADDRESS\n      )\n      .then(async (transaction) => {\n        if (transaction?.status) {\n          setLoadingStatus(CREATE_STATUS_IS_PUT_ON_SALE);\n          ACTIONS.SET_CREATE_BUTTON(\n            dispatch,\n            false,\n            {},\n            true,\n            SUCCESS_LISTING_TEXT({ tokenId: newTokenID })\n          );\n        } else\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            LISTING_MESSAGE_FAILURE,\n            tokenLinks[1]\n          );\n      })\n      .catch(async () => {\n        handleLoadingMintModal.close();\n\n        if (loadingStatus === CREATE_STATUS_IS_APPROVED) {\n          ACTIONS.SET_CREATE_BUTTON(\n            dispatch,\n            false,\n            {},\n            true,\n            SUCCESS_CREATE_TEST({ newTokenID })\n          );\n          navigate(\n            `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${newTokenID}`\n          );\n          await handleLoader.loaderWrapper(\n            () =>\n              handleNFT.reloadNFTItemBalance(\n                process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n                newTokenID\n              ),\n            2\n          );\n        }\n\n        setLoadingStatus(CREATE_STATUS_IS_UPLOADING);\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          LISTING_MESSAGE_FAILURE,\n          tokenLinks[1]\n        );\n      })\n      .finally(async () => {\n        handleLoadingMintModal.close();\n        navigate(\n          `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${newTokenID}`\n        );\n        await handleLoader.loaderWrapper(\n          () => handleNFT.reloadNFTItemBalance(newTokenID),\n          2\n        );\n      });\n  };\n\n  const onStartAuction = () => {\n    handleAuction\n      .createAuction(\n        process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n        newTokenID,\n        /* global BigInt */\n        BigInt(createButtonCreatedData?.price * 10 ** 18).toString(),\n        BigInt(createButtonCreatedData?.priceStep * 10 ** 18).toString(),\n        convertDateToUnix(\n          createButtonCreatedData?.selectedDate?.to,\n          createButtonCreatedData?.selectedTime?.timeEnd\n        ),\n        createButtonCreatedData?.selectedCurrency.value !== \"avax\",\n        createButtonCreatedData?.selectedCurrency.address\n      )\n      .then(async (transaction) => {\n        if (transaction?.status) {\n          setLoadingStatus(CREATE_STATUS_IS_PUT_ON_SALE);\n          ACTIONS.SET_CREATE_BUTTON(\n            dispatch,\n            false,\n            {},\n            true,\n            SUCCESS_AUCTION_TEXT({ tokenId: newTokenID })\n          );\n        } else\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            LISTING_MESSAGE_FAILURE,\n            tokenLinks[1]\n          );\n      })\n      .catch(async () => {\n        handleLoadingMintModal.close();\n\n        if (loadingStatus === CREATE_STATUS_IS_APPROVED) {\n          ACTIONS.SET_CREATE_BUTTON(\n            dispatch,\n            false,\n            {},\n            true,\n            SUCCESS_CREATE_TEST({ newTokenID })\n          );\n          navigate(\n            `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${newTokenID}`\n          );\n          await handleLoader.loaderWrapper(\n            () =>\n              handleNFT.reloadNFTItemBalance(\n                process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n                newTokenID\n              ),\n            2\n          );\n        }\n\n        setLoadingStatus(CREATE_STATUS_IS_UPLOADING);\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          LISTING_MESSAGE_FAILURE,\n          tokenLinks[1]\n        );\n      })\n      .finally(async () => {\n        handleLoadingMintModal.close();\n        navigate(\n          `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${newTokenID}`\n        );\n        await handleLoader.loaderWrapper(\n          () => handleNFT.reloadNFTItemBalance(newTokenID),\n          2\n        );\n      });\n  };\n\n  const onClickCreate = async () => {\n    if (!createButtonCreatedData?.name?.length) {\n      navigate(\"create/nft\");\n      return ACTIONS.SET_CREATE_BUTTON(dispatch, true);\n    }\n\n    if (isOnSale || isAuction) {\n      handleLoadingMintModal.open();\n    } else handleTransactionLoadingModal.open();\n\n    const link = await Promise.all([\n      new FileApi()\n        .generateIPFSLink(createButtonCreatedData?.image)\n        .then((res) => (res?.status ? res?.data?.link : null))\n        .catch((err) => {\n          handleTransactionLoadingModal.close();\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            FILE_LOADING_MESSAGE_FAILURE\n          );\n          return null;\n        }),\n      new FileApi()\n        .generateCDNLink(createButtonCreatedData?.image, \"items\")\n        .then((res) => (res?.status ? res?.data : null))\n        .catch(() => {\n          handleTransactionLoadingModal.close();\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_FAILURE,\n            FILE_LOADING_MESSAGE_FAILURE\n          );\n          return null;\n        }),\n    ]);\n\n    if (!link?.length || !link[0]?.length || !link[1]?.length) {\n      handleTransactionLoadingModal.close();\n      return ACTIONS.SET_ALERT(\n        dispatch,\n        true,\n        ALERT_STATUS_FAILURE,\n        FILE_LOADING_MESSAGE_FAILURE\n      );\n    }\n    setTokenLinks(link);\n\n    const tokenMetadata = {\n      attributes: createButtonCreatedData?.attributes,\n      description: createButtonCreatedData?.description,\n      image: link[0],\n      name: createButtonCreatedData?.name,\n    };\n    setMetadata(tokenMetadata);\n\n    const generatedMetadataLink = await new FileApi()\n      .generateMetadataLink(metadata)\n      .then((res) => (res?.status ? res?.data?.hash : null))\n      .catch(() => {\n        handleTransactionLoadingModal.close();\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          METADATA_LOADING_MESSAGE_FAILURE\n        );\n        return null;\n      });\n\n    setMetadataLink(generatedMetadataLink);\n    setLoadingStatus(CREATE_STATUS_IS_UPLOADED);\n\n    if (isOnSale || isAuction) return;\n\n    const tokenID = await handleMarketplace\n      .mint(user?.wallet_id, metadataLink)\n      .then((res) => {\n        isOnSale\n          ? setLoadingStatus(CREATE_STATUS_IS_MINTED)\n          : handleTransactionLoadingModal.close();\n        return hexToNumber(res?.events[0]?.args[2]?._hex);\n      })\n      .catch(() => {\n        handleTransactionLoadingModal.close();\n        handleLoadingMintModal.close();\n        setLoadingStatus(CREATE_STATUS_IS_UPLOADING);\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          MINT_MESSAGE_FAILURE\n        );\n        return null;\n      });\n\n    if (!tokenID) return;\n\n    await new CollectionApi().createToken(\n      process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n      tokenID,\n      link[1],\n      user?.wallet_id,\n      metadata\n    );\n\n    ACTIONS.SET_CREATE_BUTTON(\n      dispatch,\n      false,\n      {},\n      true,\n      SUCCESS_CREATE_TEST({ tokenId: newTokenID })\n    );\n    navigate(\n      `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${tokenID}`\n    );\n    await handleLoader.loaderWrapper(\n      () =>\n        handleNFT.reloadNFTItemBalance(\n          process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n          tokenID\n        ),\n      2\n    );\n  };\n\n  // const burnBlock = document.getElementById(\"burnBlock\");\n  // const poolBlock = document.getElementById(\"poolBlock\");\n\n  // const listenerBurnBlock = (e) => {\n  //   setIsOpenTryItOut(false);\n\n  //   const left =\n  //     windowParams.width > 1600\n  //       ? e.pageX - (windowParams.width - 1700) - 150\n  //       : e.pageX - 150;\n  //   const top = e.pageY - 150;\n\n  //   burnBlock.style.left = left + \"px\";\n  //   burnBlock.style.top = top + \"px\";\n  // };\n\n  // const listenerPoolBlock = (e) => {\n  //   setIsOpenTryItOut(false);\n\n  //   const left =\n  //     windowParams.width > 1600\n  //       ? e.pageX - (windowParams.width - 1700) - 200\n  //       : e.pageX - 200;\n  //   const top = e.pageY - 200;\n\n  //   poolBlock.style.left = left + \"px\";\n  //   poolBlock.style.top = top + \"px\";\n  // };\n\n  // burnBlock?.addEventListener(\"mousedown\", (e) => {\n  //   document.addEventListener(\"mousemove\", listenerBurnBlock);\n  // });\n\n  // burnBlock?.addEventListener(\"mouseup\", (e) => {\n  //   document.removeEventListener(\"mousemove\", listenerBurnBlock);\n  // });\n\n  // poolBlock?.addEventListener(\"mousedown\", (e) => {\n  //   document.addEventListener(\"mousemove\", listenerPoolBlock);\n  // });\n\n  // poolBlock?.addEventListener(\"mouseup\", (e) => {\n  //   document.removeEventListener(\"mousemove\", listenerPoolBlock);\n  // });\n\n  const onCloseBurn = () => {\n    setIsOpenBurn(false);\n    setIsOpenTryItOut(false);\n    // if (burnBlock != null) {\n    //   burnBlock.style.left = 0 + \"px\";\n    //   burnBlock.style.top = 55 + \"px\";\n    // }\n  };\n\n  const onClosePool = () => {\n    setIsOpenPool(false);\n    setIsOpenTryItOut(false);\n    // if (burnBlock != null) {\n    //   poolBlock.style.left = 50 + \"px\";\n    //   poolBlock.style.top = 55 + \"px\";\n    // }\n  };\n\n  const onClickTryItOut = () => {\n    // setIsOpenTryItOut(false);\n    // if (isOpenPool) {\n    //   setIsOpenPool(true);\n    //   poolBlock.style.left = 50 + \"px\";\n    //   poolBlock.style.top = 155 + \"px\";\n    // } else {\n    //   setIsOpenBurn(true);\n    //   burnBlock.style.left = 0 + \"px\";\n    //   burnBlock.style.top = 155 + \"px\";\n    // }\n  };\n\n  const setHeaderButton = () => {\n    if (isMarketplace || isCreatePage)\n      return (\n        <div className=\"navbar__header--goBack\" onClick={onGoBack}>\n          <img src={isDark ? goBackArrowLight : goBackArrowDark} alt={\"\"} />\n          Back to All NFTs\n        </div>\n      );\n    else if (isGamePage && isDesktop)\n      return (\n        <div className=\"navbar__dashboard\">\n          <Tooltip title=\"Burn Count\" position=\"bottom\">\n            <span className=\"navbar__dashboard--burn\" onClick={onToggleBurn}>\n              🔥\n            </span>\n          </Tooltip>\n\n          <div\n            className={`navbar__dashboard--burnBlock ${\n              isOpenBurn ? \"navbar__dashboard--burnBlock__open\" : \"\"\n            }`}\n            ref={burnRef}\n            id={\"burnBlock\"}\n          >\n            <div className=\"navbar__dashboard--burnBlock__title\">\n              <span>🔥 Burn Count</span>\n              <img\n                src={isDark ? crossIcon : crossIconBlack}\n                alt={\"close\"}\n                onClick={onCloseBurn}\n              />\n            </div>\n            <p className=\"navbar__dashboard--burnBlock__smrtr\">\n              {formatterUS(burnedSmrtrBalance)} $SMRTR\n            </p>\n            <p className=\"navbar__dashboard--burnBlock__tresr\">\n              {formatterUS(burnedTresrBalance)} $TRESR\n            </p>\n          </div>\n\n          <Tooltip title=\"Game Emissions Remaining\" position=\"bottom\">\n            <span className=\"navbar__dashboard--burn\" onClick={onTogglePool}>\n              💰\n            </span>\n          </Tooltip>\n\n          <div\n            className={`navbar__dashboard--poolBlock ${\n              isOpenPool ? \"navbar__dashboard--poolBlock__open\" : \"\"\n            }`}\n            ref={poolRef}\n            id={\"poolBlock\"}\n          >\n            <div className=\"navbar__dashboard--burnBlock__title\">\n              <span>💰 Game Emissions Remaining</span>\n              <img\n                src={isDark ? crossIcon : crossIconBlack}\n                alt={\"close\"}\n                onClick={onClosePool}\n              />\n            </div>\n            <div className=\"navbar__dashboard--poolBlock__text\">\n              <span>Founders' Pool:</span>\n              <span>{formatterUS(poolAllocationBalance)}</span>\n            </div>\n            <div className=\"navbar__dashboard--poolBlock__text\">\n              <span>Bonus Pool:</span>\n              <span>{formatterUS(claimableBonusPoolAllocationReward)}</span>\n            </div>\n          </div>\n\n          <div\n            className={`navbar__dashboard--tryItOut ${\n              isOpenTryItOut ? \"navbar__dashboard--tryItOut__open\" : \"\"\n            } `}\n            style={{\n              left: isOpenPool ? \"50px\" : \"0px\",\n              height: isOpenBurn ? \"226px\" : \"286px\",\n            }}\n            ref={tryItOutRef}\n          >\n            {isOpenBurn && (\n              <p>\n                Drag and drop this box anywhere on your screen & watch SMRTR and\n                TRESR burn in real time. Total token supply decreases every time\n                you upgrade your Founder's Key Level or Open a Treasure Box.\n                <br />\n                Click the \"X\" to close this counter.\n              </p>\n            )}\n            {isOpenPool && (\n              <p>\n                Drag and drop this box anywhere on your screen & see the total\n                TRESR rewards available in real time. Be sure to claim all of\n                your TRESR rewards before the Game Emissions hit zero. When the\n                Key Rewards run out, all rewards will move to the Bonus Pool\n                which is funded by e-commerce & NFT marketplace revenue.\n                <br />\n                Click the \"X\" to close this counter.\n              </p>\n            )}\n            <MarketplaceButton\n              title={\"Try it out\"}\n              isBlue\n              onClick={onClickTryItOut}\n            />\n          </div>\n        </div>\n      );\n    else\n      return isDesktop ? (\n        // <div className=\"navbar__filters\" onClick={onToggleFilters}>\n        //   <p>Filters</p>\n        //   <img src={isShownFilters ? (isDark ? filterIconLightClose : filterIconClose) : (isDark ? filterIconLight : filterIcon)} alt={\"\"} />\n        // </div>\n        <></>\n      ) : (\n        !isGamePage && (\n          <div\n            className={cn(\n              \"navbar__filters\",\n              isMobileFilterOpen && \"hidden\",\n              isDark ? \"bg-[rgba(8, 15, 32, 0.8)]\" : \"bg-[#ECF1F9]\"\n            )}\n            onClick={onToggleFilters}\n          >\n            <p>Filters</p>\n            <img\n              src={\n                isShownFilters\n                  ? isDark\n                    ? filterIconLightClose\n                    : filterIconClose\n                  : isDark\n                  ? filterIconLight\n                  : filterIcon\n              }\n              alt={\"\"}\n            />\n          </div>\n        )\n      );\n  };\n\n  useEffect(() => {\n    setHeaderOffsetTop(headerRef?.current?.offsetTop);\n    handleRewards.updateBurnedEmissionInfo();\n  }, []);\n\n  useEffect(() => {\n    window?.addEventListener(\"scroll\", () => setStickyHeader());\n\n    return window?.removeEventListener(\"scroll\", () => setStickyHeader());\n  }, [headerOffsetTop]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (location?.pathname?.includes(\"/favourites\")) {\n      setActiveLink(\n        navbarItems?.indexOf(\n          navbarItems?.find((item) => item.link?.includes(\"/favourites\"))\n        )\n      );\n    } else if (location?.pathname?.includes(\"/auctions\")) {\n      setActiveLink(\n        navbarItems?.indexOf(\n          navbarItems?.find((item) => item.link?.includes(\"/auctions\"))\n        )\n      );\n    } else if (location?.pathname?.includes(\"/game\")) {\n      setActiveLink(\n        navbarItems?.indexOf(\n          navbarItems?.find((item) => item.link?.includes(location?.pathname))\n        )\n      );\n    } else {\n      setActiveLink(\n        navbarItems?.indexOf(\n          navbarItems?.find((item) => location?.pathname.includes(item.link))\n        )\n      );\n    }\n  }, [location?.pathname, navbarItems]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    return;\n    ACTIONS.SET_FILTERS(\n      dispatch,\n      filtersObject?.price,\n      filtersObject?.blockchain,\n      filtersObject?.status,\n      filtersObject?.sortBy\n    );\n  }, [filtersObject]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (isOneCollectionPage) return setNavbarItems(NAVBAR_ITEMS_ALL_NFTS_PAGE);\n    else if (isAllNFTPage) return setNavbarItems(NAVBAR_ITEMS_ALL_NFTS_PAGE);\n    else if (isGamePage) return setNavbarItems(NAVBAR_ITEMS_GAME_PAGE);\n    else if (isAccountPage) return setNavbarItems(NAVBAR_ITEMS_ACCOUNT_PAGE);\n    // else if (isCreatePage) return setNavbarItems(NAVBAR_ITEMS_CREATE_PAGE)\n    else setNavbarItems([]);\n  }, [location?.pathname]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!isCreatePage && !isOneNFTPage)\n      ACTIONS.SET_CREATE_BUTTON(dispatch, false, {}, false, \"\");\n  }, [location?.pathname]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useOutsideClick(poolRef, onClosePool, tryItOutRef);\n  useOutsideClick(burnRef, onCloseBurn, tryItOutRef);\n\n  return (\n    <>\n      {isDesktop && isOneCollectionPage && (\n        <div className=\"navbar__filters\" onClick={onToggleFilters}>\n          <p>Filters</p>\n          <img\n            src={\n              isShownFilters\n                ? isDark\n                  ? filterIconLightClose\n                  : filterIconClose\n                : isDark\n                ? filterIconLight\n                : filterIcon\n            }\n            alt={\"\"}\n          />\n        </div>\n      )}\n      {isDesktop && isShownFilters && isOneCollectionPage && (\n        <div className=\"navbar__filtersItems\">\n          {!!selectedFilterOption?.length && (\n            <div className=\"navbar__filtersOptions--selectedContainer\">\n              {!!filtersObject?.price && (\n                <div className=\"navbar__filtersOptions--selected\">\n                  {setPriceFilterText()}\n                  <img\n                    src={crossBlack}\n                    alt={\"\"}\n                    onClick={() => onDeleteFilter(\"price\")}\n                  />\n                </div>\n              )}\n\n              {filtersObject?.blockchain?.length\n                ? filtersObject?.blockchain?.map((item, key) => (\n                    <div className=\"navbar__filtersOptions--selected\" key={key}>\n                      {item}\n                      <img\n                        src={crossBlack}\n                        alt={\"\"}\n                        onClick={() => onDeleteFilter(\"blockchain\", item)}\n                      />\n                    </div>\n                  ))\n                : null}\n\n              {filtersObject?.status?.length\n                ? filtersObject?.status?.map((item, key) => (\n                    <div className=\"navbar__filtersOptions--selected\" key={key}>\n                      {item}\n                      <img\n                        src={crossBlack}\n                        alt={\"\"}\n                        onClick={() => onDeleteFilter(\"status\", item)}\n                      />\n                    </div>\n                  ))\n                : null}\n\n              <div\n                className=\"navbar__filtersOptions--selected navbar__filtersOptions--clearAll\"\n                onClick={onClearAllFilters}\n              >\n                Clear All\n                {isDark && <img src={crossBlack} alt={\"\"} />}\n              </div>\n              <div className=\"w-[120px] absolute left-[85%] top-[8px]\">\n                <MarketplaceButton\n                  title={\"Apply Filters\"}\n                  isBlue\n                  onClick={() => {\n                    setIsShownFilters(false);\n                  }}\n                />\n              </div>\n            </div>\n          )}\n\n          {!isMobile &&\n            !!selectedFilter &&\n            selectedFilter !== FILTER_SORT_BY && (\n              <div className=\"navbar__filtersOptions\">\n                {FILTERS_OPTIONS[selectedFilter]?.map((item, key) => (\n                  <div\n                    key={key}\n                    onClick={() => onAddFilter(item)}\n                    className={\n                      selectedFilterOption?.includes(item) &&\n                      \"navbar__filtersOptions--active\"\n                    }\n                  >\n                    {item}\n                  </div>\n                ))}\n              </div>\n            )}\n\n          {!isMobile && selectedFilter === FILTER_PRICE && (\n            <div className=\"navbar__filtersOptions--price\">\n              <CustomDropdown\n                title={\"Currency\"}\n                data={AVAILABLE_CURRENCY}\n                onSelect={onChangeCurrency}\n              />\n\n              <input\n                type={\"number\"}\n                className=\"navbar__filtersOptions--priceInput\"\n                placeholder={\"min\"}\n                onChange={onChangeMinPrice}\n                value={filterMinPrice}\n              />\n              <input\n                type={\"number\"}\n                className=\"navbar__filtersOptions--priceInput\"\n                placeholder={\"max\"}\n                onChange={onChangeMaxPrice}\n                value={filterMaxPrice}\n              />\n            </div>\n          )}\n\n          <div className=\"flex gap-[16px] w-full\">\n            {FILTERS_CRITERIONS?.map((item, key) => {\n              if (item?.value === FILTER_SORT_BY)\n                return (\n                  <CustomDropdown\n                    title={item?.label}\n                    data={FILTERS_OPTIONS[FILTER_SORT_BY]}\n                    onSelect={onAddFilter}\n                    isSortBy\n                    onSelectSortBy={onSelectFilter}\n                  />\n                );\n\n              return (\n                <div\n                  key={key}\n                  className={`navbar__filtersItems--criterion ${\n                    key + 1 === selectedFilter\n                      ? \"navbar__filtersItems--criterionActive\"\n                      : \"\"\n                  }`}\n                  onClick={() => onSelectFilter(item?.value)}\n                >\n                  {item?.label}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n      {isDesktop ? (\n        <NavBarEditMode\n          isOpen={isOpenModal}\n          onClose={() => setIsOpenModal(false)}\n        />\n      ) : (\n        <NavBarEditModeMobile\n          isOpen={isOpenModal}\n          onClose={() => setIsOpenModal(false)}\n        />\n      )}\n      {isMobile && isShownFilters ? (\n        <Modal\n          isModalOpen={isMobileFilterOpen}\n          handleClose={() => setIsMobileFilterOpen(false)}\n          className=\"max-h-[680px]\"\n        >\n          <div className=\"headerBarAccountOpen__mobile\">\n            <div className=\"headerBarAccountOpen__mobile__filters__title\">\n              Filters\n            </div>\n            {!!selectedFilterOption?.length && (\n              <div className=\"navbar__filtersOptions--selectedContainer\">\n                {!!filtersObject?.price && (\n                  <div className=\"navbar__filtersOptions--selected\">\n                    {setPriceFilterText()}\n                    <img\n                      src={crossBlack}\n                      alt={\"\"}\n                      onClick={() => onDeleteFilter(\"price\")}\n                    />\n                  </div>\n                )}\n\n                {filtersObject?.blockchain?.length\n                  ? filtersObject?.blockchain?.map((item, key) => (\n                      <div\n                        className=\"navbar__filtersOptions--selected\"\n                        key={key}\n                      >\n                        {item}\n                        <img\n                          src={crossBlack}\n                          alt={\"\"}\n                          onClick={() => onDeleteFilter(\"blockchain\", item)}\n                        />\n                      </div>\n                    ))\n                  : null}\n\n                {filtersObject?.status?.length\n                  ? filtersObject?.status?.map((item, key) => (\n                      <div\n                        className=\"navbar__filtersOptions--selected\"\n                        key={key}\n                      >\n                        {item}\n                        <img\n                          src={crossBlack}\n                          alt={\"\"}\n                          onClick={() => onDeleteFilter(\"status\", item)}\n                        />\n                      </div>\n                    ))\n                  : null}\n\n                <div\n                  className=\"navbar__filtersOptions--selected navbar__filtersOptions--clearAll\"\n                  onClick={onClearAllFilters}\n                >\n                  Clear All\n                  {isDark && <img src={crossBlack} alt={\"\"} />}\n                </div>\n              </div>\n            )}\n            <div className=\"navbar__filtersItems space-y-6\">\n              {FILTERS_CRITERIONS?.map((item, key) => {\n                if (item?.value === FILTER_SORT_BY)\n                  return (\n                    <CustomDropdown\n                      title={item?.label}\n                      data={FILTERS_OPTIONS[FILTER_SORT_BY]}\n                      onSelect={onAddFilter}\n                      isSortBy\n                      onSelectSortBy={onSelectFilter}\n                    />\n                  );\n\n                return (\n                  <div\n                    key={key}\n                    className={`navbar__filtersItems--criterion ${\n                      key + 1 === selectedFilter\n                        ? \"navbar__filtersItems--criterionActive\"\n                        : \"\"\n                    }`}\n                    onClick={() => onSelectFilter(item?.value)}\n                  >\n                    {item?.label}\n                  </div>\n                );\n              })}\n            </div>\n\n            {!!selectedFilter && selectedFilter !== FILTER_SORT_BY && (\n              <div className=\"navbar__filtersOptions\">\n                {FILTERS_OPTIONS[selectedFilter]?.map((item, key) => (\n                  <div\n                    key={key}\n                    onClick={() => onAddFilter(item)}\n                    className={\n                      selectedFilterOption?.includes(item) &&\n                      \"navbar__filtersOptions--active\"\n                    }\n                  >\n                    {item}\n                  </div>\n                ))}\n              </div>\n            )}\n            {selectedFilter === FILTER_PRICE && (\n              <div className=\"navbar__filtersOptions--price\">\n                <CustomDropdown\n                  title={\"Currency\"}\n                  data={AVAILABLE_CURRENCY}\n                  onSelect={onChangeCurrency}\n                />\n\n                <input\n                  type={\"number\"}\n                  className=\"navbar__filtersOptions--priceInput\"\n                  placeholder={\"min\"}\n                  onChange={onChangeMinPrice}\n                  value={filterMinPrice}\n                />\n                <input\n                  type={\"number\"}\n                  className=\"navbar__filtersOptions--priceInput\"\n                  placeholder={\"max\"}\n                  onChange={onChangeMaxPrice}\n                  value={filterMaxPrice}\n                />\n              </div>\n            )}\n\n            <div className=\"navbar__filters__button\">\n              <MarketplaceButton\n                title={\"Clear All\"}\n                isN\n                onClick={() => {\n                  setIsMobileFilterOpen(false);\n                  setIsShownFilters(false);\n                  setSelectedFilterOption([]);\n                  setFiltersObject({\n                    price: null,\n                    blockchain: [],\n                    status: [],\n                    sortBy: null,\n                  });\n                  setFilterSortBy(null);\n                  setFilterCurrency(null);\n                  setFilterMinPrice(null);\n                  setFilterMaxPrice(null);\n                }}\n              />\n              <MarketplaceButton\n                title={\"Accept Filters\"}\n                isBlue\n                withShadow\n                onClick={() => {\n                  return setIsMobileFilterOpen(true), setIsShownFilters(false);\n                }}\n              />\n            </div>\n          </div>\n        </Modal>\n      ) : (\n        <></>\n      )}\n      <div className={`navbar`} ref={headerRef}>\n        <div className=\"navbar__header\">\n          {setHeaderButton()}\n\n          {/* {!isMobile && isShownFilters ? (\n            <></>\n          ) : (\n            <> */}\n          {/* FIXME */}\n          <div className=\"navbar__items\">\n            <Tab\n              tabList={navbarItems}\n              active={navbarItems?.[0]}\n              onClick={onClickTab}\n              variant=\"secondary\"\n            />\n          </div>\n\n          <div className=\"navbar__buttons\">\n            {!!user?.wallet_id?.length && (\n              <>\n                {isDesktop && (\n                  <Button\n                    variant=\"shadow\"\n                    disabled={isGamePage ? false : createButtonIsDisabled}\n                    label={isGamePage ? \"Mint New Key\" : \"Create\"}\n                    onClick={isGamePage ? onClickMint : onClickCreate}\n                  />\n                )}\n              </>\n            )}\n          </div>\n          {/* </>\n          )} */}\n        </div>\n\n        {/* {!!selectedFilterOption?.length && (\n          <div className=\"navbar__filtersOptions--selectedContainer\">\n            {!!filtersObject?.price && (\n              <div className=\"navbar__filtersOptions--selected\">\n                {setPriceFilterText()}\n                <img\n                  src={crossBlack}\n                  alt={\"\"}\n                  onClick={() => onDeleteFilter(\"price\")}\n                />\n              </div>\n            )}\n\n            {filtersObject?.blockchain?.length\n              ? filtersObject?.blockchain?.map((item, key) => (\n                  <div className=\"navbar__filtersOptions--selected\" key={key}>\n                    {item}\n                    <img\n                      src={crossBlack}\n                      alt={\"\"}\n                      onClick={() => onDeleteFilter(\"blockchain\", item)}\n                    />\n                  </div>\n                ))\n              : null}\n\n            {filtersObject?.status?.length\n              ? filtersObject?.status?.map((item, key) => (\n                  <div className=\"navbar__filtersOptions--selected\" key={key}>\n                    {item}\n                    <img\n                      src={crossBlack}\n                      alt={\"\"}\n                      onClick={() => onDeleteFilter(\"status\", item)}\n                    />\n                  </div>\n                ))\n              : null}\n\n            <div\n              className=\"navbar__filtersOptions--selected navbar__filtersOptions--clearAll\"\n              onClick={onClearAllFilters}\n            >\n              Clear All\n              {isDark && <img src={crossBlack} alt={\"\"} />}\n            </div>\n          </div>\n        )}\n\n        {!isMobile && !!selectedFilter && selectedFilter !== FILTER_SORT_BY && (\n          <div className=\"navbar__filtersOptions\">\n            {FILTERS_OPTIONS[selectedFilter]?.map((item, key) => (\n              <div\n                key={key}\n                onClick={() => onAddFilter(item)}\n                className={\n                  selectedFilterOption?.includes(item) &&\n                  \"navbar__filtersOptions--active\"\n                }\n              >\n                {item}\n              </div>\n            ))}\n          </div>\n        )}\n\n        {!isMobile && selectedFilter === FILTER_PRICE && (\n          <div className=\"navbar__filtersOptions--price\">\n            <CustomDropdown\n              title={\"Currency\"}\n              data={AVAILABLE_CURRENCY}\n              onSelect={onChangeCurrency}\n            />\n\n            <input\n              type={\"number\"}\n              className=\"navbar__filtersOptions--priceInput\"\n              placeholder={\"min\"}\n              onChange={onChangeMinPrice}\n              value={filterMinPrice}\n            />\n            <input\n              type={\"number\"}\n              className=\"navbar__filtersOptions--priceInput\"\n              placeholder={\"max\"}\n              onChange={onChangeMaxPrice}\n              value={filterMaxPrice}\n            />\n          </div>\n        )} */}\n      </div>\n\n      {isAccountPage && (\n        <>\n          <div\n            className=\"navbar__banner\"\n            style={{\n              backgroundImage: `url(${\n                user?.banner?.length ? user?.banner : defaultBanner\n              })`,\n            }}\n          >\n            {!isMobile && (\n              <div className={\"navbar__banner--container\"}>\n                <AccountComponent\n                  isEditMode={false}\n                  setIsOpenModal={setIsOpenModal}\n                />\n              </div>\n            )}\n          </div>\n\n          {isMobile && (\n            <AccountComponent\n              isEditMode={false}\n              setIsOpenModal={setIsOpenModal}\n            />\n          )}\n        </>\n      )}\n      {handleTransactionLoadingModal.isActive && (\n        <TransactionLoadingModal\n          isOpen={handleTransactionLoadingModal.isActive}\n        />\n      )}\n\n      {/* {handleLoadingMintModal.isActive && ( */}\n      <LoadingMintModal\n        onClose={handleLoadingMintModal.close}\n        isOpen={handleLoadingMintModal.isActive}\n        status={loadingStatus}\n        isAuction={isAuction}\n        onMint={handleMint}\n        setLoadingStatus={setLoadingStatus}\n        onApprove={isAuction ? handleApproveAuction : handleApproveListing}\n        onPutOnSale={isAuction ? onStartAuction : onStartListing}\n        tokenId={newTokenID}\n      />\n      {/* )} */}\n    </>\n  );\n};\nexport default NavBar;\n","/Users/apple/Documents/treasure/src/components/common/CustomAlert/index.js",[],["1345"],"/Users/apple/Documents/treasure/src/components/Footer/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/TransactionLoadingModal/index.js",["1346","1347","1348"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport viewMore from \"assets/images/viewMore.svg\";\nimport timeSVG from \"assets/images/time.svg\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport Loader from \"storybook/atom/Loader/loader\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst TransactionLoadingModal = ({ isOpen }) => {\n  const [time, setLoadTime] = useState(0);\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 750;\n  const TEXT = [\n    \"Upgrade your Key Level to earn more TRESR in the Founder’s Pool and Bonus Pool.\",\n    \"Staking TRESR to earn veTRESR will improve your odds of opening a Treasure Box and allow you to earn more TRESR.\",\n    \"Be sure to open another Treasure Box before the countdown timer hits zero or your Treasure Tier will decrease by one.\",\n    \"The higher your Key Level, the more commissions you will earn from e-commerce sales connected to your NFTs.\",\n    \"The higher your Key Level, the greater discount you will receive on all e-commerce purchases.\",\n    \"NFTREASURE let’s you take any piece of artwork and turn it into an NFT and e-commerce products that earn your monthly commissions.\",\n    \"Remember: To get the benefit of your accumulated veTRESR balance, you must claim it in the Bonus Pool dashboard.\",\n    \"Increase your veTRESR by staking TRESR. You earn more rewards from the Bonus Pool as your veTRESR balance goes up.\",\n    \"You earn more rewards from the Bonus Pool when you add liquidity to the SMRTR-AVAX pool and stake your LP tokens.\",\n    \"You earn more rewards from the Bonus Pool when you add liquidity to the TRESR-AVAX pool and stake your LP tokens.\",\n    \"If you have three keys, each at Key Level 20, your Cumulative Key Level = 60. Increase your Cumulative Key Level to earn more from the Bonus Pool\",\n    \"You can upgrade the level for multiple Keys at a time by using the “Upgrade All Keys” button in the Founder’s Pool.\",\n    \"Every time you upgrade your Key Level, a cooldown period will follow. When this cooldown timer reaches zero, you may upgrade your Key Level again.\",\n    \"The levers that calculate rewards in the Bonus Pool will change over time, and are voted on by veTRESR holders.\",\n    \"Your veTRESR balance equals your governance power. The more veTRESR you hold, the greater power your vote will have in important protocol decisions.\",\n    \"NFTREASURE is one of the best ways to learn how to navigate Decentralized Finance and NFTs, while creating an e-commerce & crypto side hustle.\",\n    \"The project is giving its community 90% of the total token supply of $TRESR, making it a truly community-governed initiative.\",\n    \"This platform is the first NFT print-on-demand marketplace and play-to-earn game in crypto, powered by decentralized finance (DeFi).\",\n    \"Reading the entire whitepaper can increase your chances of earning more $TRESR tokens, as information is power in the world of crypto.\",\n    \"The platform aims to provide both NFT projects and holders access to real utility and meaningful data, setting it apart from other NFT marketplaces.\",\n    \"All daily or monthly numbers shown in dashboards are estimates. Actual rewards will vary based on gameplay.\",\n    \"Dashboards can take a moment to sync to the blockchain. Use the refresh button to make sure they are displaying properly.\",\n  ];\n  const [randomIndex, setRandomIndex] = useState(0);\n  useEffect(() => {\n    if (isOpen) {\n      const interval = setInterval(() => {\n        setLoadTime((prev) => prev + 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else setLoadTime(0);\n    const temp = 0 + Math.random() * (TEXT.length - 1 - 0);\n    setRandomIndex(temp.toFixed(0));\n  }, [isOpen]);\n  return (\n    <Modal\n      isModalOpen={isOpen}\n      className={`px-[20px] py-[32px] max-w-[458px] max-h-[424px] rounded-tr-[50px] rounded-tl-[50px] ${\n        isMobile ? \"h-[400px]\" : \"h-[586px]\"\n      }`}\n    >\n      <p className=\"modal__title transactionLoadingModal__title\">\n        Take a deep breath\n      </p>\n      <Loader variant=\"pageLoader\" isLoaderActive={true} opacityLevel={0} />\n      <div className=\"flex h-[180px] justify-center items-center\">\n        <div className=\"bg-[#BBC5FF33] p-3 rounded-lg h-fit\">\n          <p className=\"modal__text transactionLoadingModal__text\">\n            {TEXT[randomIndex]}\n          </p>\n        </div>\n      </div>\n      <div className=\"modal__text flex gap-3 \">\n        <img src={timeSVG} />\n        {time}s\n      </div>\n      {/* <div className='transactionLoadingModal__wrapper'>\n                <p className='modal__text transactionLoadingModal__text'>Your NFTreasure team</p>\n            </div> */}\n      {/* <div className='flex items-center justify-center mt-5'>\n                <p className='modal__text transactionLoadingModal__text mr-4'>View on SnowTrace</p>\n            <img src={viewMore}/>\n            </div> */}\n    </Modal>\n  );\n};\n\nexport default TransactionLoadingModal;\n","/Users/apple/Documents/treasure/src/storybook/atom/Loader/loader.jsx",[],[],"/Users/apple/Documents/treasure/src/components/HomePage/index.js",["1349","1350"],["1351"],"import { useEffect, useState } from \"react\";\nimport styles from \"components/Loaders/FullPageLoader/styles.module.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./style.scss\";\nimport ConnectWallet from \"./ConnectWallet\";\nimport HomeZoneListNew from \"./HomeZoneListNew\";\nimport TokenApi from \"../../api/TokenApi\";\nimport {\n  MINT_KEY_LEVEL_DEFAULT,\n  MINT_KEY_LEVEL_LIST,\n} from \"../../constant/blockchain\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport useHandleNFT from \"hooks/blockchain/useHandleNFT\";\nimport { useSelector } from \"react-redux\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport { selectLoaderIsActive } from \"redux/slice/loaderSlice\";\nimport { selectWhitelist } from \"redux/slice/whiteListSlice\";\nimport NFTFooter from \"components/NFTFooter\";\n\nexport default function HomePage() {\n  const whitelist = useSelector(selectWhitelist);\n  const theme = useSelector(selectTheme);\n  const user = useSelector(selectUser);\n  const loaderIsActive = useSelector(selectLoaderIsActive);\n  const isDark = theme === \"dark\";\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadedList, setIsLoadedList] = useState(true);\n\n  const windowDimensions = useWindowDimensions();\n  const handleNFT = useHandleNFT();\n  const isMobile = windowDimensions?.width <= 946;\n\n  const mintKeyLevelImage = whitelist?.level\n    ? MINT_KEY_LEVEL_LIST[whitelist?.level] || MINT_KEY_LEVEL_DEFAULT\n    : MINT_KEY_LEVEL_DEFAULT;\n\n  const getTokenAmount = async () =>\n    setTokenAmount(await handleNFT.getTotalSupply());\n\n  const animationCallback = () => {\n    setTimeout(() => {\n      setIsLoadedList(true);\n      setIsLoading(false);\n      setIsAnimated(false);\n    }, 1);\n    setIsLoading(true);\n    setIsAnimated(true);\n  };\n\n  useEffect(() => {\n    getTokenAmount();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <section className=\"homePage\">\n        <p className=\"homePage__title\">Mint Your Founder’s Key</p>\n        <div\n          className={`homePage__mintBlock ${\n            isLoading ? \"homePage__mintBlock--isLoading\" : \"\"\n          }`}\n        >\n          <div className=\"homePage__connectBlock\">\n            <div className=\"homePage__keyPicture\">\n              <div className=\"homePage__keyPicture--videoBg\">\n                <video\n                  src={mintKeyLevelImage}\n                  autoPlay\n                  loop\n                  width={427}\n                  height={427}\n                />\n                {!isMobile && (\n                  <p className=\"homePage__subtitle\">\n                    {tokenAmount} / 12,000 minted\n                  </p>\n                )}\n              </div>\n              {!loaderIsActive && !user?.wallet_id && !isMobile && (\n                <div className=\"flex flex-col justify-center\">\n                  <div className=\"w-[450px] h-[72px] homePage__info-text text-left\">\n                    Minting a Founder's Key NFT unlocks Defi Rewards, plus gives\n                    you access to e-commerce discounts, affiliate commissions,\n                    the Founder's Lounge, and more.\n                  </div>\n                  <ConnectWallet\n                    setIsAnimated={setIsAnimated}\n                    isLoading={isLoading}\n                    setIsLoading={setIsLoading}\n                    setIsLoadedList={setIsLoadedList}\n                    isNotConnected\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          {!loaderIsActive && isMobile && (\n            <p className=\"homePage__subtitle\">Connect your Wallet</p>\n          )}\n          {loaderIsActive && (\n            <div\n              className=\"homePage__zoneloader\"\n              style={isDark ? { color: \"#ECF1F9\" } : { color: \"#000000\" }}\n            >\n              <div className=\"homePage__zoneloader__title\">\n                Take a deep breath\n              </div>\n              <div className=\"homePage__zoneloader__content\">\n                Checking Your Wallet for Whitelist Placement and Key Level...\n              </div>\n              <div\n                className={`${styles.loaderWrap} ${styles[`opacityLevel_0`]}`}\n                style={{\n                  width: \"100px\",\n                  height: \"100px\",\n                  position: \"relative\",\n                  left: \"50%\",\n                  top: \"50%\",\n                  transform: \"translate(-50%, 0)\",\n                  marginTop: \"32px\",\n                }}\n              >\n                <div className={`${styles[\"la-ball-atom\"]} ${styles[\"la-3x\"]}`}>\n                  <div />\n                  <div />\n                  <div />\n                  <div />\n                </div>\n              </div>\n            </div>\n          )}\n          {user?.wallet_id && !loaderIsActive && (\n            <HomeZoneListNew\n              isLoadedList={isLoadedList}\n              animationCallback={animationCallback}\n            />\n          )}\n        </div>\n        {!loaderIsActive && isMobile && !user?.wallet_id && (\n          <div>\n            <p className=\"homePage__info-text\">\n              You need to connect your wallet first to Mint the Founder’s Key\n              and start earning $TRESR\n            </p>\n            <center>\n              <ConnectWallet\n                setIsAnimated={setIsAnimated}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n                setIsLoadedList={setIsLoadedList}\n                isNotConnected\n                isMobile\n              />\n            </center>\n          </div>\n        )}\n        <ToastContainer closeOnClick position=\"top-right\" />\n      </section>\n      <NFTFooter />\n    </>\n  );\n}\n","/Users/apple/Documents/treasure/src/storybook/molecule/Faucet/faucet.jsx",[],[],"/Users/apple/Documents/treasure/src/hooks/loader/useHandleLoader.js",[],[],"/Users/apple/Documents/treasure/src/hooks/auth/useHandleAuth.js",[],[],"/Users/apple/Documents/treasure/src/hooks/customer/useHandleCustomer.js",[],[],"/Users/apple/Documents/treasure/src/hooks/theme/useHandleTheme.js",[],[],"/Users/apple/Documents/treasure/src/hooks/socket/useHandleSocket.js",[],["1352"],"/Users/apple/Documents/treasure/src/constant/alert.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetRewardDashboardInfo.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useUpdateClaimableBonusRewardBalance.js",[],[],"/Users/apple/Documents/treasure/src/constant/blockchain.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/index.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleContracts.js",["1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386"],[],"import { useMemo } from \"react\";\nimport { ethers } from \"ethers\";\nimport WHITELIST_ABI from \"../../abi/WHITELIST_ABI.json\";\nimport NFKEY_ABI from \"../../abi/NFKEY_ABI.json\";\nimport SMARTR_ABI from \"../../abi/SMARTR_ABI.json\";\nimport NFKEY_STAKING_ABI from \"../../abi/NFKEY_STAKING_ABI.json\";\nimport TRESR_ABI from \"../../abi/TRESR_ABI.json\";\nimport REWARD_ABI from \"../../abi/REWARD_ABI.json\";\nimport TRESR_STAKING_ABI from \"../../abi/TRESR_STAKING_ABI.json\";\nimport LP_SMRTRAVAX_STAKING_ABI from \"../../abi/LP_SMRTRAVAX_STAKING_ABI.json\";\nimport LP_TRESRAVAX_STAKING_ABI from \"../../abi/LP_TRESRAVAX_STAKING_ABI.json\";\nimport LP_SMRTRAVAX_TOKEN_ABI from \"../../abi/LP_SMRTRAVAX_TOKEN_ABI.json\";\nimport LP_TRESRAVAX_TOKEN_ABI from \"../../abi/LP_TRESRAVAX_TOKEN_ABI.json\";\nimport MARKETPLACE_LISTING_ABI from \"../../abi/MARKETPLACE_LISTING_ABI.json\";\nimport MARKETPLACE_AUCTION_ABI from \"../../abi/MARKETPLACE_AUCTION_ABI.json\";\nimport COMMUNITY_COLLECTION from \"../../abi/COMMUNITY_COLLECTION_ABI.json\";\nimport ERC20_ABI from \"../../abi/ERC20_ABI.json\";\nimport ERC721_ABI from \"../../abi/ERC721_ABI.json\";\nimport MASTER_CHEF_ABI from \"../../abi/MASTER_CHEF_ABI.json\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nexport default function useGetSigner() {\n  const context = useWeb3React();\n  const { library } = context;\n  const getSigner = useMemo(() => {\n    if (!library) {\n      return new ethers.providers.Web3Provider(window.ethereum).getSigner();\n    } else {\n      return library.getSigner();\n    }\n  }, [window.ethereum]);\n  return getSigner;\n}\n\nexport function useGetProvider() {\n  const context = useWeb3React();\n  const { library } = context;\n  const getProvider = useMemo(() => {\n    if (library) {\n      return library.provider;\n    }\n    return new ethers.providers.Web3Provider(window?.ethereum);\n  }, [window.ethereum]);\n  return getProvider;\n}\n\nexport function useContractWhitelist() {\n  const getProvider = useGetProvider();\n  const contractWhitelist = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_WHITELIST_ADDRESS,\n      WHITELIST_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractWhitelist;\n}\n\nexport function useContractWhitelistWithSigner() {\n  const getContractWhitelist = useContractWhitelist();\n  const getSigner = useGetSigner();\n  const contractWhitelistWithSigner = useMemo(async () => {\n    const contract = await getContractWhitelist;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractWhitelistWithSigner;\n}\n\nexport function useContractNFKey() {\n  const getProvider = useGetProvider();\n  const contractNFKey = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_NFKEY_ADDRESS,\n      NFKEY_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractNFKey;\n}\n\nexport function useContractNFKeyWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractNFKey = useContractNFKey();\n  const contractNFKeyWithSigner = useMemo(async () => {\n    const contract = await getContractNFKey;\n    return contract?.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractNFKeyWithSigner;\n}\n\nexport function useContractSmarterCoin() {\n  const getProvider = useGetProvider();\n  const contractSmarterCoin = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_SMARTR_ADDRESS,\n      SMARTR_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractSmarterCoin;\n}\n\nexport function useContractSmarterCoinWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractSmarterCoin = useContractSmarterCoin();\n  const contractSmarterCoinWithSigner = useMemo(async () => {\n    const contract = await getContractSmarterCoin;\n    return contract?.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractSmarterCoinWithSigner;\n}\n\nexport function useContractNFKeyStaking() {\n  const getProvider = useGetProvider();\n  const contractNFKeyStaking = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_NFKEY_STAKING_ADDRESS,\n      NFKEY_STAKING_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractNFKeyStaking;\n}\n\nexport function useContractNFKeyStakingWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractNFKeyStaking = useContractNFKeyStaking();\n  const contractNFKeyStakingWithSigner = useMemo(async () => {\n    const contracttoConnect = await getContractNFKeyStaking;\n    let contract = contracttoConnect.connect(getSigner);\n    return contract;\n  }, [window.ethereum, getSigner]);\n  return contractNFKeyStakingWithSigner;\n}\n\nexport function useContractTresrCoin() {\n  const getProvider = useGetProvider();\n  const contractTresrCoin = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_TRESR_ADDRESS,\n      TRESR_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractTresrCoin;\n}\n\nexport function useContractTresrCoinWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractTresrCoin = useContractTresrCoin();\n  const contractTresrCoinWithSigner = useMemo(async () => {\n    const contract = await getContractTresrCoin;\n    return contract?.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractTresrCoinWithSigner;\n}\n\nexport function useContractDailyBonusRewards() {\n  const getProvider = useGetProvider();\n  const contractDailyBonusRewards = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_REWARD_ADDRESS,\n      REWARD_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractDailyBonusRewards;\n}\n\nexport function useContractDailyBonusRewardsWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractDailyBonusRewards = useContractDailyBonusRewards();\n  const contractDailyBonusRewardsWithSigner = useMemo(async () => {\n    const contract = await getContractDailyBonusRewards;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractDailyBonusRewardsWithSigner;\n}\n\nexport function useContractTresrStakingCoin() {\n  const getProvider = useGetProvider();\n  const contractTresrStakingCoin = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_TRESR_STAKING_ADDRESS,\n      TRESR_STAKING_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractTresrStakingCoin;\n}\n\nexport function useContractTresrStakingCoinWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractTresrStakingCoin = useContractTresrStakingCoin();\n  const contractTresrStakingCoinWithSigner = useMemo(async () => {\n    const contract = await getContractTresrStakingCoin;\n    return contract?.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractTresrStakingCoinWithSigner;\n}\n\nexport function useContractLpStakingTRESRAVAX() {\n  const getProvider = useGetProvider();\n  const contractLpStakingTRESRAVAX = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_LP_TRESRAVAX_STAKING_ADDRESS,\n      LP_TRESRAVAX_STAKING_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractLpStakingTRESRAVAX;\n}\n\nexport function useContractLpStakingTRESRAVAXWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractLpStakingTRESRAVAX = useContractLpStakingTRESRAVAX();\n  const contractLpStakingTRESRAVAXWithSigner = useMemo(async () => {\n    const contract = await getContractLpStakingTRESRAVAX;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractLpStakingTRESRAVAXWithSigner;\n}\n\nexport function useContractLpStakingSMRTRAVAX() {\n  const getProvider = useGetProvider();\n  const contractLpStakingSMRTRAVAX = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_LP_SMRTRAVAX_STAKING_ADDRESS,\n      LP_SMRTRAVAX_STAKING_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractLpStakingSMRTRAVAX;\n}\n\nexport function useContractLpStakingSMRTRAVAXWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractLpStakingSMRTRAVAX = useContractLpStakingSMRTRAVAX();\n  const contractLpStakingSMRTRAVAXWithSigner = useMemo(async () => {\n    const contract = await getContractLpStakingSMRTRAVAX;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractLpStakingSMRTRAVAXWithSigner;\n}\n\nexport function useContractLpCoinTRESRAVAX() {\n  const getProvider = useGetProvider();\n  const contractLpCoinTRESRAVAX = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_LP_TRESRAVAX_TOKEN_ADDRESS,\n      LP_TRESRAVAX_TOKEN_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractLpCoinTRESRAVAX;\n}\n\nexport function useContractLpCoinTRESRAVAXWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractLpCoinTRESRAVAX = useContractLpCoinTRESRAVAX();\n  const contractLpCoinTRESRAVAXWithSigner = useMemo(async () => {\n    const contract = await getContractLpCoinTRESRAVAX;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractLpCoinTRESRAVAXWithSigner;\n}\n\nexport function useContractLpCoinSMRTRRAVAX() {\n  const getProvider = useGetProvider();\n  const contractLpCoinSMRTRRAVAX = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_LP_SMRTRAVAX_TOKEN_ADDRESS,\n      LP_SMRTRAVAX_TOKEN_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractLpCoinSMRTRRAVAX;\n}\n\nexport function useContractLpCoinSMRTRAVAXWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractLpCoinSMRTRRAVAX = useContractLpCoinSMRTRRAVAX();\n  const contractLpCoinSMRTRAVAXWithSigner = useMemo(async () => {\n    const contract = await getContractLpCoinSMRTRRAVAX;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractLpCoinSMRTRAVAXWithSigner;\n}\n\nexport function useContractMarketplaceListing() {\n  const getProvider = useGetProvider();\n  const contractMarketplaceListing = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_MARKETPLACE_LISTING_ADDRESS,\n      MARKETPLACE_LISTING_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractMarketplaceListing;\n}\n\nexport function useContractMarketplaceListingWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractMarketplaceListing = useContractMarketplaceListing();\n  const contractMarketplaceListingWithSigner = useMemo(async () => {\n    const contract = await getContractMarketplaceListing;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractMarketplaceListingWithSigner;\n}\n\nexport function useContractMarketplaceAuction() {\n  const getProvider = useGetProvider();\n  const contractMarketplaceAuction = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_MARKETPLACE_AUCTION_ADDRESS,\n      MARKETPLACE_AUCTION_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractMarketplaceAuction;\n}\n\nexport function useContractMarketplaceAuctionWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractMarketplaceAuction = useContractMarketplaceAuction();\n  const contractMarketplaceAuctionWithSigner = useMemo(async () => {\n    const contract = await getContractMarketplaceAuction;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractMarketplaceAuctionWithSigner;\n}\n\nexport function useContractMarketplaceCommunityCollection() {\n  const getProvider = useGetProvider();\n  const contractMarketplaceCommunityCollection = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n      COMMUNITY_COLLECTION,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractMarketplaceCommunityCollection;\n}\n\nexport function useContractMarketplaceCommunityCollectionWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractMarketplaceCommunityCollection =\n    useContractMarketplaceCommunityCollection();\n  const contractMarketplaceCommunityCollectionWithSigner = useMemo(async () => {\n    const contract = await getContractMarketplaceCommunityCollection;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractMarketplaceCommunityCollectionWithSigner;\n}\n\nexport function useContractMasterChef() {\n  const getProvider = useGetProvider();\n  const contractMasterChef = useMemo(async () => {\n    return await new ethers.Contract(\n      process.env.REACT_APP_MASTER_CHEF_ADDRESS,\n      MASTER_CHEF_ABI,\n      getProvider\n    );\n  }, [window.ethereum, getProvider]);\n  return contractMasterChef;\n}\n\nexport function useContractMasterChefWithSigner() {\n  const getSigner = useGetSigner();\n  const getContractMasterChef = useContractMasterChef();\n  const contractMasterChefWithSigner = useMemo(async () => {\n    const contract = await getContractMasterChef;\n    return contract.connect(getSigner);\n  }, [window.ethereum, getSigner]);\n  return contractMasterChefWithSigner;\n}\n\nexport function useContractERC20WithSigner() {\n  const getSigner = useGetSigner();\n  const getProvider = useGetProvider();\n  const contractERC20WithSigner = useMemo(\n    () => async (contractAddress) => {\n      const contract = await new ethers.Contract(\n        contractAddress,\n        ERC20_ABI,\n        getProvider\n      );\n      return contract?.connect(getSigner);\n    },\n    [window.ethereums, getSigner, getProvider]\n  );\n  return { contractERC20WithSigner };\n}\nexport function useContractERC721WithSigner() {\n  const getSigner = useGetSigner();\n  const getProvider = useGetProvider();\n  const contractERC721WithSigner = useMemo(\n    () => async (contractAddress) => {\n      const contract = await new ethers.Contract(\n        contractAddress,\n        ERC721_ABI,\n        getProvider\n      );\n      return contract?.connect(getSigner);\n    },\n    [window.ethereums, getSigner, getProvider]\n  );\n  return { contractERC721WithSigner };\n}\n","/Users/apple/Documents/treasure/src/storybook/atom/Icon/icon.jsx",[],[],"/Users/apple/Documents/treasure/src/api/AirdropApi.js",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/index.js",["1387","1388","1389","1390","1391","1392","1393","1394","1395","1396","1397"],["1398"],"import React, { useState, useEffect } from \"react\";\nimport useHandleTresrStaking from \"../../hooks/blockchain/useHandleTresrStaking\";\nimport useHandleNFT from \"../../hooks/blockchain/useHandleNFT\";\nimport \"./style.scss\";\nimport {\n  DASHBOARD_DROPDOWN_ITEMS_DEFAULT,\n  DASHBOARD_FILTERS_DEFAULT,\n  DASHBOARD_TAB_MENU_DASHBOARD,\n  DASHBOARD_TAB_MENU_DASHBOARD_LINK,\n  DASHBOARD_TAB_MENU_FAQ,\n  DASHBOARD_TAB_MENU_FAQ_LINK,\n  DASHBOARD_TAB_MENU_GAME,\n  DASHBOARD_TAB_MENU_GAME_LINK,\n  FILTER_ACTIVE,\n  FILTER_INACTIVE,\n  SORT_HIGHEST_KEY_LEVEL,\n  SORT_HIGHEST_TOKENID,\n  SORT_LOWEST_KEY_LEVEL,\n} from \"../../constant/navigation\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport useHandleModal from \"../../hooks/dom/useHandleModal\";\nimport useHandleRewards from \"../../hooks/blockchain/useHandleRewards\";\nimport DashboardMobileModal from \"./DashboardMobileModal\";\nimport useWindowDimensions from \"../../hooks/useWidowDimensions\";\nimport DashboardGameTab from \"./DashboardGameTab\";\nimport DashboardTab from \"./DashboardTab\";\nimport TreasureBoxModal from \"../common/DashboardModals/TreasureBoxModal\";\nimport TransactionLoadingModal from \"../common/Modals/TransactionLoadingModal\";\nimport DeactivateKeyModal from \"./DashboardModals/DeactivateKeyModal\";\nimport ActivateKeyModal from \"./DashboardModals/ActivateKeyModal\";\nimport useHandleLoader from \"../../hooks/loader/useHandleLoader\";\nimport useHandleAuth from \"../../hooks/auth/useHandleAuth\";\nimport useHandleLpStaking from \"../../hooks/blockchain/useHandleLpStaking\";\nimport { compareUnixDates, formatterUS } from \"../../utils\";\nimport SuccessKeyUpgradeModal from \"../common/Modals/SuccessKeyUpgradeModal\";\nimport ExpandedNFTView from \"../common/Modals/ExpandedNFTView\";\nimport ActivateAllKeysModal from \"../common/Modals/ActivateAllKeysModal\";\nimport UpgradeAllKeysModal from \"../common/Modals/UpgradeAllKeysModal\";\nimport {\n  APPROVE_UPGRADE_ALL_KEYS,\n  APPROVE_UPGRADE_KEY,\n} from \"../../constant/approveLoadingModal\";\nimport ApproveLoadingModal from \"../common/Modals/ApproveLoadingModal\";\nimport UpgradeKeyModal from \"../common/Modals/UpgradeKeyModal\";\nimport OpenTreasureBoxModal from \"../common/Modals/OpenTreasureBoxModal\";\nimport TreasureWarningModal from \"../common/Modals/TreasureWarningModal\";\nimport DashboardKeyRewards from \"./DashboardKeyRewards\";\nimport FAQsItem from \"components/FAQsPage/FAQsItem\";\nimport DashboardNotWhitelisted from \"./DashboardNotWhitelisted\";\nimport ACTIONS from \"redux/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectTresrBalance,\n  selectBurnedSmrtrBalance,\n  selectBurnedTresrBalance,\n  selectPoolAllocationBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectNftList, selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport { selectLoaderIsActive } from \"redux/slice/loaderSlice\";\nimport { selectWhitelist } from \"redux/slice/whiteListSlice\";\nimport { selectBonusPoolAllocation } from \"redux/slice/rewardSlice\";\nimport FounderKeyCard from \"storybook/molecule/FounderKeyCard/founderKeyCard\";\nimport useHandleToken from \"hooks/token/useHandleToken\";\nimport Button from \"storybook/atom/Button/button\";\nimport { useCountdown } from \"hooks/useCountdown\";\n\nexport default function Dashboard() {\n  const user = useSelector(selectUser);\n  const handleToken = useHandleToken();\n  const whitelist = useSelector(selectWhitelist);\n  const loaderIsActive = useSelector(selectLoaderIsActive);\n  const nftSelected = useSelector(selectNftSelected);\n  const nftLists = useSelector(selectNftList);\n  const burnedSmrtrBalance = useSelector(selectBurnedSmrtrBalance);\n  const burnedTresrBalance = useSelector(selectBurnedTresrBalance);\n  const poolAllocationBalance = useSelector(selectPoolAllocationBalance);\n  const claimableBonusPoolAllocationReward = useSelector(\n    selectBonusPoolAllocation\n  );\n  const tresrBalance = useSelector(selectTresrBalance);\n  const dispatch = useDispatch();\n  const [upgradeAllKeysFlag, setUpgradeAllKeysFlag] = useState(false);\n  const [probToOpen, setProbToOpen] = useState(null);\n  const [chestStatus, setChestStatus] = useState(null);\n  const [activeTab, setActiveTab] = useState(DASHBOARD_TAB_MENU_DASHBOARD);\n  const [activeFilter, setActiveFilter] = useState(DASHBOARD_FILTERS_DEFAULT);\n  const [activeDropdownItem, setActiveDropdownItem] = useState(\n    DASHBOARD_DROPDOWN_ITEMS_DEFAULT\n  );\n  const [amountUpgradeKey, setAmountUpgradeKey] = useState(0);\n  const [amountOpenChest, setAmountOpenChest] = useState(0);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isMaxUpgrades, setIsMaxUpgrades] = useState(true);\n  const [isApproved, setIsApproved] = useState(false);\n  const [tokenListToUpgrade, setTokenListToUpgrade] = useState([]);\n  const [filterTokenList, setFilterTokenList] = useState([]);\n  const [isNotActiveToken, setIsNotActiveToken] = useState([]);\n\n  const location = useLocation();\n  const handleLoader = useHandleLoader();\n  const navigate = useNavigate();\n  const handleNFT = useHandleNFT();\n  const handleAuth = useHandleAuth();\n  const handleRewards = useHandleRewards();\n  const handleTresrStaking = useHandleTresrStaking();\n  const handleLpStaking = useHandleLpStaking();\n\n  const handleTreasureModal = useHandleModal();\n  const handleChestModal = useHandleModal();\n  const handleUpgradeModal = useHandleModal();\n  const handleSuccessfulUpgradeModal = useHandleModal();\n  const handleTreasureWarningModal = useHandleModal();\n  const handleTransactionLoadingModal = useHandleModal();\n  const handleDeactivateKeyModal = useHandleModal();\n  const handleActivateKeyModal = useHandleModal();\n  const handleExpandedKeyViewModal = useHandleModal();\n  const handleActivateAllKeysModal = useHandleModal();\n  const handleUpgradeAllKeysModal = useHandleModal();\n  const handleApproveUpgradeModal = useHandleModal();\n  const handleApproveUpgradeAllModal = useHandleModal();\n  const handleDashboardMobileModal = useHandleModal();\n\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 640;\n  const callbackUpgradeKey = (status) => {\n    status && handleSuccessfulUpgradeModal.open();\n    handleRewards.updateBurnedEmissionInfo();\n  };\n  const callbackOpenTreasure = (status) => {\n    if (status === null) return;\n    setChestStatus(status);\n    handleRewards.updateBurnedEmissionInfo();\n    handleChestModal.open();\n  };\n\n  const onStakeTresr = (value) => {\n    handleTresrStaking.stakeTresr(value);\n  };\n  const onUnstakeTresr = async (value) => {\n    handleTransactionLoadingModal.open();\n    await handleTresrStaking\n      .unstakeTresr(value)\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onBulkStake = (tokenList) => {\n    handleActivateAllKeysModal.close();\n    handleTransactionLoadingModal.open();\n    handleNFT\n      .bulkStake(tokenList)\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onStake = () => {\n    handleTransactionLoadingModal.open();\n    handleNFT.stake().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onUnstake = () => {\n    handleTransactionLoadingModal.open();\n    handleNFT.unstake().finally(() => handleTransactionLoadingModal.close());\n  };\n  const onBulkApproveKey = (amountSMRTR) => {\n    handleUpgradeAllKeysModal.close();\n    handleApproveUpgradeAllModal.open();\n\n    handleNFT\n      .approveSMRTRByAmount(amountSMRTR)\n      .then(() => {\n        setIsApproved(true);\n      })\n      .catch(() => {\n        setIsApproved(false);\n        handleApproveUpgradeAllModal.close();\n        return null;\n      });\n  };\n\n  const onBulkUpgradeKey = () => {\n    handleNFT.bulkUpgradeKeys(tokenListToUpgrade).finally(() => {\n      handleApproveUpgradeAllModal.close();\n      setIsApproved(false);\n    });\n  };\n\n  const onApproveUpgradeKey = () => {\n    handleUpgradeModal.close();\n    handleApproveUpgradeModal.open();\n    handleNFT\n      .approveSMRTR()\n      .then(() => setIsApproved(true))\n      .catch(() => {\n        setIsApproved(false);\n        return null;\n      });\n  };\n\n  const onUpgradeKey = () => {\n    handleNFT\n      .upgradeKey()\n      .then(callbackUpgradeKey)\n      .finally(() => {\n        handleApproveUpgradeModal.close();\n        setIsApproved(false);\n      });\n  };\n  const onOpenTreasure = () => {\n    setChestStatus(null);\n    setIsAnimated(true);\n    handleChestModal.close();\n    handleTreasureModal.close();\n    handleTransactionLoadingModal.open();\n    handleNFT\n      .unlockTreasure()\n      .then(callbackOpenTreasure)\n      .catch((err) => {\n        setIsAnimated(false);\n        return null;\n      })\n      .finally(() => {\n        handleTransactionLoadingModal.close();\n      });\n  };\n  const onStakeLP = (value, type) => {\n    handleTransactionLoadingModal.open();\n    handleLpStaking\n      .stake(value, type)\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onUnstakeLP = (value, type) => {\n    handleTransactionLoadingModal.open();\n    handleLpStaking\n      .unstake(value, type)\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onclaimVeTresr = () => {\n    handleTransactionLoadingModal.open();\n    handleRewards\n      .claimVeTresr()\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onClaimBase = () => {\n    handleTransactionLoadingModal.open();\n    handleRewards\n      .claimBase()\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onClaimAllBase = () => {\n    handleTransactionLoadingModal.open();\n    handleRewards\n      .claimAllBase()\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onClaimBonus = () => {\n    handleTransactionLoadingModal.open();\n    handleRewards\n      .claimBonus()\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n  const onClaimAll = () => {\n    handleTransactionLoadingModal.open();\n    handleRewards\n      .claimAll()\n      .finally(() => handleTransactionLoadingModal.close());\n  };\n\n  const onCloseApproveUpgradeModal = () => {\n    handleApproveUpgradeModal.close();\n    setIsApproved(false);\n  };\n\n  const onCloseApproveUpgradeAllModal = () => {\n    handleApproveUpgradeAllModal.close();\n    setIsApproved(false);\n  };\n\n  const onTryAgainOpenChest = () => {\n    handleTreasureModal.open();\n    handleChestModal.close();\n    setIsAnimated(false);\n  };\n\n  const onConnectWallet = () => handleLoader.loaderWrapper(handleAuth.login, 2);\n  const onView = () => handleExpandedKeyViewModal.open();\n  const onViewTokenPage = () =>\n    navigate(\n      `/marketplace/${process.env.REACT_APP_NFKEY_ADDRESS}/${nftSelected?.tokenId}`\n    );\n  const onOpenActivateAllKeysModal = () => handleActivateAllKeysModal.open();\n  const onOpenUpgradeAllKeysModal = () => {\n    if (!upgradeAllKeysFlag) handleUpgradeAllKeysModal.open();\n  };\n\n  const handleRefresh = async () => {\n    handleTransactionLoadingModal.open();\n    await handleToken.updateUserTokenList(user?.wallet_id);\n    navigate(0);\n    handleTransactionLoadingModal.close();\n  };\n\n  const onNFKey = (tokenId, contractAddress) => {\n    const findToken = nftLists?.find(\n      (item) =>\n        item?.tokenId === tokenId && item?.contractAddress === contractAddress\n    );\n    if (findToken && findToken != nftSelected) {\n      ACTIONS.SET_COMPONENT_LOADER(dispatch, true);\n      ACTIONS.SET_NFT_SELECTED(dispatch, findToken);\n    }\n  };\n\n  const [\n    hours,\n    minutes,\n    seconds,\n    hoursValue,\n    minutesValue,\n    secondsValue,\n    days,\n  ] = useCountdown(nftSelected?.tierExpireTime);\n\n  useEffect(() => {\n    if (\n      nftSelected?.tierTresr != 0 &&\n      hours == 0 &&\n      minutes == 0 &&\n      seconds == 0\n    ) {\n      let findToken = nftLists?.find(\n        (item) => item?.tokenId === nftSelected?.tokenId\n      );\n      findToken = handleToken?.getTierUpdatedToken(findToken);\n      ACTIONS.SET_NFT_LIST_ITEM(dispatch, findToken);\n      if (nftSelected?.tokenId == findToken.tokenId) {\n        ACTIONS.SET_NFT_SELECTED(dispatch, findToken);\n      }\n    }\n  }, [hours, minutes, seconds]);\n\n  useEffect(() => {\n    if (location.pathname === DASHBOARD_TAB_MENU_GAME_LINK)\n      setActiveTab(DASHBOARD_TAB_MENU_GAME);\n    else if (location.pathname === DASHBOARD_TAB_MENU_DASHBOARD_LINK)\n      setActiveTab(DASHBOARD_TAB_MENU_DASHBOARD);\n    else if (location.pathname === DASHBOARD_TAB_MENU_FAQ_LINK)\n      setActiveTab(DASHBOARD_TAB_MENU_FAQ);\n  }, [location]);\n\n  useEffect(() => {\n    if (!nftSelected?.tokenId) return;\n    handleNFT\n      .getNFkeyInfo(nftSelected)\n      .then((res) => {\n        ACTIONS.SET_COMPONENT_LOADER(dispatch, false);\n        setAmountUpgradeKey(res[0]);\n        setAmountOpenChest(res[1]);\n        setProbToOpen(res[2]);\n        ACTIONS.SET_TARGET_UPGRADE_DATE(dispatch, res[3]);\n        // ACTIONS.SET_BALANCE_TRESR_TIME_UNLOCK(dispatch, res[4]);\n        ACTIONS.SET_CALIMED_BONUS_TOTAL(dispatch, res[4]); // base total key reward value\n        ACTIONS.SET_TRESR_REWARDS(dispatch, res[5]); // based key rewward of selected token\n        // TODO: should set calcRewardsPerSec\n        ACTIONS.SET_TRESR_REWARDS_PER_SEC(dispatch, res[6]);\n        ACTIONS.SET_TOTAL_TRESR_REWARDS_PER_SEC(dispatch, res[7]);\n      })\n      .finally((err) => console.log(\"token?.selected done\"));\n  }, [nftSelected]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Hook that updates the token list in initial load, filter, sort\n  useEffect(() => {\n    if (nftLists?.length == 0) return;\n    setFilterTokenList(\n      nftLists\n        // ?.filter((item) => item?.owner === user?.wallet_id)\n        ?.filter((item) => {\n          if (activeFilter?.value === FILTER_ACTIVE) return item?.staked;\n          if (activeFilter?.value === FILTER_INACTIVE) return !item?.staked;\n          return true;\n        })\n        .sort((a, b) => {\n          if (activeDropdownItem?.value === SORT_HIGHEST_KEY_LEVEL)\n            return b?.tier - a?.tier;\n          else if (activeDropdownItem?.value === SORT_LOWEST_KEY_LEVEL)\n            return a?.tier - b?.tier;\n          else if (activeDropdownItem?.value === SORT_HIGHEST_TOKENID)\n            return b?.tokenId - a?.tokenId;\n          else return a?.tokenId - b?.token;\n        })\n        .sort((a, b) => b?.tierTresr - a?.tierTresr)\n        // .sort((a, b) => b?.tokenId - a?.tokenId)\n        .map((item, index) => ({ ...item, index }))\n    );\n  }, [nftLists, activeDropdownItem, activeFilter]);\n\n  useEffect(() => {\n    setIsNotActiveToken(filterTokenList.some((item) => !item?.staked));\n\n    setIsMaxUpgrades(\n      filterTokenList?.some((item, key) =>\n        compareUnixDates(new Date().getTime() / 1000, item.upgradeToDelay)\n      )\n    );\n  }, [filterTokenList]);\n\n  // FIXME: this should be removed\n  // useEffect(() => {\n  //   if (filterTokenList?.length) {\n  //     setIsMaxUpgrades(\n  //       filterTokenList?.some((item, key) =>\n  //         compareUnixDates(new Date().getTime() / 1000, item.upgradeToDelay)\n  //       )\n  //     );\n  //     // handleNFT.getUpgradeDelay(token?.selected?.tokenId).then((res) => {});\n  //     // Promise.all(\n  //     //   filterTokenList?.map((item) => handleNFT.getUpgradeDelay(item?.tokenId))\n  //     // ).then((res) =>\n  //     //   setIsMaxUpgrades(\n  //     //     filterTokenList?.some((item, key) =>\n  //     //       compareUnixDates(new Date().getTime() / 1000, res[key])\n  //     //     )\n  //     //   )\n  //     // );\n  //   }\n  // }, [filterTokenList]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loaderIsActive) return null;\n\n  return (\n    <section className=\"dashboard\">\n      <>\n        <div className=\"dashboard__data\">\n          {activeTab === DASHBOARD_TAB_MENU_GAME && (\n            <div\n              className={`dashboard__data__content ${\n                !nftSelected ? \"dashboard__data__content--noToken\" : \"\"\n              }`}\n            >\n              {/* {loadingFlag && (\n                <div className=\"w-screen h-full bg-[#ffffff10] fixed left-0 top-0 z-50\">\n                  <PageLoader\n                    isLoaderActive={true}\n                    opacityLevel={0}\n                    customClass=\"pageLoaderWrapper mt-[20rem]\"\n                  />\n                </div>\n              )} */}\n              <div className=\"dashboard__data__content--leftBlock\">\n                {isMobile && whitelist?.level ? (\n                  <div className=\"flex-col flex gap-2\">\n                    <FAQsItem\n                      answer={\n                        <div className=\"flex flex-col\">\n                          <span className=\"navbar__dashboard--burnBlock__smrtr\">\n                            {formatterUS(burnedSmrtrBalance)} $SMRTR\n                          </span>\n                          <span className=\"navbar__dashboard--burnBlock__tresr\">\n                            {formatterUS(burnedTresrBalance)} $TRESR\n                          </span>\n                        </div>\n                      }\n                      question={\"🔥 Burn Count\"}\n                    />\n                    <FAQsItem\n                      answer={\n                        <>\n                          <div className=\"navbar__dashboard--poolBlock__text\">\n                            <span>Founders' Pool:</span>\n                            <span>{formatterUS(poolAllocationBalance)}</span>\n                          </div>\n                          <div className=\"navbar__dashboard--poolBlock__text\">\n                            <span>Bonus Pool:</span>\n                            <span>\n                              {formatterUS(claimableBonusPoolAllocationReward)}\n                            </span>\n                          </div>\n                        </>\n                      }\n                      question={\"💰 Game Emission Remaining\"}\n                    />\n                  </div>\n                ) : (\n                  <></>\n                )}\n                {isMobile &&\n                  !!(nftSelected?.tokenId && poolAllocationBalance) && (\n                    <DashboardKeyRewards\n                      onConnectWallet={onConnectWallet}\n                      onClaimBase={onClaimBase}\n                      onClaimAllBase={onClaimAllBase}\n                      isAnimated={isAnimated}\n                      isDark={true}\n                      isMobile={isMobile}\n                    />\n                  )}\n\n                {nftSelected && (\n                  <div\n                    className={`dashboard__data__content--list ${\n                      isAnimated && \"nft__image--placeholder\"\n                    }`}\n                  >\n                    <FounderKeyCard\n                      activeDropdownItem={activeDropdownItem}\n                      setActiveDropdownItem={setActiveDropdownItem}\n                      handleTransactionLoadingModal={handleRefresh}\n                      activeFilter={activeFilter}\n                      setActiveFilter={setActiveFilter}\n                      filterTokenList={filterTokenList}\n                      isAnimated={isAnimated}\n                      onOpenModal={handleDashboardMobileModal?.open}\n                      nftSelected={nftSelected}\n                      onNFKey={onNFKey}\n                      hours={hours}\n                      minutes={minutes}\n                      seconds={seconds}\n                      days={days}\n                    />\n                    {!isAnimated && (isNotActiveToken || isMaxUpgrades) && (\n                      <div\n                        className=\"dashboard__data__content--list__buttons\"\n                        style={\n                          !isMobile\n                            ? {\n                                bottom:\n                                  filterTokenList?.length >= 6\n                                    ? 0\n                                    : `${(6 - filterTokenList?.length) * 86}px`,\n                              }\n                            : {\n                                bottom:\n                                  filterTokenList?.length >= 4\n                                    ? 0\n                                    : `${(4 - filterTokenList?.length) * 86}px`,\n                              }\n                        }\n                      >\n                        {isNotActiveToken && (\n                          <Button\n                            label=\"Activate All Keys\"\n                            variant=\"primary\"\n                            onClick={onOpenActivateAllKeysModal}\n                          />\n                        )}\n                        {isMaxUpgrades && (\n                          <Button\n                            label=\"Max Upgrade Keys\"\n                            variant=\"primary\"\n                            onClick={onOpenUpgradeAllKeysModal}\n                          />\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n              {isMobile &&\n                !nftSelected &&\n                (!whitelist?.level || handleNFT.activeZone === null) && (\n                  <DashboardNotWhitelisted />\n                )}\n              {!isMobile && (\n                <div\n                  className={`dashboard__data__content--form ${\n                    !nftSelected\n                      ? \"dashboard__data__content--form__noToken\"\n                      : \"\"\n                  }`}\n                >\n                  <DashboardGameTab\n                    isAnimated={isAnimated}\n                    probToOpen={probToOpen}\n                    amountUpgradeKey={amountUpgradeKey}\n                    handleUpgradeModal={handleUpgradeModal}\n                    onView={onView}\n                    handleTreasureModal={handleTreasureModal}\n                    handleTreasureWarningModal={handleTreasureWarningModal}\n                    amountOpenChest={amountOpenChest}\n                    onOpenDeactivateKeyModal={handleDeactivateKeyModal.open}\n                    onOpenActivateKeyModal={handleActivateKeyModal.open}\n                    onClaimBonus={onClaimBonus}\n                    onClaimBase={onClaimBase}\n                    onClaimAllBase={onClaimAllBase}\n                    onConnectWallet={onConnectWallet}\n                    onStakeLP={onStakeLP}\n                    onUnstakeLP={onUnstakeLP}\n                    onViewTokenPage={onViewTokenPage}\n                    setIsMaxUpgrades={setIsMaxUpgrades}\n                    filterTokenList={filterTokenList}\n                    handleTransactionLoadingModal={\n                      handleTransactionLoadingModal\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === DASHBOARD_TAB_MENU_DASHBOARD && (\n            <DashboardTab\n              onStakeTresr={onStakeTresr}\n              onUnstakeTresr={onUnstakeTresr}\n              onClaimBonus={onClaimBonus}\n              onClaimAll={onClaimAll}\n              onConnectWallet={onConnectWallet}\n              onStakeLP={onStakeLP}\n              onUnstakeLP={onUnstakeLP}\n              onclaimVeTresr={onclaimVeTresr}\n            />\n          )}\n        </div>\n      </>\n\n      {handleSuccessfulUpgradeModal.isActive && (\n        <SuccessKeyUpgradeModal\n          isOpen={handleSuccessfulUpgradeModal.isActive}\n          onClose={handleSuccessfulUpgradeModal.close}\n        />\n      )}\n\n      {handleUpgradeModal.isActive && (\n        <UpgradeKeyModal\n          isOpen={handleUpgradeModal.isActive}\n          onClose={handleUpgradeModal.close}\n          nftSelected={nftSelected}\n          amountUpgradeKey={amountUpgradeKey}\n          onApproveUpgradeKey={onApproveUpgradeKey}\n        />\n      )}\n      {handleTreasureModal.isActive && (\n        <OpenTreasureBoxModal\n          onClose={handleTreasureModal.close}\n          isOpen={handleTreasureModal.isActive}\n          nftSelected={nftSelected}\n          amountOpenChest={amountOpenChest}\n          onOpenTreasure={onOpenTreasure}\n          balanceTresr={tresrBalance}\n          probToOpen={probToOpen}\n        />\n      )}\n\n      {handleTreasureWarningModal.isActive && (\n        <TreasureWarningModal\n          isOpen={handleTreasureWarningModal.isActive}\n          onClose={handleTreasureWarningModal.close}\n        />\n      )}\n      {handleDeactivateKeyModal.isActive && (\n        <DeactivateKeyModal\n          isOpen={handleDeactivateKeyModal.isActive}\n          onClose={handleDeactivateKeyModal.close}\n          onUnstake={onUnstake}\n        />\n      )}\n\n      {handleActivateKeyModal.isActive && (\n        <ActivateKeyModal\n          onClose={handleActivateKeyModal.close}\n          isOpen={handleActivateKeyModal.isActive}\n          onStake={onStake}\n        />\n      )}\n      {handleChestModal.isActive && (\n        <TreasureBoxModal\n          amountOpenChest={amountOpenChest}\n          isOpen={handleChestModal.isActive}\n          onClose={handleChestModal.close}\n          onTryAgain={onTryAgainOpenChest}\n          chestStatus={chestStatus}\n          setIsAnimated={setIsAnimated}\n        />\n      )}\n\n      {handleExpandedKeyViewModal.isActive && (\n        <ExpandedNFTView\n          onClose={handleExpandedKeyViewModal.close}\n          isOpen={handleExpandedKeyViewModal.isActive}\n          currentToken={nftSelected}\n          isGame\n        />\n      )}\n\n      {handleActivateAllKeysModal.isActive && (\n        <ActivateAllKeysModal\n          onClose={handleActivateAllKeysModal.close}\n          onClick={onBulkStake}\n          isOpen={true}\n          filterTokenList={filterTokenList}\n        />\n      )}\n\n      {handleUpgradeAllKeysModal.isActive && (\n        <UpgradeAllKeysModal\n          onClick={onBulkApproveKey}\n          setTokenListToUpgrade={setTokenListToUpgrade}\n          onClose={handleUpgradeAllKeysModal.close}\n          isOpen={handleUpgradeAllKeysModal.isActive}\n          handleTransactionLoadingModal={handleTransactionLoadingModal}\n          setUpgradeAllKeysFlag={setUpgradeAllKeysFlag}\n          upgradeAllKeysFlag={upgradeAllKeysFlag}\n          filterTokenList={filterTokenList}\n        />\n      )}\n      {handleApproveUpgradeModal.isActive && (\n        <ApproveLoadingModal\n          isOpen={handleApproveUpgradeModal.isActive}\n          status={APPROVE_UPGRADE_KEY}\n          isApproved={isApproved}\n          onClose={onCloseApproveUpgradeModal}\n          onNextStep={onUpgradeKey}\n        />\n      )}\n      {handleApproveUpgradeAllModal.isActive && (\n        <ApproveLoadingModal\n          isOpen={handleApproveUpgradeAllModal.isActive}\n          status={APPROVE_UPGRADE_ALL_KEYS}\n          isApproved={isApproved}\n          onClose={onCloseApproveUpgradeAllModal}\n          onNextStep={onBulkUpgradeKey}\n        />\n      )}\n      {handleTransactionLoadingModal.isActive && (\n        <TransactionLoadingModal\n          isOpen={handleTransactionLoadingModal.isActive}\n        />\n      )}\n\n      {handleDashboardMobileModal.isActive &&\n        isMobile &&\n        activeTab === DASHBOARD_TAB_MENU_GAME && (\n          <DashboardMobileModal\n            isOpen={handleDashboardMobileModal.isActive}\n            onClose={handleDashboardMobileModal.close}\n            activeTab={activeTab}\n            amountOpenChest={amountOpenChest}\n            onClaimAll={onClaimAll}\n            onClaimBase={onClaimBase}\n            onClaimBonus={onClaimBonus}\n            onStakeTresr={onStakeTresr}\n            onUnstakeTresr={onUnstakeTresr}\n            amountUpgradeKey={amountUpgradeKey}\n            handleUpgradeModal={handleUpgradeModal}\n            handleTreasureModal={handleTreasureModal}\n            handleTreasureWarningModal={handleTreasureWarningModal}\n            onView={onView}\n            onOpenDeactivateKeyModal={handleDeactivateKeyModal.open}\n            onOpenActivateKeyModal={handleActivateKeyModal.open}\n            probToOpen={probToOpen}\n            onConnectWallet={onConnectWallet}\n            onStakeLP={onStakeLP}\n            onUnstakeLP={onUnstakeLP}\n          />\n        )}\n    </section>\n  );\n}\n","/Users/apple/Documents/treasure/src/hooks/rewards/useGetVeTresrBonusRewards.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetVeTresrPerHour.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpTresrBonusRewardPerSecond.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useUpdateBurnedEmissionInfo.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetBurned.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetCumulativeLevels.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetEmission.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetDaysToMax.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetMaxVeTresr.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetPendingTotalRewards.js",["1399"],[],"import { useContractDailyBonusRewards } from \"hooks/blockchain/useHandleContracts\";\nimport { useSelector } from \"react-redux\";\nimport { selectNftList } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useGetPendingTotalRewards() {\n  const nftLists = useSelector(selectNftList);\n  const user = useSelector(selectUser);\n  const handleContractDailyBonusRewards = useContractDailyBonusRewards();\n\n  const getPendingTotalRewards = async (count = 3) => {\n    if (!user?.wallet_id) return;\n    if (nftLists?.length == 0) return 0;\n    const ownTokenList = nftLists\n      ?.filter((item) => item?.owner === user?.wallet_id)\n      ?.map((item) => +item?.tokenId);\n    const contractDailyBonusRewards = await handleContractDailyBonusRewards;\n    return contractDailyBonusRewards\n      .pendingTotalReward(user?.wallet_id, ownTokenList)\n      .then((res) => hexToNumber(res?._hex) / 1e18)\n      .catch(() => (count ? getPendingTotalRewards(count - 1) : null));\n  };\n  return { getPendingTotalRewards };\n}\n","/Users/apple/Documents/treasure/src/hooks/rewards/useGetVeTresrBonusRewardPerSecond.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetPenddingBonusReward.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpSmrtBonusRewardPerSecond.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetKeyLevelBonusRewardPerSecond.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetTotalRewards.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetKeyLevelBonusReward.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpSmrtBonusReward.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetJlpTresrBonusReward.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetPendingVeTresr.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetClaimedVeTresr.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useClaimVeTresr.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useClaimAllBase.js",["1400"],[],"import {\n  ALERT_STATUS_FAILURE,\n  ALERT_STATUS_SUCCESS,\n  CLAIM_FOUNDERS_REWARDS_ALERT,\n} from \"constant/alert\";\nimport { useContractDailyBonusRewardsWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport useHandleNFT from \"hooks/blockchain/useHandleNFT\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { selectNftList, selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\n\nexport default function useClaimAllBase() {\n  const nftSelected = useSelector(selectNftSelected);\n  const nftLists = useSelector(selectNftList);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const handleNFT = useHandleNFT();\n  const handleContractDailyBonusRewardsWithSigner =\n    useContractDailyBonusRewardsWithSigner();\n\n  const claimAllBase = async () => {\n    if (!user?.wallet_id) return;\n    if (!nftSelected?.tokenId) return;\n\n    const tokenIdList = nftLists\n      ?.filter((item) => item?.staked == true)\n      ?.map((item) => item.tokenId);\n    const contractDailyBonusRewardsWithSigner =\n      await handleContractDailyBonusRewardsWithSigner;\n    return contractDailyBonusRewardsWithSigner\n      .claimAllBaseReward(tokenIdList)\n      .then(async (tx) => {\n        await tx.wait();\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n\n        handleNFT.getRewardsReleased();\n        handleNFT.balanceOfTRESR(user?.wallet_id);\n        handleNFT.getAVAXBalance(user?.wallet_id);\n        handleNFT.getPoolAllocation();\n        handleNFT.getPendingAllBaseReward(tokenIdList);\n\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_SUCCESS,\n          CLAIM_FOUNDERS_REWARDS_ALERT(true)\n        );\n      })\n      .catch((err) => {\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          CLAIM_FOUNDERS_REWARDS_ALERT(false)\n        );\n\n        return null;\n      });\n  };\n  return { claimAllBase };\n}\n","/Users/apple/Documents/treasure/src/hooks/rewards/useClaimBonus.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useClaimBase.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetNFkeyInfo.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetAVAXBalance.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useUpdateProfileBalance.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useClaimTresrRewards.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useWithdrawMasterChef.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useDepositMasterChef.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useGetMasterChefRewards.js",[],[],"/Users/apple/Documents/treasure/src/hooks/rewards/useClaimAll.js",["1401"],[],"import AirdropApi from \"api/AirdropApi\";\nimport { useContractDailyBonusRewardsWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport useHandleNFT from \"hooks/blockchain/useHandleNFT\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { selectNftList } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport useGetKeyLevelBonusReward from \"./useGetKeyLevelBonusReward\";\nimport useGetJlpSmrtBonusReward from \"./useGetJlpSmrtBonusReward\";\nimport useGetJlpTresrBonusReward from \"./useGetJlpTresrBonusReward\";\nimport useGetVeTresrBonusRewards from \"./useGetVeTresrBonusRewards\";\nimport {\n  ALERT_STATUS_FAILURE,\n  ALERT_STATUS_SUCCESS,\n  CLAIM_ALL_REWARDS_ALERT,\n} from \"constant/alert\";\n\nexport default function useClaimAll() {\n  const nftLists = useSelector(selectNftList);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const handleNFT = useHandleNFT();\n  const handleContractDailyBonusRewardsWithSigner =\n    useContractDailyBonusRewardsWithSigner();\n  const handleGetKeyLevelBonusReward = useGetKeyLevelBonusReward();\n  const handleGetJlpSmrtBonusReward = useGetJlpSmrtBonusReward();\n  const handleGetJlpTresrBonusReward = useGetJlpTresrBonusReward();\n  const handleGetVeTresrBonusRewards = useGetVeTresrBonusRewards();\n\n  const claimAll = async () => {\n    if (!user?.wallet_id) return;\n\n    const ownTokenList = nftLists\n      ?.filter((item) => item?.owner === user?.wallet_id)\n      ?.filter((item) => item?.staked == true)\n      ?.map((item) => +item?.tokenId);\n    const contractDailyBonusRewardsWithSigner =\n      await handleContractDailyBonusRewardsWithSigner;\n    return contractDailyBonusRewardsWithSigner\n      .claimAll(ownTokenList)\n      .then(async (tx) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"PENDING\",\n          action: \"claimAll\",\n          description: `Claimed all`,\n          tx: JSON.stringify(tx),\n        });\n        await tx.wait();\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n        // await sleep(15);\n        handleNFT.getRewardsReleased();\n        handleNFT.balanceOfTRESR(user?.wallet_id);\n        handleNFT.getAVAXBalance(user?.wallet_id);\n        handleNFT.getBonusPoolAllocation();\n        handleNFT.getPoolAllocation();\n        handleNFT.getTresrRewardsBalance();\n        handleGetKeyLevelBonusReward.getKeyLevelBonusReward();\n        handleGetJlpSmrtBonusReward.getJlpSmrtBonusReward();\n        handleGetJlpTresrBonusReward.getJlpTresrBonusReward();\n        handleGetVeTresrBonusRewards.getVeTresrBonusReward();\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_SUCCESS,\n          CLAIM_ALL_REWARDS_ALERT(true)\n        );\n      })\n      .catch((err) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"ERROR\",\n          action: \"claimAll\",\n          description: `Claimed all`,\n          error: JSON.stringify(err),\n        });\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          CLAIM_ALL_REWARDS_ALERT(false)\n        );\n        return null;\n      });\n  };\n  return { claimAll };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useApproveSMRTRtoContract.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useBatchMint.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useApproveSMRTRByAmount.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useUnstake.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useBulkStake.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useStake.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useUpgradeKey.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useApproveSMRTR.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useUnlockTreasure.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useReloadNFTItemBalance.js",["1402"],[],"import useHandleToken from \"hooks/token/useHandleToken\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { selectUser } from \"redux/slice/userSlice\";\n\nexport default function useReloadNFTItemBalance() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const handleToken = useHandleToken();\n\n  const reloadNFTItemBalance = async (contractAddress, tokenID) => {\n    if (!user?.wallet_id) return;\n    const isKeyContract =\n      contractAddress?.toLowerCase() ===\n      process.env.REACT_APP_NFKEY_ADDRESS?.toLowerCase();\n\n    const token = await handleToken.checkToken(tokenID);\n    if (!token) return;\n    ACTIONS.SET_NFT_LIST_ITEM(dispatch, token);\n    ACTIONS.SET_CURRENT_TOKEN(dispatch, token);\n    if (token?.owner === user?.wallet_id) {\n      ACTIONS.SET_NFT_SELECTED(dispatch, token);\n    }\n  };\n\n  return { reloadNFTItemBalance };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useGetZoneCommission.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useBalanceOfTRESR.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetRewardsReleased.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useLoadNFTBalance.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useMint.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useBulkUpgradeKeys.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetFreeSMRTR.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useBalanceOfSMRTR.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetTresrRewardsBalance.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetTotalSupply.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetBurnedSmarter.js",["1403"],[],"import { useContractNFKeyWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { useDispatch } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { hexToNumber } from \"utils/blockchain\";\nimport useGetAccountZone from \"./useGetAccountZone\";\n\nexport default function useGetBurnedSmarter() {\n  const dispatch = useDispatch();\n  const handleContractNFKeyWithSigner = useContractNFKeyWithSigner();\n  const handleGetAccountZone = useGetAccountZone();\n  const getBurnedSmarter = async (count = 3) => {\n    return;\n    const contractNFKeyWithSigner = await handleContractNFKeyWithSigner;\n    return contractNFKeyWithSigner\n      .burnedSmarter()\n      .then((tx) => {\n        ACTIONS.SET_BURNED_SMRTR(dispatch, hexToNumber(tx?._hex) / 10 ** 18);\n      })\n      .catch(() =>\n        count ? handleGetAccountZone.getAccountZone(count - 1) : null\n      );\n  };\n  return { getBurnedSmarter };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useGetKeyLevelP.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetAccountZone.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useBalanceOfERC20.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetBurnedTresr.js",["1404"],[],"import { useContractTresrCoinWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { useDispatch } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useGetBurnedTresr() {\n  const dispatch = useDispatch();\n  const handleContractTresrCoinWithSigner = useContractTresrCoinWithSigner();\n  const getBurnedTresr = async () => {\n    return;\n    const contractTresrCoinWithSigner = await handleContractTresrCoinWithSigner;\n    return contractTresrCoinWithSigner\n      .burned()\n      .then((tx) => {\n        ACTIONS.SET_BURNED_TRESR(dispatch, hexToNumber(tx?._hex) / 10 ** 18);\n      })\n      .catch(() => null);\n  };\n  return { getBurnedTresr };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useGetBonousPoolAllocation.js",["1405"],[],"import { useContractTresrCoinWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { useDispatch } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useGetBonousPoolAllocation() {\n  const dispatch = useDispatch();\n  const handleContractTresrCoinWithSigner = useContractTresrCoinWithSigner();\n  const getBonusPoolAllocation = async () => {\n    return;\n    const contractTresrCoinWithSigner = await handleContractTresrCoinWithSigner;\n    return contractTresrCoinWithSigner\n      .bonusPoolAllocation()\n      .then((tx) => {\n        ACTIONS.SET_BONUS_POOL_ALLOCATION(\n          dispatch,\n          hexToNumber(tx?._hex) / 10 ** 18\n        );\n      })\n      .catch(() => null);\n  };\n  return { getBonusPoolAllocation };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useGetPoolAllocation.js",["1406"],[],"import { useContractTresrCoinWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { useDispatch } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useGetPoolAllocation() {\n  const dispatch = useDispatch();\n  const handleContractTresrCoinWithSigner = useContractTresrCoinWithSigner();\n  const getPoolAllocation = async () => {\n    return;\n    const contractTresrCoinWithSigner = await handleContractTresrCoinWithSigner;\n    contractTresrCoinWithSigner\n      .poolAllocation()\n      .then((tx) => console.log(\"poolAllocation\", tx));\n\n    return contractTresrCoinWithSigner\n      .poolAllocation()\n      .then((tx) => {\n        ACTIONS.SET_POOL_ALLOCATION(dispatch, hexToNumber(tx?._hex) / 10 ** 18);\n      })\n      .catch(() => null);\n  };\n  return { getPoolAllocation };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewards.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetPendingAllBaseReward.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetBonousRewardPerSecond.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetUpgradeDealy.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardList.js",["1407"],[],"import { ethers } from \"ethers\";\nimport { useContractNFKeyStakingWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useCalcRewardList() {\n  const handleContractNFKeyStakingWithSigner =\n    useContractNFKeyStakingWithSigner();\n  const calcRewardsList = async (tokenList) => {\n    if (tokenList?.length == 0) return 0;\n    const contractNFKeyStakingWithSigner =\n      await handleContractNFKeyStakingWithSigner;\n    const rewardList =\n      contractNFKeyStakingWithSigner.pendingBaseRewardByTokens(tokenList);\n    return rewardList\n      .map(\n        (reward) =>\n          +ethers.utils.formatEther(hexToNumber(reward?._hex)?.toString())\n      )\n      .reduce((acc, val) => acc + val, 0);\n  };\n  return { calcRewardsList };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardPerSecond.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetAmountUpgradeKey.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardByTokens.js",["1408"],[],"import { ethers } from \"ethers\";\nimport { useContractNFKeyStakingWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useCalcRewardByTokens() {\n  const handleContractNFKeyStakingWithSigner =\n    useContractNFKeyStakingWithSigner();\n  const calcRewardByTokens = async (tokenList) => {\n    if (tokenList?.length == 0) return [];\n    const contractNFKeyStakingWithSigner =\n      await handleContractNFKeyStakingWithSigner;\n    const rewardList =\n      await contractNFKeyStakingWithSigner.pendingBaseRewardByTokens(tokenList);\n    return rewardList?.map(\n      (reward) =>\n        +ethers.utils.formatEther(hexToNumber(reward?._hex)?.toString())\n    );\n  };\n  return { calcRewardByTokens };\n}\n","/Users/apple/Documents/treasure/src/hooks/nft/useGetUnlockCost.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardsListPerSecond.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useTargetUpgradeDate.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetProbToOpen.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetBonousReward.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useTimeToTreasureAvailable.js",[],[],"/Users/apple/Documents/treasure/src/utils/blockchain.js",[],[],"/Users/apple/Documents/treasure/src/hooks/nft/useGetStartUpgradeDelay.js",[],[],"/Users/apple/Documents/treasure/src/hooks/useCommon.js",[],[],"/Users/apple/Documents/treasure/src/utils/connectors.js",[],[],"/Users/apple/Documents/treasure/src/constant/faqs.js",[],[],"/Users/apple/Documents/treasure/src/constant/marketplace.js",["1409"],[],"import nftImage from '../assets/images/marketplace/nftImg.svg'\n\nimport {\n    AVAX_APES_COLLECTION_ADDRESS,\n    CASH_COWS_TAPE_COLLECTION_ADDRESS,\n    CHIKN_COLLECTION_ADDRESS,\n    CLOUDHEADS_COLLECTION_ADDRESS,\n    COMMUNITY_COLLECTION_ADDRESS,\n    DOODLEVERSE_COLLECTION_ADDRESS,\n    FARMLAND_COLLECTION_ADDRESS,\n    HAPPY_SUN_COLLECTION_ADDRESS,\n    JOEPEGS_COLLECTION_ADDRESS,\n    MORE_SATOS_COLLECTION_ADDRESS,\n    NFKEY_COLLECTION_ADDRESS,\n    PARTY_ANIMALS_COLLECTION_ADDRESS,\n    ROOSTR_COLLECTION_ADDRESS\n} from \"./blockchain\";\nimport {DASHBOARD_TAB_MENU_DASHBOARD, DASHBOARD_TAB_MENU_FAQ, DASHBOARD_TAB_MENU_GAME} from \"./navigation\";\n\nexport const TAB_MENU_ITEMS = [\n    // {\n    //     label: 'Created',\n    //     value: 'created'\n    // },\n    {\n        label: 'All my NFTs',\n        value: 'nfts'\n    },\n    {\n        label: 'Auctions',\n        value: 'auctions'\n    },\n    {\n        label: 'Activity',\n        value: 'activity'\n    }\n]\n\nexport const TOP_COLLECTIONS_TABS = [\n    {\n        label: '24 hours',\n        value: '1'\n    },\n    {\n        label: '7 days',\n        value: '7'\n    },\n    {\n        label: '30 days',\n        value: '30'\n    }\n]\n\nexport const COLLECTION_ITEMS = [\n    {\n        image: '',\n        title: 'NFKey',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: process.env.REACT_APP_NFKEY_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Community Collection',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: COMMUNITY_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Chikn',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: CHIKN_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'FarmLand',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: FARMLAND_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Roostr',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: ROOSTR_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Conscious Lines By Gabe Weis',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: JOEPEGS_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Cloudheadz',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: CLOUDHEADS_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Doodleverse',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: DOODLEVERSE_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Happy Sun',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: HAPPY_SUN_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'AvaxApes',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: AVAX_APES_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Party Animals',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: PARTY_ANIMALS_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'More Satos',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: MORE_SATOS_COLLECTION_ADDRESS\n    },\n    {\n        image: '',\n        title: 'Cash Cows',\n        amount: '1245.6k',\n        percentage: '+14,56%',\n        isMinted: false,\n        contractAddress: CASH_COWS_TAPE_COLLECTION_ADDRESS\n    },\n\n]\n\nexport const ACTIVITY_TABLE_DATA = [\n    {\n        image: '',\n        name: 'Infected Mob',\n        price: '1720,37',\n        networkId: 10,\n        quantity: '13,986',\n        addressFrom: '0x61688ff1E4aA41BFfC6C6137976bF811fCd1Ac23',\n        addressTo: '-',\n        activity: 'Minted',\n        time: '10/04/22'\n    },\n    {\n        image: '',\n        name: 'Infected Mob',\n        price: '1720,37',\n        networkId: 10,\n        quantity: '13,986',\n        addressFrom: '0x61688ff1E4aA41BFfC6C6137976bF811fCd1Ac23',\n        addressTo: '-',\n        activity: 'Minted',\n        time: '10/04/22'\n    },\n    {\n        image: '',\n        name: 'Infected Mob',\n        price: '1720,37',\n        networkId: 10,\n        quantity: '13,986',\n        addressFrom: '0x61688ff1E4aA41BFfC6C6137976bF811fCd1Ac23',\n        addressTo: '-',\n        activity: 'Minted',\n        time: '10/04/22'\n    },\n]\n\nexport const ACTIVITY_TABLE_HEADER = ['Item', 'Price', 'Quantity', 'From', 'To', 'Time', 'Activity']\n\nexport const NAVBAR_ITEMS_MARKETPLACE = [\n    {label: 'Profile', link: '/account'},\n    {label: 'All NFTs', link: '/allNFTs'},\n    {label: 'Collections', link: '/collections'},\n    {label: 'Statistics', link: '/statistics'},\n]\n\nexport const NAVBAR_ITEMS_COLLECTION_PAGE = [\n    {label: 'All Items', link: 'collections/allItems'},\n    // {label: 'Activity', link: 'collections/activity'},\n]\n\nexport const NAVBAR_ITEMS_ALL_NFTS_PAGE = [\n    // {label: 'Founder’s Keys', link: '/allNFTs'},\n    // {label: '1:1 Collection', link: '/collections'},\n    {label: 'Founder’s Keys', link: `/collections/${NFKEY_COLLECTION_ADDRESS}`},\n    {label: '1:1 Collection', link: `/collections/${COMMUNITY_COLLECTION_ADDRESS}`},\n]\n\nexport const NAVBAR_ITEMS_CREATE_PAGE = [\n    {label: 'Uploading One NFT', link: '/create/nft'},\n    {label: 'Creating a Collection', link: '/create/collection'},\n]\n\nexport const NAVBAR_ITEMS_ACCOUNT_PAGE = [\n    {label: 'My NFTs', link: '/account'},\n    {label: 'Favorites', link: '/account/favourites'},\n]\n\nexport const FAVOURITED_TAB = 'FAVOURITED_TAB'\nexport const AUCTIONS_TAB = 'AUCTIONS_TAB'\nexport const ALL_NFTS_TAB = 'ALL_NFTS_TAB'\n\nexport const NAVBAR_ITEMS_GAME_PAGE = [\n    {label: 'Key Rewards', link: `/${DASHBOARD_TAB_MENU_GAME}`},\n    {label: 'Bonus Rewards', link: `/${DASHBOARD_TAB_MENU_GAME}/${DASHBOARD_TAB_MENU_DASHBOARD}`},\n    // {label: 'FAQs', link: `/${DASHBOARD_TAB_MENU_GAME}/${DASHBOARD_TAB_MENU_FAQ}`},\n]\n\nexport const NFT_DATA = [\n    {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    }, {\n        image: nftImage,\n        name: '4567r674',\n        listed: {\n            price: 1,\n            endDate: 0,\n        },\n        status: 1,\n        contractAddress: '0x0',\n        tokenId: 0\n    },\n]\n\nexport const TOP_COLLECTION_ITEMS = [\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n    {name: '12434', percentage: '+14,56%', floor: '100', image: ''},\n]\n\n\nexport const FILTER_STATUS = 1\nexport const FILTER_PRICE = 2\nexport const FILTER_BLOCKCHAIN = 3\nexport const FILTER_PROPERTIES = 4\nexport const FILTER_SORT_BY = 5\n\nexport const FILTERS_CRITERIONS = [\n    {label: 'Status', value: FILTER_STATUS},\n    {label: 'Price', value: FILTER_PRICE},\n    {label: 'Blockchain', value: FILTER_BLOCKCHAIN},\n    // {label: 'Properties', value: FILTER_PROPERTIES},\n    {label: 'Sort by', value: FILTER_SORT_BY},\n]\n\nexport const FILTER_SORT_BY_OPTIONS = ['Price Low to High', 'Price High to Low']\nexport const FILTER_BUY_NOW = 'Buy Now'\nexport const FILTER_ON_AUCTION = 'On Auction'\nexport const FILTER_PRICE_LOW_TO_HIGH = 'Price Low to High'\nexport const FILTER_PRICE_HIGH_TO_LOW = 'Price High to Low'\n\nexport const FILTERS_OPTIONS = {\n    [FILTER_STATUS]: [FILTER_BUY_NOW, FILTER_ON_AUCTION],\n    [FILTER_PRICE]: [],\n    [FILTER_BLOCKCHAIN]: ['Avalanche'],\n    [FILTER_PROPERTIES]: ['Background', 'Head', 'Body', 'Accessories', 'Arms'],\n    [FILTER_SORT_BY]: FILTER_SORT_BY_OPTIONS,\n}\n\nexport const TOKEN_ID_LIST = Array.from(Array(16).keys(), n => n + 1)\nexport const TOKEN_ID_LIST_4 = Array.from(Array(4).keys(), n => n + 1)\n\n","/Users/apple/Documents/treasure/src/api/CollectionApi.js",[],[],"/Users/apple/Documents/treasure/src/constant/createPage.js",[],[],"/Users/apple/Documents/treasure/src/hooks/dom/useOutsideClick.js",[],[],"/Users/apple/Documents/treasure/src/api/TokenApi.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleAuction.js",[],[],"/Users/apple/Documents/treasure/src/api/AuthApi.js",[],[],"/Users/apple/Documents/treasure/src/utils/localStorage.js",[],[],"/Users/apple/Documents/treasure/src/constant/singleNFTPage.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleMarketplace.js",[],[],"/Users/apple/Documents/treasure/src/api/CustomerApi.js",[],[],"/Users/apple/Documents/treasure/src/api/FileApi.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/loaderAction.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/balanceAction.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/filtersAction.js",[],[],"/Users/apple/Documents/treasure/src/components/NavBarEditModeMobile/stylesMobile.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/scaleAction.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/createButtonAction.js",[],[],"/Users/apple/Documents/treasure/src/components/NavBarEditModeMobile/index.js",["1410","1411","1412","1413"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.scss\";\nimport AccountComponent from \"../AccountComponent\";\nimport uploadImg from \"../../assets/images/marketplace/upload.svg\";\nimport defaultBanner from \"../../assets/images/marketplace/navbar_banner.jpg\";\nimport { customStylesMobile } from \"./stylesMobile\";\nimport useHandleCustomer from \"../../hooks/customer/useHandleCustomer\";\nimport { customStylesTablet } from \"./stylesTablet\";\nimport useWindowDimensions from \"../../hooks/useWidowDimensions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport ACTIONS from \"redux/action\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst NavBarEditModeMobile = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const user = useSelector(selectUser);\n  const fileRef = useRef();\n  const [banner, setBanner] = useState();\n  const handleCustomer = useHandleCustomer();\n  const [userInfo, setUserInfo] = useState({});\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 450;\n  const isDark = theme === \"dark\";\n\n  useEffect(() => {\n    setBanner(user?.banner?.length ? user?.banner : defaultBanner);\n  }, [user]);\n\n  const uploadImage = (event) => {\n    let reader = new FileReader();\n    reader.readAsDataURL(event?.target?.files[0]);\n    reader.onload = function () {\n      setBanner(reader.result);\n      ACTIONS.SET_ACCOUNT_BANNER_IMAGE(dispatch, reader.result);\n    };\n  };\n\n  const onSave = () => {\n    const { account, linkList, avatar } = userInfo;\n    handleCustomer.updateInfo({\n      name: account,\n      links: linkList,\n      avatar: avatar,\n      banner: banner,\n    });\n    onClose();\n  };\n\n  const onCancel = () => {\n    onClose();\n  };\n\n  return (\n    <Modal\n      isModalOpen={isOpen}\n      handleClose={onClose}\n      custom\n      className=\"max-h-[586px]\"\n    >\n      <div className={\"editModal\"}>\n        <AccountComponent isEditMode={true} setUserInfo={setUserInfo} />\n\n        <div\n          className={\"uploadImg\"}\n          onClick={() => fileRef?.current?.click()}\n          style={{ backgroundImage: `url(${banner})` }}\n        >\n          <img src={uploadImg} alt={\"\"} />\n          <p>Upload baner image</p>\n          <input\n            type={\"file\"}\n            ref={fileRef}\n            hidden\n            multiple\n            onChange={uploadImage}\n          />\n        </div>\n      </div>\n\n      <div className={\"editModal__buttons\"}>\n        <div className={\"account__save account__cancel\"} onClick={onCancel}>\n          Cancel\n        </div>\n        <div className={\"account__save\"} onClick={onSave}>\n          Save\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NavBarEditModeMobile;\n","/Users/apple/Documents/treasure/src/utils/index.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/rewardAction.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/nftAction.js",[],[],"/Users/apple/Documents/treasure/src/redux/action/alertAction.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useHandleTresrStaking.js",["1414","1415"],[],"import { useMemo } from \"react\";\nimport { ethers } from \"ethers\";\nimport AirdropApi from \"../../api/AirdropApi\";\nimport useHandleToastAlert from \"../alert/useHandleToastAlert\";\nimport { hexToNumber } from \"../../utils/blockchain\";\nimport { nowUnix, sleep } from \"../../utils\";\nimport useHandleNFT from \"./useHandleNFT\";\nimport {\n  ALERT_STATUS_FAILURE,\n  ALERT_STATUS_SUCCESS,\n  STAKE_TRESR,\n  UNSTAKE_TRESR,\n} from \"../../constant/alert\";\nimport useHandleRewards from \"./useHandleRewards\";\nimport ACTIONS from \"redux/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectTresrBalance,\n  selectTresrStakedBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport {\n  useContractTresrCoinWithSigner,\n  useContractTresrStakingCoinWithSigner,\n} from \"./useHandleContracts\";\n\nexport default function useHandleTresrStaking() {\n  const user = useSelector(selectUser);\n  const tresrBalance = useSelector(selectTresrBalance);\n  const tresrStakedBalance = useSelector(selectTresrStakedBalance);\n  const dispatch = useDispatch();\n\n  const handleToastAlert = useHandleToastAlert();\n  const handleNFT = useHandleNFT();\n  const handleRewards = useHandleRewards();\n  const handleContractTresrCoinWithSigner = useContractTresrCoinWithSigner();\n  const handleContractTresrStakingCoinWithSigner =\n    useContractTresrStakingCoinWithSigner();\n\n  const approveTRESR = async (value) => {\n    if (value > tresrBalance) return handleToastAlert.error(\"Empty balance\");\n\n    const balanceWei = ethers.utils.parseUnits(value.toString(), \"ether\");\n    if (!+balanceWei) return handleToastAlert.error(\"Empty balance\");\n    const contractTresrCoinWithSigner = await handleContractTresrCoinWithSigner;\n    return contractTresrCoinWithSigner\n      .approve(process.env.REACT_APP_TRESR_STAKING_ADDRESS, balanceWei)\n      .then(async (tx) => {\n        await tx.wait();\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n        return true;\n      })\n      .catch((err) => {\n        throw err;\n      });\n  };\n\n  const getTresrStaked = async () => {\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .getStaked(user?.wallet_id)\n      .then((tx) => hexToNumber(tx?._hex) / 10 ** 18)\n      .then((balance) => {\n        ACTIONS.SET_BALANCE_TRESR_STAKED(dispatch, balance);\n        return balance;\n      })\n      .catch(() => null);\n  };\n\n  const getTresrTotalStaked = async () => {\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .totalStaked()\n      .then((tx) => hexToNumber(tx?._hex) / 10 ** 18)\n      .then((balance) => {\n        ACTIONS.SET_BALANCE_TRESR_STAKED_ALL(dispatch, balance);\n        return balance;\n      })\n      .catch(() => null);\n  };\n\n  const getTresrRewardsPerSec = async () => {\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .getRewardPerSecond(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_TRESR_REWARDS_PER_SEC(\n          dispatch,\n          ethers.utils.formatEther(hexToNumber(tx?._hex)?.toString())\n        );\n      })\n      .catch(() => null);\n  };\n\n  const getTresrStakedAll = async () => {\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .getStakedAll()\n      .then((tx) => hexToNumber(tx?._hex) / 10 ** 18)\n      .catch(() => null);\n  };\n\n  const getveTresrShareP = async () => {\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .portion(user?.wallet_id)\n      .then((tx) => {\n        ACTIONS.SET_VETRESR_SHARE_P(dispatch, hexToNumber(tx?._hex) / 1e34);\n      })\n      .catch(() => null);\n  };\n\n  const getTotalEarned = async () => {\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .getReward(nowUnix())\n      .then((tx) => {\n        ACTIONS.SET_BALANCE_TOTAL_EARNED(\n          dispatch,\n          +ethers.utils.formatEther(hexToNumber(tx?._hex)?.toString())\n        );\n      })\n      .catch(() => null);\n  };\n\n  const stakeTresr = async (value) => {\n    if (value > tresrBalance) return handleToastAlert.error(\"Empty balance\");\n\n    const balanceWei = ethers.utils.parseUnits(value.toString(), \"ether\");\n    if (!+balanceWei) return handleToastAlert.error(\"Empty balance\");\n\n    // const isApprove = await approveTRESR(balanceWei);\n    // if (!isApprove) return null;\n\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .stake(balanceWei)\n      .then(async (tx) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"PENDING\",\n          action: \"stakeTRESR\",\n          description: \"stakeTRESR\",\n          tx: JSON.stringify(tx),\n        });\n\n        await tx.wait();\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n        // await sleep(15);\n\n        getTresrStaked();\n        getTresrRewardsPerSec();\n        getTotalEarned();\n        getveTresrShareP();\n        handleRewards.getVeTresrBonusReward();\n        handleNFT.balanceOfTRESR(user?.wallet_id);\n\n        handleToastAlert.success(\"$TRESR staked\");\n\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_SUCCESS,\n          STAKE_TRESR(true, value)\n        );\n      })\n      .catch((err) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"ERROR\",\n          action: \"stakeTRESR\",\n          error: JSON.stringify(err),\n        });\n\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          STAKE_TRESR(false, value)\n        );\n\n        return null;\n      });\n  };\n\n  const unstakeTresr = async (value) => {\n    if (value > tresrStakedBalance)\n      return handleToastAlert.error(\"Empty staking balance\");\n\n    const amountWei = ethers.utils.parseUnits(value.toString(), \"ether\");\n    if (!+amountWei) return handleToastAlert.error(\"Empty staking balance\");\n\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .unstake(amountWei)\n      .then(async (tx) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"PENDING\",\n          action: \"unstakeTRESR\",\n          description: \"unstakeTRESR\",\n          tx: JSON.stringify(tx),\n        });\n\n        await tx.wait();\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n        // await sleep(15);\n\n        getTresrStaked();\n        getTresrRewardsPerSec();\n        getTotalEarned();\n        getveTresrShareP();\n        handleRewards.getVeTresrBonusReward();\n        handleNFT.balanceOfTRESR(user?.wallet_id);\n\n        handleToastAlert.success(\"$TRESR unstaked\");\n\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_SUCCESS,\n          UNSTAKE_TRESR(true, value)\n        );\n      })\n      .catch((err) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"ERROR\",\n          action: \"unstakeTRESR\",\n          error: JSON.stringify(err),\n        });\n\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          UNSTAKE_TRESR(false, value)\n        );\n\n        return null;\n      });\n  };\n\n  return {\n    getTresrStaked,\n    getTresrTotalStaked,\n    getTresrRewardsPerSec,\n    getTotalEarned,\n    getTresrStakedAll,\n    stakeTresr,\n    unstakeTresr,\n    approveTRESR,\n    getveTresrShareP,\n  };\n}\n","/Users/apple/Documents/treasure/src/api/Base.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/WalletConnectModal/index.js",["1416"],[],"import React from \"react\";\nimport \"./style.scss\";\nimport metamaskImg from \"../../../../assets/images/metamask.svg\";\nimport walletConnectImg from \"../../../../assets/images/walletConnect.svg\";\nimport avaxImg from \"../../../../assets/images/avax_blue_img.svg\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst WalletConnectModal = ({\n  isOpen,\n  onClose,\n  connectMetamask,\n  connectWalletConnect,\n}) => {\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 750;\n  const handleConnectMetamask = () => {\n    connectMetamask();\n    onClose();\n  };\n\n  const handleConnectWalletConnect = () => {\n    connectWalletConnect();\n    onClose();\n  };\n\n  return (\n    <Modal\n      handleClose={onClose}\n      isModalOpen={isOpen}\n      withCrossIcon\n      className=\"px-[20px] py-[40px] h-[370px] max-h-[366px] max-w-[458px]\"\n    >\n      <p className=\"walletConnect__title\">Connect your wallet</p>\n\n      <div className=\"walletConnect\">\n        <button onClick={handleConnectMetamask}>\n          <img src={metamaskImg} alt=\"\" />\n          MetaMask\n        </button>\n        <button onClick={handleConnectMetamask}>\n          <img src={avaxImg} alt={\"\"} />\n          Avalanche Core\n        </button>\n        <button onClick={handleConnectWalletConnect}>\n          <img src={walletConnectImg} alt={\"\"} />\n          WalletConnect\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default WalletConnectModal;\n","/Users/apple/Documents/treasure/src/components/AccountComponent/index.js",[],[],"/Users/apple/Documents/treasure/src/constant/navigation.js",["1417"],[],"import { NFKEY_COLLECTION_ADDRESS } from \"./blockchain\";\n\nexport const MARKETPLACE = \"Marketplace\";\nexport const DEFI_GAME = \"Defi Game\";\n\nexport const NAVIGATION_LIST = [\n  {\n    label: MARKETPLACE,\n    path: `http://genadrop-clone.netlify.app/`,\n    isUser: true,\n    isToken: false,\n  },\n  { label: DEFI_GAME, path: \"/game\", isUser: true, isToken: true },\n];\n\nexport const FILTER_ALL = \"all\";\nexport const FILTER_ACTIVE = \"active\";\nexport const FILTER_INACTIVE = \"inactive\";\n\nexport const DASHBOARD_FILTERS_DEFAULT = {\n  label: \"All Keys\",\n  value: FILTER_ALL,\n};\nexport const DASHBOARD_FILTERS = [\n  { label: \"All Keys\", value: FILTER_ALL },\n  { label: \"Active\", value: FILTER_ACTIVE },\n  { label: \"Inactive\", value: FILTER_INACTIVE },\n];\n\nexport const SORT_HIGHEST_KEY_LEVEL = \"highest_key_level\";\nexport const SORT_LOWEST_KEY_LEVEL = \"lowest_key_level\";\nexport const SORT_HIGHEST_TOKENID = \"highest_tokenid\";\nexport const SORT_LOWEST_TOKENID = \"lowest_tokenid\";\n// export const SORT_HIGHEST_TRESR_TIER = 'highest_treasure_tier';\n// export const SORT_LOWEST_TRESR_TIER = 'lowest_treasure_tier';\n// export const SORT_DATE_NEWEST = 'date_newest';\n// export const SORT_DATE_OLDEST = 'date_oldest';\n\nexport const DASHBOARD_DROPDOWN_ITEMS_DEFAULT = {\n  label: \"Highest TokenId\",\n  value: SORT_HIGHEST_TOKENID,\n};\nexport const DASHBOARD_DROPDOWN_ITEMS = [\n  { label: \"Highest Key Level\", value: SORT_HIGHEST_KEY_LEVEL },\n  { label: \"Lowest Key Level\", value: SORT_LOWEST_KEY_LEVEL },\n  { label: \"Highest TokenId\", value: SORT_HIGHEST_TOKENID },\n  { label: \"Lowest TokenId\", value: SORT_LOWEST_TOKENID },\n  // {label: 'Highest Treasure Tier', value: SORT_HIGHEST_TRESR_TIER},\n  // {label: 'Lowest Treasure Tier', value: SORT_LOWEST_TRESR_TIER},\n  // {label: 'Date Added (Newest)', value: SORT_DATE_NEWEST},\n  // {label: 'Date Added (Oldest)', value: SORT_DATE_OLDEST},\n];\n\nexport const DASHBOARD_TAB_MENU_GAME = \"game\";\nexport const DASHBOARD_TAB_MENU_DASHBOARD = \"dashboard\";\nexport const DASHBOARD_TAB_MENU_FAQ = \"faq\";\nexport const DASHBOARD_TAB_MENU_GAME_LINK = `/${DASHBOARD_TAB_MENU_GAME}`;\nexport const DASHBOARD_TAB_MENU_DASHBOARD_LINK = `/${DASHBOARD_TAB_MENU_GAME}/${DASHBOARD_TAB_MENU_DASHBOARD}`;\nexport const DASHBOARD_TAB_MENU_FAQ_LINK = `/${DASHBOARD_TAB_MENU_GAME}/${DASHBOARD_TAB_MENU_FAQ}`;\nexport const DASHBOARD_TAB_MENU_ITEMS = [\n  { label: \"Key Rewards\", value: DASHBOARD_TAB_MENU_GAME },\n  { label: \"Bonus Rewards\", value: DASHBOARD_TAB_MENU_DASHBOARD },\n  // {label: 'FAQs', value: DASHBOARD_TAB_MENU_FAQ},\n];\n\nexport const COLLECTION_ACTIVITY = \"activity\";\nexport const COLLECTION_ALL_ITEMS = \"allItems\";\n","/Users/apple/Documents/treasure/src/constant/approveLoadingModal.js",[],[],"/Users/apple/Documents/treasure/src/components/NavBarEditMode/index.js",["1418"],[],"import React, { useRef, useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport { customStyles } from \"./styles\";\nimport uploadImg from \"../../assets/images/marketplace/upload.svg\";\nimport AccountComponent from \"../AccountComponent\";\nimport defaultBanner from \"../../assets/images/marketplace/navbar_banner.jpg\";\nimport useHandleCustomer from \"../../hooks/customer/useHandleCustomer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport ACTIONS from \"redux/action\";\nimport Modal from \"storybook/atom/Modal/modal\";\n// import Modal from \"react-modal\";\n\nconst NavBarEditMode = ({ isOpen, onClose }) => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const fileRef = useRef();\n  const [banner, setBanner] = useState();\n  const handleCustomer = useHandleCustomer();\n  const [userInfo, setUserInfo] = useState({});\n\n  useEffect(() => {\n    setBanner(user?.banner?.length ? user?.banner : defaultBanner);\n  }, [user]);\n\n  const uploadImage = (event) => {\n    let reader = new FileReader();\n    reader.readAsDataURL(event?.target?.files[0]);\n    reader.onload = function () {\n      setBanner(reader.result);\n      ACTIONS.SET_ACCOUNT_BANNER_IMAGE(dispatch, reader.result);\n    };\n  };\n\n  const onSave = () => {\n    const { account, linkList, avatar } = userInfo;\n    handleCustomer.updateInfo({\n      name: account,\n      links: linkList,\n      avatar: avatar,\n      banner: banner,\n    });\n    onClose();\n  };\n\n  const onCancel = () => {\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal\n        isModalOpen={isOpen}\n        handleClose={onClose}\n        className={`customNavbarEditModal`}\n        bgImg={banner}\n      >\n        <div className={\"editModal\"}>\n          <AccountComponent isEditMode={true} setUserInfo={setUserInfo} />\n\n          <div\n            className={\"uploadImg\"}\n            onClick={() => fileRef?.current?.click()}\n          >\n            <img src={uploadImg} alt={\"\"} />\n            <p>Upload baner image</p>\n            <input\n              type={\"file\"}\n              ref={fileRef}\n              hidden\n              multiple\n              onChange={uploadImage}\n            />\n          </div>\n        </div>\n        <div className={\"editModal__buttons\"}>\n          <div className={\"account__save account__cancel\"} onClick={onCancel}>\n            Cancel\n          </div>\n          <div className={\"account__save\"} onClick={onSave}>\n            Save\n          </div>\n        </div>\n      </Modal>\n      {/* {isOpen && (\n        <div className={\"editModal__buttons\"}>\n          <div className={\"account__save account__cancel\"} onClick={onCancel}>\n            Cancel\n          </div>\n          <div className={\"account__save\"} onClick={onSave}>\n            Save\n          </div>\n        </div>\n      )} */}\n    </>\n  );\n};\n\nexport default NavBarEditMode;\n","/Users/apple/Documents/treasure/src/components/common/MarketplaceButton/index.js",[],[],"/Users/apple/Documents/treasure/src/storybook/atom/Icon/index.jsx",[],[],"/Users/apple/Documents/treasure/src/components/common/CustomDropdown/index.js",[],[],"/Users/apple/Documents/treasure/src/components/FAQsPage/FAQsItem/index.js",[],[],"/Users/apple/Documents/treasure/src/hooks/useCountdown.js",["1419","1420"],[],"import { useEffect, useState } from \"react\";\nimport useTimer from \"hooks/useTimer\";\n\nconst useCountdown = (targetDate) => {\n  const countDownDate = targetDate;\n  const { timestamp } = useTimer();\n  const [countDown, setCountDown] = useState(0);\n\n  useEffect(() => {\n    const currentTimestamp = parseInt(Date.now() / 1000);\n    if (currentTimestamp > countDownDate) {\n      if (countDown != 0) setCountDown(0);\n    } else setCountDown(countDownDate - parseInt(Date.now() / 1000));\n  }, [timestamp]);\n  return getReturnValues(countDown);\n};\n\nconst getReturnValues = (countDown) => {\n  // calculate time left\n  const daysValue = parseInt(countDown / (3600 * 24));\n  const hoursValue = parseInt(countDown / 3600) % 24;\n  const minutesValue = parseInt(countDown / 60) % 60;\n  const secondsValue = countDown % 60;\n\n  const hours = hoursValue < 10 ? `0${hoursValue}` : hoursValue;\n  const minutes = minutesValue < 10 ? `0${minutesValue}` : minutesValue;\n  const seconds = secondsValue < 10 ? `0${secondsValue}` : secondsValue;\n  const days = daysValue < 10 ? `0${daysValue}` : daysValue;\n  return [\n    hours,\n    minutes,\n    seconds,\n    hoursValue,\n    minutesValue,\n    secondsValue,\n    days,\n    daysValue,\n  ];\n};\n\nexport { useCountdown };\n","/Users/apple/Documents/treasure/src/components/common/Modals/LoadingMintModal/index.js",["1421"],["1422"],"import React, { useEffect, useState } from \"react\";\nimport {\n  CREATE_BUTTON_APPROVE,\n  CREATE_BUTTON_APPROVING,\n  CREATE_BUTTON_AUCTION,\n  CREATE_BUTTON_MINT,\n  CREATE_BUTTON_MINTING,\n  CREATE_BUTTON_SALE,\n  CREATE_BUTTON_STARTING,\n  CREATE_BUTTON_UPLOADING,\n  CREATE_STATUS_IS_APPROVED,\n  CREATE_STATUS_IS_MINTED,\n  CREATE_STATUS_IS_PUT_ON_SALE,\n  CREATE_STATUS_IS_UPLOADED,\n  CREATE_STATUS_IS_UPLOADING,\n} from \"../../../../constant/createPage\";\nimport loaderUploading from \"../../../../assets/images/loader_uploading.svg\";\nimport loaderMinting from \"../../../../assets/images/loader_minting.svg\";\nimport loaderApprove from \"../../../../assets/images/loader_approve.svg\";\nimport loaderSale from \"../../../../assets/images/loader_sale.svg\";\nimport \"./style.scss\";\nimport MarketplaceButton from \"../../MarketplaceButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport useHandleLoader from \"../../../../hooks/loader/useHandleLoader\";\nimport useHandleNFT from \"../../../../hooks/blockchain/useHandleNFT\";\nimport { SUCCESS_CREATE_TEST } from \"../../../../constant/singleNFTPage\";\nimport { customStyles } from \"./customStyles\";\nimport { useDispatch } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst LoadingMintModal = ({\n  isOpen,\n  onClose,\n  status,\n  isAuction,\n  onMint,\n  onApprove,\n  onPutOnSale,\n  setLoadingStatus,\n  tokenId,\n}) => {\n  const dispatch = useDispatch();\n  const [image, setImage] = useState(loaderUploading);\n  const [buttonStatus, setButtonStatus] = useState(CREATE_BUTTON_UPLOADING);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const navigate = useNavigate();\n  const handleLoader = useHandleLoader();\n  const handleNFT = useHandleNFT();\n\n  const loadingImages = {\n    [CREATE_STATUS_IS_UPLOADING]: loaderUploading,\n    [CREATE_STATUS_IS_UPLOADED]: loaderMinting,\n    [CREATE_STATUS_IS_MINTED]: loaderApprove,\n    [CREATE_STATUS_IS_APPROVED]: loaderSale,\n  };\n\n  const buttonStatuses = {\n    [CREATE_STATUS_IS_UPLOADING]: CREATE_BUTTON_UPLOADING,\n    [CREATE_STATUS_IS_UPLOADED]: CREATE_BUTTON_MINT,\n    [CREATE_STATUS_IS_MINTED]: CREATE_BUTTON_APPROVE,\n    [CREATE_STATUS_IS_APPROVED]: isAuction\n      ? CREATE_BUTTON_AUCTION\n      : CREATE_BUTTON_SALE,\n  };\n\n  const onCloseModal = async () => {\n    onClose();\n\n    if (\n      status === CREATE_STATUS_IS_MINTED ||\n      status === CREATE_STATUS_IS_APPROVED\n    ) {\n      ACTIONS.SET_CREATE_BUTTON(\n        dispatch,\n        false,\n        {},\n        true,\n        SUCCESS_CREATE_TEST({ tokenId })\n      );\n      navigate(\n        `/marketplace/${process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS}/${tokenId}`\n      );\n      await handleLoader.loaderWrapper(\n        () =>\n          handleNFT.reloadNFTItemBalance(\n            process.env?.REACT_APP_COMMUNITY_COLLECTION_ADDRESS,\n            tokenId\n          ),\n        2\n      );\n    }\n\n    setIsDisabled(true);\n    setLoadingStatus(CREATE_STATUS_IS_UPLOADING);\n  };\n\n  const onNextStep = () => {\n    if (status === CREATE_STATUS_IS_UPLOADED) {\n      setButtonStatus(CREATE_BUTTON_MINTING);\n      setIsDisabled(true);\n      onMint();\n    } else if (status === CREATE_STATUS_IS_MINTED) {\n      setButtonStatus(CREATE_BUTTON_APPROVING);\n      setIsDisabled(true);\n      onApprove();\n    } else if (status === CREATE_STATUS_IS_APPROVED) {\n      setButtonStatus(CREATE_BUTTON_STARTING);\n      setIsDisabled(true);\n      onPutOnSale();\n    }\n  };\n\n  useEffect(() => {\n    setImage(loadingImages[status]);\n    setButtonStatus(buttonStatuses[status]);\n\n    if (\n      status === CREATE_STATUS_IS_UPLOADED ||\n      status === CREATE_STATUS_IS_MINTED ||\n      status === CREATE_STATUS_IS_APPROVED\n    ) {\n      setIsDisabled(false);\n    }\n\n    if (status === CREATE_STATUS_IS_PUT_ON_SALE) onCloseModal();\n  }, [status]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Modal isModalOpen={isOpen} className=\"customMintModal\">\n      <div className=\"loadingMintModal__background\">\n        <div\n          className={`loadingMintModal__image \n            ${\n              status === CREATE_STATUS_IS_UPLOADED\n                ? \"loadingMintModal__image--isMinted\"\n                : \"\"\n            }\n            ${\n              status === CREATE_STATUS_IS_MINTED\n                ? \"loadingMintModal__image--isApproved\"\n                : \"\"\n            }\n            ${\n              status === CREATE_STATUS_IS_APPROVED\n                ? \"loadingMintModal__image--isOnSale\"\n                : \"\"\n            }\n            ${!isDisabled ? \"loadingMintModal__image--noSpinner\" : \"\"}\n            `}\n        >\n          <img src={image} alt={\"wait...\"} />\n        </div>\n\n        <div\n          className={`loadingMintModal__wrapper ${\n            !isDisabled ? \"loadingMintModal__wrapper--blurred\" : \"\"\n          }`}\n        >\n          <div className=\"loadingMintModal__text\">\n            <p className=\"loadingMintModal__text--big\">Upload</p>\n            <p className=\"loadingMintModal__text--small\">\n              Uploading of all media assets and metadata to IPFS\n            </p>\n          </div>\n\n          <div className=\"loadingMintModal__text\">\n            <p className=\"loadingMintModal__text--big\">Mint</p>\n            <p className=\"loadingMintModal__text--small\">\n              Send transaction to create your NFT\n            </p>\n          </div>\n\n          <div className=\"loadingMintModal__text\">\n            <p className=\"loadingMintModal__text--big\">Approve</p>\n            <p className=\"loadingMintModal__text--small\">\n              This transaction is conducted only once per collection\n            </p>\n          </div>\n\n          <div className=\"loadingMintModal__text\">\n            <p className=\"loadingMintModal__text--big\">\n              {isAuction ? \"Put on Auction\" : \"Put on Listing\"}\n            </p>\n            <p className=\"loadingMintModal__text--small\">\n              {isAuction\n                ? \"Sign message to start the auction\"\n                : \"Sign message to start the listing\"}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"loadingMintModal__buttons\">\n          <div\n            className={`loadingMintModal__buttons--note ${\n              !isDisabled ? \"loadingMintModal__buttons--note__visible\" : \"\"\n            }`}\n          >\n            Click to {buttonStatus}\n          </div>\n\n          <MarketplaceButton\n            isNormal\n            title=\"Cancel\"\n            onClick={onCloseModal}\n            disabled={isDisabled}\n          />\n          <MarketplaceButton\n            title={buttonStatus}\n            onClick={onNextStep}\n            isBlue\n            disabled={isDisabled}\n            isAnimated={!isDisabled}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default LoadingMintModal;\n","/Users/apple/Documents/treasure/src/components/HomePage/ConnectWallet/index.js",[],["1423","1424"],"/Users/apple/Documents/treasure/src/components/HomePage/HomeZoneListNew/index.js",["1425","1426","1427"],["1428","1429"],"import React, { useEffect, useState } from \"react\";\nimport useWindowDimensions from \"../../../hooks/useWidowDimensions\";\nimport useHandleNFT from \"../../../hooks/blockchain/useHandleNFT\";\nimport TransactionLoadingModal from \"../../common/Modals/TransactionLoadingModal\";\nimport useHandleModal from \"../../../hooks/dom/useHandleModal\";\nimport SuccessMintModal from \"../../common/Modals/SuccessMintModal\";\nimport useGetTokenPrice from \"hooks/blockchain/useGetTokenPrice\";\nimport useHandleCustomer from \"../../../hooks/customer/useHandleCustomer\";\nimport MintConfirmationModal from \"components/common/Modals/MintConfirmationModal\";\nimport { useSelector } from \"react-redux\";\nimport { selectAvaxBalance } from \"redux/slice/balanceSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport HomeZoneListsNew from \"storybook/molecule/HomeZoneListNew/homeZoneListNew\";\nimport \"./style.scss\";\n\nconst HomeZoneListNew = ({ animationCallback, isLoadedList }) => {\n  const theme = useSelector(selectTheme);\n  const user = useSelector(selectUser);\n  const avaxBalance = useSelector(selectAvaxBalance);\n\n  const [isZone1, setIsZone1] = useState(false);\n  const [isZone2, setIsZone2] = useState(false);\n  const [isZone3, setIsZone3] = useState(false);\n  const [isZone4, setIsZone4] = useState(false);\n\n  const [zone1Commission, setZone1Commission] = useState(0);\n  const [zone2Commission, setZone2Commission] = useState(0);\n  const [zone3Commission, setZone3Commission] = useState(0);\n  const [zone4Commission, setZone4Commission] = useState(0);\n  const [zone5Commission, setZone5Commission] = useState(0);\n\n  const [zoneSumAmount, setZoneSumAmount] = useState(0);\n  const [zoneSumCommission, setZoneSumCommission] = useState(0);\n  const [zoneChecked, setZoneChecked] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n  ]);\n  const [zoneAmount, setZoneAmount] = useState([1, 1, 1, 1, 1]);\n  const [mintedTokensList, setMintedTokensList] = useState([]);\n\n  const windowDimensions = useWindowDimensions();\n  const handleNFT = useHandleNFT();\n  const handleCustomer = useHandleCustomer();\n  const handleTransactionLoadingModal = useHandleModal();\n  const handleSuccessMintModal = useHandleModal();\n  const handleMintConfirmationModal = useHandleModal();\n\n  const isMobile = windowDimensions?.width <= 1000;\n  const isDark = theme === \"dark\";\n  const MAX_TOKEN_PER_MINT = 40;\n  const [enoughFlag, setEnoughFlag] = useState(false);\n  const { getTokenPrice } = useGetTokenPrice();\n  const [AVAXPrice, setAVAXPrice] = useState(0);\n  const getAVAXPrice = async () => {\n    const auctionTokenRes = await getTokenPrice({\n      label: \"AVAX\",\n      value: \"avax\",\n      address: \"0x0000000000000000000000000000000000000000\",\n      coingecko_id: \"avalanche-2\",\n    });\n    setAVAXPrice(auctionTokenRes.price);\n  };\n\n  const getUserZones = async () => {\n    const merkle_data = await handleCustomer.getMerkleTree(user?.wallet_id);\n    const merkle_proof = merkle_data[0]?.proof;\n    const merkle_wl = {\n      whitelistAddress: merkle_data[0]?.whitelistAddress,\n      level: merkle_data[0]?.level,\n      zone1: merkle_data[0]?.zone1,\n      zone2: merkle_data[0]?.zone2,\n      zone3: merkle_data[0]?.zone3,\n      zone4: merkle_data[0]?.zone4,\n    };\n\n    handleNFT\n      .getAccountZone(user?.wallet_id, 1, merkle_proof, merkle_wl)\n      .then((res) => setIsZone1(res));\n    handleNFT\n      .getAccountZone(user?.wallet_id, 2, merkle_proof, merkle_wl)\n      .then((res) => setIsZone2(res));\n    handleNFT\n      .getAccountZone(user?.wallet_id, 3, merkle_proof, merkle_wl)\n      .then((res) => setIsZone3(res));\n    handleNFT\n      .getAccountZone(user?.wallet_id, 4, merkle_proof, merkle_wl)\n      .then((res) => setIsZone4(res));\n    handleNFT\n      .getAccountZone(user?.wallet_id, 1, merkle_proof, merkle_wl)\n      .then((res) => console.log(\"zone1\", res));\n\n    handleNFT\n      .getZoneCommission(user?.wallet_id, 1)\n      .then((res) => setZone1Commission(res / 10 ** 18));\n    handleNFT\n      .getZoneCommission(user?.wallet_id, 2)\n      .then((res) => setZone2Commission(res / 10 ** 18));\n    handleNFT\n      .getZoneCommission(user?.wallet_id, 3)\n      .then((res) => setZone3Commission(res / 10 ** 18));\n    handleNFT\n      .getZoneCommission(user?.wallet_id, 4)\n      .then((res) => setZone4Commission(res / 10 ** 18));\n    handleNFT\n      .getZoneCommission(user?.wallet_id, 5)\n      .then((res) => setZone5Commission(res / 10 ** 18));\n\n    animationCallback();\n  };\n\n  const calcSumCommission = () => {\n    return zoneAmount\n      ?.map((item, key) => {\n        if (key === 0) return +(item * zone1Commission).toFixed(2);\n        if (key === 1) return +(item * zone2Commission).toFixed(2);\n        if (key === 2) return +(item * zone3Commission).toFixed(2);\n        if (key === 3) return +(item * zone4Commission).toFixed(2);\n        if (key === 4) return +(item * zone5Commission).toFixed(2);\n        else return 0;\n      })\n      ?.filter((_, key) => zoneChecked[key])\n      ?.reduce((acc, val) => +(acc + val).toFixed(2), 0);\n  };\n\n  const calcSumAmount = () => {\n    return zoneAmount\n      ?.filter((_, key) => zoneChecked[key])\n      ?.reduce((acc, val) => acc + val, 0);\n  };\n\n  const onMint = async () => {\n    handleMintConfirmationModal.close();\n\n    if (zoneSumCommission * AVAXPrice > avaxBalance * AVAXPrice) {\n      setEnoughFlag(false);\n      handleSuccessMintModal.open();\n    } else {\n      setEnoughFlag(true);\n      handleTransactionLoadingModal.open();\n\n      const promiseList = [\n        { zone: 1, amount: zoneAmount[0] },\n        { zone: 2, amount: zoneAmount[1] },\n        { zone: 3, amount: zoneAmount[2] },\n        { zone: 4, amount: zoneAmount[3] },\n        { zone: 5, amount: zoneAmount[4] },\n      ].filter((item, key) => zoneChecked[key]);\n\n      // TODO: change this to invoke batchMint\n      // getcommission\n      let zones = promiseList.map((item) => item.zone);\n      let amounts = promiseList.map((item) => item.amount);\n\n      handleNFT\n        .batchMint(zones, amounts)\n        .then((res) => {\n          setMintedTokensList(\n            res\n              ?.flat(1)\n              ?.map((item) => parseInt(item?.topics[3], 16))\n              ?.filter((item) => !Number.isNaN(item))\n          );\n        })\n        .catch(() => null)\n        .finally(() => handleTransactionLoadingModal.close());\n\n      getUserZones();\n    }\n  };\n\n  useEffect(() => {\n    if (mintedTokensList?.length > 0) {\n      // TODO: should generalize if user addrses is explicitly\n      // given or get inside blockchain hook functions\n      handleNFT.loadNFTBalance(user?.wallet_id);\n      handleSuccessMintModal.open();\n    }\n  }, [mintedTokensList]);\n\n  useEffect(() => {\n    if (user?.wallet_id) getUserZones();\n    getAVAXPrice();\n  }, [user?.wallet_id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setZoneSumAmount(calcSumAmount());\n    setZoneSumCommission(calcSumCommission());\n  }, [zoneAmount, zoneChecked]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setZoneAmount([+isZone1, +isZone2, +isZone3, +isZone4, 1]);\n  }, [isZone1, isZone2, isZone3, isZone4]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (!isLoadedList) return null;\n  return (\n    <div className=\"homeZoneListNew\">\n      <HomeZoneListsNew\n        isDark={isDark}\n        isZone1={isZone1}\n        isZone2={isZone2}\n        isZone3={isZone3}\n        isZone4={isZone4}\n        zoneChecked={zoneChecked}\n        setZoneChecked={setZoneChecked}\n        zoneAmount={zoneAmount}\n        setZoneAmount={setZoneAmount}\n        zone2Commission={zone2Commission}\n        zone3Commission={zone3Commission}\n        zone4Commission={zone4Commission}\n        zone5Commission={zone5Commission}\n        zoneSumAmount={zoneSumAmount}\n        zoneSumCommission={zoneSumCommission}\n        handleMintConfirmationModal={handleMintConfirmationModal}\n      />\n      {handleTransactionLoadingModal.isActive && (\n        <TransactionLoadingModal\n          isOpen={handleTransactionLoadingModal.isActive}\n        />\n      )}\n      {handleMintConfirmationModal.isActive && (\n        <MintConfirmationModal\n          isOpen={handleMintConfirmationModal.isActive}\n          onClose={handleMintConfirmationModal.close}\n          onMint={onMint}\n        />\n      )}\n      {handleSuccessMintModal.isActive && (\n        <SuccessMintModal\n          isOpen={handleSuccessMintModal.isActive}\n          onClose={() => {\n            handleSuccessMintModal.close();\n            //if (enoughFlag) navigate(\"/game\");\n          }}\n          AVAXPrice={AVAXPrice}\n          enoughFlag={enoughFlag}\n          tokenIdList={mintedTokensList}\n          sumCommission={zoneSumCommission}\n          curAVAX={avaxBalance.toFixed(2)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HomeZoneListNew;\n","/Users/apple/Documents/treasure/src/components/NFTFooter/index.js",[],[],"/Users/apple/Documents/treasure/src/storybook/atom/Button/button.jsx",["1430"],[],"import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport Icon, { IconsNames } from \"../Icon/icon\";\n\nexport const ButtonCategoryTypes = {\n  primary: \"primary\",\n  secondary: \"secondary\",\n  outlined: \"outlined\",\n  shadow: \"shadow\",\n};\n\nexport const ButtonSizes = {\n  small: \"small\",\n  medium: \"medium\",\n  large: \"large\",\n};\n\nconst Button = ({\n  className,\n  variant,\n  size,\n  label,\n  iconPosition,\n  disabled,\n  iconName,\n  onClick,\n  ...props\n}) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className={classNames(\"button_wrapper\", {\n        buttonPrimary: variant === ButtonCategoryTypes.primary,\n        buttonSecondary: variant === ButtonCategoryTypes.secondary,\n        buttonOutlined: variant === ButtonCategoryTypes.outlined,\n        buttonShadow: variant === ButtonCategoryTypes.shadow,\n        buttonSmall: size === ButtonSizes.small,\n        buttonMedium: size === ButtonSizes.medium,\n        buttonLarge: size === ButtonSizes.large,\n        buttonDisabled: disabled,\n        [className]: Boolean(className),\n      })}\n      disabled={disabled}\n      {...props}\n    >\n      {iconPosition === \"start\" && iconName && (\n        <Icon iconName={iconName} className=\"iconStyle\" />\n      )}\n      {label ? label : \"\"}\n      {iconPosition === \"end\" && iconName && (\n        <Icon iconName={iconName} className=\"iconStyle\" />\n      )}\n    </button>\n  );\n};\n\nexport default Button;\n","/Users/apple/Documents/treasure/src/storybook/molecule/Tab/tab.jsx",["1431"],[],"import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\n\nexport const TabType = {\n  primary: \"primary\",\n  secondary: \"secondary\",\n};\n\nconst Tab = ({ tabList = [], active, onClick, variant }) => {\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 450;\n  const [activeTab, setActiveTab] = useState();\n  const [activeKey, setActiveKey] = useState();\n\n  useEffect(() => {\n    setActiveTab(active ? active : tabList?.[0]);\n  }, [tabList, active]);\n\n  useEffect(() => {\n    if (activeTab) {\n      if (variant === \"primary\") {\n        onClick(activeTab);\n      }\n      if (variant === \"secondary\") {\n        onClick(activeTab, activeKey);\n      }\n    }\n  }, [activeTab]);\n\n  return (\n    <div\n      className={classNames(\"tab__wrapper\", {\n        primary__tab__wrapper: variant === TabType.primary,\n        secondary__tab__wrapper: variant === TabType.secondary,\n      })}\n    >\n      {tabList.map((filter, key) => (\n        <div\n          key={key}\n          className={classNames(\"\", {\n            \"primary__tab__wrapper--item\": variant === TabType.primary,\n            \"secondary__tab__wrapper--item\": variant === TabType.secondary,\n            active: JSON?.stringify(filter) === JSON?.stringify(activeTab),\n            isMobileTab:\n              isMobile && variant === TabType.secondary && filter === activeTab,\n          })}\n          onClick={() => {\n            setActiveTab(filter);\n            setActiveKey(key);\n          }}\n        >\n          {filter.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Tab;\n","/Users/apple/Documents/treasure/src/storybook/molecule/Navbar/navbar.jsx",["1432"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.scss\";\nimport Icon from \"storybook/atom/Icon/icon\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { MARKETPLACE, NAVIGATION_LIST } from \"constant/navigation\";\nimport { setActiveNavLink } from \"utils\";\nimport Profile from \"../Profile/profile\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport logoLightIcon from \"../../atom/Icon/svg/logo-dark.svg\";\nimport logoDarkIcon from \"../../atom/Icon/svg/logo-dark.svg\";\nimport Icon_Wallet from \"../../atom/Icon/svg/icon-wallet.svg\";\nimport avatarPlaceholder from \"../../atom/Icon/svg/avatar.jpg\";\nimport AccountCard from \"../AccountCard/accountCard\";\nimport TotalRewardTab from \"../TotalRewardTab/totalRewardTab\";\nimport Faucet from \"../Faucet/faucet\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst Navbar = ({\n  theme,\n  totalTRESRBalance,\n  loaderComponentActive,\n  user,\n  isDark,\n  balanceAvax,\n  openConnectWalletModal,\n  titleWalletAddress,\n  navigateToAccount,\n  avaxBalance,\n  balanceSmrtr,\n  balanceTresr,\n  veClaimedTresr,\n  balanceLpSMRTRAVAX,\n  balanceLpTRESRAVAX,\n  onDisconnect,\n  onGetTresr,\n  onGetSmrtr,\n  onGetTresrLP,\n  onGetSmrtrLP,\n  handleLoader,\n  handleAuth,\n}) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const walletRef = useRef();\n  const windowDimensions = useWindowDimensions();\n  const isMobile = windowDimensions?.width <= 850;\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [isAccountOpen, setIsAccountOpen] = useState(false);\n  const [showFaucet, toggleFaucet] = useState(false);\n  const handleToggleFaucet = () => toggleFaucet(!showFaucet);\n\n  const onHome = () => navigate(\"/\");\n\n  const onToggleAccount = () => {\n    if (!user?.wallet_id) handleLoader.loaderWrapper(handleAuth.login, 2);\n    else setIsAccountOpen(!isAccountOpen);\n  };\n\n  useEffect(() => {\n    if (window) {\n      const walletContainer = document.getElementsByClassName(\n        \"profileBarAccountOpen\"\n      );\n      document?.addEventListener(\"click\", (event) => {\n        if (!walletRef?.current?.contains(event?.target)) {\n          setIsAccountOpen(false);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <>\n      <header className=\"Header\">\n        {!isMobile && (\n          <div className=\"Header__wrapper desktop\">\n            <div className=\"Header__Container\">\n              <div className=\"Header__nav\">\n                <img\n                  src={theme === \"dark\" ? logoLightIcon : logoDarkIcon}\n                  alt=\"\"\n                  onClick={onHome}\n                />\n                <nav>\n                  {NAVIGATION_LIST?.map((link) => {\n                    return (\n                      <NavLink\n                        className={setActiveNavLink}\n                        to={link?.path}\n                        key={link?.label}\n                        target={\n                          link?.label === MARKETPLACE ? \"_blank\" : \"_self\"\n                        }\n                      >\n                        {link.label}\n                        {location?.pathname === link?.path && (\n                          <div className=\"Header__nav--decorator\" />\n                        )}\n                      </NavLink>\n                    );\n                  })}\n                </nav>\n              </div>\n              <div className=\"Header_Controls\">\n                {location?.pathname === \"/game\" && (\n                  <TotalRewardTab\n                    totalTRESRBalance={totalTRESRBalance}\n                    loaderComponentActive={loaderComponentActive}\n                    tooltipTitle=\"Est for all keys\"\n                    tooltipPosition=\"bottom\"\n                  />\n                )}\n                <Profile\n                  user={user}\n                  isDark={isDark}\n                  balanceAvax={balanceAvax}\n                  isAccountOpen={isAccountOpen}\n                  setIsAccountOpen={setIsAccountOpen}\n                  openConnectWalletModal={openConnectWalletModal}\n                  titleWalletAddress={titleWalletAddress}\n                  navigateToAccount={navigateToAccount}\n                  avaxBalance={avaxBalance}\n                  balanceSmrtr={balanceSmrtr}\n                  balanceTresr={balanceTresr}\n                  veClaimedTresr={veClaimedTresr}\n                  balanceLpSMRTRAVAX={balanceLpSMRTRAVAX}\n                  balanceLpTRESRAVAX={balanceLpTRESRAVAX}\n                  onDisconnect={onDisconnect}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        {isMobile && (\n          <div className=\"Header__wrapper mobile\">\n            <div className=\"firstHeaderRow\">\n              <img\n                src={theme === \"dark\" ? logoLightIcon : logoDarkIcon}\n                alt=\"\"\n                onClick={onHome}\n              />\n              <div className=\"firstHeaderRow--controls\">\n                <div className={\"Header__balance--container\"} ref={walletRef}>\n                  <button\n                    className={`${user?.wallet_id ? \"connected\" : \"\"} button`}\n                    style={{ background: \"none\" }}\n                    onClick={onToggleAccount}\n                  >\n                    {!!user ? (\n                      <img\n                        src={!!user?.avatar ? user?.avatar : avatarPlaceholder}\n                        className={\"Header__avatar\"}\n                        alt={\"\"}\n                      />\n                    ) : (\n                      <img\n                        src={Icon_Wallet}\n                        className={\"Header__avatar\"}\n                        alt={\"\"}\n                      />\n                    )}\n                  </button>\n                </div>\n                <div\n                  className=\"burger-menu\"\n                  onClick={() => setShowSidebar(!showSidebar)}\n                >\n                  <Icon\n                    iconName={theme === \"dark\" ? \"burgerDark\" : \"burgerLight\"}\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n            </div>\n            {showSidebar && (\n              <div className=\"Header__sidebar\">\n                <nav>\n                  {NAVIGATION_LIST.map((item, key) => (\n                    <NavLink\n                      className={setActiveNavLink}\n                      to={item.path}\n                      key={key}\n                      onClick={() => setShowSidebar(!showSidebar)}\n                      target={item?.label === MARKETPLACE ? \"_blank\" : \"_self\"}\n                    >\n                      <div className=\"flex flex-grow\">\n                        <span className=\"mr-8\"></span>\n                        {item.label}\n                      </div>\n                    </NavLink>\n                  ))}\n                </nav>\n                <Faucet\n                  user={user}\n                  showFaucet={showFaucet}\n                  handleToggleFaucet={handleToggleFaucet}\n                  onGetTresr={onGetTresr}\n                  onGetSmrtr={onGetSmrtr}\n                  onGetTresrLP={onGetTresrLP}\n                  onGetSmrtrLP={onGetSmrtrLP}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </header>\n      {isMobile && (\n        <Modal\n          isModalOpen={isAccountOpen}\n          handleClose={() => setIsAccountOpen(false)}\n        >\n          <AccountCard\n            isDark={isDark}\n            isMobile={isMobile}\n            user={user}\n            isAccountOpen={isAccountOpen}\n            navigateToAccount={navigateToAccount}\n            balanceAvax={avaxBalance}\n            balanceSmrtr={balanceSmrtr}\n            balanceTresr={balanceTresr}\n            veClaimedTresr={veClaimedTresr}\n            balanceLpSMRTRAVAX={balanceLpSMRTRAVAX}\n            balanceLpTRESRAVAX={balanceLpTRESRAVAX}\n            onDisconnect={onDisconnect}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/apple/Documents/treasure/src/storybook/atom/CustomAlert/customAlert.jsx",["1433"],[],"import React from \"react\";\nimport \"./style.scss\";\nimport {\n  ALERT_STATUS_FAILURE,\n  ALERT_STATUS_INFO,\n  ALERT_STATUS_SUCCESS,\n} from \"constant/alert\";\nimport Icon from \"../Icon/icon\";\n\nconst CustomAlert = ({\n  alertIsActive,\n  alertStatus,\n  alertImage,\n  alertText,\n  transactionHashBalance,\n  onClose,\n}) => {\n  const classNameStatus = {\n    [ALERT_STATUS_SUCCESS]: \"customAlert__success\",\n    [ALERT_STATUS_FAILURE]: \"customAlert__failure\",\n    [ALERT_STATUS_INFO]: \"customAlert__info\",\n  };\n\n  return (\n    <div\n      className={`customAlert ${\n        alertIsActive ? classNameStatus[alertStatus] : \"\"\n      }`}\n    >\n      <div className={\"customAlert__container\"}>\n        <div className={\"customAlert__content\"}>\n          {!!alertImage && (\n            <video\n              src={alertImage}\n              className={\"customAlert__image\"}\n              preload=\"metadata\"\n            />\n          )}\n          {!!alertText && <p className={\"customAlert__text\"}>{alertText}</p>}\n        </div>\n\n        <div className=\"customAlert__close\" onClick={onClose}>\n          <Icon iconName={\"cross\"} />\n        </div>\n        {classNameStatus[alertStatus] != \"customAlert__failure\" && (\n          <a\n            href={`https://testnet.snowtrace.io/tx/${transactionHashBalance}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{ textDecoration: \"none\" }}\n            className=\"customAlert__link\"\n            //className=\"singleCollectionPage__dropdown--link text-white\"\n          >\n            View on Snowtrace\n            <Icon iconName={\"viewImg\"} />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CustomAlert;\n","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardGameTab/index.js",["1434","1435","1436","1437"],[],"import React, { useState } from \"react\";\nimport { useCountdown } from \"../../../hooks/useCountdown\";\nimport DashboardTreasureTile from \"../DashboardTreasureTile\";\nimport useWindowDimensions from \"../../../hooks/useWidowDimensions\";\nimport DashboardNotWhitelisted from \"../DashboardNotWhitelisted\";\nimport HomeMint from \"../../HomePage/HomeMint\";\nimport useHandleNFT from \"../../../hooks/blockchain/useHandleNFT\";\nimport { BASE_REWARD, MAX_LEVEL } from \"../../../constant/blockchain\";\nimport DashboardKeyRewards from \"../DashboardKeyRewards\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectSmrtrBalance,\n  selectPoolAllocationBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport { selectLoaderComponentActive } from \"redux/slice/loaderSlice\";\nimport { selectTargetUpgradeDate } from \"redux/slice/targetSlice\";\nimport { selectWhitelist } from \"redux/slice/whiteListSlice\";\nimport RewardBox from \"storybook/molecule/RewardBox/rewardBox\";\n\nconst DashboardGameTab = ({\n  probToOpen,\n  onView,\n  amountUpgradeKey,\n  handleUpgradeModal,\n  handleTreasureModal,\n  handleTreasureWarningModal,\n  amountOpenChest,\n  onOpenDeactivateKeyModal,\n  onOpenActivateKeyModal,\n  onClaimBase,\n  onClaimAllBase,\n  onConnectWallet,\n  onViewTokenPage,\n  isAnimated,\n  setIsMaxUpgrades,\n  filterTokenList,\n  handleTransactionLoadingModal,\n  onClose,\n  onOpenWarningModal,\n}) => {\n  const user = useSelector(selectUser);\n  const whitelist = useSelector(selectWhitelist);\n  const targetUpgradeDate = useSelector(selectTargetUpgradeDate);\n  const loaderComponentActive = useSelector(selectLoaderComponentActive);\n  const nftSelected = useSelector(selectNftSelected);\n  const smrtrBalance = useSelector(selectSmrtrBalance);\n  const poolAllocationBalance = useSelector(selectPoolAllocationBalance);\n  const theme = useSelector(selectTheme);\n  // const [hours, minutes, seconds, hoursValue, minutesValue, secondsValue] =\n  //   useCountdown(targetUpgradeDate * 1000);\n  const navigate = useNavigate();\n\n  const isDark = theme === \"dark\";\n  const windowParams = useWindowDimensions();\n  const handleNFT = useHandleNFT();\n\n  const isMobile = windowParams?.width <= 640;\n  const isActive = !!nftSelected?.staked;\n  const balanceMonthlyTresr = nftSelected?.staked\n    ? +nftSelected?.tier * nftSelected?.tierTresr * BASE_REWARD * 30\n    : 0;\n  const lineWidth = (nftSelected?.tier / MAX_LEVEL) * 100;\n  const lineWidthPer = `${lineWidth}%`;\n  const isInsufficientBalance = smrtrBalance < amountUpgradeKey;\n  // const isTimeToUpgrade =\n  //   !isInsufficientBalance &&\n  //   !!(hoursValue > 0 || minutesValue > 0 || secondsValue > 0);\n  // const isUpgrade = !isInsufficientBalance && !isTimeToUpgrade;\n  const [totalTRESRBalance, setTotalTRESRBalance] = useState(0);\n\n  const [hours, minutes, seconds, hoursValue, minutesValue, secondsValue] =\n    useCountdown(targetUpgradeDate);\n  const isTimeToUpgrade =\n    !isInsufficientBalance &&\n    (hoursValue > 0 || minutesValue > 0 || secondsValue > 0);\n  const isUpgrade = !isInsufficientBalance && !isTimeToUpgrade;\n\n  const dashboardMintContent = () => {\n    if (!user?.wallet_id) return <HomeMint />;\n    if (!whitelist?.level || handleNFT.activeZone === null)\n      return <DashboardNotWhitelisted />;\n    // TODO: should figure out this part\n    // if (\n    //   handleNFT.activeZone >= 4 ||\n    //   handleNFT.activeZone >= handleNFT?.accountZone\n    // ) {\n    //   return <HomeMint activeZone={handleNFT.activeZone} />;\n    // }\n\n    return <HomeMint />;\n\n    return <DashboardNotWhitelisted />;\n  };\n\n  // useEffect(() => {\n  //   return;\n  //   //FIXME: this might be code  dashboar\n  //   // let temp = 0;\n  //   // token?.list?.map((val) => {\n  //   //   temp += val?.staked ? +val?.tier * val?.tierTresr * BASE_REWARD * 30 : 0;\n  //   // });\n  //   // setTotalTRESRBalance(temp);\n  //   // if (\n  //   //   +hoursValue === -1 &&\n  //   //   +minutesValue === -1 &&\n  //   //   +secondsValue === -10 &&\n  //   //   filterTokenList?.length\n  //   // ) {\n  //   //   setIsMaxUpgrades(\n  //   //     filterTokenList?.some((item, key) =>\n  //   //       compareUnixDates(new Date().getTime() / 1000, item.upgradeToDelay)\n  //   //     )\n  //   //   );\n\n  //   // Promise.all(\n  //   //   filterTokenList?.map((item) => handleNFT.getUpgradeDelay(item?.tokenId))\n  //   // ).then((res) =>\n  //   //   // FIXME: duplicated code at Dashboard/index.js\n  //   //   setIsMaxUpgrades(\n  //   //     filterTokenList?.some((item, key) =>\n  //   //       compareUnixDates(new Date().getTime() / 1000, res[key])\n  //   //     )\n  //   //   )\n  //   // );\n  //   // }\n  // }, [hoursValue, minutesValue, secondsValue, filterTokenList]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <RewardBox\n        nftSelected={nftSelected}\n        dashboardMintContent={dashboardMintContent}\n        isAnimated={isAnimated}\n        isActive={isActive}\n        isMobile={isMobile}\n        onClose={onClose}\n        handleTransactionLoadingModal={handleTransactionLoadingModal}\n        handleNFT={handleNFT}\n        probToOpen={probToOpen}\n        loaderComponentActive={loaderComponentActive}\n        totalTRESRBalance={totalTRESRBalance}\n        amountUpgradeKey={amountUpgradeKey}\n        lineWidthPer={lineWidthPer}\n        onOpenDeactivateKeyModal={onOpenDeactivateKeyModal}\n        handleUpgradeModal={handleUpgradeModal}\n        handleTreasureWarningModal={handleTreasureWarningModal}\n        isInsufficientBalance={isInsufficientBalance}\n        targetUpgradeDate={targetUpgradeDate}\n        onOpenActivateKeyModal={onOpenActivateKeyModal}\n        onView={onView}\n        onViewTokenPage={onViewTokenPage}\n        hours={hours}\n        minutes={minutes}\n        seconds={seconds}\n        isUpgrade={isUpgrade}\n        isTimeToUpgrade={isTimeToUpgrade}\n      />\n\n      <DashboardTreasureTile\n        isAnimated={isAnimated}\n        onOpenModal={handleTreasureModal.open}\n        onOpenWarningModal={handleTreasureWarningModal.open}\n        amountOpenChest={amountOpenChest}\n        isDark={isDark}\n      />\n\n      {!!(nftSelected?.tokenId && poolAllocationBalance) && (\n        <DashboardKeyRewards\n          onConnectWallet={onConnectWallet}\n          onClaimBase={onClaimBase}\n          onClaimAllBase={onClaimAllBase}\n          isAnimated={isAnimated}\n          isDark={isDark}\n          isMobile={isMobile}\n        />\n      )}\n    </>\n  );\n};\nexport default DashboardGameTab;\n","/Users/apple/Documents/treasure/src/storybook/atom/Tooltip/tooltip.jsx",[],[],"/Users/apple/Documents/treasure/src/hooks/token/useHandleToken.js",[],[],"/Users/apple/Documents/treasure/src/storybook/atom/InputRange/inputRange.jsx",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/ActivateAllKeysModal/index.js",["1438","1439","1440","1441","1442","1443"],[],"import React, { useState, useEffect } from \"react\";\nimport MarketplaceButton from \"../../MarketplaceButton\";\nimport \"./style.scss\";\nimport cross from \"../../../../assets/images/cross_keyList_black.svg\";\nimport crossWhite from \"../../../../assets/images/cross_keyList_white.svg\";\nimport { useSelector } from \"react-redux\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst ActivateAllKeysModal = ({\n  isOpen,\n  onClose,\n  filterTokenList,\n  onClick,\n}) => {\n  const theme = useSelector(selectTheme);\n  const [curDelToken, setCurDelToken] = useState(-1);\n  const [tokenList, setTokenList] = useState();\n\n  const isDark = theme === \"dark\";\n\n  // const onDeleteItem = (id) => setTokenList(tokenList?.filter(item => item?.tokenId !== id))\n  const onDeleteItem = async (id) => {\n    //setTokenList(tokenList?.filter((item) => item?.tokenId !== id));\n    setCurDelToken(id);\n    setTokenList(\n      tokenList?.map((item, key) => {\n        if (item.tokenId == id) item.flag = false;\n        return item;\n      })\n    );\n  };\n\n  const onAddItem = async (id) => {\n    setTokenList(\n      tokenList?.map((item, key) => {\n        if (item.tokenId == id) item.flag = true;\n        return item;\n      })\n    );\n  };\n\n  const onActivate = () =>\n    tokenList?.length &&\n    onClick(\n      tokenList\n        ?.filter((item) => item?.flag == true)\n        ?.map((item) => +item?.tokenId)\n    );\n\n  useEffect(() => {\n    setTokenList(\n      filterTokenList\n        ?.filter((item) => !item?.staked)\n        ?.map((tokenItem, tokenKey) => {\n          return { ...tokenItem, flag: true };\n        })\n    );\n  }, [filterTokenList]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Modal\n      isModalOpen={isOpen}\n      handleClose={onClose}\n      withCrossIcon\n      className=\"max-w-[458px] max-h-[582px] px-[20px] py-[32px]\"\n    >\n      <p className=\"modal__title\">Activate All Keys</p>\n\n      <div className=\"modal__text mt-5\">\n        Activating your Founder's Key allows you to open Treasure Boxes and\n        compete for $TRESR rewards.\n        <br />\n        Your daily $TRESR Rewards grow as you upgrade your \"Key Level\" and\n        \"Treasure Tier\".\n      </div>\n      <div className=\"modal__text text-right text-[16px] mr-[20px]\">\n        {tokenList?.filter((item) => item?.flag == true)?.length} /{\" \"}\n        {tokenList?.length}\n      </div>\n      <div className=\"activateAllKeysModal__list\">\n        {tokenList?.map((item, key) => {\n          return (\n            item.flag && (\n              <div key={key} className=\"activateAllKeysModal__list--item\">\n                <div>\n                  <img\n                    width={36}\n                    height={36}\n                    src={item?.spaceThumbnail}\n                    alt=\"\"\n                  />\n                  <span>Founder’s Key #{item?.tokenId}</span>\n                </div>\n                <img\n                  src={isDark ? crossWhite : cross}\n                  alt={\"delete\"}\n                  className=\"activateAllKeysModal__cross\"\n                  onClick={() => onDeleteItem(item?.tokenId)}\n                />\n              </div>\n            )\n          );\n        })}\n        {tokenList?.map((item, key) => {\n          return (\n            !item.flag && (\n              <div key={key} className=\"activateAllKeysModal__list--item\">\n                <div className=\"filter brightness-[0.4]\">\n                  <img\n                    width={36}\n                    height={36}\n                    src={item?.spaceThumbnail}\n                    alt=\"\"\n                  />\n                  <span>Founder’s Key #{item?.tokenId}</span>\n                </div>\n                <div\n                  className=\"activateAllKeysModal__cross text-gray-400 hover:text-white\"\n                  onClick={() => onAddItem(item?.tokenId)}\n                >\n                  Add\n                </div>\n              </div>\n            )\n          );\n        })}\n      </div>\n\n      <div className=\"activateAllKeysModal__buttons flex-grow justify-end items-end\">\n        <MarketplaceButton title=\"Cancel\" isNormal onClick={onClose} />\n        <MarketplaceButton\n          isBlue\n          title={`Activate ${\n            tokenList?.filter((item) => item?.flag == true)?.length || 0\n          } Keys`}\n          onClick={onActivate}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default ActivateAllKeysModal;\n","/Users/apple/Documents/treasure/src/components/common/Modals/SuccessKeyUpgradeModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/ExpandedNFTView/index.js",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardMobileModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardNotWhitelisted/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/ApproveLoadingModal/index.js",[],["1444"],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTab/index.js",[],[],"/Users/apple/Documents/treasure/src/hooks/alert/useHandleToastAlert.js",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/DeactivateKeyModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/TreasureWarningModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/UpgradeKeyModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardKeyRewards/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/OpenTreasureBoxModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/UpgradeAllKeysModal/index.js",["1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457"],["1458","1459","1460"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport KeyItem from \"./KeyItem\";\nimport useHandleNFT from \"../../../../hooks/blockchain/useHandleNFT\";\nimport MarketplaceButton from \"../../MarketplaceButton\";\nimport { compareUnixDates, sleep } from \"../../../../utils\";\nimport { formatterUS } from \"../../../../utils\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport { useSelector } from \"react-redux\";\nimport { selectSmrtrBalance } from \"redux/slice/balanceSlice\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst UpgradeAllKeysModal = ({\n  isOpen,\n  onClose,\n  filterTokenList,\n  onClick,\n  setTokenListToUpgrade,\n  handleTransactionLoadingModal,\n}) => {\n  const smrtrBalance = useSelector(selectSmrtrBalance);\n  const [tokenList, setTokenList] = useState([]);\n  const [tokenAmountList, setTokenAmountList] = useState([]);\n  const [curDelToken, setCurDelToken] = useState(-1);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const handleNFT = useHandleNFT();\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 750;\n\n  const isInsufficient = +totalAmount > +smrtrBalance;\n  const buttonTitle = isInsufficient\n    ? \"Insufficient balance\"\n    : `Upgrade ${\n        tokenList?.filter((item) => item?.flag == true)?.length || 0\n      } Keys`;\n\n  const onDeleteItem = async (id) => {\n    //setTokenList(tokenList?.filter((item) => item?.tokenId !== id));\n    setCurDelToken(id);\n    setTokenList(\n      tokenList?.map((item, key) => {\n        if (item.tokenId == id) item.flag = false;\n        return item;\n      })\n    );\n    let temp = 0;\n    tokenList\n      ?.filter((item) => item?.flag == true)\n      ?.map(\n        (v, key) =>\n          (temp += tokenAmountList?.filter(\n            (amountItem) => amountItem?.tokenId == v?.tokenId\n          )[0].amount)\n      );\n\n    setTotalAmount(temp);\n  };\n\n  const onAddItem = async (id) => {\n    setTokenList(\n      tokenList?.map((item, key) => {\n        if (item.tokenId == id) item.flag = true;\n        return item;\n      })\n    );\n    let temp = 0;\n    tokenList\n      ?.filter((item) => item?.flag == true)\n      ?.map(\n        (v, key) =>\n          (temp += tokenAmountList?.filter(\n            (amountItem) => amountItem?.tokenId == v?.tokenId\n          )[0].amount)\n      );\n\n    setTotalAmount(temp);\n  };\n\n  const onUpgrade = () => {\n    if (tokenList?.length) {\n      setTokenListToUpgrade(\n        tokenList\n          ?.filter((item) => item?.flag == true)\n          ?.map((item) => +item?.tokenId)\n      );\n      onClick(totalAmount);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (isOpen && filterTokenList?.length) {\n        Promise.all(\n          filterTokenList?.map((item) =>\n            handleNFT.getUpgradeDelay(item?.tokenId)\n          )\n        ).then((res) => {\n          setTokenList(\n            filterTokenList\n              ?.filter((item, key) =>\n                compareUnixDates(new Date().getTime() / 1000, res[key])\n              )\n              ?.filter((item, key) => item?.staked)\n              ?.map((tokenItem, tokenKey) => {\n                return { ...tokenItem, flag: true };\n              })\n          );\n        });\n      }\n    })();\n  }, [filterTokenList, isOpen]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    (async () => {\n      if (isOpen && filterTokenList?.length) {\n        handleTransactionLoadingModal.open();\n        await Promise.all(\n          filterTokenList?.map((item) =>\n            handleNFT.getUpgradeDelay(item?.tokenId)\n          )\n        ).then((res) => {\n          setTokenList(\n            filterTokenList\n              ?.filter((item, key) =>\n                compareUnixDates(new Date().getTime() / 1000, res[key])\n              )\n              ?.filter((item, key) => item?.staked)\n              ?.map((tokenItem, tokenKey) => {\n                return { ...tokenItem, flag: true };\n              })\n          );\n          handleTransactionLoadingModal.close();\n        });\n      }\n    })();\n  }, [isOpen]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    (async () => {\n      if (filterTokenList?.length) {\n        Promise.all(\n          filterTokenList?.map((item) =>\n            handleNFT.getAmountUpgradeKey(item?.tier)\n          )\n        ).then((res) => {\n          setTotalAmount(res.reduce((a, b) => a + b, 0));\n          let temp = [];\n          res?.map((item, key) => {\n            temp.push({\n              tokenId: filterTokenList[key].tokenId,\n              amount: item,\n            });\n          });\n          setTokenAmountList(temp);\n        });\n      }\n    })();\n  }, [filterTokenList]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Modal\n      isModalOpen={isOpen}\n      handleClose={onClose}\n      withCrossIcon\n      className=\"max-w-[608px] max-h-[582px] px-[20px] py-[32px]\"\n    >\n      <p className=\"modal__title\">Upgrade All Keys</p>\n\n      {!isMobile && (\n        <div className=\"modal__text mt-4 text-center\">\n          Upgrading your Key Level helps you earn more $TRESR.\n        </div>\n      )}\n      {!isMobile && (\n        <div className=\"modal__text text-right text-[16px] mr-[20px]\">\n          {tokenList?.filter((item) => item?.flag == true)?.length} /{\" \"}\n          {tokenList?.length}\n        </div>\n      )}\n      <div className={`upgradeAllKeysModal__list`}>\n        {tokenList?.map((item, key) => {\n          if (item.flag) {\n            return (\n              <KeyItem\n                key={key}\n                token={item}\n                onDeleteItem={onDeleteItem}\n                onAddItem={onAddItem}\n                index={item?.tokenId}\n                delI={curDelToken}\n              />\n            );\n          }\n        })}\n        {tokenList?.map((item, key) => {\n          if (!item.flag)\n            return (\n              <KeyItem\n                key={key}\n                token={item}\n                onDeleteItem={onDeleteItem}\n                onAddItem={onAddItem}\n                index={key}\n              />\n            );\n        })}\n      </div>\n\n      <div className=\"upgradeAllKeysModal__total\">\n        <span className=\"upgradeAllKeysModal__total--text\">\n          You need to Burn\n        </span>\n        <div className=\"upgradeAllKeysModal__total--price\">\n          {formatterUS(totalAmount)} SMRTR\n        </div>\n      </div>\n\n      <div className=\"upgradeAllKeysModal__buttons flex-grow justify-end items-end\">\n        <MarketplaceButton title=\"Cancel\" onClick={onClose} />\n        <MarketplaceButton\n          disabled={isInsufficient}\n          title={buttonTitle}\n          onClick={onUpgrade}\n          isBlue\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default UpgradeAllKeysModal;\n","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/ActivateKeyModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/NavBarEditModeMobile/stylesTablet.js",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/FounderKeyCard/founderKeyCard.jsx",[],[],"/Users/apple/Documents/treasure/src/components/common/DashboardModals/TreasureBoxModal/index.js",["1461"],["1462"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport MarketplaceButton from \"../../MarketplaceButton\";\nimport { formatterUS } from \"../../../../utils\";\nimport { BASE_REWARD } from \"../../../../constant/blockchain\";\nimport useMakeNotificationSound from \"../../../../hooks/useMakeSound\";\nimport SocialLinkComponent from \"components/AccountComponent/SocialLinkComponent\";\nimport { NFKEY_SOCIALS } from \"constant/singleCollectionPage\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectLoaderIsActive } from \"redux/slice/loaderSlice\";\nimport Modal from \"storybook/atom/Modal/modal\";\n\nconst TreasureBoxModal = ({\n  isOpen,\n  onClose,\n  chestStatus,\n  onTryAgain,\n  amountOpenChest,\n  setIsAnimated,\n}) => {\n  const loaderIsActive = useSelector(selectLoaderIsActive);\n  const nftSelected = useSelector(selectNftSelected);\n  const [isTextShown, setIsTextShown] = useState(false);\n  const [socials, setSocials] = useState([]);\n  const audio = useMakeNotificationSound();\n  const navigate = useNavigate();\n\n  const estPerMonth = nftSelected?.staked\n    ? +nftSelected?.tier * nftSelected?.tierTresr * BASE_REWARD * 30\n    : 0;\n\n  const onCloseModal = () => {\n    onClose();\n    setIsTextShown(false);\n    setIsAnimated(false);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => setIsTextShown(true), 6000);\n      chestStatus\n        ? audio(\"audio/ModalVideoGame-Success.mp3\")\n        : audio(\"audio/ModalVideoGame-Failure.mp3\");\n    } else setIsTextShown(false);\n    setSocials(NFKEY_SOCIALS);\n  }, [isOpen]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (chestStatus === null) return null;\n  return (\n    <Modal\n      handleClose={onCloseModal}\n      isModalOpen={isOpen}\n      withCrossIcon\n      isFullModalBg\n      className=\"max-w-[580px] max-h-[580px] px-[0px] py-[0px]\"\n    >\n      {chestStatus ? (\n        <div\n          className={`treasureBoxModal__success ${\n            isTextShown ? \"treasureBoxModal__visible\" : \"\"\n          }`}\n        >\n          <p className=\"modal__title treasureBoxModal__title\">Success!</p>\n          <p className=\"modal__text treasureBoxModal__title\">\n            Your Treasure Tier for\n            <span className=\"modal__text--blue\">\n              {\" \"}\n              Founder's Key #{nftSelected?.tokenId}{\" \"}\n            </span>\n            is now{\" \"}\n            <span className=\"treasureBoxModal__text--yellow\">\n              Tier {nftSelected?.tierTresr}\n            </span>\n            !<br />\n            Now your rewards are{\" \"}\n            <span className=\"treasureBoxModal__text--yellow\">\n              {estPerMonth} $TRESR/month\n            </span>\n          </p>\n          <p className=\"modal__text treasureBoxModal__title\">\n            Remember: Your Treasure Tier is temporary and must be updated before\n            the timer runs out.\n          </p>\n          <div className=\"treasureBoxModal__socials mt-[180px]\">\n            {socials?.map((item, key) => (\n              <SocialLinkComponent\n                key={key}\n                isEditMode={false}\n                link={item?.link}\n                index={key}\n                isNFTPage\n              />\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div\n          className={`treasureBoxModal__failure ${\n            isTextShown ? \"treasureBoxModal__visible\" : \"\"\n          }`}\n        >\n          <p className=\"modal__title treasureBoxModal__title\">Oooops!</p>\n          <p className=\"modal__text treasureBoxModal__title\">\n            The box didn't open. Your Treasure Tier will remain at{\" \"}\n            <span className=\"treasureBoxModal__text--gray\">\n              Tier {nftSelected?.tierTresr}\n            </span>\n            .<br />\n            You can burn{\" \"}\n            <span className=\"treasureBoxModal__text--gray\">\n              {formatterUS(amountOpenChest)} $TRESR\n            </span>{\" \"}\n            to try to open the Treasure Box again\n          </p>\n        </div>\n      )}\n\n      <div\n        className={`treasureBoxModal__video ${chestStatus && \"-z-10 relative\"}`}\n      >\n        <video\n          src={\n            chestStatus\n              ? \"https://artifactory-nfkey.nyc3.digitaloceanspaces.com/static-space/TreasureBox-Success-LowRes.mp4\"\n              : \"https://artifactory-nfkey.nyc3.digitaloceanspaces.com/static-space/TreasureBox-Fail-LowRes.mp4\"\n          }\n          autoPlay\n          muted\n          height={580}\n          width={580}\n        />\n      </div>\n\n      {chestStatus ? (\n        <div\n          className={`treasureBoxModal__buttons ${\n            isTextShown ? \"treasureBoxModal__buttons--visible\" : \"\"\n          }`}\n        >\n          <MarketplaceButton\n            isWhite\n            title={\"Back to Dashboard\"}\n            onClick={onCloseModal}\n          />\n          {!loaderIsActive && (\n            <MarketplaceButton\n              isBlue\n              title={\"Open Another\"}\n              onClick={onTryAgain}\n            />\n          )}\n        </div>\n      ) : (\n        <div\n          className={`treasureBoxModal__buttons ${\n            isTextShown ? \"treasureBoxModal__buttons--visible\" : \"\"\n          }`}\n        >\n          <MarketplaceButton\n            isWhite\n            title={\"Back to Dashboard\"}\n            onClick={onCloseModal}\n          />\n          <MarketplaceButton isBlue title={\"Try Again \"} onClick={onTryAgain} />\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default TreasureBoxModal;\n","/Users/apple/Documents/treasure/src/components/NavBarEditMode/styles.js",[],[],"/Users/apple/Documents/treasure/src/hooks/useTimer.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/LoadingMintModal/customStyles.js",[],[],"/Users/apple/Documents/treasure/src/hooks/blockchain/useGetTokenPrice.js",[],[],"/Users/apple/Documents/treasure/src/api/EventApi.js",[],[],"/Users/apple/Documents/treasure/src/constant/singleCollectionPage.js",[],[],"/Users/apple/Documents/treasure/src/components/AccountComponent/SocialLinkComponent/index.js",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/Profile/profile.jsx",["1463"],[],"import React, { useState } from \"react\";\nimport avatarPlaceholder from \"../../atom/Icon/svg/avatar.jpg\";\nimport \"./style.scss\";\nimport AccountCard from \"../AccountCard/accountCard\";\n\nconst Profile = ({\n  user,\n  isDark,\n  balanceAvax,\n  isAccountOpen,\n  setIsAccountOpen,\n  openConnectWalletModal,\n  titleWalletAddress,\n  navigateToAccount,\n  avaxBalance,\n  balanceSmrtr,\n  balanceTresr,\n  veClaimedTresr,\n  balanceLpSMRTRAVAX,\n  balanceLpTRESRAVAX,\n  onDisconnect,\n}) => {\n  const onShowAccount = () => {\n    if (!user?.wallet_id) return null;\n    else setIsAccountOpen(true);\n  };\n\n  const onHideAccount = () => {\n    setIsAccountOpen(false);\n  };\n\n  return (\n    <div className=\"profile__controls\">\n      <div className=\"profile__balance--container\">\n        {!!user?.wallet_id && (\n          <div className=\"profile__balance\">{`${balanceAvax} AVAX`}</div>\n        )}\n        <div\n          className=\"profileBarAccountOpen__container\"\n          onMouseEnter={onShowAccount}\n          onMouseLeave={onHideAccount}\n        >\n          <button\n            className={`${\n              user?.wallet_id ? \"connected\" : \"notconnected\"\n            } button`}\n            onClick={!user?.wallet_id ? openConnectWalletModal : null}\n          >\n            {!!user?.wallet_id ? titleWalletAddress : \"Connect wallet\"}\n            {!!user && (\n              <img\n                src={!!user?.avatar ? user?.avatar : avatarPlaceholder}\n                className={\"profile__avatar\"}\n                alt={\"\"}\n              />\n            )}\n          </button>\n          {user && (\n            <AccountCard\n              isDark={isDark}\n              user={user}\n              isAccountOpen={isAccountOpen}\n              navigateToAccount={navigateToAccount}\n              balanceAvax={avaxBalance}\n              balanceSmrtr={balanceSmrtr}\n              balanceTresr={balanceTresr}\n              veClaimedTresr={veClaimedTresr}\n              balanceLpSMRTRAVAX={balanceLpSMRTRAVAX}\n              balanceLpTRESRAVAX={balanceLpTRESRAVAX}\n              onDisconnect={onDisconnect}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/apple/Documents/treasure/src/storybook/molecule/TotalRewardTab/totalRewardTab.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/AccountCard/accountCard.jsx",["1464","1465","1466"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport useCommon from \"hooks/useCommon\";\nimport avatarPlaceholder from \"../../../assets/images/marketplace/avatar.jpg\";\nimport smrtrImg from \"../../../assets/images/smrtr.png\";\nimport smrtrLpImg from \"../../../assets/images/smrtr_lp.png\";\nimport Icon from \"storybook/atom/Icon/icon\";\n\nconst AccountCard = ({\n  isDark,\n  isMobile,\n  user,\n  isAccountOpen,\n  navigateToAccount,\n  balanceAvax,\n  balanceSmrtr,\n  balanceTresr,\n  veClaimedTresr,\n  balanceLpSMRTRAVAX,\n  balanceLpTRESRAVAX,\n  onDisconnect,\n}) => {\n  const textRef = useRef();\n  const { americanFormatNumber } = useCommon();\n  const [isCopied, setIsCopied] = useState(false);\n  const [timerID, setTimerID] = useState(0);\n\n  useEffect(() => {\n    clearInterval(timerID);\n    return () => clearInterval(timerID);\n  }, []);\n\n  const onCopyImg = () => {\n    navigator.clipboard.writeText(textRef?.current?.value).then(() => {\n      setIsCopied(true);\n      setTimeout(() => setIsCopied(false), 5000);\n    });\n  };\n  return (\n    <div\n      className={`profileBarAccountOpen ${\n        isAccountOpen ? \"profileBarAccountOpen__visible\" : \"\"\n      } ${isMobile ? \"profileBarAccountOpen_mobile\" : \"\"}`}\n    >\n      {isMobile ? (\n        <></>\n      ) : (\n        <div className=\"profileBarAccountOpen__arrow\">\n          <img\n            src=\"http://localhost:3001/static/media/account_arrow_dark.d951b561d097e36393b52d02ebf92b9e.svg\"\n            alt=\"\"\n          />\n        </div>\n      )}\n      <p style={{ color: \"#fff\" }}>sdkhvbkh</p>\n      <div className=\"profileBarAccountOpen__account\">\n        <img\n          className=\"profileBarAccountOpen__avatar\"\n          src={user?.avatar ? user?.avatar : avatarPlaceholder}\n          alt=\"\"\n        />\n        <div>\n          <p className=\"profileBarAccountOpen__network\">Avalanche</p>\n          <div\n            className=\"profileBarAccountOpen__address--container\"\n            onClick={onCopyImg}\n          >\n            <span\n              className={`profileBarAccountOpen__address ${\n                isCopied && \"profileBarAccountOpen__address--copied\"\n              }`}\n            >\n              {isCopied\n                ? \"Copied to Clipboard\"\n                : user?.wallet_id?.slice(0, 9) +\n                  \"...\" +\n                  user?.wallet_id?.slice(-5)}\n            </span>\n            <input\n              value={user?.wallet_id}\n              ref={textRef}\n              hidden\n              onChange={() => {}}\n            />\n            <div\n              className={`profileBarAccountOpen__address--img \n                ${isCopied && \"profileBarAccountOpen__address--imgCopied\"}`}\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"profileBarAccountOpen__profileIcon\"\n        onClick={navigateToAccount}\n      >\n        <Icon iconName={isDark ? \"userLight\" : \"userDark\"} />\n      </div>\n      <div className=\"profileBarAccountOpen__wallet\">\n        <div className=\"profileBarAccountOpen__profile\">\n          <Icon iconName={\"avaxImg\"} />\n          <p className=\"profileBarAccountOpen__network\">{balanceAvax} AVAX</p>\n        </div>\n        <div className=\"profileBarAccountOpen__profile\">\n          <img src={smrtrImg} alt=\"smrtrImg\" />\n          <p className=\"profileBarAccountOpen__network\">{balanceSmrtr} SMRTR</p>\n        </div>\n        <div className=\"profileBarAccountOpen__profile\">\n          <Icon iconName={\"tresrImg\"} />\n          <p className=\"profileBarAccountOpen__network\">{balanceTresr} TRESR</p>\n        </div>\n        <div className=\"profileBarAccountOpen__profile\">\n          <Icon iconName={\"tresrImg\"} />\n          <p className=\"profileBarAccountOpen__network\">\n            {americanFormatNumber(veClaimedTresr, 3)} veTRESR\n          </p>\n        </div>\n        <div className=\"profileBarAccountOpen__profile\">\n          <img src={smrtrLpImg} alt=\"smrtrLpImg\" />\n          <p className=\"profileBarAccountOpen__network profileBarAccountOpen__network--lp\">\n            {balanceLpSMRTRAVAX} SMRTR AVAX LP\n          </p>\n        </div>\n        <div className=\"profileBarAccountOpen__profile\">\n          <Icon iconName={\"tresrLPImg\"} />\n          <p className=\"profileBarAccountOpen__network profileBarAccountOpen__network--lp\">\n            {balanceLpTRESRAVAX} TRESR AVAX LP\n          </p>\n        </div>\n      </div>\n      <div\n        className=\"profileBarAccountOpen__profile profileBarAccountOpen__disconnect\"\n        onClick={onDisconnect}\n      >\n        <Icon iconName={isDark ? \"disconnectLight\" : \"disconnectDark\"} />\n        <p className=\"profileBarAccountOpen__address\">Disconnect</p>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountCard;\n","/Users/apple/Documents/treasure/src/components/common/Modals/SuccessMintModal/index.js",[],["1467"],"/Users/apple/Documents/treasure/src/constant/reg.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Modals/MintConfirmationModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTreasureTile/index.js",[],[],"/Users/apple/Documents/treasure/src/components/HomePage/HomeMint/index.js",["1468"],[],"import \"react-toastify/dist/ReactToastify.css\";\nimport \"../style.scss\";\nimport React from \"react\";\nimport useHandleNFT from \"../../../hooks/blockchain/useHandleNFT\";\nimport { useLocation } from \"react-router-dom\";\nimport TransactionLoadingModal from \"../../common/Modals/TransactionLoadingModal\";\nimport useHandleModal from \"../../../hooks/dom/useHandleModal\";\nimport useHandleLoader from \"../../../hooks/loader/useHandleLoader\";\nimport useHandleAuth from \"../../../hooks/auth/useHandleAuth\";\nimport WalletConnectModal from \"../../common/Modals/WalletConnectModal\";\nimport { walletconnect } from \"../../../utils/connectors\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"redux/slice/userSlice\";\n\nexport default function HomeMint() {\n  const user = useSelector(selectUser);\n  const location = useLocation();\n  const handleLoader = useHandleLoader();\n  const handleAuth = useHandleAuth();\n  const handleTransactionLoadingModal = useHandleModal();\n  const handleWalletConnectModal = useHandleModal();\n  const isGame = location?.pathname?.includes(\"/game\");\n  const navigate = useNavigate();\n\n  const context = useWeb3React();\n  const { activate } = context;\n\n  const handleWalletConnect = async () => {\n    await activate(\n      walletconnect,\n      (error) => {\n        console.warn(error?.message);\n      },\n      true\n    );\n  };\n\n  const onConnectWallet = () => handleLoader.loaderWrapper(handleAuth.login, 2);\n  const onOpenConnectWallet = () => handleWalletConnectModal.open();\n\n  return (\n    <>\n      <div\n        className={`${\n          isGame\n            ? \"dashboard__data__content--form__selectedToken homePage__info--dashboard\"\n            : \"homePage__info--container\"\n        }`}\n      >\n        {isGame && (\n          <div\n            className={\"dashboard__data__content--form__selectedToken--wrapper\"}\n          >\n            <video\n              src={\n                \"https://artifactory-nfkey.nyc3.digitaloceanspaces.com/keys-space/10/400x400.mp4\"\n              }\n              loop\n              autoPlay\n            />\n          </div>\n        )}\n\n        <div\n          className={`${\n            isGame ? \"homePage__info--container\" : \"homePage__info\"\n          }`}\n        >\n          <div\n            className={`homePage__info-title ${\n              isGame ? \"homePage__info-title__dashboard\" : \"\"\n            }`}\n          >\n            Mint Your Founder's Key\n          </div>\n          {isGame ? (\n            <div className=\"homePage__info-text\">\n              You have no keys. Mint your NFKey to start earning TRESR\n            </div>\n          ) : (\n            <div className=\"homePage__info-count\">\n              Founder’s Key is a \"Generation 0 Passport\" that gives Diamond\n              Tiers from{\" \"}\n              <a\n                href={\"https://smarterswap.xyz/search\"}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                SmarterSwap.xyz\n              </a>{\" \"}\n              early access to the NFTreasure defi loop, NFT marketplace,\n              additional rewards, and marks you as a founder in the new project\n              concept.\n            </div>\n          )}\n          <div className=\"homePage__info-price\">5 $AVAX + Gas</div>\n          <div className=\"homePage__info--actions\">\n            <button\n              className={`button ${isGame ? \"button__dashboard\" : \"\"}`}\n              onClick={\n                user?.wallet_id ? () => navigate(\"/\") : onOpenConnectWallet\n              }\n            >\n              {user?.wallet_id ? \"Mint\" : \"Connect Wallet\"}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {handleWalletConnectModal.isActive && (\n        <WalletConnectModal\n          isOpen={handleWalletConnectModal.isActive}\n          onClose={handleWalletConnectModal.close}\n          connectMetamask={onConnectWallet}\n          connectWalletConnect={handleWalletConnect}\n        />\n      )}\n\n      {handleTransactionLoadingModal.isActive && (\n        <TransactionLoadingModal\n          isOpen={handleTransactionLoadingModal.isActive}\n        />\n      )}\n    </>\n  );\n}\n","/Users/apple/Documents/treasure/src/storybook/molecule/Footer/footer.jsx",["1469"],[],"import React from \"react\";\nimport \"./style.scss\";\nimport WalletCard from \"../WalletCard/walletCard\";\nimport logoLightIcon from \"../../atom/Icon/svg/logo-dark.svg\";\nimport logoDarkIcon from \"../../atom/Icon/svg/logo-dark.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport Icon from \"storybook/atom/Icon/icon\";\n\nexport const SOCIALS_FOOTER = [\n  { image: \"twitterImgLight\" },\n  { image: \"discordImgLight\" },\n  { image: \"instaImgLight\" },\n  { image: \"facebookImgLight\" },\n];\n\nconst Footer = ({ isMobile, isDarkTheme, socials, filterNavigationList }) => {\n  return (\n    <div className={\"singleNFTFooter\"}>\n      <div className={\"singleNFTFooter__container\"}>\n        <div className={\"singleNFTFooter__content\"}>\n          <div className={\"singleNFTFooter__block1\"}>\n            <img\n              src={isDarkTheme ? logoLightIcon : logoDarkIcon}\n              alt={\"\"}\n              width={116}\n              height={38}\n            />\n            <div>\n              <div className=\"Footer_joinText\">Join the community</div>\n              <div className={\"singleNFTFooter__socials\"}>\n                {socials?.map((item, key) => (\n                  <div key={key}>\n                    <a href={item?.link} target=\"_blank\">\n                      <Icon iconName={`${item?.image}`} fill=\"#ffffff\" />\n                    </a>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className={\"singleNFTFooter__links\"}>\n            {filterNavigationList.map((item, key) => (\n              <NavLink\n                to={item.path}\n                key={key}\n                className={\"singleNFTFooter__link\"}\n              >\n                {item.label}\n              </NavLink>\n            ))}\n          </div>\n          <div className=\"singleNFTFooter__walletcard\">\n            <WalletCard isMobile={isMobile} />\n          </div>\n        </div>\n      </div>\n      <div className=\"singleNFTFooter__copyright\">\n        <p className=\"\">\n          Copyright © 2023 Founder’s Key Platform. All rights reserved\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","/Users/apple/Documents/treasure/src/hooks/useMakeSound.js",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/ConnectWallet/connectWallet.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/HomeZoneListNew/homeZoneListNew.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/RewardBox/rewardBox.jsx",["1470"],[],"import React from \"react\";\nimport \"./style.scss\";\nimport { formatterUS } from \"utils\";\nimport { BASE_REWARD, MAX_LEVEL } from \"constant/blockchain\";\nimport Button from \"storybook/atom/Button/button\";\nimport refreshIcon from \"../../atom/Icon/svg/refresh.svg\";\nimport leftArrowIcon from \"../../atom/Icon/svg/arrow_left_light.svg\";\nimport Tooltip from \"storybook/atom/Tooltip/tooltip\";\nimport TimedMarketplaceButton from \"../TimedMarketplaceButton/timedMarketplaceButton\";\n\nconst RewardBox = ({\n  nftSelected,\n  dashboardMintContent,\n  isAnimated,\n  isActive,\n  isMobile,\n  onClose,\n  handleTransactionLoadingModal,\n  handleNFT,\n  probToOpen,\n  amountUpgradeKey,\n  lineWidthPer,\n  onOpenDeactivateKeyModal,\n  handleUpgradeModal,\n  handleTreasureWarningModal,\n  isInsufficientBalance,\n  targetUpgradeDate,\n  onOpenActivateKeyModal,\n  onView,\n  onViewTokenPage,\n  hours,\n  minutes,\n  seconds,\n  isTimeToUpgrade,\n  isUpgrade,\n}) => {\n  return (\n    <div>\n      {!nftSelected ? (\n        dashboardMintContent()\n      ) : (\n        <div\n          className={`reward__box--form__selectedToken ${\n            isAnimated\n              ? \"nft__image--placeholder reward__box--form__selectedToken--isAnimated\"\n              : \"\"\n          }`}\n        >\n          {isMobile && (\n            <div\n              className=\"absolute left-0 cursor-pointer top-0 text-[#BBC5FF] flex font-semibold\"\n              onClick={() => onClose()}\n            >\n              <img\n                src={leftArrowIcon}\n                style={{ minWidth: \"20px\", minHeight: \"20px\", width: \"20px\" }}\n              />\n              &nbsp;&nbsp;Back To All Keys\n            </div>\n          )}\n          <div\n            className=\"reward__box--form__selectedToken--wrapper\"\n            onClick={onView}\n          >\n            <video\n              src={nftSelected?.spaceFile || nftSelected?.image}\n              loop\n              autoPlay\n            />\n            <div className=\"reward__box--form__selectedToken--keyTier\">\n              Level {nftSelected?.tier}\n            </div>\n          </div>\n\n          {!isAnimated && (\n            <div className=\"reward__box--form__selectedToken--info\">\n              <div\n                className=\"reward__box--form__selectedToken--info__title\"\n                onClick={onViewTokenPage}\n              >\n                {nftSelected?.name} #{nftSelected?.tokenId}\n              </div>\n              {!isMobile && (\n                <div\n                  className=\"reward__box--form__selectedToken--info__desktop\"\n                  onClick={async () => {\n                    handleTransactionLoadingModal?.open();\n                    await handleNFT?.reloadNFTItemBalance(\n                      nftSelected?.contractAddress,\n                      nftSelected?.tokenId\n                    );\n                    handleTransactionLoadingModal?.close();\n                  }}\n                >\n                  <Tooltip title=\"Force Update\">\n                    <img\n                      src={refreshIcon}\n                      alt=\"\"\n                      style={{\n                        minWidth: \"32px\",\n                        minHeight: \"32px\",\n                        borderRadius: \"0px\",\n                      }}\n                    />\n                  </Tooltip>\n                </div>\n              )}\n              {isMobile && (\n                <div\n                  className=\"reward__box--form__selectedToken--info__mobile\"\n                  onClick={async () => {\n                    handleTransactionLoadingModal?.open();\n                    await handleNFT?.reloadNFTItemBalance(\n                      nftSelected?.contractAddress,\n                      nftSelected?.tokenId\n                    );\n                    handleTransactionLoadingModal?.close();\n                  }}\n                >\n                  <Tooltip title=\"Force Update\">\n                    <img\n                      src={refreshIcon}\n                      alt=\"\"\n                      style={{\n                        minWidth: \"32px\",\n                        minHeight: \"32px\",\n                        borderRadius: \"0px\",\n                      }}\n                    />\n                  </Tooltip>\n                </div>\n              )}\n              <div className=\"reward__box--form__selectedToken--info__data\">\n                <Tooltip\n                  title={\n                    \"Not all treasure boxes will open. Your odds at successfully opening a Treasure Box go up as you stake TRESR to earn veTRESR.\"\n                  }\n                  position=\"bottom\"\n                >\n                  <div className=\"reward__box--form__selectedToken--info__percentToOpen\">\n                    <div>\n                      {!!nftSelected?.staked ? (\n                        <div>\n                          {probToOpen?.toFixed(1)} % chance to open the box\n                        </div>\n                      ) : (\n                        <div>You should activate the key to open the box</div>\n                      )}\n                    </div>\n                  </div>\n                </Tooltip>\n              </div>\n              <div className=\"reward__box--form__selectedToken--info__countToNext reward__box--form__selectedToken--info__countToNext--margin\">\n                <p className=\"reward__box--form__selectedToken--info__countToNext--greyText\">\n                  Upgrade cost\n                </p>\n                <div className=\"reward__box--form__selectedToken--info__countToNext--blackText\">\n                  <div className=\"reward__box__flex__wrapper\">\n                    <div>{formatterUS(amountUpgradeKey)} SMRTR</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"reward__box--form__selectedToken--info__countToNext\">\n                <p className=\"reward__box--form__selectedToken--info__countToNext--greyText\">\n                  Next Tier Est. Monthly\n                </p>\n                <div className=\"reward__box--form__selectedToken--info__countToNext--blackText\">\n                  <div className=\"reward__box__flex__wrapper\">\n                    <div>\n                      {(+nftSelected?.tier + 1) *\n                        +nftSelected?.tierTresr *\n                        BASE_REWARD *\n                        30}{\" \"}\n                      TRESR\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {!isMobile && (\n                <div className=\"reward__box--form__selectedToken--info__progressWrapper\">\n                  <div className=\"reward__box--form__selectedToken--info__progressWrapper__bar\">\n                    <div\n                      className={`reward__box--form__selectedToken--info__progressWrapper__line`}\n                      style={{ width: lineWidthPer }}\n                    />\n                  </div>\n\n                  <div className=\"reward__box--form__selectedToken--info__progressWrapper__info\">\n                    Key level: {nftSelected?.tier}/{MAX_LEVEL}\n                  </div>\n                </div>\n              )}\n              {!isMobile && (\n                <div className=\"reward__box--form__selectedToken--info__buttonWrap\">\n                  <TimedMarketplaceButton\n                    onClick={\n                      isActive\n                        ? handleUpgradeModal?.open\n                        : handleTreasureWarningModal?.open\n                    }\n                    isInsufficientBalance={isInsufficientBalance}\n                    targetUpgradeDate={targetUpgradeDate}\n                    disabled={nftSelected?.tier >= 150}\n                    currentLevel={nftSelected?.tier}\n                    hours={hours}\n                    minutes={minutes}\n                    seconds={seconds}\n                    isTimeToUpgrade={isTimeToUpgrade}\n                    isUpgrade={isUpgrade}\n                  />\n                  {nftSelected?.staked ? (\n                    <Button\n                      label={\"Deactivate\"}\n                      variant=\"secondary\"\n                      onClick={onOpenDeactivateKeyModal}\n                    />\n                  ) : (\n                    <Button\n                      label={\"Activate\"}\n                      variant=\"secondary\"\n                      onClick={onOpenActivateKeyModal}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      {isMobile && (\n        <div className=\"reward__box--form__selectedToken--info__progressWrapper\">\n          <div className=\"reward__box--form__selectedToken--info__progressWrapper__bar\">\n            <div\n              className={`reward__box--form__selectedToken--info__progressWrapper__line`}\n              style={{ width: lineWidthPer }}\n            />\n          </div>\n\n          <div className=\"reward__box--form__selectedToken--info__progressWrapper__info\">\n            Key level: {nftSelected?.tier}/{MAX_LEVEL}\n          </div>\n        </div>\n      )}\n      {isMobile && (\n        <div className=\"reward__box--form__selectedToken--info__buttonWrap\">\n          <TimedMarketplaceButton\n            onClick={\n              isActive\n                ? handleUpgradeModal?.open\n                : handleTreasureWarningModal?.open\n            }\n            isInsufficientBalance={isInsufficientBalance}\n            targetUpgradeDate={targetUpgradeDate}\n            disabled={nftSelected?.tier >= 150}\n            currentLevel={nftSelected?.tier}\n            hours={hours}\n            minutes={minutes}\n            seconds={seconds}\n            isTimeToUpgrade={isTimeToUpgrade}\n            isUpgrade={isUpgrade}\n          />\n          {nftSelected?.staked ? (\n            <Button label={\"Deactivate\"} onClick={onOpenDeactivateKeyModal} />\n          ) : (\n            <Button label={\"Activate\"} onClick={onOpenActivateKeyModal} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RewardBox;\n","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardVotingEscrow/index.js",["1471","1472","1473"],["1474","1475"],"import React, { useEffect, useState } from \"react\";\nimport useHandleModal from \"../../../hooks/dom/useHandleModal\";\nimport useHandleTresrStaking from \"../../../hooks/blockchain/useHandleTresrStaking\";\nimport OnStakeTRESRModal from \"../DashboardModals/OnStakeTRESRModal\";\nimport OnUnstakeTRESRModal from \"../DashboardModals/OnUnstakeTRESRModal\";\nimport { formatterUS } from \"../../../utils\";\nimport { APPROVE_STAKING_TRESR } from \"../../../constant/approveLoadingModal\";\nimport ApproveLoadingModal from \"../../common/Modals/ApproveLoadingModal\";\nimport useHandleRewards from \"hooks/blockchain/useHandleRewards\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport {\n  selectTotalEarnedBalance,\n  selectTresrBalance,\n  selectTresrStakedBalance,\n  selectTresrStakedAllBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport { selectTresrRewardsPerSec } from \"redux/slice/rewardSlice\";\nimport VotingCard from \"storybook/molecule/VotingCard/votingCard\";\n\nexport default function DashboardVotingEscrow({\n  onUnstakeTresr,\n  onConnectWallet,\n  onclaimVeTresr,\n}) {\n  const theme = useSelector(selectTheme);\n  const user = useSelector(selectUser);\n  const totalEarnedBalance = useSelector(selectTotalEarnedBalance);\n  const tresrStakedBalance = useSelector(selectTresrStakedBalance);\n  const claimableTresrRewardsPerSec = useSelector(selectTresrRewardsPerSec);\n  const tresrBalance = useSelector(selectTresrBalance);\n  const tresrStakedAllBalance = useSelector(selectTresrStakedAllBalance);\n  const dispatch = useDispatch();\n\n  const [stake, setStake] = useState(\"\");\n  const [unstake, setUnstake] = useState(\"\");\n  const [stakedAll, setStakedAll] = useState(0);\n  const [timerID, setTimerID] = useState(0);\n  const [veTresrBalance, setVeTresrBalance] = useState(0);\n  const [veClaimedTresr, setVeClaimedTresr] = useState(0);\n  const [isApproved, setIsApproved] = useState(false);\n  const [balanceVeTresrPerHour, setbalanceVeTresrPerHour] = useState(0);\n  const [balanceMaxAvailable, setbalanceMaxAvailable] = useState(0);\n  const [balanceEstDaysToMax, setbalanceEstDaysToMax] = useState(0);\n  const [flag, setFlag] = useState(false);\n\n  const isDark = theme === \"dark\";\n\n  const handleStakeModal = useHandleModal();\n  const handleUnstakeModal = useHandleModal();\n  const handleTresrStaking = useHandleTresrStaking();\n  const handleRewards = useHandleRewards();\n  const handleApproveStakingTresrModal = useHandleModal();\n\n  const balanceTotalEarned = formatterUS(+totalEarnedBalance);\n  const balanceTresrStaked = formatterUS(tresrStakedBalance);\n  const balanceEstDailyVeTRESR = formatterUS(\n    claimableTresrRewardsPerSec * 60 * 60 * 24\n  );\n\n  const onChangeStake = (event) =>\n    !isNaN(event?.target?.value) && setStake(event?.target?.value);\n  const onChangeUnstake = (event) =>\n    !isNaN(event?.target?.value) && setUnstake(event?.target?.value);\n\n  const onApproveTresr = () => {\n    handleStakeModal.close();\n    handleApproveStakingTresrModal.open();\n\n    handleTresrStaking\n      .approveTRESR(stake)\n      .then(() => setIsApproved(true))\n      .catch(() => {\n        setIsApproved(false);\n        handleApproveStakingTresrModal.close();\n        return null;\n      });\n  };\n\n  const onStakeClose = () => {\n    handleStakeModal.close();\n    setStake(\"\");\n  };\n  const onUnstakeClose = () => {\n    handleUnstakeModal.close();\n    setUnstake(\"\");\n  };\n  const onStake = () => {\n    onStakeClose();\n    handleTresrStaking.stakeTresr(stake).finally(() => {\n      handleTresrStaking\n        .getTresrStaked()\n        .then((res) => setStakedAll(formatterUS(res)));\n      handleTresrStaking.getTresrTotalStaked();\n      handleApproveStakingTresrModal.close();\n      setIsApproved(false);\n    });\n  };\n  const onUnstake = async () => {\n    onUnstakeClose();\n    await onUnstakeTresr(unstake);\n    handleTresrStaking\n      .getTresrStaked()\n      .then((res) => setStakedAll(formatterUS(res)));\n    handleTresrStaking.getTresrTotalStaked();\n  };\n\n  const onClickStake = () => {\n    if (!user?.wallet_id) return onConnectWallet();\n\n    handleStakeModal.open();\n  };\n\n  const onClickUnStake = () => {\n    if (!user?.wallet_id) return onConnectWallet();\n\n    handleUnstakeModal.open();\n  };\n\n  const onCloseApproveStakingTresrModal = () => {\n    handleApproveStakingTresrModal.close();\n    setIsApproved(false);\n  };\n\n  useEffect(() => {\n    if (!user?.wallet_id) return;\n    handleRewards.getRewardDashboardInfo(user?.wallet_id).then((res) => {\n      ACTIONS.SET_TRESR_REWARDS_PER_SEC(dispatch, res[0]);\n      ACTIONS.SET_BALANCE_TOTAL_EARNED(dispatch, res[1]); // pendingVeTresr\n      ACTIONS.SET_BALANCE_TRESR_STAKED(dispatch, res[2]);\n      setbalanceVeTresrPerHour(res[3]);\n      setbalanceMaxAvailable(res[4]);\n      setbalanceEstDaysToMax(res[5]);\n    });\n\n    handleTresrStaking.getTresrRewardsPerSec();\n    // handleTresrStaking.getTotalEarned();\n    handleTresrStaking\n      .getTresrStaked()\n      .then((res) => setStakedAll(formatterUS(res)));\n    handleTresrStaking.getTresrTotalStaked();\n    handleRewards.getVeTresrPerHour().then((res) => {\n      setbalanceVeTresrPerHour(res);\n    });\n    handleRewards.getMaxVeTresr().then((res) => setbalanceMaxAvailable(res));\n    handleRewards.getDaysToMax().then((res) => setbalanceEstDaysToMax(res));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setVeTresrBalance(+totalEarnedBalance);\n    clearInterval(timerID);\n    setFlag(true);\n    Promise.all([\n      handleRewards.getPendingVeTresr(),\n      handleRewards.getClaimedVeTresr(),\n    ]).then((res) => {\n      setVeTresrBalance(res[0]);\n      setVeClaimedTresr(res[1]);\n      setFlag(false);\n    });\n    // const timer = setInterval(() => {\n    //   handleRewards.getPendingVeTresr().then((res) => setVeTresrBalance(res));\n    //   handleRewards.getClaimedVeTresr().then((res) => setVeClaimedTresr(res));\n    //   setFlag(false);\n    // }, 1000);\n    // setTimerID(timer);\n\n    return () => clearInterval(timerID);\n  }, [totalEarnedBalance, claimableTresrRewardsPerSec]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <VotingCard\n        flag={flag}\n        isDark={isDark}\n        onClickStake={onClickStake}\n        onClickUnStake={onClickUnStake}\n        stakedAll={stakedAll}\n        tresrBalance={tresrBalance}\n        tresrStakedAllBalance={tresrStakedAllBalance}\n        balanceEstDailyVeTRESR={balanceEstDailyVeTRESR}\n        onclaimVeTresr={onclaimVeTresr}\n        veTresrBalance={veTresrBalance}\n        veClaimedTresr={veClaimedTresr}\n        balanceVeTresrPerHour={balanceVeTresrPerHour}\n        balanceMaxAvailable={balanceMaxAvailable}\n        balanceEstDaysToMax={balanceEstDaysToMax}\n      />\n      {handleStakeModal.isActive && (\n        <OnStakeTRESRModal\n          isOpen={handleStakeModal.isActive}\n          onClose={onStakeClose}\n          onChangeStake={onChangeStake}\n          onStake={onApproveTresr}\n          onStakeClose={onStakeClose}\n          stake={stake}\n          setStake={setStake}\n          balance={tresrBalance}\n          title=\"Stake $TRESR\"\n          description=\"Are you sure to stake this token? This action cannot be undone.\"\n          placeholder=\"0.000 TRESR\"\n        />\n      )}\n      {handleUnstakeModal.isActive && (\n        <OnUnstakeTRESRModal\n          onClose={onUnstakeClose}\n          isOpen={handleUnstakeModal.isActive}\n          onChangeUnstake={onChangeUnstake}\n          onUnstake={onUnstake}\n          onUnstakeClose={onUnstakeClose}\n          unstake={unstake}\n          setUnstake={setUnstake}\n          balance={tresrStakedBalance}\n          title=\"Unstake $TRESR\"\n          description=\"By confirming this tx, your veTRESR will go to zero\"\n          placeholder=\"0.000 TRESR\"\n          marginTop={60}\n        />\n      )}\n      {handleApproveStakingTresrModal.isActive && (\n        <ApproveLoadingModal\n          isOpen={handleApproveStakingTresrModal.isActive}\n          status={APPROVE_STAKING_TRESR}\n          isApproved={isApproved}\n          onClose={onCloseApproveStakingTresrModal}\n          onNextStep={onStake}\n        />\n      )}\n    </>\n  );\n}\n","/Users/apple/Documents/treasure/src/storybook/molecule/FounderKeyTab/founderKeyTab.jsx",["1476","1477","1478"],["1479"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport { MAX_CHEST_TIER } from \"constant/blockchain\";\nimport SmallKeyTimer from \"../SmallKeyTimer/smallKeyTimer\";\nimport { compareUnixDates } from \"utils\";\n\nconst FounderKeyTab = ({\n  tokenId = 0,\n  tier = 0,\n  tierTresr,\n  staked = true,\n  isAnimated,\n  contractAddress,\n  onNFKey = () => {},\n  spaceThumbnailSmall = \"https://artifactory-nfkey.nyc3.digitaloceanspaces.com/keys-space/1/100x100.jpg\",\n  days,\n  hours,\n  minutes,\n  seconds,\n  nftSelected,\n}) => {\n  const [timeToUpgrade, setTimeToUpgrade] = useState(0);\n  const [startUpgradeDelay, setStartUpgradeDelay] = useState(0);\n  const [percentToUpgrade, setPercentToUpgrade] = useState(0);\n  const [timerID, setTimerID] = useState(0);\n  const chestProgressLine = MAX_CHEST_TIER / tierTresr;\n  const chestProgressLineWidth =\n    chestProgressLine <= 1 ? 100 : 100 / chestProgressLine;\n  const isActive = tokenId === nftSelected?.tokenId;\n\n  useEffect(() => {\n    clearInterval(timerID);\n    if (compareUnixDates(new Date().getTime() / 1000, timeToUpgrade)) {\n      setPercentToUpgrade(100);\n    } else {\n    }\n    return () => clearInterval(timerID);\n  }, [timeToUpgrade, startUpgradeDelay]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div\n      className={`NFFounderKeyTab ${\n        isActive ? \"active\" : \"\"\n      } hover:border-[#2D46D6]`}\n      onClick={() => {\n        !isActive && onNFKey(tokenId, contractAddress);\n      }}\n    >\n      <div\n        className=\"NFFounderKeyTab__image\"\n        style={{\n          background: `linear-gradient(45.44deg, #4964FE ${percentToUpgrade}%, rgba(73, 100, 254, 0) 48.31%)`,\n        }}\n      >\n        <img src={spaceThumbnailSmall} alt=\"\" />\n      </div>\n      {isAnimated ? (\n        <></>\n      ) : (\n        <div className=\"NFFounderKeyTab__info\">\n          <div className=\"NFFounderKeyTab__info--title\">\n            <div\n              className={`NFFounderKeyTab__info--title__name ${\n                isActive ? \"NFFounderKeyTab__info--title__name--active\" : \"\"\n              }`}\n            >\n              Founder’s Key #{tokenId}\n            </div>\n            <div\n              className={`NFFounderKeyTab__info--title__count ${\n                isActive ? \"NFFounderKeyTab__info--title__count--active\" : \"\"\n              }`}\n            >\n              Level {tier}\n            </div>\n          </div>\n          {staked ? (\n            <div className=\"NFFounderKeyTab__info--wrapper\">\n              <div className=\"NFFounderKeyTab__info--progressLine\">\n                <div\n                  className={`NFFounderKeyTab__info--progressLine__bar yellow ${\n                    isActive ? \"yellow__active\" : \"\"\n                  }`}\n                  style={{ width: `${chestProgressLineWidth}%` }}\n                ></div>\n                <div\n                  className=\"progressLine__text\"\n                  style={{ mixBlendMode: \"difference\" }}\n                >\n                  Tier {tierTresr}/{MAX_CHEST_TIER}\n                </div>\n              </div>\n              <SmallKeyTimer\n                days={days}\n                hours={hours}\n                minutes={minutes}\n                seconds={seconds}\n                isActive={isActive}\n              />\n            </div>\n          ) : (\n            <div\n              className={`NFFounderKeyTab__info--inactive ${\n                isActive ? \"NFFounderKeyTab__info--inactive__active\" : \"\"\n              }`}\n            >\n              inactive\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FounderKeyTab;\n","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardBonusCard/index.js",["1480","1481","1482","1483","1484","1485","1486","1487"],["1488"],"import React, { useEffect, useState } from \"react\";\nimport useHandleRewards from \"../../../hooks/blockchain/useHandleRewards\";\nimport MarketplaceButton from \"../../common/MarketplaceButton\";\nimport infoImg from \"../../../assets/images/info_img.svg\";\nimport infoImgDark from \"../../../assets/images/info_img_dark.svg\";\nimport { formatterUS } from \"../../../utils\";\nimport Tooltip from \"components/common/Tooltip\";\nimport { ClipLoader } from \"react-spinners\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport useHandleNFT from \"hooks/blockchain/useHandleNFT\";\nimport useHandleTresrStaking from \"hooks/blockchain/useHandleTresrStaking\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectLpTotalStakedSMRTRAVAXBalance,\n  selectLpTotalStakedTRESRAVAXBalance,\n  selectKeyLevelPBalance,\n  selectVeTresrSharePBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport {\n  selectBonusJlpSmartrReward,\n  selectBonusJlpTresrReward,\n  selectBonusKeyLevelReward,\n  selectBonusTotalReward,\n  selectBonusVeTresrReward,\n} from \"redux/slice/rewardSlice\";\nimport ACTIONS from \"redux/action\";\nimport BonusCard from \"storybook/molecule/BonusCard/bonusCard\";\n\nconst DashboardBonusCard = ({ onClaimBonus }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const claimableBonusJlpTresrReward = useSelector(selectBonusJlpTresrReward);\n  const claimableBonusJlpSmartrReward = useSelector(selectBonusJlpSmartrReward);\n  const claimableBonusTotalReward = useSelector(selectBonusTotalReward);\n  const veTresrSharePBalance = useSelector(selectVeTresrSharePBalance);\n  const claimableBonusVeTresrReward = useSelector(selectBonusVeTresrReward);\n  const lpTotalStakedSMRTRAVAXBalance = useSelector(\n    selectLpTotalStakedSMRTRAVAXBalance\n  );\n  const lpTotalStakedTRESRAVAXBalance = useSelector(\n    selectLpTotalStakedTRESRAVAXBalance\n  );\n  const keyLevelPBalance = useSelector(selectKeyLevelPBalance);\n  const claimableBonusKeyLevelReward = useSelector(selectBonusKeyLevelReward);\n  const handleRewards = useHandleRewards();\n  const handleTresrStaking = useHandleTresrStaking();\n  const handleNFT = useHandleNFT();\n  const [comulativeKeyLevel, setcomulativeKeyLevel] = useState(0);\n  const [totalRewards, setTotalRewards] = useState(0);\n  const [timerID, setTimerID] = useState(0);\n  const [flag, setFlag] = useState(false);\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 640;\n\n  const isDark = theme === \"dark\";\n\n  const balanceBonusAll = formatterUS(\n    +claimableBonusJlpTresrReward + +claimableBonusJlpSmartrReward\n  );\n\n  useEffect(() => {\n    // handleRewards.getMasterChefRewards(0);\n    // handleRewards.getMasterChefRewards(1);\n    handleRewards\n      .getCumulativeLevels()\n      .then((res) => setcomulativeKeyLevel(res));\n    handleNFT.getkeyLevelP();\n    handleTresrStaking.getveTresrShareP();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    clearInterval(timerID);\n    setFlag(true);\n    const timer = setInterval(async () => {\n      setTotalRewards(await handleRewards.getPenddingBonusRewards());\n      ACTIONS.SET_BONUS_TOTAL_REWARDS(\n        dispatch,\n        await handleRewards.getTotalRewards()\n      );\n      setFlag(false);\n    }, 1000);\n    setTimerID(timer);\n\n    return () => clearInterval(timerID);\n  }, []);\n\n  return (\n    <BonusCard\n      isDark={isDark}\n      isMobile={isMobile}\n      totalRewards={totalRewards}\n      onClaimBonus={onClaimBonus}\n      claimableBonusTotalReward={claimableBonusTotalReward}\n      comulativeKeyLevel={comulativeKeyLevel}\n      veTresrSharePBalance={veTresrSharePBalance}\n      claimableBonusVeTresrReward={claimableBonusVeTresrReward}\n      lpTotalStakedSMRTRAVAXBalance={lpTotalStakedSMRTRAVAXBalance}\n      claimableBonusJlpSmartrReward={claimableBonusJlpSmartrReward}\n      lpTotalStakedTRESRAVAXBalance={lpTotalStakedTRESRAVAXBalance}\n      claimableBonusJlpTresrReward={claimableBonusJlpTresrReward}\n      keyLevelPBalance={keyLevelPBalance}\n      claimableBonusKeyLevelReward={claimableBonusKeyLevelReward}\n    />\n  );\n};\n\nexport default DashboardBonusCard;\n","/Users/apple/Documents/treasure/src/components/common/Modals/UpgradeAllKeysModal/KeyItem/index.js",["1489","1490","1491"],["1492"],"import React, { useState, useEffect } from \"react\";\nimport arrow from \"../../../../../assets/images/arrow_right_white.svg\";\nimport arrowBlack from \"../../../../../assets/images/arrow_right_black.svg\";\nimport crossWhite from \"../../../../../assets/images/cross_keyList_white.svg\";\nimport cross from \"../../../../../assets/images/cross_keyList_black.svg\";\nimport useHandleNFT from \"../../../../../hooks/blockchain/useHandleNFT\";\nimport { formatterUS } from \"../../../../../utils\";\nimport useWindowDimensions from \"hooks/useWidowDimensions\";\nimport { useSelector } from \"react-redux\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\n\nconst KeyItem = ({ token, onDeleteItem, onAddItem, index, delI }) => {\n  const theme = useSelector(selectTheme);\n  const [amountUpgradeKey, setAmountUpgradeKey] = useState(0);\n  const handleNFT = useHandleNFT();\n  const windowParams = useWindowDimensions();\n  const isMobile = windowParams?.width <= 750;\n\n  useEffect(() => {\n    handleNFT\n      .getAmountUpgradeKey(+token?.tier)\n      .then((res) => setAmountUpgradeKey(res));\n  }, [token?.tokenId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (token?.flag)\n    return (\n      <div className={`upgradeAllKeysModal__list--item `}>\n        <div className=\"upgradeAllKeysModal__wrapper\">\n          <img\n            width={56}\n            height={56}\n            src={token?.spaceThumbnail}\n            alt=\"\"\n            className=\"upgradeAllKeysModal__image\"\n          />\n          <div className=\"upgradeAllKeysModal__name--wrapper\">\n            <span className=\"upgradeAllKeysModal__name\">\n              Founder’s Key #{token?.tokenId}\n            </span>\n            <div className=\"upgradeAllKeysModal__level\">\n              <span>Level {token?.tier}</span>\n              <img width={14} height={9} src={arrow} alt=\"to\" />\n              <span>Level {+token?.tier + 1}</span>\n            </div>\n            {isMobile && (\n              <span className=\"modal__text text-[16px] mt-1 text-[var(--currencyInputLabel)]\">\n                {formatterUS(amountUpgradeKey)} SMRTR\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"upgradeAllKeysModal__wrapperRight\">\n          <img\n            src={crossWhite}\n            alt={\"delete\"}\n            className=\"cursor-pointer\"\n            onClick={() => onDeleteItem(token?.tokenId)}\n          />\n          {!isMobile && <span>{formatterUS(amountUpgradeKey)} SMRTR</span>}\n        </div>\n      </div>\n    );\n  else\n    return (\n      <div className=\"upgradeAllKeysModal__list--item\">\n        <div className=\"upgradeAllKeysModal__wrapper filter brightness-[0.4]\">\n          <img\n            width={56}\n            height={56}\n            src={token?.spaceThumbnail}\n            alt=\"\"\n            className=\"upgradeAllKeysModal__image\"\n          />\n          <div className=\"upgradeAllKeysModal__name--wrapper\">\n            <span className=\"upgradeAllKeysModal__name\">\n              Founder’s Key #{token?.tokenId}\n            </span>\n            <div className=\"upgradeAllKeysModal__level\">\n              <span>Level {token?.tier}</span>\n              <img width={14} height={9} src={arrow} alt=\"to\" />\n              <span>Level {+token?.tier + 1}</span>\n            </div>\n            {isMobile && (\n              <span className=\" modal__text text-[16px] mt-1 text-[var(--currencyInputLabel)]\">\n                {formatterUS(amountUpgradeKey)} SMRTR\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"upgradeAllKeysModal__wrapperRight\">\n          <div\n            className=\"cursor-pointer text-gray-400 hover:text-white\"\n            onClick={() => onAddItem(token?.tokenId)}\n          >\n            Add\n          </div>\n          {!isMobile && (\n            <span className=\"filter brightness-[0.4]\">\n              {formatterUS(amountUpgradeKey)} SMRTR\n            </span>\n          )}\n        </div>\n      </div>\n    );\n};\n\nexport default KeyItem;\n","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTotalPoolReward/index.js",["1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503"],[],"import { useEffect, useState } from \"react\";\nimport useHandleRewards from \"../../../hooks/blockchain/useHandleRewards\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectNftList, selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport {\n  selectBonusJlpSmartrReward,\n  selectBonusJlpTresrReward,\n  selectBonusKeyLevelReward,\n  selectBonusVeTresrReward,\n  selectTresrRewards,\n} from \"redux/slice/rewardSlice\";\nimport TotalPoolReward from \"storybook/molecule/TotalPoolReward/totalPoolReward\";\nimport useHandleNFT from \"hooks/blockchain/useHandleNFT\";\n\nexport default function DashboardTotalPoolReward({\n  onClaimAll,\n  onConnectWallet,\n}) {\n  const nftSelected = useSelector(selectNftSelected);\n  const nftLists = useSelector(selectNftList);\n  const theme = useSelector(selectTheme);\n  const user = useSelector(selectUser);\n  const claimableTresrRewards = useSelector(selectTresrRewards);\n  const claimableBonusVeTresrReward = useSelector(selectBonusVeTresrReward);\n  const claimableBonusJlpTresrReward = useSelector(selectBonusJlpTresrReward);\n  const claimableBonusJlpSmartrReward = useSelector(selectBonusJlpSmartrReward);\n  const claimableBonusKeyLevelReward = useSelector(selectBonusKeyLevelReward);\n  const handleRewards = useHandleRewards();\n\n  const [allNfkeyStaked, setAllNfkeyStaked] = useState(0);\n  const [ownTokenRewardList, setOwnTokenRewardList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [timerID, setTimerID] = useState(0);\n  const [veTresrBalance, setVeTresrBalance] = useState(0);\n  const [jlpTresrBonusRewardBalance, setJlpTresrBonusRewardBalance] =\n    useState(0);\n  const [jlpSmartrBonusRewardBalance, setJlpSmartrBonusRewardBalance] =\n    useState(0);\n  const [keyLevelBonusRewardBalance, setKeyLevelBonusRewardBalance] =\n    useState(0);\n  const [tresrRewardsPerSecAll, setTresrRewardsPerSecAll] = useState(0);\n  const [balanceTresrRewardsAll, setBalanceTresrRewardsAll] = useState(0);\n  const [balanceAll, setBalanceAll] = useState(0);\n  const [balanceBonusAll, setBalanceBonusAll] = useState(0);\n  const [flag, setFlag] = useState(false);\n\n  const handleNFT = useHandleNFT();\n  const navigate = useNavigate();\n\n  const isDark = theme === \"dark\";\n\n  const onClickClaimAllRewards = () =>\n    !user?.wallet_id ? onConnectWallet() : onClaimAll();\n  const onToggleDetails = async () => {\n    setIsOpen(!isOpen);\n    setBalanceBonusAll(await handleRewards.getPenddingBonusRewards());\n  };\n\n  useEffect(() => {\n    if (nftLists?.length) {\n      const tokenIdList = nftLists?.map((item) => +item?.tokenId);\n\n      if (tokenIdList?.length) {\n        handleNFT.calcRewardByTokens(tokenIdList).then((res) => {\n          setOwnTokenRewardList(\n            tokenIdList?.map((item, key) => ({\n              tokenID: item,\n              reward: res[key] ? res[key] : 0,\n            }))\n          );\n        });\n        // handleNFT\n        //   .getBonusReward(ownTokenList)\n        //   .then((res) => setAllNfkeyStaked(res));\n        // handleNFT\n        //   .getBonusRewardPerSecond(ownTokenList)\n        //   .then((res) => setTresrRewardsPerSecAll(res));\n      }\n    }\n  }, [\n    user?.wallet_id,\n    nftLists,\n    nftSelected?.tier,\n    nftSelected?.tierTresr,\n    claimableTresrRewards,\n  ]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    clearInterval(timerID);\n    setFlag(true);\n    handleRewards.getPendingTotalRewards().then((res) => {\n      setBalanceAll(res);\n      setFlag(false);\n    });\n    // const timer = setInterval(async () => {\n    //   const temp = await handleRewards.getPendingTotalRewards();\n    //   setBalanceAll(temp);\n    //   setFlag(false);\n    // }, 1000);\n    // setTimerID(timer);\n    return () => clearInterval(timerID);\n  }, [nftLists]);\n\n  useEffect(() => {\n    // handleRewards.getJlpTresrBonusRewardPerSecond();\n    // handleRewards.getJlpSmrtBonusRewardPerSecond();\n    // handleRewards.getKeyLevelBonusRewardPerSecond();\n\n    setVeTresrBalance(+claimableBonusVeTresrReward);\n    setJlpTresrBonusRewardBalance(+claimableBonusJlpTresrReward);\n    setJlpSmartrBonusRewardBalance(+claimableBonusJlpSmartrReward);\n    setKeyLevelBonusRewardBalance(+claimableBonusKeyLevelReward);\n    setBalanceTresrRewardsAll(+allNfkeyStaked);\n  }, [\n    claimableBonusVeTresrReward,\n    claimableBonusJlpTresrReward,\n    claimableBonusJlpSmartrReward,\n    allNfkeyStaked,\n    balanceTresrRewardsAll,\n    claimableBonusKeyLevelReward,\n  ]); // eslint-disable-line react-hooks/exhaustive-deps\n  // }, [allNfkeyStaked, balanceTresrRewardsAll])// eslint-disable-line react-hooks/exhaustive-deps\n\n  // useEffect(() => {\n  //   setBalanceAll(\n  //     +balanceTresrRewardsAll +\n  //       veTresrBalance +\n  //       jlpSmartrBonusRewardBalance +\n  //       jlpTresrBonusRewardBalance +\n  //       keyLevelBonusRewardBalance\n  //   );\n  //   // setBalanceAll(+balanceTresrRewardsAll)\n  //   setBalanceBonusAll(\n  //     +veTresrBalance +\n  //       jlpSmartrBonusRewardBalance +\n  //       jlpTresrBonusRewardBalance +\n  //       keyLevelBonusRewardBalance\n  //   );\n  // }, [\n  //   balanceTresrRewardsAll,\n  //   veTresrBalance,\n  //   jlpSmartrBonusRewardBalance,\n  //   jlpTresrBonusRewardBalance,\n  //   keyLevelBonusRewardBalance,\n  // ]); // eslint-disable-line react-hooks/exhaustive-deps\n  // }, [balanceTresrRewardsAll])// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <TotalPoolReward\n      isOpen={isOpen}\n      isDark={isDark}\n      flag={flag}\n      onToggleDetails={onToggleDetails}\n      balanceAll={balanceAll}\n      ownTokenRewardList={ownTokenRewardList}\n      balanceBonusAll={balanceBonusAll}\n      onClickClaimAllRewards={onClickClaimAllRewards}\n    />\n  );\n}\n","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTresrSmartrAvaxStakingWrapper/index.js",["1504","1505"],["1506","1507"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport useHandleRewards from \"../../../hooks/blockchain/useHandleRewards\";\nimport { formatterUS } from \"../../../utils\";\nimport useHandleModal from \"../../../hooks/dom/useHandleModal\";\nimport DashboardTresrSmartrAvaxStaking from \"../DashboardTresrSmartrAvaxStaking\";\nimport OnStakeTRESRModal from \"../DashboardModals/OnStakeTRESRModal\";\nimport OnUnstakeTRESRModal from \"../DashboardModals/OnUnstakeTRESRModal\";\nimport ApproveLoadingModal from \"../../common/Modals/ApproveLoadingModal\";\nimport {\n  APPROVE_STAKING_SMRTR,\n  APPROVE_STAKING_TRESR,\n} from \"../../../constant/approveLoadingModal\";\nimport useHandleLpStaking from \"../../../hooks/blockchain/useHandleLpStaking\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectLpCommunityStakedSMRTRAVAXBalance,\n  selectLpCommunityStakedTRESRAVAXBalance,\n  selectLpSMRTRAVAXBalance,\n  selectLpStakedSMRTRAVAXBalance,\n  selectLpStakedTRESRAVAXBalance,\n  selectLpTRESRAVAXBalance,\n  selectLpTotalStakedSMRTRAVAXBalance,\n  selectLpTotalStakedTRESRAVAXBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\n\nconst DashboardTresrSmartrAvaxStakingWrapper = ({\n  onConnectWallet,\n  onUnstakeLP,\n}) => {\n  const nftSelected = useSelector(selectNftSelected);\n  const user = useSelector(selectUser);\n  const lpTRESRAVAXBalance = useSelector(selectLpTRESRAVAXBalance);\n  const lpSMRTRAVAXBalance = useSelector(selectLpSMRTRAVAXBalance);\n  const lpStakedTRESRAVAXBalance = useSelector(selectLpStakedTRESRAVAXBalance);\n  const lpStakedSMRTRAVAXBalance = useSelector(selectLpStakedSMRTRAVAXBalance);\n  const lpTotalStakedTRESRAVAXBalance = useSelector(\n    selectLpTotalStakedTRESRAVAXBalance\n  );\n  const lpCommunityStakedTRESRAVAXBalance = useSelector(\n    selectLpCommunityStakedTRESRAVAXBalance\n  );\n  const lpTotalStakedSMRTRAVAXBalance = useSelector(\n    selectLpTotalStakedSMRTRAVAXBalance\n  );\n  const lpCommunityStakedSMRTRAVAXBalance = useSelector(\n    selectLpCommunityStakedSMRTRAVAXBalance\n  );\n  const handleLpStaking = useHandleLpStaking();\n\n  const [stake, setStake] = useState(\"\");\n  const [unstake, setUnstake] = useState(\"\");\n  const [isApproved, setIsApproved] = useState(false);\n\n  const handleRewards = useHandleRewards();\n  const handleStakeTRESRModal = useHandleModal();\n  const handleStakeSMRTRModal = useHandleModal();\n  const handleUnstakeTRESRModal = useHandleModal();\n  const handleUnstakeSMRTRModal = useHandleModal();\n  const handleApproveStakingTresrModal = useHandleModal();\n  const handleApproveStakingSmrtrModal = useHandleModal();\n\n  const jlpTresrBonusRewardPerSecond = formatterUS(\n    +handleRewards?.jlpTresrBonusRewardPerSecond * 60 * 60 * 24\n  );\n  const jlpSmrtBonusRewardPerSecond = formatterUS(\n    +handleRewards?.jlpSmrtBonusRewardPerSecond * 60 * 60 * 24\n  );\n\n  const balanceLPTRESR = formatterUS(lpTRESRAVAXBalance);\n  const balanceLPSMRTR = formatterUS(lpSMRTRAVAXBalance);\n\n  const balanceLPStakedTRESR = formatterUS(lpStakedTRESRAVAXBalance);\n  const balanceLPStakedSMRTR = formatterUS(lpStakedSMRTRAVAXBalance);\n\n  // const balanceLPTotalStaked = isTRESR ? formatterUS(lpTotalStakedTRESRAVAXBalance) : formatterUS(lpTotalStakedSMRTRAVAXBalance);\n\n  // const poolShareCalcTRESR = lpStakedTRESRAVAXBalance ? formatterUS((lpStakedTRESRAVAXBalance * 100) / lpTotalStakedTRESRAVAXBalance) : 0;\n  // const poolShareCalcSMRTR = lpStakedSMRTRAVAXBalance ? formatterUS((lpStakedSMRTRAVAXBalance * 100) / lpTotalStakedSMRTRAVAXBalance) : 0;\n\n  const onChangeStake = (event) =>\n    !isNaN(event?.target?.value) && setStake(event?.target?.value);\n  const onChangeUnstake = (event) =>\n    !isNaN(event?.target?.value) && setUnstake(event?.target?.value);\n\n  const onApprove = (amount, isTRESR) => {\n    isTRESR\n      ? handleApproveStakingTresrModal.open()\n      : handleApproveStakingSmrtrModal.open();\n\n    handleLpStaking\n      .approveLP(amount, isTRESR)\n      .then(() => {\n        setIsApproved(true);\n      })\n      .catch(() => {\n        setIsApproved(false);\n        isTRESR\n          ? handleApproveStakingTresrModal.close()\n          : handleApproveStakingSmrtrModal.close();\n        return null;\n      });\n  };\n\n  const onStakeCloseTRESR = () => {\n    handleStakeTRESRModal.close();\n    setStake(\"\");\n  };\n  const onUnstakeCloseTRESR = () => {\n    handleUnstakeTRESRModal.close();\n    setUnstake(\"\");\n  };\n\n  const onStakeCloseSMRTR = () => {\n    handleStakeSMRTRModal.close();\n    setStake(\"\");\n  };\n  const onUnstakeCloseSMRTR = () => {\n    handleUnstakeSMRTRModal.close();\n    setUnstake(\"\");\n  };\n\n  const onStakeTRESR = () => {\n    //onStakeCloseTRESR();\n    onStakeLP(stake, true);\n  };\n  const onStakeSMRTR = () => {\n    //onStakeCloseSMRTR();\n    onStakeLP(stake, false);\n  };\n\n  const onApproveTRESR = () => {\n    handleStakeTRESRModal.close();\n    onApprove(stake, true);\n  };\n  const onApproveSMRTR = () => {\n    handleStakeSMRTRModal.close();\n    onApprove(stake, false);\n  };\n\n  const onUnstakeTRESR = () => {\n    onUnstakeCloseTRESR();\n    onUnstakeLP(unstake, true);\n  };\n  const onUnstakeSMRTR = () => {\n    onUnstakeCloseSMRTR();\n    onUnstakeLP(unstake, false);\n  };\n\n  const onCloseApproveStakingLPModal = () => {\n    handleApproveStakingTresrModal.close();\n    handleApproveStakingSmrtrModal.close();\n    setIsApproved(false);\n  };\n\n  const onStakeLP = (value, type) => {\n    handleLpStaking.stake(value, type).finally(onCloseApproveStakingLPModal);\n  };\n\n  const onClickStakeTRESR = () =>\n    !user?.wallet_id ? onConnectWallet() : handleStakeTRESRModal.open();\n  const onClickUnStakeTRESR = () =>\n    !user?.wallet_id ? onConnectWallet() : handleUnstakeTRESRModal.open();\n\n  const onClickStakeSMRTR = () =>\n    !user?.wallet_id ? onConnectWallet() : handleStakeSMRTRModal.open();\n  const onClickUnStakeSMRTR = () =>\n    !user?.wallet_id ? onConnectWallet() : handleUnstakeSMRTRModal.open();\n\n  useEffect(() => {\n    handleRewards.getJlpTresrBonusRewardPerSecond();\n  }, [nftSelected?.tokenId, balanceLPStakedTRESR]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    handleRewards.getJlpSmrtBonusRewardPerSecond();\n  }, [nftSelected?.tokenId, balanceLPStakedSMRTR]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"DashboardTresrSmartrAvaxStaking__container\">\n      <DashboardTresrSmartrAvaxStaking\n        isTRESR\n        balanceLP={formatterUS(lpTRESRAVAXBalance)}\n        onClickStake={onClickStakeTRESR}\n        onClickUnStake={onClickUnStakeTRESR}\n        balanceLPStaked={formatterUS(lpStakedTRESRAVAXBalance)}\n        poolShareCalc={formatterUS(lpTotalStakedTRESRAVAXBalance)}\n        communityLPStaked={formatterUS(lpCommunityStakedTRESRAVAXBalance)}\n        estDaily={jlpTresrBonusRewardPerSecond}\n      />\n      <DashboardTresrSmartrAvaxStaking\n        balanceLP={formatterUS(lpSMRTRAVAXBalance)}\n        onClickStake={onClickStakeSMRTR}\n        onClickUnStake={onClickUnStakeSMRTR}\n        balanceLPStaked={formatterUS(lpStakedSMRTRAVAXBalance)}\n        poolShareCalc={formatterUS(lpTotalStakedSMRTRAVAXBalance)}\n        communityLPStaked={formatterUS(lpCommunityStakedSMRTRAVAXBalance)}\n        estDaily={jlpSmrtBonusRewardPerSecond}\n      />\n      {handleStakeTRESRModal.isActive && (\n        <OnStakeTRESRModal\n          isOpen={handleStakeTRESRModal.isActive}\n          onClose={onStakeCloseTRESR}\n          onChangeStake={onChangeStake}\n          onStake={onApproveTRESR}\n          onStakeClose={onStakeCloseTRESR}\n          stake={stake}\n          setStake={setStake}\n          balance={lpTRESRAVAXBalance}\n          title=\"Stake TRESR-AVAX-LP\"\n          description=\"Are you sure? This action cannot be undone.\"\n          placeholder=\"0.000 TRESR-AVAX-LP\"\n          marginTop={45}\n        />\n      )}\n\n      {handleUnstakeTRESRModal.isActive && (\n        <OnUnstakeTRESRModal\n          onClose={onUnstakeCloseTRESR}\n          isOpen={handleUnstakeTRESRModal.isActive}\n          onChangeUnstake={onChangeUnstake}\n          onUnstake={onUnstakeTRESR}\n          onUnstakeClose={onUnstakeCloseTRESR}\n          unstake={unstake}\n          setUnstake={setUnstake}\n          balance={lpStakedTRESRAVAXBalance}\n          title=\"Unstake TRESR-AVAX-LP\"\n          description=\"\"\n          placeholder=\"0.000 TRESR-AVAX-LP\"\n          marginTop={115}\n        />\n      )}\n      {handleStakeSMRTRModal.isActive && (\n        <OnStakeTRESRModal\n          isOpen={handleStakeSMRTRModal.isActive}\n          onClose={onStakeCloseSMRTR}\n          onChangeStake={onChangeStake}\n          onStake={onApproveSMRTR}\n          onStakeClose={onStakeCloseSMRTR}\n          stake={stake}\n          setStake={setStake}\n          balance={lpSMRTRAVAXBalance}\n          title=\"Stake SMRTR-AVAX-LP\"\n          description=\"Are you sure? This action cannot be undone.\"\n          placeholder=\"0.000 SMRTR-AVAX-LP\"\n          marginTop={50}\n        />\n      )}\n      {handleUnstakeSMRTRModal.isActive && (\n        <OnUnstakeTRESRModal\n          onClose={onUnstakeCloseSMRTR}\n          isOpen={handleUnstakeSMRTRModal.isActive}\n          onChangeUnstake={onChangeUnstake}\n          onUnstake={onUnstakeSMRTR}\n          onUnstakeClose={onUnstakeCloseSMRTR}\n          unstake={unstake}\n          setUnstake={setUnstake}\n          balance={lpStakedSMRTRAVAXBalance}\n          title=\"Unstake SMRTR-AVAX-LP\"\n          description=\"\"\n          placeholder=\"0.000 SMRTR-AVAX-LP\"\n          marginTop={115}\n        />\n      )}\n      {handleApproveStakingTresrModal.isActive && (\n        <ApproveLoadingModal\n          isOpen={handleApproveStakingTresrModal.isActive}\n          status={APPROVE_STAKING_TRESR}\n          isApproved={isApproved}\n          onClose={onCloseApproveStakingLPModal}\n          onNextStep={onStakeTRESR}\n        />\n      )}\n      {handleApproveStakingSmrtrModal.isActive && (\n        <ApproveLoadingModal\n          isOpen={handleApproveStakingSmrtrModal.isActive}\n          status={APPROVE_STAKING_SMRTR}\n          isApproved={isApproved}\n          onClose={onCloseApproveStakingLPModal}\n          onNextStep={onStakeSMRTR}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DashboardTresrSmartrAvaxStakingWrapper;\n","/Users/apple/Documents/treasure/src/api/PriceApi.js",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/KeyRewardCard/keyRewardCard.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/atom/SingleSelect/singleSelect.jsx",[],[],"/Users/apple/Documents/treasure/src/utils/socials.js",[],[],"/Users/apple/Documents/treasure/src/storybook/atom/Label/label.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/WalletCard/walletCard.jsx",["1508"],[],"import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport Icon from \"storybook/atom/Icon/icon\";\nimport Tooltip from \"storybook/atom/Tooltip/tooltip\";\nimport { FOOTER_WALLET_ADDRESS } from \"constant/singleNFTPage\";\n\nconst WalletCard = ({ isMobile }) => {\n  const [isCopied, setIsCopied] = useState(-1);\n  const [isCopiedWallet, setIsCopiedWallet] = useState(-1);\n\n  const onCopyImg = (text, index) => {\n    navigator.clipboard.writeText(text).then(() => {\n      setIsCopied(index);\n      setTimeout(() => setIsCopied(-1), 3000);\n    });\n  };\n\n  const onCopyImgWallet = (text, index) => {\n    navigator.clipboard.writeText(text).then(() => {\n      setIsCopiedWallet(index);\n      setTimeout(() => setIsCopiedWallet(-1), 3000);\n    });\n  };\n\n  console.log(FOOTER_WALLET_ADDRESS, \"kkk\");\n  return (\n    <div className=\"wallet__card--wrapper\">\n      {FOOTER_WALLET_ADDRESS?.map((item, key) => (\n        <div key={key} className=\"card__view\">\n          <p>{item.label}</p>\n          <div className=\"wallet-tab\">\n            <div className=\"wallet_tab--copytext\">\n              <Tooltip\n                className={classNames(\"\", {\n                  copied: isCopied === key,\n                  not__copied: isCopied !== key,\n                })}\n                title={isCopied === key ? \"Copied  ✓\" : \"Copy contract address\"}\n              >\n                <div onClick={() => onCopyImg(item.addr, key)} className=\"\">\n                  {item.addr.slice(0, 4) + \"...\" + item.addr.slice(-4)}\n                </div>\n              </Tooltip>\n            </div>\n            <div className=\"wallet_tab--icon\">\n              <Tooltip title=\"View on Snowtrace.io\">\n                <a\n                  href={`https://testnet.snowtrace.io/address/${item.addr}`}\n                  target=\"_blank\"\n                >\n                  <Icon iconName={\"eye\"} />\n                </a>\n              </Tooltip>\n            </div>\n\n            {item.addable && (\n              <div className=\"wallet_tab--icon\">\n                <Tooltip\n                  className={classNames(\"\", {\n                    copied: isCopied === key,\n                    not__copied: isCopied !== key,\n                  })}\n                  title={\n                    isCopiedWallet === key\n                      ? \"Copied  ✓\"\n                      : \"Copy contract address\"\n                  }\n                >\n                  <span\n                    className=\"wallet_walletIcon\"\n                    onClick={() => onCopyImgWallet(item.addr, key)}\n                  >\n                    <Icon iconName={\"wallet\"} />\n                  </span>\n                </Tooltip>\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default WalletCard;\n","/Users/apple/Documents/treasure/src/storybook/molecule/TreasureBox/treasureBox.jsx",["1509"],[],"import React from \"react\";\nimport \"./style.scss\";\nimport Tooltip from \"storybook/atom/Tooltip/tooltip\";\nimport treasureImg from \"../../atom/Icon/svg/treasure.png\";\nimport { TreasureTire } from \"../TreasureTier/treasureTier.stories\";\nimport Timer from \"../Timer/timer\";\n\nconst TreasureBox = ({\n  isAnimated,\n  nftSelected,\n  openAttemptTitle,\n  nextTierEstTitle,\n  progressWidth,\n  onAction,\n  hours,\n  minutes,\n  seconds,\n  days,\n}) => {\n  return (\n    <div\n      className={`treasure-tile ${\n        isAnimated ? \"nft__image--placeholder treasure-tile__isAnimated\" : \"\"\n      }`}\n    >\n      {!isAnimated && (\n        <div className=\"treasure-tile__left\">\n          {!nftSelected && <div className=\"treasure-tile__blurred\" />}\n          {!!(nftSelected?.staked || !nftSelected) ? (\n            nftSelected?.tierTresr != 0 ? (\n              <>\n                <div className=\"treasure-tile__left__title\">\n                  Treasure Tier expires in\n                </div>\n                <Timer\n                  hours={hours}\n                  minutes={minutes}\n                  seconds={seconds}\n                  days={days}\n                />\n              </>\n            ) : (\n              <>\n                <div className=\"treasure-tile__left__title text-center\">\n                  Unlock a Treasure Box to Start Earning $TRESR\n                </div>\n              </>\n            )\n          ) : (\n            <div className=\"treasure-tile__left__title\">\n              Need to Activate Founder's Key\n            </div>\n          )}\n          <div className=\"treasure-tile__left__description\">\n            <span className=\"-mt-1\">Open Attempt</span>\n            <Tooltip title={\"Burn $TRESR to attempt Unlock\"}>\n              <div className=\"flex\">\n                <div className=\"-mt-1\">{openAttemptTitle}</div>\n                <div className=\"w-[23px] ml-[5px] -mr-[35px]\"></div>\n              </div>\n            </Tooltip>\n          </div>\n\n          <div className=\"treasure-tile__left__description treasure-tile__left__description--bottom\">\n            <span className=\"-mt-1\">Next Tier Est. Monthly</span>\n            <div className=\"flex\">\n              <div className=\"-mt-1\">{nextTierEstTitle}</div>\n              <div className=\"w-[23px] ml-[5px] -mr-[35px]\"></div>\n            </div>\n          </div>\n          <TreasureTire\n            progressWidth={progressWidth}\n            nftSelected={nftSelected}\n          />\n        </div>\n      )}\n      <div className=\"treasure-tile__right\">\n        <div className=\"treasure-tile__right__wrapper\">\n          <img src={treasureImg} alt=\"\" />\n          <button className={`button active`} onClick={onAction}>\n            Unlock\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TreasureBox;\n","/Users/apple/Documents/treasure/src/storybook/molecule/ZoneItem/zoneItem.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/TimedMarketplaceButton/timedMarketplaceButton.jsx",["1510"],[],"import React from \"react\";\nimport \"./style.scss\";\nimport { useCountdown } from \"hooks/useCountdown\";\nimport Tooltip from \"storybook/atom/Tooltip/tooltip\";\nimport Button from \"storybook/atom/Button/button\";\n\nconst TimedMarketplaceButton = ({\n  isInsufficientBalance,\n  onClick,\n  disabled,\n  currentLevel,\n  hours,\n  minutes,\n  seconds,\n  isTimeToUpgrade,\n  isUpgrade,\n}) => {\n  return (\n    <>\n      {isInsufficientBalance && (\n        <Button label={\"Insufficient balance\"} disabled />\n      )}\n      {isTimeToUpgrade && (\n        <Button\n          label={`Time to upgrade: ${hours}:${minutes}:${seconds}`}\n          disabled\n        />\n      )}\n      {isUpgrade && (\n        <div className=\"timed__marketplace__upgradeButton\">\n          <Tooltip title={\"Upgrade Key Level by Burning $SMRTR\"}>\n            <Button\n              size=\"medium\"\n              label={currentLevel >= 150 ? \"Max level\" : \"Upgrade\"}\n              onClick={onClick}\n              disabled={disabled}\n            />\n          </Tooltip>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TimedMarketplaceButton;\n","/Users/apple/Documents/treasure/src/storybook/molecule/SmallKeyTimer/smallKeyTimer.jsx",["1511"],[],"import React, { useMemo } from \"react\";\nimport \"./style.scss\";\n\nconst SmallKeyTimer = ({ days, hours, minutes, seconds, isActive }) => {\n  return useMemo(\n    () => (\n      <div\n        className={`smallKeyTimer ${isActive ? \"smallKeyTimer__isActive\" : \"\"}`}\n      >\n        <div>{days > 0 ? days : \"00\"}</div>\n        <div>:</div>\n\n        <div>{hours > 0 ? hours : \"00\"}</div>\n        <div>:</div>\n\n        <div>{minutes > 0 ? minutes : \"00\"}</div>\n        <div>:</div>\n\n        <div>{seconds > 0 ? seconds : \"00\"}</div>\n      </div>\n    ),\n    [days, hours, minutes, seconds]\n  );\n};\n\nexport default SmallKeyTimer;\n","/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/OnStakeTRESRModal/index.js",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardModals/OnUnstakeTRESRModal/index.js",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/VotingCard/votingCard.jsx",[],[],"/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTresrSmartrAvaxStaking/index.js",[],[],"/Users/apple/Documents/treasure/src/components/common/Tooltip/index.js",["1512"],[],"import React from 'react';\nimport './style.scss'\nimport cn from \"classnames\"\n\nconst Tooltip = ({children, tooltipText, top = -55, isBottom, width = 190, left = 50, style}) => {\n    return (\n        <div className='tooltip'>\n            {children}\n            <span\n                className={`tooltip__text ${isBottom ? 'tooltip__text--isBottom' : ''}`}\n                style={{top: `${top}px`, width: `${width}px`, left: `${left}%`, ...style}}>\n                {tooltipText}\n            </span>\n        </div>\n    );\n};\n\nexport default Tooltip;\n","/Users/apple/Documents/treasure/src/storybook/molecule/BonusCard/bonusCard.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/TotalPoolReward/totalPoolReward.jsx",["1513"],[],"import React, { useState } from \"react\";\nimport \"./style.scss\";\nimport refreshIcon from \"../../atom/Icon/svg/refresh.svg\";\nimport infoImg from \"../../atom/Icon/svg/info_img.svg\";\nimport infoImgDark from \"../../atom/Icon/svg/info_img_dark.svg\";\nimport { useNavigate } from \"react-router-dom\";\nimport Tooltip from \"storybook/atom/Tooltip/tooltip\";\nimport { formatterUS } from \"utils\";\nimport Loader from \"storybook/atom/Loader/loader\";\nimport Button from \"storybook/atom/Button/button\";\nimport KeyRewards from \"../KeyReward/keyReward\";\n\nconst TotalPoolReward = ({\n  isOpen,\n  isDark,\n  flag,\n  onToggleDetails,\n  balanceAll,\n  ownTokenRewardList = [],\n  balanceBonusAll,\n  onClickClaimAllRewards,\n}) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className={`totalPoolReward ${isOpen ? \"totalPoolReward__open\" : \"\"}`}>\n      <div className=\"totalPoolReward__image\">\n        <Tooltip\n          title=\"Total Pool Rewards combines all Founder’s Keys Rewards and Bonus Pool Rewards\"\n          position=\"left\"\n        >\n          <img src={isDark ? infoImg : infoImgDark} alt={\"\"} />\n        </Tooltip>\n      </div>\n      <div className=\"refresh__wrapper\" onClick={() => navigate(0)}>\n        <Tooltip title=\"Force Update\">\n          <img src={refreshIcon} alt=\"\" />\n        </Tooltip>\n      </div>\n      <div className=\"totalPoolReward__info\">\n        <div className=\"totalPoolReward__info--title\">Total Rewards</div>\n        <div className=\"totalPoolReward__info--wrapper\">\n          <div\n            className=\"totalPoolReward__info--count\"\n            onClick={onToggleDetails}\n          >\n            {formatterUS(balanceAll)}\n            <div\n              className={`totalPoolReward__info--arrow ${\n                isOpen ? \"totalPoolReward__info--arrow__open\" : \"\"\n              }`}\n            />\n          </div>\n          <div className=\"totalPoolReward__info--loader\">\n            {flag && (\n              <Loader\n                size=\"extraSmall\"\n                variant={isDark ? \"primary\" : \"secondary\"}\n              />\n            )}\n          </div>\n        </div>\n        <div\n          className={`totalPoolReward__details ${\n            isOpen ? \"totalPoolReward__details--open\" : \"\"\n          }`}\n        >\n          {!!ownTokenRewardList?.length &&\n            ownTokenRewardList?.map((item, key) => (\n              <KeyRewards token={item} key={key} />\n            ))}\n          {\n            <div className=\"totalPoolReward__details--block\">\n              <span className=\"totalPoolReward__details--text\">\n                Bonus Rewards\n              </span>\n              <span className=\"totalPoolReward__details--value\">\n                {formatterUS(balanceBonusAll)}\n              </span>\n            </div>\n          }\n        </div>\n        <div className=\"totalPoolReward__info--subtitle\">\n          Available $TRESR to claim\n        </div>\n      </div>\n      <div className=\"totalPoolReward__actions\">\n        <Button\n          size=\"large\"\n          onClick={onClickClaimAllRewards}\n          label=\"Claim All Rewards\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TotalPoolReward;\n","/Users/apple/Documents/treasure/src/storybook/molecule/TreasureTier/treasureTier.stories.jsx",["1514"],[],"import React from \"react\";\nimport { default as TreasureTireStory } from \"./treasureTier\";\n\nexport default {\n  title: \"Molecules/TreasureTire\",\n  component: TreasureTireStory,\n  argTypes: {},\n};\n\nconst Template = (args) => <TreasureTireStory {...args} />;\n\nexport const TreasureTire = Template.bind({});\n\nTreasureTire.args = {\n  progressWidth: 50,\n};\n","/Users/apple/Documents/treasure/src/storybook/molecule/Timer/timer.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/PoolReward/poolReward.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/VotingESCrow/votinEsCrow.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/KeyReward/keyReward.jsx",["1515","1516"],["1517"],"import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\n\nconst KeyRewards = ({ token }) => {\n  const [rewardsPerSec, setRewardsPerSec] = useState(0);\n  const [rewards, setRewards] = useState(0);\n  const [timerID, setTimerID] = useState(0);\n\n  useEffect(() => {\n    setRewards(+token?.reward);\n    clearInterval(timerID);\n    return () => clearInterval(timerID);\n  }, [rewardsPerSec, token?.reward]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"keyReward__block\">\n      <span className=\"keyReward__text\">Founder’s Key #{token?.tokenID}</span>\n      <span className=\"keyReward__value\">\n        {rewards ? rewards?.toFixed(5) : 0}\n      </span>\n    </div>\n  );\n};\n\nexport default KeyRewards;\n","/Users/apple/Documents/treasure/src/storybook/molecule/BonusRewardCard/bonusRewardCard.jsx",[],[],"/Users/apple/Documents/treasure/src/storybook/molecule/TreasureTier/treasureTier.jsx",["1518"],[],"import React from \"react\";\nimport \"./style.scss\";\nimport Tooltip from \"storybook/atom/Tooltip/tooltip\";\nimport { MAX_CHEST_TIER } from \"constant/blockchain\";\nimport { position } from \"tailwindcss-classnames\";\n\nconst TreasureTier = ({ progressWidth, nftSelected }) => {\n  return (\n    <Tooltip\n      title={\"Increase by Opening to Treasure Increase Base Rewards\"}\n      position=\"top\"\n    >\n      <div className=\"treasure-tile__left__progress\">\n        <div\n          className=\"treasure-tile__left__progress--line\"\n          style={{ width: `${progressWidth}%` }}\n        />\n        <div className=\"treasure-tile__left__progress--text\">\n          Treasure Tier: {nftSelected?.tierTresr}/{MAX_CHEST_TIER}\n        </div>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default TreasureTier;\n",{"ruleId":"1519","severity":1,"message":"1520","line":62,"column":28,"nodeType":"1521","messageId":"1522","endLine":62,"endColumn":30},{"ruleId":"1523","severity":1,"message":"1524","line":67,"column":17,"nodeType":"1525","endLine":67,"endColumn":75},{"ruleId":"1523","severity":1,"message":"1524","line":80,"column":17,"nodeType":"1525","endLine":80,"endColumn":72},{"ruleId":"1526","severity":1,"message":"1527","line":5,"column":8,"nodeType":"1528","messageId":"1529","endLine":5,"endColumn":16},{"ruleId":"1526","severity":1,"message":"1530","line":1,"column":10,"nodeType":"1528","messageId":"1529","endLine":1,"endColumn":19},{"ruleId":"1531","severity":1,"message":"1532","line":42,"column":6,"nodeType":"1533","endLine":42,"endColumn":11,"suggestions":"1534"},{"ruleId":"1531","severity":1,"message":"1535","line":33,"column":6,"nodeType":"1533","endLine":33,"endColumn":8,"suggestions":"1536","suppressions":"1537"},{"ruleId":"1531","severity":1,"message":"1538","line":84,"column":6,"nodeType":"1533","endLine":84,"endColumn":12,"suggestions":"1539","suppressions":"1540"},{"ruleId":"1526","severity":1,"message":"1541","line":1,"column":10,"nodeType":"1528","messageId":"1529","endLine":1,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1542","line":29,"column":29,"nodeType":"1528","messageId":"1529","endLine":29,"endColumn":49},{"ruleId":"1526","severity":1,"message":"1543","line":71,"column":9,"nodeType":"1528","messageId":"1529","endLine":71,"endColumn":20},{"ruleId":"1526","severity":1,"message":"1544","line":76,"column":26,"nodeType":"1528","messageId":"1529","endLine":76,"endColumn":43},{"ruleId":"1531","severity":1,"message":"1545","line":51,"column":6,"nodeType":"1533","endLine":51,"endColumn":8,"suggestions":"1546","suppressions":"1547"},{"ruleId":"1531","severity":1,"message":"1548","line":63,"column":6,"nodeType":"1533","endLine":63,"endColumn":70,"suggestions":"1549","suppressions":"1550"},{"ruleId":"1531","severity":1,"message":"1551","line":63,"column":7,"nodeType":"1552","endLine":63,"endColumn":69,"suppressions":"1553"},{"ruleId":"1531","severity":1,"message":"1554","line":133,"column":6,"nodeType":"1533","endLine":133,"endColumn":15,"suggestions":"1555","suppressions":"1556"},{"ruleId":"1526","severity":1,"message":"1557","line":71,"column":10,"nodeType":"1528","messageId":"1529","endLine":71,"endColumn":28},{"ruleId":"1526","severity":1,"message":"1558","line":128,"column":10,"nodeType":"1528","messageId":"1529","endLine":128,"endColumn":20},{"ruleId":"1531","severity":1,"message":"1559","line":988,"column":6,"nodeType":"1533","endLine":988,"endColumn":8,"suggestions":"1560"},{"ruleId":"1561","severity":1,"message":"1562","line":1026,"column":5,"nodeType":"1563","messageId":"1564","endLine":1032,"endColumn":7},{"ruleId":"1565","severity":1,"message":"1566","line":1375,"column":53,"nodeType":"1567","messageId":"1568","endLine":1375,"endColumn":54},{"ruleId":"1531","severity":1,"message":"1569","line":994,"column":6,"nodeType":"1533","endLine":994,"endColumn":23,"suggestions":"1570","suppressions":"1571"},{"ruleId":"1531","severity":1,"message":"1572","line":1033,"column":6,"nodeType":"1533","endLine":1033,"endColumn":21,"suggestions":"1573","suppressions":"1574"},{"ruleId":"1531","severity":1,"message":"1575","line":1042,"column":6,"nodeType":"1533","endLine":1042,"endColumn":26,"suggestions":"1576","suppressions":"1577"},{"ruleId":"1531","severity":1,"message":"1578","line":1047,"column":6,"nodeType":"1533","endLine":1047,"endColumn":26,"suggestions":"1579","suppressions":"1580"},{"ruleId":"1531","severity":1,"message":"1581","line":26,"column":6,"nodeType":"1533","endLine":26,"endColumn":21,"suggestions":"1582","suppressions":"1583"},{"ruleId":"1526","severity":1,"message":"1584","line":3,"column":8,"nodeType":"1528","messageId":"1529","endLine":3,"endColumn":16},{"ruleId":"1531","severity":1,"message":"1585","line":47,"column":6,"nodeType":"1533","endLine":47,"endColumn":14,"suggestions":"1586"},{"ruleId":"1523","severity":1,"message":"1524","line":67,"column":9,"nodeType":"1525","endLine":67,"endColumn":30},{"ruleId":"1526","severity":1,"message":"1587","line":8,"column":8,"nodeType":"1528","messageId":"1529","endLine":8,"endColumn":16},{"ruleId":"1526","severity":1,"message":"1588","line":29,"column":10,"nodeType":"1528","messageId":"1529","endLine":29,"endColumn":20},{"ruleId":"1531","severity":1,"message":"1589","line":56,"column":6,"nodeType":"1533","endLine":56,"endColumn":8,"suggestions":"1590","suppressions":"1591"},{"ruleId":"1531","severity":1,"message":"1592","line":301,"column":6,"nodeType":"1533","endLine":301,"endColumn":15,"suggestions":"1593","suppressions":"1594"},{"ruleId":"1531","severity":1,"message":"1595","line":31,"column":6,"nodeType":"1533","endLine":31,"endColumn":23,"suggestions":"1596"},{"ruleId":"1531","severity":1,"message":"1595","line":43,"column":6,"nodeType":"1533","endLine":43,"endColumn":23,"suggestions":"1597"},{"ruleId":"1531","severity":1,"message":"1598","line":55,"column":6,"nodeType":"1533","endLine":55,"endColumn":36,"suggestions":"1599"},{"ruleId":"1531","severity":1,"message":"1600","line":65,"column":6,"nodeType":"1533","endLine":65,"endColumn":34,"suggestions":"1601"},{"ruleId":"1531","severity":1,"message":"1598","line":77,"column":6,"nodeType":"1533","endLine":77,"endColumn":36,"suggestions":"1602"},{"ruleId":"1531","severity":1,"message":"1603","line":87,"column":6,"nodeType":"1533","endLine":87,"endColumn":34,"suggestions":"1604"},{"ruleId":"1531","severity":1,"message":"1598","line":99,"column":6,"nodeType":"1533","endLine":99,"endColumn":36,"suggestions":"1605"},{"ruleId":"1531","severity":1,"message":"1606","line":109,"column":6,"nodeType":"1533","endLine":109,"endColumn":34,"suggestions":"1607"},{"ruleId":"1531","severity":1,"message":"1598","line":121,"column":6,"nodeType":"1533","endLine":121,"endColumn":36,"suggestions":"1608"},{"ruleId":"1531","severity":1,"message":"1609","line":132,"column":6,"nodeType":"1533","endLine":132,"endColumn":34,"suggestions":"1610"},{"ruleId":"1531","severity":1,"message":"1598","line":144,"column":6,"nodeType":"1533","endLine":144,"endColumn":36,"suggestions":"1611"},{"ruleId":"1531","severity":1,"message":"1612","line":154,"column":6,"nodeType":"1533","endLine":154,"endColumn":34,"suggestions":"1613"},{"ruleId":"1531","severity":1,"message":"1598","line":166,"column":6,"nodeType":"1533","endLine":166,"endColumn":36,"suggestions":"1614"},{"ruleId":"1531","severity":1,"message":"1615","line":176,"column":6,"nodeType":"1533","endLine":176,"endColumn":34,"suggestions":"1616"},{"ruleId":"1531","severity":1,"message":"1598","line":188,"column":6,"nodeType":"1533","endLine":188,"endColumn":36,"suggestions":"1617"},{"ruleId":"1531","severity":1,"message":"1618","line":198,"column":6,"nodeType":"1533","endLine":198,"endColumn":34,"suggestions":"1619"},{"ruleId":"1531","severity":1,"message":"1598","line":210,"column":6,"nodeType":"1533","endLine":210,"endColumn":36,"suggestions":"1620"},{"ruleId":"1531","severity":1,"message":"1621","line":220,"column":6,"nodeType":"1533","endLine":220,"endColumn":34,"suggestions":"1622"},{"ruleId":"1531","severity":1,"message":"1598","line":232,"column":6,"nodeType":"1533","endLine":232,"endColumn":36,"suggestions":"1623"},{"ruleId":"1531","severity":1,"message":"1624","line":242,"column":6,"nodeType":"1533","endLine":242,"endColumn":34,"suggestions":"1625"},{"ruleId":"1531","severity":1,"message":"1598","line":254,"column":6,"nodeType":"1533","endLine":254,"endColumn":36,"suggestions":"1626"},{"ruleId":"1531","severity":1,"message":"1627","line":264,"column":6,"nodeType":"1533","endLine":264,"endColumn":34,"suggestions":"1628"},{"ruleId":"1531","severity":1,"message":"1598","line":276,"column":6,"nodeType":"1533","endLine":276,"endColumn":36,"suggestions":"1629"},{"ruleId":"1531","severity":1,"message":"1630","line":286,"column":6,"nodeType":"1533","endLine":286,"endColumn":34,"suggestions":"1631"},{"ruleId":"1531","severity":1,"message":"1598","line":298,"column":6,"nodeType":"1533","endLine":298,"endColumn":36,"suggestions":"1632"},{"ruleId":"1531","severity":1,"message":"1633","line":308,"column":6,"nodeType":"1533","endLine":308,"endColumn":34,"suggestions":"1634"},{"ruleId":"1531","severity":1,"message":"1598","line":320,"column":6,"nodeType":"1533","endLine":320,"endColumn":36,"suggestions":"1635"},{"ruleId":"1531","severity":1,"message":"1636","line":330,"column":6,"nodeType":"1533","endLine":330,"endColumn":34,"suggestions":"1637"},{"ruleId":"1531","severity":1,"message":"1598","line":342,"column":6,"nodeType":"1533","endLine":342,"endColumn":36,"suggestions":"1638"},{"ruleId":"1531","severity":1,"message":"1639","line":353,"column":6,"nodeType":"1533","endLine":353,"endColumn":34,"suggestions":"1640"},{"ruleId":"1531","severity":1,"message":"1598","line":365,"column":6,"nodeType":"1533","endLine":365,"endColumn":36,"suggestions":"1641"},{"ruleId":"1531","severity":1,"message":"1642","line":375,"column":6,"nodeType":"1533","endLine":375,"endColumn":34,"suggestions":"1643"},{"ruleId":"1531","severity":1,"message":"1644","line":391,"column":5,"nodeType":"1533","endLine":391,"endColumn":47,"suggestions":"1645"},{"ruleId":"1531","severity":1,"message":"1644","line":407,"column":5,"nodeType":"1533","endLine":407,"endColumn":47,"suggestions":"1646"},{"ruleId":"1519","severity":1,"message":"1647","line":304,"column":32,"nodeType":"1521","messageId":"1522","endLine":304,"endColumn":34},{"ruleId":"1526","severity":1,"message":"1648","line":314,"column":5,"nodeType":"1528","messageId":"1529","endLine":314,"endColumn":15},{"ruleId":"1526","severity":1,"message":"1649","line":315,"column":5,"nodeType":"1528","messageId":"1529","endLine":315,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1650","line":316,"column":5,"nodeType":"1528","messageId":"1529","endLine":316,"endColumn":17},{"ruleId":"1519","severity":1,"message":"1647","line":322,"column":30,"nodeType":"1521","messageId":"1522","endLine":322,"endColumn":32},{"ruleId":"1519","severity":1,"message":"1520","line":323,"column":13,"nodeType":"1521","messageId":"1522","endLine":323,"endColumn":15},{"ruleId":"1519","severity":1,"message":"1520","line":324,"column":15,"nodeType":"1521","messageId":"1522","endLine":324,"endColumn":17},{"ruleId":"1519","severity":1,"message":"1520","line":325,"column":15,"nodeType":"1521","messageId":"1522","endLine":325,"endColumn":17},{"ruleId":"1519","severity":1,"message":"1520","line":332,"column":32,"nodeType":"1521","messageId":"1522","endLine":332,"endColumn":34},{"ruleId":"1531","severity":1,"message":"1651","line":336,"column":6,"nodeType":"1533","endLine":336,"endColumn":31,"suggestions":"1652"},{"ruleId":"1519","severity":1,"message":"1520","line":369,"column":26,"nodeType":"1521","messageId":"1522","endLine":369,"endColumn":28},{"ruleId":"1531","severity":1,"message":"1653","line":365,"column":6,"nodeType":"1533","endLine":365,"endColumn":19,"suggestions":"1654","suppressions":"1655"},{"ruleId":"1519","severity":1,"message":"1520","line":14,"column":26,"nodeType":"1521","messageId":"1522","endLine":14,"endColumn":28},{"ruleId":"1519","severity":1,"message":"1520","line":27,"column":39,"nodeType":"1521","messageId":"1522","endLine":27,"endColumn":41},{"ruleId":"1519","severity":1,"message":"1520","line":35,"column":39,"nodeType":"1521","messageId":"1522","endLine":35,"endColumn":41},{"ruleId":"1526","severity":1,"message":"1656","line":13,"column":11,"nodeType":"1528","messageId":"1529","endLine":13,"endColumn":24},{"ruleId":"1561","severity":1,"message":"1562","line":13,"column":5,"nodeType":"1657","messageId":"1564","endLine":21,"endColumn":9},{"ruleId":"1561","severity":1,"message":"1562","line":11,"column":5,"nodeType":"1657","messageId":"1564","endLine":17,"endColumn":26},{"ruleId":"1561","severity":1,"message":"1562","line":11,"column":5,"nodeType":"1657","messageId":"1564","endLine":20,"endColumn":26},{"ruleId":"1561","severity":1,"message":"1562","line":11,"column":5,"nodeType":"1657","messageId":"1564","endLine":21,"endColumn":26},{"ruleId":"1519","severity":1,"message":"1520","line":9,"column":27,"nodeType":"1521","messageId":"1522","endLine":9,"endColumn":29},{"ruleId":"1519","severity":1,"message":"1520","line":9,"column":27,"nodeType":"1521","messageId":"1522","endLine":9,"endColumn":29},{"ruleId":"1526","severity":1,"message":"1658","line":18,"column":39,"nodeType":"1528","messageId":"1529","endLine":18,"endColumn":61},{"ruleId":"1526","severity":1,"message":"1557","line":6,"column":10,"nodeType":"1528","messageId":"1529","endLine":6,"endColumn":28},{"ruleId":"1526","severity":1,"message":"1659","line":8,"column":10,"nodeType":"1528","messageId":"1529","endLine":8,"endColumn":28},{"ruleId":"1526","severity":1,"message":"1660","line":25,"column":9,"nodeType":"1528","messageId":"1529","endLine":25,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1661","line":26,"column":9,"nodeType":"1528","messageId":"1529","endLine":26,"endColumn":15},{"ruleId":"1526","severity":1,"message":"1541","line":1,"column":10,"nodeType":"1528","messageId":"1529","endLine":1,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1662","line":6,"column":19,"nodeType":"1528","messageId":"1529","endLine":6,"endColumn":24},{"ruleId":"1526","severity":1,"message":"1660","line":16,"column":9,"nodeType":"1528","messageId":"1529","endLine":16,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1663","line":1,"column":10,"nodeType":"1528","messageId":"1529","endLine":1,"endColumn":34},{"ruleId":"1526","severity":1,"message":"1664","line":3,"column":10,"nodeType":"1528","messageId":"1529","endLine":3,"endColumn":22},{"ruleId":"1519","severity":1,"message":"1647","line":12,"column":21,"nodeType":"1521","messageId":"1522","endLine":12,"endColumn":23},{"ruleId":"1531","severity":1,"message":"1665","line":14,"column":6,"nodeType":"1533","endLine":14,"endColumn":17,"suggestions":"1666"},{"ruleId":"1526","severity":1,"message":"1664","line":27,"column":10,"nodeType":"1528","messageId":"1529","endLine":27,"endColumn":22},{"ruleId":"1531","severity":1,"message":"1667","line":128,"column":6,"nodeType":"1533","endLine":128,"endColumn":14,"suggestions":"1668","suppressions":"1669"},{"ruleId":"1531","severity":1,"message":"1548","line":60,"column":6,"nodeType":"1533","endLine":60,"endColumn":70,"suggestions":"1670","suppressions":"1671"},{"ruleId":"1531","severity":1,"message":"1551","line":60,"column":7,"nodeType":"1552","endLine":60,"endColumn":69,"suppressions":"1672"},{"ruleId":"1526","severity":1,"message":"1660","line":52,"column":9,"nodeType":"1528","messageId":"1529","endLine":52,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1673","line":54,"column":9,"nodeType":"1528","messageId":"1529","endLine":54,"endColumn":27},{"ruleId":"1531","severity":1,"message":"1674","line":182,"column":6,"nodeType":"1533","endLine":182,"endColumn":24,"suggestions":"1675"},{"ruleId":"1531","severity":1,"message":"1676","line":187,"column":6,"nodeType":"1533","endLine":187,"endColumn":23,"suggestions":"1677","suppressions":"1678"},{"ruleId":"1531","severity":1,"message":"1679","line":192,"column":6,"nodeType":"1533","endLine":192,"endColumn":31,"suggestions":"1680","suppressions":"1681"},{"ruleId":"1526","severity":1,"message":"1682","line":4,"column":16,"nodeType":"1528","messageId":"1529","endLine":4,"endColumn":26},{"ruleId":"1531","severity":1,"message":"1683","line":30,"column":6,"nodeType":"1533","endLine":30,"endColumn":17,"suggestions":"1684"},{"ruleId":"1526","severity":1,"message":"1685","line":61,"column":13,"nodeType":"1528","messageId":"1529","endLine":61,"endColumn":28},{"ruleId":"1519","severity":1,"message":"1647","line":45,"column":39,"nodeType":"1521","messageId":"1522","endLine":45,"endColumn":41},{"ruleId":"1526","severity":1,"message":"1686","line":55,"column":9,"nodeType":"1528","messageId":"1529","endLine":55,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1687","line":63,"column":9,"nodeType":"1528","messageId":"1529","endLine":63,"endColumn":28},{"ruleId":"1526","severity":1,"message":"1542","line":73,"column":29,"nodeType":"1528","messageId":"1529","endLine":73,"endColumn":49},{"ruleId":"1561","severity":1,"message":"1562","line":96,"column":5,"nodeType":"1688","messageId":"1564","endLine":96,"endColumn":40},{"ruleId":"1526","severity":1,"message":"1689","line":17,"column":10,"nodeType":"1528","messageId":"1529","endLine":17,"endColumn":21},{"ruleId":"1519","severity":1,"message":"1520","line":28,"column":26,"nodeType":"1521","messageId":"1522","endLine":28,"endColumn":28},{"ruleId":"1519","severity":1,"message":"1520","line":37,"column":26,"nodeType":"1521","messageId":"1522","endLine":37,"endColumn":28},{"ruleId":"1519","severity":1,"message":"1520","line":47,"column":39,"nodeType":"1521","messageId":"1522","endLine":47,"endColumn":41},{"ruleId":"1519","severity":1,"message":"1520","line":78,"column":49,"nodeType":"1521","messageId":"1522","endLine":78,"endColumn":51},{"ruleId":"1519","severity":1,"message":"1520","line":135,"column":52,"nodeType":"1521","messageId":"1522","endLine":135,"endColumn":54},{"ruleId":"1531","severity":1,"message":"1690","line":36,"column":6,"nodeType":"1533","endLine":36,"endColumn":18,"suggestions":"1691","suppressions":"1692"},{"ruleId":"1526","severity":1,"message":"1662","line":6,"column":28,"nodeType":"1528","messageId":"1529","endLine":6,"endColumn":33},{"ruleId":"1519","severity":1,"message":"1520","line":34,"column":48,"nodeType":"1521","messageId":"1522","endLine":34,"endColumn":50},{"ruleId":"1519","severity":1,"message":"1520","line":42,"column":26,"nodeType":"1521","messageId":"1522","endLine":42,"endColumn":28},{"ruleId":"1519","severity":1,"message":"1520","line":48,"column":37,"nodeType":"1521","messageId":"1522","endLine":48,"endColumn":39},{"ruleId":"1519","severity":1,"message":"1520","line":52,"column":49,"nodeType":"1521","messageId":"1522","endLine":52,"endColumn":51},{"ruleId":"1519","severity":1,"message":"1520","line":62,"column":26,"nodeType":"1521","messageId":"1522","endLine":62,"endColumn":28},{"ruleId":"1519","severity":1,"message":"1520","line":68,"column":37,"nodeType":"1521","messageId":"1522","endLine":68,"endColumn":39},{"ruleId":"1519","severity":1,"message":"1520","line":72,"column":49,"nodeType":"1521","messageId":"1522","endLine":72,"endColumn":51},{"ruleId":"1519","severity":1,"message":"1520","line":83,"column":41,"nodeType":"1521","messageId":"1522","endLine":83,"endColumn":43},{"ruleId":"1693","severity":1,"message":"1694","line":148,"column":32,"nodeType":"1695","messageId":"1696","endLine":148,"endColumn":34},{"ruleId":"1519","severity":1,"message":"1520","line":176,"column":51,"nodeType":"1521","messageId":"1522","endLine":176,"endColumn":53},{"ruleId":"1693","severity":1,"message":"1697","line":181,"column":37,"nodeType":"1695","messageId":"1698","endLine":181,"endColumn":39},{"ruleId":"1693","severity":1,"message":"1697","line":195,"column":37,"nodeType":"1695","messageId":"1698","endLine":195,"endColumn":39},{"ruleId":"1531","severity":1,"message":"1699","line":111,"column":6,"nodeType":"1533","endLine":111,"endColumn":31,"suggestions":"1700","suppressions":"1701"},{"ruleId":"1531","severity":1,"message":"1702","line":136,"column":6,"nodeType":"1533","endLine":136,"endColumn":14,"suggestions":"1703","suppressions":"1704"},{"ruleId":"1531","severity":1,"message":"1699","line":158,"column":6,"nodeType":"1533","endLine":158,"endColumn":23,"suggestions":"1705","suppressions":"1706"},{"ruleId":"1526","severity":1,"message":"1686","line":28,"column":9,"nodeType":"1528","messageId":"1529","endLine":28,"endColumn":17},{"ruleId":"1531","severity":1,"message":"1707","line":48,"column":6,"nodeType":"1533","endLine":48,"endColumn":14,"suggestions":"1708","suppressions":"1709"},{"ruleId":"1526","severity":1,"message":"1710","line":1,"column":17,"nodeType":"1528","messageId":"1529","endLine":1,"endColumn":25},{"ruleId":"1526","severity":1,"message":"1711","line":2,"column":8,"nodeType":"1528","messageId":"1529","endLine":2,"endColumn":18},{"ruleId":"1526","severity":1,"message":"1712","line":27,"column":19,"nodeType":"1528","messageId":"1529","endLine":27,"endColumn":29},{"ruleId":"1531","severity":1,"message":"1713","line":32,"column":6,"nodeType":"1533","endLine":32,"endColumn":8,"suggestions":"1714"},{"ruleId":"1531","severity":1,"message":"1715","line":52,"column":6,"nodeType":"1533","endLine":52,"endColumn":45,"suggestions":"1716","suppressions":"1717"},{"ruleId":"1526","severity":1,"message":"1718","line":4,"column":8,"nodeType":"1528","messageId":"1529","endLine":4,"endColumn":20},{"ruleId":"1719","severity":1,"message":"1720","line":33,"column":21,"nodeType":"1525","messageId":"1721","endLine":33,"endColumn":58,"fix":"1722"},{"ruleId":"1523","severity":1,"message":"1524","line":54,"column":15,"nodeType":"1525","endLine":57,"endColumn":17},{"ruleId":"1526","severity":1,"message":"1712","line":40,"column":19,"nodeType":"1528","messageId":"1529","endLine":40,"endColumn":29},{"ruleId":"1526","severity":1,"message":"1723","line":57,"column":9,"nodeType":"1528","messageId":"1529","endLine":57,"endColumn":27},{"ruleId":"1526","severity":1,"message":"1724","line":58,"column":9,"nodeType":"1528","messageId":"1529","endLine":58,"endColumn":27},{"ruleId":"1531","severity":1,"message":"1725","line":149,"column":6,"nodeType":"1533","endLine":149,"endColumn":8,"suggestions":"1726","suppressions":"1727"},{"ruleId":"1531","severity":1,"message":"1728","line":171,"column":6,"nodeType":"1533","endLine":171,"endColumn":55,"suggestions":"1729","suppressions":"1730"},{"ruleId":"1526","severity":1,"message":"1731","line":22,"column":25,"nodeType":"1528","messageId":"1529","endLine":22,"endColumn":41},{"ruleId":"1526","severity":1,"message":"1732","line":23,"column":29,"nodeType":"1528","messageId":"1529","endLine":23,"endColumn":49},{"ruleId":"1526","severity":1,"message":"1712","line":25,"column":19,"nodeType":"1528","messageId":"1529","endLine":25,"endColumn":29},{"ruleId":"1531","severity":1,"message":"1713","line":38,"column":6,"nodeType":"1533","endLine":38,"endColumn":40,"suggestions":"1733","suppressions":"1734"},{"ruleId":"1526","severity":1,"message":"1735","line":3,"column":8,"nodeType":"1528","messageId":"1529","endLine":3,"endColumn":25},{"ruleId":"1526","severity":1,"message":"1736","line":4,"column":8,"nodeType":"1528","messageId":"1529","endLine":4,"endColumn":15},{"ruleId":"1526","severity":1,"message":"1737","line":5,"column":8,"nodeType":"1528","messageId":"1529","endLine":5,"endColumn":19},{"ruleId":"1526","severity":1,"message":"1738","line":7,"column":8,"nodeType":"1528","messageId":"1529","endLine":7,"endColumn":15},{"ruleId":"1526","severity":1,"message":"1739","line":8,"column":10,"nodeType":"1528","messageId":"1529","endLine":8,"endColumn":20},{"ruleId":"1526","severity":1,"message":"1740","line":52,"column":10,"nodeType":"1528","messageId":"1529","endLine":52,"endColumn":14},{"ruleId":"1526","severity":1,"message":"1741","line":58,"column":9,"nodeType":"1528","messageId":"1529","endLine":58,"endColumn":24},{"ruleId":"1531","severity":1,"message":"1742","line":86,"column":6,"nodeType":"1533","endLine":86,"endColumn":8,"suggestions":"1743"},{"ruleId":"1531","severity":1,"message":"1744","line":70,"column":6,"nodeType":"1533","endLine":70,"endColumn":8,"suggestions":"1745","suppressions":"1746"},{"ruleId":"1526","severity":1,"message":"1747","line":3,"column":8,"nodeType":"1528","messageId":"1529","endLine":3,"endColumn":18},{"ruleId":"1526","severity":1,"message":"1748","line":5,"column":8,"nodeType":"1528","messageId":"1529","endLine":5,"endColumn":13},{"ruleId":"1526","severity":1,"message":"1749","line":13,"column":9,"nodeType":"1528","messageId":"1529","endLine":13,"endColumn":14},{"ruleId":"1531","severity":1,"message":"1750","line":23,"column":6,"nodeType":"1533","endLine":23,"endColumn":22,"suggestions":"1751","suppressions":"1752"},{"ruleId":"1526","severity":1,"message":"1753","line":33,"column":26,"nodeType":"1528","messageId":"1529","endLine":33,"endColumn":43},{"ruleId":"1526","severity":1,"message":"1712","line":36,"column":19,"nodeType":"1528","messageId":"1529","endLine":36,"endColumn":29},{"ruleId":"1526","severity":1,"message":"1754","line":37,"column":10,"nodeType":"1528","messageId":"1529","endLine":37,"endColumn":24},{"ruleId":"1526","severity":1,"message":"1755","line":38,"column":10,"nodeType":"1528","messageId":"1529","endLine":38,"endColumn":36},{"ruleId":"1526","severity":1,"message":"1756","line":40,"column":10,"nodeType":"1528","messageId":"1529","endLine":40,"endColumn":37},{"ruleId":"1526","severity":1,"message":"1757","line":42,"column":10,"nodeType":"1528","messageId":"1529","endLine":42,"endColumn":36},{"ruleId":"1526","severity":1,"message":"1758","line":44,"column":10,"nodeType":"1528","messageId":"1529","endLine":44,"endColumn":31},{"ruleId":"1526","severity":1,"message":"1759","line":44,"column":33,"nodeType":"1528","messageId":"1529","endLine":44,"endColumn":57},{"ruleId":"1526","severity":1,"message":"1686","line":51,"column":9,"nodeType":"1528","messageId":"1529","endLine":51,"endColumn":17},{"ruleId":"1531","severity":1,"message":"1699","line":83,"column":6,"nodeType":"1533","endLine":89,"endColumn":4,"suggestions":"1760"},{"ruleId":"1531","severity":1,"message":"1728","line":105,"column":6,"nodeType":"1533","endLine":105,"endColumn":16,"suggestions":"1761"},{"ruleId":"1526","severity":1,"message":"1762","line":72,"column":9,"nodeType":"1528","messageId":"1529","endLine":72,"endColumn":23},{"ruleId":"1526","severity":1,"message":"1763","line":73,"column":9,"nodeType":"1528","messageId":"1529","endLine":73,"endColumn":23},{"ruleId":"1531","severity":1,"message":"1559","line":174,"column":6,"nodeType":"1533","endLine":174,"endColumn":50,"suggestions":"1764","suppressions":"1765"},{"ruleId":"1531","severity":1,"message":"1559","line":178,"column":6,"nodeType":"1533","endLine":178,"endColumn":50,"suggestions":"1766","suppressions":"1767"},{"ruleId":"1719","severity":1,"message":"1720","line":48,"column":17,"nodeType":"1525","messageId":"1721","endLine":51,"endColumn":18,"fix":"1768"},{"ruleId":"1519","severity":1,"message":"1647","line":30,"column":36,"nodeType":"1521","messageId":"1522","endLine":30,"endColumn":38},{"ruleId":"1526","severity":1,"message":"1769","line":3,"column":10,"nodeType":"1528","messageId":"1529","endLine":3,"endColumn":22},{"ruleId":"1531","severity":1,"message":"1770","line":22,"column":5,"nodeType":"1533","endLine":22,"endColumn":36,"suggestions":"1771"},{"ruleId":"1526","severity":1,"message":"1772","line":3,"column":8,"nodeType":"1528","messageId":"1529","endLine":3,"endColumn":10},{"ruleId":"1526","severity":1,"message":"1710","line":1,"column":17,"nodeType":"1528","messageId":"1529","endLine":1,"endColumn":25},{"ruleId":"1773","severity":1,"message":"1774","line":4,"column":1,"nodeType":"1775","endLine":8,"endColumn":3},{"ruleId":"1526","severity":1,"message":"1776","line":5,"column":25,"nodeType":"1528","messageId":"1529","endLine":5,"endColumn":41},{"ruleId":"1526","severity":1,"message":"1712","line":7,"column":19,"nodeType":"1528","messageId":"1529","endLine":7,"endColumn":29},{"ruleId":"1531","severity":1,"message":"1713","line":13,"column":6,"nodeType":"1533","endLine":13,"endColumn":36,"suggestions":"1777","suppressions":"1778"},{"ruleId":"1526","severity":1,"message":"1779","line":5,"column":10,"nodeType":"1528","messageId":"1529","endLine":5,"endColumn":18},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'FAQsPage' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClose'. Either include it or remove the dependency array. If 'handleClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1780"],"React Hook useEffect has missing dependencies: 'handleAdmin?.fetchInfo', 'handleAuth', 'handleLoader', 'handleTheme', and 'user?._id'. Either include them or remove the dependency array.",["1781"],["1782"],"React Hook useEffect has missing dependencies: 'handleAuth?.logout', 'handleLoader', 'handleLpStaking', 'handleNFT', 'handleRewards', 'handleSocket', and 'walletConnect'. Either include them or remove the dependency array.",["1783"],["1784"],"'useMemo' is defined but never used.","'setTotalTRESRBalance' is assigned a value but never used.","'handleTheme' is assigned a value but never used.","'setVeClaimedTresr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleWalletConnect'. Either include it or remove the dependency array.",["1785"],["1786"],"React Hook useEffect has a missing dependency: 'deactivate'. Either include it or remove the dependency array.",["1787"],["1788"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["1789"],"React Hook useEffect has a missing dependency: 'onConnectWallet'. Either include it or remove the dependency array.",["1790"],["1791"],"'customStylesMobile' is defined but never used.","'activeLink' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleRewards'. Either include it or remove the dependency array.",["1792"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'setStickyHeader'. Either include it or remove the dependency array.",["1793"],["1794"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1795"],["1796"],"React Hook useEffect has missing dependencies: 'isAccountPage', 'isAllNFTPage', 'isGamePage', and 'isOneCollectionPage'. Either include them or remove the dependency array.",["1797"],["1798"],"React Hook useEffect has missing dependencies: 'dispatch', 'isCreatePage', and 'isOneNFTPage'. Either include them or remove the dependency array.",["1799"],["1800"],"React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array.",["1801"],["1802"],"'viewMore' is defined but never used.","React Hook useEffect has a missing dependency: 'TEXT.length'. Either include it or remove the dependency array.",["1803"],"'TokenApi' is defined but never used.","'isAnimated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTokenAmount'. Either include it or remove the dependency array.",["1804"],["1805"],"React Hook useEffect has a missing dependency: 'messageHandler'. Either include it or remove the dependency array.",["1806"],["1807"],"React Hook useMemo has a missing dependency: 'library'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1808"],["1809"],"React Hook useMemo has an unnecessary dependency: 'window.ethereum'. Either exclude it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1810"],"React Hook useMemo has a missing dependency: 'getContractWhitelist'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1811"],["1812"],"React Hook useMemo has a missing dependency: 'getContractNFKey'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1813"],["1814"],"React Hook useMemo has a missing dependency: 'getContractSmarterCoin'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1815"],["1816"],"React Hook useMemo has a missing dependency: 'getContractNFKeyStaking'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1817"],["1818"],"React Hook useMemo has a missing dependency: 'getContractTresrCoin'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1819"],["1820"],"React Hook useMemo has a missing dependency: 'getContractDailyBonusRewards'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1821"],["1822"],"React Hook useMemo has a missing dependency: 'getContractTresrStakingCoin'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1823"],["1824"],"React Hook useMemo has a missing dependency: 'getContractLpStakingTRESRAVAX'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1825"],["1826"],"React Hook useMemo has a missing dependency: 'getContractLpStakingSMRTRAVAX'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1827"],["1828"],"React Hook useMemo has a missing dependency: 'getContractLpCoinTRESRAVAX'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1829"],["1830"],"React Hook useMemo has a missing dependency: 'getContractLpCoinSMRTRRAVAX'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1831"],["1832"],"React Hook useMemo has a missing dependency: 'getContractMarketplaceListing'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1833"],["1834"],"React Hook useMemo has a missing dependency: 'getContractMarketplaceAuction'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1835"],["1836"],"React Hook useMemo has a missing dependency: 'getContractMarketplaceCommunityCollection'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1837"],["1838"],"React Hook useMemo has a missing dependency: 'getContractMasterChef'. Either include it or remove the dependency array. Outer scope values like 'window.ethereum' aren't valid dependencies because mutating them doesn't re-render the component.",["1839"],"React Hook useMemo has an unnecessary dependency: 'window.ethereums'. Either exclude it or remove the dependency array. Outer scope values like 'window.ethereums' aren't valid dependencies because mutating them doesn't re-render the component.",["1840"],["1841"],"Expected '!==' and instead saw '!='.","'hoursValue' is assigned a value but never used.","'minutesValue' is assigned a value but never used.","'secondsValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'handleToken', 'nftLists', 'nftSelected?.tierTresr', and 'nftSelected?.tokenId'. Either include them or remove the dependency array.",["1842"],"React Hook useEffect has missing dependencies: 'dispatch' and 'handleNFT'. Either include them or remove the dependency array.",["1843"],["1844"],"'isKeyContract' is assigned a value but never used.","VariableDeclaration","'DASHBOARD_TAB_MENU_FAQ' is defined but never used.","'customStylesTablet' is defined but never used.","'isMobile' is assigned a value but never used.","'isDark' is assigned a value but never used.","'sleep' is defined but never used.","'NFKEY_COLLECTION_ADDRESS' is defined but never used.","'customStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'countDown' and 'countDownDate'. Either include them or remove the dependency array.",["1845"],"React Hook useEffect has missing dependencies: 'buttonStatuses', 'loadingImages', and 'onCloseModal'. Either include them or remove the dependency array.",["1846"],["1847"],["1848"],["1849"],["1850"],"'MAX_TOKEN_PER_MINT' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleNFT', 'handleSuccessMintModal', and 'user?.wallet_id'. Either include them or remove the dependency array.",["1851"],"React Hook useEffect has missing dependencies: 'getAVAXPrice' and 'getUserZones'. Either include them or remove the dependency array.",["1852"],["1853"],"React Hook useEffect has missing dependencies: 'calcSumAmount' and 'calcSumCommission'. Either include them or remove the dependency array.",["1854"],["1855"],"'IconsNames' is defined but never used.","React Hook useEffect has missing dependencies: 'activeKey', 'onClick', and 'variant'. Either include them or remove the dependency array. If 'onClick' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1856"],"'walletContainer' is assigned a value but never used.","'navigate' is assigned a value but never used.","'balanceMonthlyTresr' is assigned a value but never used.","ReturnStatement","'curDelToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array. If 'setButtonText' needs the current value of 'status', you can also switch to useReducer instead of useState and read 'status' in the reducer.",["1857"],["1858"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'handleNFT'. Either include it or remove the dependency array.",["1859"],["1860"],"React Hook useEffect has missing dependencies: 'filterTokenList', 'handleNFT', and 'handleTransactionLoadingModal'. Either include them or remove the dependency array. If 'setTokenList' needs the current value of 'filterTokenList', you can also switch to useReducer instead of useState and read 'filterTokenList' in the reducer.",["1861"],["1862"],["1863"],["1864"],"React Hook useEffect has missing dependencies: 'audio' and 'chestStatus'. Either include them or remove the dependency array.",["1865"],["1866"],"'useState' is defined but never used.","'classNames' is defined but never used.","'setTimerID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'timerID'. Either include it or remove the dependency array.",["1867"],"React Hook useEffect has missing dependencies: 'nftLists' and 'tokenIdList'. Either include them or remove the dependency array. If 'setTokenList' needs the current value of 'tokenIdList', you can also switch to useReducer instead of useState and read 'tokenIdList' in the reducer.",["1868"],["1869"],"'useHandleNFT' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1870","text":"1871"},"'balanceTotalEarned' is assigned a value but never used.","'balanceTresrStaked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'handleRewards', 'handleTresrStaking', and 'user?.wallet_id'. Either include them or remove the dependency array.",["1872"],["1873"],"React Hook useEffect has missing dependencies: 'handleRewards' and 'timerID'. Either include them or remove the dependency array.",["1874"],["1875"],"'setTimeToUpgrade' is assigned a value but never used.","'setStartUpgradeDelay' is assigned a value but never used.",["1876"],["1877"],"'MarketplaceButton' is defined but never used.","'infoImg' is defined but never used.","'infoImgDark' is defined but never used.","'Tooltip' is defined but never used.","'ClipLoader' is defined but never used.","'flag' is assigned a value but never used.","'balanceBonusAll' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'handleRewards', and 'timerID'. Either include them or remove the dependency array.",["1878"],"React Hook useEffect has missing dependencies: 'handleNFT', 'handleRewards', and 'handleTresrStaking'. Either include them or remove the dependency array.",["1879"],["1880"],"'arrowBlack' is defined but never used.","'cross' is defined but never used.","'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleNFT' and 'token?.tier'. Either include them or remove the dependency array.",["1881"],["1882"],"'setAllNfkeyStaked' is assigned a value but never used.","'veTresrBalance' is assigned a value but never used.","'jlpTresrBonusRewardBalance' is assigned a value but never used.","'jlpSmartrBonusRewardBalance' is assigned a value but never used.","'keyLevelBonusRewardBalance' is assigned a value but never used.","'tresrRewardsPerSecAll' is assigned a value but never used.","'setTresrRewardsPerSecAll' is assigned a value but never used.",["1883"],["1884"],"'balanceLPTRESR' is assigned a value but never used.","'balanceLPSMRTR' is assigned a value but never used.",["1885"],["1886"],["1887"],["1888"],{"range":"1889","text":"1871"},"'useCountdown' is defined but never used.","React Hook useMemo has a missing dependency: 'isActive'. Either include it or remove the dependency array.",["1890"],"'cn' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setRewardsPerSec' is assigned a value but never used.",["1891"],["1892"],"'position' is defined but never used.",{"desc":"1893","fix":"1894"},{"desc":"1895","fix":"1896"},{"kind":"1897","justification":"1898"},{"desc":"1899","fix":"1900"},{"kind":"1897","justification":"1898"},{"desc":"1901","fix":"1902"},{"kind":"1897","justification":"1898"},{"desc":"1903","fix":"1904"},{"kind":"1897","justification":"1898"},{"kind":"1897","justification":"1898"},{"desc":"1905","fix":"1906"},{"kind":"1897","justification":"1898"},{"desc":"1907","fix":"1908"},{"desc":"1909","fix":"1910"},{"kind":"1897","justification":"1898"},{"desc":"1911","fix":"1912"},{"kind":"1897","justification":"1898"},{"desc":"1913","fix":"1914"},{"kind":"1897","justification":"1898"},{"desc":"1915","fix":"1916"},{"kind":"1897","justification":"1898"},{"desc":"1917","fix":"1918"},{"kind":"1897","justification":"1898"},{"desc":"1919","fix":"1920"},{"desc":"1921","fix":"1922"},{"kind":"1897","justification":"1898"},{"desc":"1923","fix":"1924"},{"kind":"1897","justification":"1898"},{"desc":"1925","fix":"1926"},{"desc":"1925","fix":"1927"},{"desc":"1928","fix":"1929"},{"desc":"1930","fix":"1931"},{"desc":"1928","fix":"1932"},{"desc":"1933","fix":"1934"},{"desc":"1928","fix":"1935"},{"desc":"1936","fix":"1937"},{"desc":"1928","fix":"1938"},{"desc":"1939","fix":"1940"},{"desc":"1928","fix":"1941"},{"desc":"1942","fix":"1943"},{"desc":"1928","fix":"1944"},{"desc":"1945","fix":"1946"},{"desc":"1928","fix":"1947"},{"desc":"1948","fix":"1949"},{"desc":"1928","fix":"1950"},{"desc":"1951","fix":"1952"},{"desc":"1928","fix":"1953"},{"desc":"1954","fix":"1955"},{"desc":"1928","fix":"1956"},{"desc":"1957","fix":"1958"},{"desc":"1928","fix":"1959"},{"desc":"1960","fix":"1961"},{"desc":"1928","fix":"1962"},{"desc":"1963","fix":"1964"},{"desc":"1928","fix":"1965"},{"desc":"1966","fix":"1967"},{"desc":"1928","fix":"1968"},{"desc":"1969","fix":"1970"},{"desc":"1928","fix":"1971"},{"desc":"1972","fix":"1973"},{"desc":"1974","fix":"1975"},{"desc":"1974","fix":"1976"},{"desc":"1977","fix":"1978"},{"desc":"1979","fix":"1980"},{"kind":"1897","justification":"1898"},{"desc":"1981","fix":"1982"},{"desc":"1983","fix":"1984"},{"kind":"1897","justification":"1898"},{"desc":"1903","fix":"1985"},{"kind":"1897","justification":"1898"},{"kind":"1897","justification":"1898"},{"desc":"1986","fix":"1987"},{"desc":"1988","fix":"1989"},{"kind":"1897","justification":"1898"},{"desc":"1990","fix":"1991"},{"kind":"1897","justification":"1898"},{"desc":"1992","fix":"1993"},{"desc":"1994","fix":"1995"},{"kind":"1897","justification":"1898"},{"desc":"1996","fix":"1997"},{"kind":"1897","justification":"1898"},{"desc":"1998","fix":"1999"},{"kind":"1897","justification":"1898"},{"desc":"2000","fix":"2001"},{"kind":"1897","justification":"1898"},{"desc":"2002","fix":"2003"},{"kind":"1897","justification":"1898"},{"desc":"2004","fix":"2005"},{"desc":"2006","fix":"2007"},{"kind":"1897","justification":"1898"},[1225,1225]," rel=\"noreferrer\"",{"desc":"2008","fix":"2009"},{"kind":"1897","justification":"1898"},{"desc":"2010","fix":"2011"},{"kind":"1897","justification":"1898"},{"desc":"2012","fix":"2013"},{"kind":"1897","justification":"1898"},{"desc":"2014","fix":"2015"},{"desc":"2016","fix":"2017"},{"kind":"1897","justification":"1898"},{"desc":"2018","fix":"2019"},{"kind":"1897","justification":"1898"},{"desc":"2020","fix":"2021"},{"desc":"2022","fix":"2023"},{"desc":"2024","fix":"2025"},{"kind":"1897","justification":"1898"},{"desc":"2026","fix":"2027"},{"kind":"1897","justification":"1898"},[1829,1829],{"desc":"2028","fix":"2029"},{"desc":"2030","fix":"2031"},{"kind":"1897","justification":"1898"},"Update the dependencies array to be: [handleClose, ref]",{"range":"2032","text":"2033"},"Update the dependencies array to be: [handleAdmin?.fetchInfo, handleAuth, handleLoader, handleTheme, user?._id]",{"range":"2034","text":"2035"},"directive","","Update the dependencies array to be: [handleAuth?.logout, handleLoader, handleLpStaking, handleNFT, handleRewards, handleSocket, user, walletConnect]",{"range":"2036","text":"2037"},"Update the dependencies array to be: [handleWalletConnect]",{"range":"2038","text":"2039"},"Update the dependencies array to be: [deactivate]",{"range":"2040","text":"2041"},"Update the dependencies array to be: [library, onConnectWallet]",{"range":"2042","text":"2043"},"Update the dependencies array to be: [handleRewards]",{"range":"2044","text":"2045"},"Update the dependencies array to be: [headerOffsetTop, setStickyHeader]",{"range":"2046","text":"2047"},"Update the dependencies array to be: [dispatch, filtersObject]",{"range":"2048","text":"2049"},"Update the dependencies array to be: [isAccountPage, isAllNFTPage, isGamePage, isOneCollectionPage, location.pathname]",{"range":"2050","text":"2051"},"Update the dependencies array to be: [dispatch, isCreatePage, isOneNFTPage, location.pathname]",{"range":"2052","text":"2053"},"Update the dependencies array to be: [alertIsActive, onClose]",{"range":"2054","text":"2055"},"Update the dependencies array to be: [TEXT.length, isOpen]",{"range":"2056","text":"2057"},"Update the dependencies array to be: [getTokenAmount]",{"range":"2058","text":"2059"},"Update the dependencies array to be: [message, messageHandler]",{"range":"2060","text":"2061"},"Update the dependencies array to be: [library]",{"range":"2062","text":"2063"},{"range":"2064","text":"2063"},"Update the dependencies array to be: [getProvider]",{"range":"2065","text":"2066"},"Update the dependencies array to be: [getContractWhitelist, getSigner]",{"range":"2067","text":"2068"},{"range":"2069","text":"2066"},"Update the dependencies array to be: [getContractNFKey, getSigner]",{"range":"2070","text":"2071"},{"range":"2072","text":"2066"},"Update the dependencies array to be: [getContractSmarterCoin, getSigner]",{"range":"2073","text":"2074"},{"range":"2075","text":"2066"},"Update the dependencies array to be: [getContractNFKeyStaking, getSigner]",{"range":"2076","text":"2077"},{"range":"2078","text":"2066"},"Update the dependencies array to be: [getContractTresrCoin, getSigner]",{"range":"2079","text":"2080"},{"range":"2081","text":"2066"},"Update the dependencies array to be: [getContractDailyBonusRewards, getSigner]",{"range":"2082","text":"2083"},{"range":"2084","text":"2066"},"Update the dependencies array to be: [getContractTresrStakingCoin, getSigner]",{"range":"2085","text":"2086"},{"range":"2087","text":"2066"},"Update the dependencies array to be: [getContractLpStakingTRESRAVAX, getSigner]",{"range":"2088","text":"2089"},{"range":"2090","text":"2066"},"Update the dependencies array to be: [getContractLpStakingSMRTRAVAX, getSigner]",{"range":"2091","text":"2092"},{"range":"2093","text":"2066"},"Update the dependencies array to be: [getContractLpCoinTRESRAVAX, getSigner]",{"range":"2094","text":"2095"},{"range":"2096","text":"2066"},"Update the dependencies array to be: [getContractLpCoinSMRTRRAVAX, getSigner]",{"range":"2097","text":"2098"},{"range":"2099","text":"2066"},"Update the dependencies array to be: [getContractMarketplaceListing, getSigner]",{"range":"2100","text":"2101"},{"range":"2102","text":"2066"},"Update the dependencies array to be: [getContractMarketplaceAuction, getSigner]",{"range":"2103","text":"2104"},{"range":"2105","text":"2066"},"Update the dependencies array to be: [getContractMarketplaceCommunityCollection, getSigner]",{"range":"2106","text":"2107"},{"range":"2108","text":"2066"},"Update the dependencies array to be: [getContractMasterChef, getSigner]",{"range":"2109","text":"2110"},"Update the dependencies array to be: [getSigner, getProvider]",{"range":"2111","text":"2112"},{"range":"2113","text":"2112"},"Update the dependencies array to be: [dispatch, handleToken, hours, minutes, nftLists, nftSelected?.tierTresr, nftSelected?.tokenId, seconds]",{"range":"2114","text":"2115"},"Update the dependencies array to be: [dispatch, handleNFT, nftSelected]",{"range":"2116","text":"2117"},"Update the dependencies array to be: [countDown, countDownDate, timestamp]",{"range":"2118","text":"2119"},"Update the dependencies array to be: [buttonStatuses, loadingImages, onCloseModal, status]",{"range":"2120","text":"2121"},{"range":"2122","text":"2041"},"Update the dependencies array to be: [handleNFT, handleSuccessMintModal, mintedTokensList, user?.wallet_id]",{"range":"2123","text":"2124"},"Update the dependencies array to be: [getAVAXPrice, getUserZones, user?.wallet_id]",{"range":"2125","text":"2126"},"Update the dependencies array to be: [calcSumAmount, calcSumCommission, zoneAmount, zoneChecked]",{"range":"2127","text":"2128"},"Update the dependencies array to be: [activeKey, activeTab, onClick, variant]",{"range":"2129","text":"2130"},"Update the dependencies array to be: [isApproved, status]",{"range":"2131","text":"2132"},"Update the dependencies array to be: [filterTokenList, handleNFT, isOpen]",{"range":"2133","text":"2134"},"Update the dependencies array to be: [filterTokenList, handleNFT, handleTransactionLoadingModal, isOpen]",{"range":"2135","text":"2136"},"Update the dependencies array to be: [filterTokenList, handleNFT]",{"range":"2137","text":"2138"},"Update the dependencies array to be: [audio, chestStatus, isOpen]",{"range":"2139","text":"2140"},"Update the dependencies array to be: [timerID]",{"range":"2141","text":"2142"},"Update the dependencies array to be: [tokenIdList.length, nftLists.length, nftLists, tokenIdList]",{"range":"2143","text":"2144"},"Update the dependencies array to be: [dispatch, handleRewards, handleTresrStaking, user?.wallet_id]",{"range":"2145","text":"2146"},"Update the dependencies array to be: [totalEarnedBalance, claimableTresrRewardsPerSec, timerID, handleRewards]",{"range":"2147","text":"2148"},"Update the dependencies array to be: [timeToUpgrade, startUpgradeDelay, timerID]",{"range":"2149","text":"2150"},"Update the dependencies array to be: [dispatch, handleRewards, timerID]",{"range":"2151","text":"2152"},"Update the dependencies array to be: [handleNFT, handleRewards, handleTresrStaking]",{"range":"2153","text":"2154"},"Update the dependencies array to be: [handleNFT, token?.tier, token.tokenId]",{"range":"2155","text":"2156"},"Update the dependencies array to be: [user.wallet_id, nftLists, nftSelected.tier, nftSelected.tierTresr, claimableTresrRewards, handleNFT]",{"range":"2157","text":"2158"},"Update the dependencies array to be: [handleRewards, nftLists, timerID]",{"range":"2159","text":"2160"},"Update the dependencies array to be: [nftSelected.tokenId, balanceLPStakedTRESR, handleRewards]",{"range":"2161","text":"2162"},"Update the dependencies array to be: [nftSelected.tokenId, balanceLPStakedSMRTR, handleRewards]",{"range":"2163","text":"2164"},"Update the dependencies array to be: [days, hours, isActive, minutes, seconds]",{"range":"2165","text":"2166"},"Update the dependencies array to be: [rewardsPerSec, timerID, token?.reward]",{"range":"2167","text":"2168"},[1009,1014],"[handleClose, ref]",[1329,1331],"[handleAdmin?.fetchInfo, handleAuth, handleLoader, handleTheme, user?._id]",[3081,3087],"[handleAuth?.logout, handleLoader, handleLpStaking, handleNFT, handleRewards, handleSocket, user, walletConnect]",[2196,2198],"[handleWalletConnect]",[2543,2607],"[deactivate]",[4973,4982],"[library, onConnectWallet]",[31791,31793],"[handleRewards]",[31963,31980],"[headerOffsetTop, setStickyHeader]",[33124,33139],"[dispatch, filtersObject]",[33634,33654],"[isAccountPage, isAllNFTPage, isGamePage, isOneCollectionPage, location.pathname]",[33839,33859],"[dispatch, isCreatePage, isOneNFTPage, location.pathname]",[890,905],"[alertIsActive, onClose]",[3744,3752],"[TEXT.length, isOpen]",[2027,2029],"[getTokenAmount]",[8450,8459],"[message, messageHandler]",[1515,1532],"[library]",[1821,1838],[2133,2163],"[getProvider]",[2493,2521],"[getContractWhitelist, getSigner]",[2816,2846],[3153,3181],"[getContractNFKey, getSigner]",[3486,3516],[3859,3887],"[getContractSmarterCoin, getSigner]",[4214,4244],[4639,4667],"[getContractNFKeyStaking, getSigner]",[4973,5003],[5334,5362],"[getContractTresrCoin, getSigner]",[5683,5713],[6091,6119],"[getContractDailyBonusRewards, getSigner]",[6460,6490],[6863,6891],"[getContractTresrStakingCoin, getSigner]",[7249,7279],[7663,7691],"[getContractLpStakingTRESRAVAX, getSigner]",[8051,8081],[8465,8493],"[getContractLpStakingSMRTRAVAX, getSigner]",[8843,8873],[9239,9267],"[getContractLpCoinTRESRAVAX, getSigner]",[9616,9646],[10016,10044],"[getContractLpCoinSMRTRRAVAX, getSigner]",[10399,10429],[10813,10841],"[getContractMarketplaceListing, getSigner]",[11199,11229],[11613,11641],"[getContractMarketplaceAuction, getSigner]",[12021,12051],[12511,12539],"[getContractMarketplaceCommunityCollection, getSigner]",[12877,12907],[13243,13271],"[getContractMasterChef, getSigner]",[13698,13740],"[getSigner, getProvider]",[14171,14213],[12019,12044],"[dispatch, handleToken, hours, minutes, nftLists, nftSelected?.tierTresr, nftSelected?.tokenId, seconds]",[13267,13280],"[dispatch, handleNFT, nftSelected]",[486,497],"[countDown, countDownDate, timestamp]",[3814,3822],"[buttonStatuses, loadingImages, onCloseModal, status]",[1704,1768],[6706,6724],"[handleNFT, handleSuccessMintModal, mintedTokensList, user?.wallet_id]",[6814,6831],"[getAVAXPrice, getUserZones, user?.wallet_id]",[6997,7022],"[calcSumAmount, calcSumCommission, zoneAmount, zoneChecked]",[805,816],"[activeKey, activeTab, onClick, variant]",[1204,1216],"[isApproved, status]",[3234,3259],"[filterTokenList, handleNFT, isOpen]",[4049,4057],"[filterTokenList, handleNFT, handleTransactionLoadingModal, isOpen]",[4667,4684],"[filterTokenList, handleNFT]",[1650,1658],"[audio, chestStatus, isOpen]",[896,898],"[timerID]",[1389,1428],"[tokenIdList.length, nftLists.length, nftLists, tokenIdList]",[5404,5406],"[dispatch, handleRewards, handleTresrStaking, user?.wallet_id]",[6111,6160],"[totalEarnedBalance, claimableTresrRewardsPerSec, timerID, handleRewards]",[1187,1221],"[timeToUpgrade, startUpgradeDelay, timerID]",[3403,3405],"[dispatch, handleRewards, timerID]",[2947,2949],"[handleNFT, handleRewards, handleTresrStaking]",[1071,1087],"[handleNFT, token?.tier, token.tokenId]",[3280,3398],"[user.wallet_id, nftLists, nftSelected.tier, nftSelected.tierTresr, claimableTresrRewards, handleNFT]",[3894,3904],"[handleRewards, nftLists, timerID]",[6060,6104],"[nftSelected.tokenId, balanceLPStakedTRESR, handleRewards]",[6236,6280],"[nftSelected.tokenId, balanceLPStakedSMRTR, handleRewards]",[547,578],"[days, hours, isActive, minutes, seconds]",[386,416],"[rewardsPerSec, timerID, token?.reward]"]