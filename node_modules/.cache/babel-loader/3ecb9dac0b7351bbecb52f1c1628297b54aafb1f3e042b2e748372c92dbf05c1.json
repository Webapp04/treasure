{"ast":null,"code":"import _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { reader } from 'it-reader';\nimport { pushable } from 'it-pushable';\nimport defer from 'p-defer';\n// Convert a duplex stream into a reader and writer and rest stream\nexport function handshake(stream) {\n  var writer = pushable(); // Write bytes on demand to the sink\n  var source = reader(stream.source); // Read bytes on demand from the source\n  // Waits for a source to be passed to the rest stream's sink\n  var sourcePromise = defer();\n  var sinkErr;\n  var sinkPromise = stream.sink(_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var source;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(writer), _awaitAsyncGenerator), \"t0\", 1);\n        case 1:\n          _context.next = 3;\n          return _awaitAsyncGenerator(sourcePromise.promise);\n        case 3:\n          source = _context.sent;\n          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(source), _awaitAsyncGenerator), \"t1\", 5);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))());\n  sinkPromise.catch(function (err) {\n    sinkErr = err;\n  });\n  var rest = {\n    sink: function () {\n      var _sink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(source) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(sinkErr != null)) {\n                _context2.next = 4;\n                break;\n              }\n              _context2.next = 3;\n              return Promise.reject(sinkErr);\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 4:\n              sourcePromise.resolve(source);\n              _context2.next = 7;\n              return sinkPromise;\n            case 7:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function sink(_x) {\n        return _sink.apply(this, arguments);\n      }\n      return sink;\n    }(),\n    source: source\n  };\n  return {\n    reader: source,\n    writer: writer,\n    stream: rest,\n    rest: function rest() {\n      return writer.end();\n    },\n    write: writer.push,\n    read: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return source.next();\n            case 2:\n              res = _context3.sent;\n              if (!(res.value != null)) {\n                _context3.next = 5;\n                break;\n              }\n              return _context3.abrupt(\"return\", res.value);\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function read() {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }()\n  };\n}","map":{"version":3,"names":["reader","pushable","defer","handshake","stream","writer","source","sourcePromise","sinkErr","sinkPromise","sink","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","delegateYield","_asyncGeneratorDelegate","_asyncIterator","_awaitAsyncGenerator","promise","sent","stop","catch","err","rest","_sink","_asyncToGenerator","_callee2","_callee2$","_context2","Promise","reject","abrupt","resolve","_x","apply","arguments","end","write","push","read","_read","_callee3","res","_callee3$","_context3","value"],"sources":["/Users/apple/Documents/treasure/node_modules/it-handshake/src/index.ts"],"sourcesContent":["import { Reader, reader } from 'it-reader'\nimport { pushable } from 'it-pushable'\nimport defer from 'p-defer'\nimport type { Duplex, Source } from 'it-stream-types'\nimport type { Pushable } from 'it-pushable'\nimport type { Uint8ArrayList } from 'uint8arraylist'\n\nexport interface Handshake<TSink = Uint8Array | Uint8ArrayList> {\n  reader: Reader\n  writer: Pushable<TSink>\n  stream: Duplex<Uint8ArrayList, TSink>\n  rest: () => Source<TSink>\n  write: (data: TSink) => void\n  read: () => Promise<Uint8ArrayList | undefined>\n}\n\n// Convert a duplex stream into a reader and writer and rest stream\nexport function handshake<TSink extends Uint8ArrayList | Uint8Array = Uint8ArrayList> (stream: Duplex<Uint8ArrayList | Uint8Array, TSink>): Handshake<TSink> {\n  const writer = pushable<TSink>() // Write bytes on demand to the sink\n  const source = reader(stream.source) // Read bytes on demand from the source\n\n  // Waits for a source to be passed to the rest stream's sink\n  const sourcePromise = defer<Source<TSink>>()\n  let sinkErr: Error\n\n  const sinkPromise = stream.sink((async function * () {\n    yield * writer\n    const source = await sourcePromise.promise\n    yield * source\n  })())\n\n  sinkPromise.catch(err => {\n    sinkErr = err\n  })\n\n  const rest: Duplex<Uint8ArrayList, TSink> = {\n    sink: async source => {\n      if (sinkErr != null) {\n        return await Promise.reject(sinkErr)\n      }\n\n      sourcePromise.resolve(source)\n      return await sinkPromise\n    },\n    source\n  }\n\n  return {\n    reader: source,\n    writer,\n    stream: rest,\n    rest: () => writer.end(),\n    write: writer.push,\n    read: async () => {\n      const res = await source.next()\n\n      if (res.value != null) {\n        return res.value\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}