{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as dagPB from '@ipld/dag-pb';\nimport * as dagCBOR from '@ipld/dag-cbor';\nimport * as dagJSON from '@ipld/dag-json';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CID } from 'multiformats/cid';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @typedef {import('@ipld/dag-pb').PBLink} DAGLink\n */\n\n/**\n * @param {any} node\n * @param {DAGLink[]} [links]\n * @returns {DAGLink[]}\n */\nfunction findLinks(node) {\n  var links = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  for (var key in node) {\n    var val = node[key];\n    if (key === '/' && Object.keys(node).length === 1) {\n      try {\n        links.push({\n          Name: '',\n          Tsize: 0,\n          Hash: CID.parse(val)\n        });\n        continue;\n      } catch ( /** @type {any} */_) {\n        // not a CID\n      }\n    }\n    var cid = CID.asCID(val);\n    if (cid) {\n      links.push({\n        Name: '',\n        Tsize: 0,\n        Hash: cid\n      });\n      continue;\n    }\n    if (Array.isArray(val)) {\n      findLinks(val, links);\n    }\n    if (val && typeof val === 'object') {\n      findLinks(val, links);\n    }\n  }\n  return links;\n}\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createLinks(_ref) {\n  var repo = _ref.repo,\n    codecs = _ref.codecs;\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"links\"]}\n   */\n  function links(_x) {\n    return _links.apply(this, arguments);\n  }\n  function _links() {\n    _links = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var options,\n        codec,\n        block,\n        node,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return codecs.getCodec(cid.code);\n          case 3:\n            codec = _context.sent;\n            _context.next = 6;\n            return repo.blocks.get(cid, options);\n          case 6:\n            block = _context.sent;\n            node = codec.decode(block);\n            _context.t0 = cid.code;\n            _context.next = _context.t0 === raw.code ? 11 : _context.t0 === dagPB.code ? 12 : _context.t0 === dagCBOR.code ? 13 : _context.t0 === dagJSON.code ? 13 : 14;\n            break;\n          case 11:\n            return _context.abrupt(\"return\", []);\n          case 12:\n            return _context.abrupt(\"return\", node.Links);\n          case 13:\n            return _context.abrupt(\"return\", findLinks(node));\n          case 14:\n            throw new Error(\"Cannot resolve links from codec \".concat(cid.code));\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _links.apply(this, arguments);\n  }\n  return withTimeoutOption(links);\n}","map":{"version":3,"names":["dagPB","dagCBOR","dagJSON","raw","CID","withTimeoutOption","findLinks","node","links","arguments","length","undefined","key","val","Object","keys","push","Name","Tsize","Hash","parse","_","cid","asCID","Array","isArray","createLinks","_ref","repo","codecs","_x","_links","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","codec","block","_args","wrap","_callee$","_context","prev","next","getCodec","code","sent","blocks","get","decode","t0","abrupt","Links","Error","concat","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/object/links.js"],"sourcesContent":["import * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as raw from 'multiformats/codecs/raw'\nimport { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('@ipld/dag-pb').PBLink} DAGLink\n */\n\n/**\n * @param {any} node\n * @param {DAGLink[]} [links]\n * @returns {DAGLink[]}\n */\nfunction findLinks (node, links = []) {\n  for (const key in node) {\n    const val = node[key]\n\n    if (key === '/' && Object.keys(node).length === 1) {\n      try {\n        links.push({\n          Name: '',\n          Tsize: 0,\n          Hash: CID.parse(val)\n        })\n        continue\n      } catch (/** @type {any} */ _) {\n        // not a CID\n      }\n    }\n\n    const cid = CID.asCID(val)\n\n    if (cid) {\n      links.push({\n        Name: '',\n        Tsize: 0,\n        Hash: cid\n      })\n      continue\n    }\n\n    if (Array.isArray(val)) {\n      findLinks(val, links)\n    }\n\n    if (val && typeof val === 'object') {\n      findLinks(val, links)\n    }\n  }\n\n  return links\n}\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createLinks ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await repo.blocks.get(cid, options)\n    const node = codec.decode(block)\n\n    switch (cid.code) {\n      case raw.code:\n        return []\n      case dagPB.code:\n        return node.Links\n      case dagCBOR.code:\n      case dagJSON.code:\n        return findLinks(node)\n      default:\n        throw new Error(`Cannot resolve links from codec ${cid.code}`)\n    }\n  }\n\n  return withTimeoutOption(links)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}