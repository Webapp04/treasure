{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require('../abstract-chained-batch'),\n  AbstractChainedBatch = _require.AbstractChainedBatch;\nvar ModuleError = require('module-error');\nvar kEncoded = Symbol('encoded');\n\n// Functional default for chained batch, with support of deferred open\nvar DefaultChainedBatch = /*#__PURE__*/function (_AbstractChainedBatch) {\n  _inherits(DefaultChainedBatch, _AbstractChainedBatch);\n  var _super = _createSuper(DefaultChainedBatch);\n  function DefaultChainedBatch(db) {\n    var _this;\n    _classCallCheck(this, DefaultChainedBatch);\n    _this = _super.call(this, db);\n    _this[kEncoded] = [];\n    return _this;\n  }\n  _createClass(DefaultChainedBatch, [{\n    key: \"_put\",\n    value: function _put(key, value, options) {\n      this[kEncoded].push(_objectSpread(_objectSpread({}, options), {}, {\n        type: 'put',\n        key: key,\n        value: value\n      }));\n    }\n  }, {\n    key: \"_del\",\n    value: function _del(key, options) {\n      this[kEncoded].push(_objectSpread(_objectSpread({}, options), {}, {\n        type: 'del',\n        key: key\n      }));\n    }\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      this[kEncoded] = [];\n    }\n\n    // Assumes this[kEncoded] cannot change after write()\n  }, {\n    key: \"_write\",\n    value: function _write(options, callback) {\n      var _this2 = this;\n      if (this.db.status === 'opening') {\n        this.db.defer(function () {\n          return _this2._write(options, callback);\n        });\n      } else if (this.db.status === 'open') {\n        if (this[kEncoded].length === 0) this.nextTick(callback);else this.db._batch(this[kEncoded], options, callback);\n      } else {\n        this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n          code: 'LEVEL_BATCH_NOT_OPEN'\n        }));\n      }\n    }\n  }]);\n  return DefaultChainedBatch;\n}(AbstractChainedBatch);\nexports.DefaultChainedBatch = DefaultChainedBatch;","map":{"version":3,"names":["_objectSpread","require","default","_classCallCheck","_createClass","_inherits","_createSuper","_require","AbstractChainedBatch","ModuleError","kEncoded","Symbol","DefaultChainedBatch","_AbstractChainedBatch","_super","db","_this","call","key","value","_put","options","push","type","_del","_clear","_write","callback","_this2","status","defer","length","nextTick","_batch","code","exports"],"sources":["/Users/apple/Documents/treasure/node_modules/abstract-level/lib/default-chained-batch.js"],"sourcesContent":["'use strict'\n\nconst { AbstractChainedBatch } = require('../abstract-chained-batch')\nconst ModuleError = require('module-error')\nconst kEncoded = Symbol('encoded')\n\n// Functional default for chained batch, with support of deferred open\nclass DefaultChainedBatch extends AbstractChainedBatch {\n  constructor (db) {\n    super(db)\n    this[kEncoded] = []\n  }\n\n  _put (key, value, options) {\n    this[kEncoded].push({ ...options, type: 'put', key, value })\n  }\n\n  _del (key, options) {\n    this[kEncoded].push({ ...options, type: 'del', key })\n  }\n\n  _clear () {\n    this[kEncoded] = []\n  }\n\n  // Assumes this[kEncoded] cannot change after write()\n  _write (options, callback) {\n    if (this.db.status === 'opening') {\n      this.db.defer(() => this._write(options, callback))\n    } else if (this.db.status === 'open') {\n      if (this[kEncoded].length === 0) this.nextTick(callback)\n      else this.db._batch(this[kEncoded], options, callback)\n    } else {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    }\n  }\n}\n\nexports.DefaultChainedBatch = DefaultChainedBatch\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,aAAA,GAAAC,OAAA,yFAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAF,OAAA,0FAAAC,OAAA;AAAA,IAAAE,YAAA,GAAAH,OAAA,uFAAAC,OAAA;AAAA,IAAAG,SAAA,GAAAJ,OAAA,oFAAAC,OAAA;AAAA,IAAAI,YAAA,GAAAL,OAAA,uFAAAC,OAAA;AAEZ,IAAAK,QAAA,GAAiCN,OAAO,CAAC,2BAA2B,CAAC;EAA7DO,oBAAoB,GAAAD,QAAA,CAApBC,oBAAoB;AAC5B,IAAMC,WAAW,GAAGR,OAAO,CAAC,cAAc,CAAC;AAC3C,IAAMS,QAAQ,GAAGC,MAAM,CAAC,SAAS,CAAC;;AAElC;AAAA,IACMC,mBAAmB,0BAAAC,qBAAA;EAAAR,SAAA,CAAAO,mBAAA,EAAAC,qBAAA;EAAA,IAAAC,MAAA,GAAAR,YAAA,CAAAM,mBAAA;EACvB,SAAAA,oBAAaG,EAAE,EAAE;IAAA,IAAAC,KAAA;IAAAb,eAAA,OAAAS,mBAAA;IACfI,KAAA,GAAAF,MAAA,CAAAG,IAAA,OAAMF,EAAE;IACRC,KAAA,CAAKN,QAAQ,CAAC,GAAG,EAAE;IAAA,OAAAM,KAAA;EACrB;EAACZ,YAAA,CAAAQ,mBAAA;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAC,KAAMF,GAAG,EAAEC,KAAK,EAAEE,OAAO,EAAE;MACzB,IAAI,CAACX,QAAQ,CAAC,CAACY,IAAI,CAAAtB,aAAA,CAAAA,aAAA,KAAMqB,OAAO;QAAEE,IAAI,EAAE,KAAK;QAAEL,GAAG,EAAHA,GAAG;QAAEC,KAAK,EAALA;MAAK,EAAE,CAAC;IAC9D;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAK,KAAMN,GAAG,EAAEG,OAAO,EAAE;MAClB,IAAI,CAACX,QAAQ,CAAC,CAACY,IAAI,CAAAtB,aAAA,CAAAA,aAAA,KAAMqB,OAAO;QAAEE,IAAI,EAAE,KAAK;QAAEL,GAAG,EAAHA;MAAG,EAAE,CAAC;IACvD;EAAC;IAAAA,GAAA;IAAAC,KAAA,EAED,SAAAM,OAAA,EAAU;MACR,IAAI,CAACf,QAAQ,CAAC,GAAG,EAAE;IACrB;;IAEA;EAAA;IAAAQ,GAAA;IAAAC,KAAA,EACA,SAAAO,OAAQL,OAAO,EAAEM,QAAQ,EAAE;MAAA,IAAAC,MAAA;MACzB,IAAI,IAAI,CAACb,EAAE,CAACc,MAAM,KAAK,SAAS,EAAE;QAChC,IAAI,CAACd,EAAE,CAACe,KAAK,CAAC;UAAA,OAAMF,MAAI,CAACF,MAAM,CAACL,OAAO,EAAEM,QAAQ,CAAC;QAAA,EAAC;MACrD,CAAC,MAAM,IAAI,IAAI,CAACZ,EAAE,CAACc,MAAM,KAAK,MAAM,EAAE;QACpC,IAAI,IAAI,CAACnB,QAAQ,CAAC,CAACqB,MAAM,KAAK,CAAC,EAAE,IAAI,CAACC,QAAQ,CAACL,QAAQ,CAAC,MACnD,IAAI,CAACZ,EAAE,CAACkB,MAAM,CAAC,IAAI,CAACvB,QAAQ,CAAC,EAAEW,OAAO,EAAEM,QAAQ,CAAC;MACxD,CAAC,MAAM;QACL,IAAI,CAACK,QAAQ,CAACL,QAAQ,EAAE,IAAIlB,WAAW,CAAC,iEAAiE,EAAE;UACzGyB,IAAI,EAAE;QACR,CAAC,CAAC,CAAC;MACL;IACF;EAAC;EAAA,OAAAtB,mBAAA;AAAA,EA9B+BJ,oBAAoB;AAiCtD2B,OAAO,CAACvB,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}