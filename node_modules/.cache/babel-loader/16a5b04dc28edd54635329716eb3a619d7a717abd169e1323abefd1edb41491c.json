{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import AirdropApi from\"api/AirdropApi\";import{useDispatch,useSelector}from\"react-redux\";import ACTIONS from\"redux/action\";import{selectNftSelected}from\"redux/slice/nftSlice\";import{selectUser}from\"redux/slice/userSlice\";import useGetTresrRewardsBalance from\"./useGetTresrRewardsBalance\";import useBalanceOfTRESR from\"./useBalanceOfTRESR\";import useGetAVAXBalance from\"./useGetAVAXBalance\";import useGetRewardsReleased from\"./useGetRewardsReleased\";import{useContractNFKeyStakingWithSigner}from\"hooks/blockchain/useHandleContracts\";export default function useClaimTresrRewards(){var dispatch=useDispatch();var nftSelected=useSelector(selectNftSelected);var user=useSelector(selectUser);var handleGetTresrRewardsBalance=useGetTresrRewardsBalance();var handleBalanceOfTRESR=useBalanceOfTRESR();var handleGetAVAXBalance=useGetAVAXBalance();var handleGetRewardsReleased=useGetRewardsReleased();var handleContractNFKeyStakingWithSigner=useContractNFKeyStakingWithSigner();var claimTresrRewards=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var contractNFKeyStakingWithSigner;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return handleContractNFKeyStakingWithSigner;case 2:contractNFKeyStakingWithSigner=_context2.sent;contractNFKeyStakingWithSigner.withdrawTresrRewards(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(tx){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return new AirdropApi().logger({wallet_id:user===null||user===void 0?void 0:user.wallet_id,action:\"claimTresrRewards\",type:\"PENDING\",description:\"Claim Tresr Rewards\",tx:JSON.stringify(tx)});case 2:_context.next=4;return tx.wait();case 4:// await sleep(15);\nACTIONS.SET_TRANSANCTION_HASH(dispatch,tx===null||tx===void 0?void 0:tx.hash);_context.next=7;return handleGetTresrRewardsBalance.getTresrRewardsBalance(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId);case 7:_context.next=9;return handleBalanceOfTRESR.balanceOfTRESR(user===null||user===void 0?void 0:user.wallet_id);case 9:handleGetAVAXBalance.getAVAXBalance(user===null||user===void 0?void 0:user.wallet_id);handleGetRewardsReleased.getRewardsReleased();case 11:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}()).catch(function(err){new AirdropApi().logger({wallet_id:user===null||user===void 0?void 0:user.wallet_id,action:\"claimTresrRewards\",type:\"ERROR\",error:JSON.stringify(err)});return null;});case 4:case\"end\":return _context2.stop();}},_callee2);}));return function claimTresrRewards(){return _ref.apply(this,arguments);};}();return{claimTresrRewards:claimTresrRewards};}","map":{"version":3,"names":["AirdropApi","useDispatch","useSelector","ACTIONS","selectNftSelected","selectUser","useGetTresrRewardsBalance","useBalanceOfTRESR","useGetAVAXBalance","useGetRewardsReleased","useContractNFKeyStakingWithSigner","useClaimTresrRewards","dispatch","nftSelected","user","handleGetTresrRewardsBalance","handleBalanceOfTRESR","handleGetAVAXBalance","handleGetRewardsReleased","handleContractNFKeyStakingWithSigner","claimTresrRewards","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","contractNFKeyStakingWithSigner","wrap","_callee2$","_context2","prev","next","sent","withdrawTresrRewards","tokenId","then","_ref2","_callee","tx","_callee$","_context","logger","wallet_id","action","type","description","JSON","stringify","wait","SET_TRANSANCTION_HASH","hash","getTresrRewardsBalance","balanceOfTRESR","getAVAXBalance","getRewardsReleased","stop","_x","apply","arguments","catch","err","error"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useClaimTresrRewards.js"],"sourcesContent":["import AirdropApi from \"api/AirdropApi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport useGetTresrRewardsBalance from \"./useGetTresrRewardsBalance\";\nimport useBalanceOfTRESR from \"./useBalanceOfTRESR\";\nimport useGetAVAXBalance from \"./useGetAVAXBalance\";\nimport useGetRewardsReleased from \"./useGetRewardsReleased\";\nimport { useContractNFKeyStakingWithSigner } from \"hooks/blockchain/useHandleContracts\";\n\nexport default function useClaimTresrRewards() {\n  const dispatch = useDispatch();\n  const nftSelected = useSelector(selectNftSelected);\n  const user = useSelector(selectUser);\n  const handleGetTresrRewardsBalance = useGetTresrRewardsBalance();\n  const handleBalanceOfTRESR = useBalanceOfTRESR();\n  const handleGetAVAXBalance = useGetAVAXBalance();\n  const handleGetRewardsReleased = useGetRewardsReleased();\n  const handleContractNFKeyStakingWithSigner =\n    useContractNFKeyStakingWithSigner();\n\n  const claimTresrRewards = async () => {\n    const contractNFKeyStakingWithSigner =\n      await handleContractNFKeyStakingWithSigner;\n    contractNFKeyStakingWithSigner\n      .withdrawTresrRewards(nftSelected?.tokenId)\n      .then(async (tx) => {\n        await new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          action: \"claimTresrRewards\",\n          type: \"PENDING\",\n          description: \"Claim Tresr Rewards\",\n          tx: JSON.stringify(tx),\n        });\n        await tx.wait();\n        // await sleep(15);\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n        await handleGetTresrRewardsBalance.getTresrRewardsBalance(\n          nftSelected?.tokenId\n        );\n        await handleBalanceOfTRESR.balanceOfTRESR(user?.wallet_id);\n        handleGetAVAXBalance.getAVAXBalance(user?.wallet_id);\n        handleGetRewardsReleased.getRewardsReleased();\n      })\n      .catch((err) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          action: \"claimTresrRewards\",\n          type: \"ERROR\",\n          error: JSON.stringify(err),\n        });\n\n        return null;\n      });\n  };\n  return { claimTresrRewards };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}