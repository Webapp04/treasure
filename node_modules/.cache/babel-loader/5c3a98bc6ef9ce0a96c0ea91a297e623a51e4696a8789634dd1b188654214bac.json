{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { logger } from '@libp2p/logger';\nimport errcode from 'err-code';\nimport { codes } from './errors.js';\nimport { peerIdFromPeerId } from '@libp2p/peer-id';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { CustomEvent } from '@libp2p/interfaces/events';\nvar log = logger('libp2p:peer-store:metadata-book');\nvar EVENT_NAME = 'change:metadata';\nexport var PeerStoreMetadataBook = /*#__PURE__*/function () {\n  /**\n   * The MetadataBook is responsible for keeping metadata\n   * about known peers\n   */\n  function PeerStoreMetadataBook(dispatchEvent, store) {\n    _classCallCheck(this, PeerStoreMetadataBook);\n    this.dispatchEvent = dispatchEvent;\n    this.store = store;\n  }\n  /**\n   * Get the known data of a provided peer\n   */\n  _createClass(PeerStoreMetadataBook, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId) {\n        var release, peer;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              log.trace('get await read lock');\n              _context.next = 4;\n              return this.store.lock.readLock();\n            case 4:\n              release = _context.sent;\n              log.trace('get got read lock');\n              _context.prev = 6;\n              _context.next = 9;\n              return this.store.load(peerId);\n            case 9:\n              peer = _context.sent;\n              return _context.abrupt(\"return\", peer.metadata);\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](6);\n              if (!(_context.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context.next = 17;\n                break;\n              }\n              throw _context.t0;\n            case 17:\n              _context.prev = 17;\n              log.trace('get release read lock');\n              release();\n              return _context.finish(17);\n            case 21:\n              return _context.abrupt(\"return\", new Map());\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[6, 13, 17, 21]]);\n      }));\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n    /**\n     * Get specific metadata value, if it exists\n     */\n  }, {\n    key: \"getValue\",\n    value: function () {\n      var _getValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(peerId, key) {\n        var release, peer;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              log.trace('getValue await read lock');\n              _context2.next = 4;\n              return this.store.lock.readLock();\n            case 4:\n              release = _context2.sent;\n              log.trace('getValue got read lock');\n              _context2.prev = 6;\n              _context2.next = 9;\n              return this.store.load(peerId);\n            case 9:\n              peer = _context2.sent;\n              return _context2.abrupt(\"return\", peer.metadata.get(key));\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](6);\n              if (!(_context2.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context2.next = 17;\n                break;\n              }\n              throw _context2.t0;\n            case 17:\n              _context2.prev = 17;\n              log.trace('getValue release write lock');\n              release();\n              return _context2.finish(17);\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[6, 13, 17, 21]]);\n      }));\n      function getValue(_x2, _x3) {\n        return _getValue.apply(this, arguments);\n      }\n      return getValue;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(peerId, metadata) {\n        var release, peer;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              if (metadata instanceof Map) {\n                _context3.next = 4;\n                break;\n              }\n              log.error('valid metadata must be provided to store data');\n              throw errcode(new Error('valid metadata must be provided'), codes.ERR_INVALID_PARAMETERS);\n            case 4:\n              log.trace('set await write lock');\n              _context3.next = 7;\n              return this.store.lock.writeLock();\n            case 7:\n              release = _context3.sent;\n              log.trace('set got write lock');\n              _context3.prev = 9;\n              _context3.prev = 10;\n              _context3.next = 13;\n              return this.store.load(peerId);\n            case 13:\n              peer = _context3.sent;\n              _context3.next = 20;\n              break;\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](10);\n              if (!(_context3.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context3.next = 20;\n                break;\n              }\n              throw _context3.t0;\n            case 20:\n              _context3.next = 22;\n              return this.store.mergeOrCreate(peerId, {\n                metadata: metadata\n              });\n            case 22:\n              _context3.prev = 22;\n              log.trace('set release write lock');\n              release();\n              return _context3.finish(22);\n            case 26:\n              this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n                detail: {\n                  peerId: peerId,\n                  metadata: metadata,\n                  oldMetadata: peer == null ? new Map() : peer.metadata\n                }\n              }));\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[9,, 22, 26], [10, 16]]);\n      }));\n      function set(_x4, _x5) {\n        return _set.apply(this, arguments);\n      }\n      return set;\n    }()\n    /**\n     * Set metadata key and value of a provided peer\n     */\n  }, {\n    key: \"setValue\",\n    value: function () {\n      var _setValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(peerId, key, value) {\n        var release, peer, updatedPeer, existingValue;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              if (!(typeof key !== 'string' || !(value instanceof Uint8Array))) {\n                _context4.next = 4;\n                break;\n              }\n              log.error('valid key and value must be provided to store data');\n              throw errcode(new Error('valid key and value must be provided'), codes.ERR_INVALID_PARAMETERS);\n            case 4:\n              log.trace('setValue await write lock');\n              _context4.next = 7;\n              return this.store.lock.writeLock();\n            case 7:\n              release = _context4.sent;\n              log.trace('setValue got write lock');\n              _context4.prev = 9;\n              _context4.prev = 10;\n              _context4.next = 13;\n              return this.store.load(peerId);\n            case 13:\n              peer = _context4.sent;\n              existingValue = peer.metadata.get(key);\n              if (!(existingValue != null && uint8ArrayEquals(value, existingValue))) {\n                _context4.next = 17;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 17:\n              _context4.next = 23;\n              break;\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](10);\n              if (!(_context4.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context4.next = 23;\n                break;\n              }\n              throw _context4.t0;\n            case 23:\n              _context4.next = 25;\n              return this.store.mergeOrCreate(peerId, {\n                metadata: new Map([[key, value]])\n              });\n            case 25:\n              updatedPeer = _context4.sent;\n            case 26:\n              _context4.prev = 26;\n              log.trace('setValue release write lock');\n              release();\n              return _context4.finish(26);\n            case 30:\n              this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n                detail: {\n                  peerId: peerId,\n                  metadata: updatedPeer.metadata,\n                  oldMetadata: peer == null ? new Map() : peer.metadata\n                }\n              }));\n            case 31:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[9,, 26, 30], [10, 19]]);\n      }));\n      function setValue(_x6, _x7, _x8) {\n        return _setValue.apply(this, arguments);\n      }\n      return setValue;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(peerId) {\n        var release, peer;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              log.trace('delete await write lock');\n              _context5.next = 4;\n              return this.store.lock.writeLock();\n            case 4:\n              release = _context5.sent;\n              log.trace('delete got write lock');\n              _context5.prev = 6;\n              _context5.prev = 7;\n              _context5.next = 10;\n              return this.store.load(peerId);\n            case 10:\n              peer = _context5.sent;\n              _context5.next = 17;\n              break;\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](7);\n              if (!(_context5.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context5.next = 17;\n                break;\n              }\n              throw _context5.t0;\n            case 17:\n              if (!(peer != null)) {\n                _context5.next = 20;\n                break;\n              }\n              _context5.next = 20;\n              return this.store.patch(peerId, {\n                metadata: new Map()\n              });\n            case 20:\n              _context5.prev = 20;\n              log.trace('delete release write lock');\n              release();\n              return _context5.finish(20);\n            case 24:\n              if (peer != null) {\n                this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n                  detail: {\n                    peerId: peerId,\n                    metadata: new Map(),\n                    oldMetadata: peer.metadata\n                  }\n                }));\n              }\n            case 25:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[6,, 20, 24], [7, 13]]);\n      }));\n      function _delete(_x9) {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  }, {\n    key: \"deleteValue\",\n    value: function () {\n      var _deleteValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(peerId, key) {\n        var release, metadata, peer;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              log.trace('deleteValue await write lock');\n              _context6.next = 4;\n              return this.store.lock.writeLock();\n            case 4:\n              release = _context6.sent;\n              log.trace('deleteValue got write lock');\n              _context6.prev = 6;\n              _context6.next = 9;\n              return this.store.load(peerId);\n            case 9:\n              peer = _context6.sent;\n              metadata = peer.metadata;\n              metadata.delete(key);\n              _context6.next = 14;\n              return this.store.patch(peerId, {\n                metadata: metadata\n              });\n            case 14:\n              _context6.next = 20;\n              break;\n            case 16:\n              _context6.prev = 16;\n              _context6.t0 = _context6[\"catch\"](6);\n              if (!(_context6.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context6.next = 20;\n                break;\n              }\n              throw _context6.t0;\n            case 20:\n              _context6.prev = 20;\n              log.trace('deleteValue release write lock');\n              release();\n              return _context6.finish(20);\n            case 24:\n              if (metadata != null) {\n                this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n                  detail: {\n                    peerId: peerId,\n                    metadata: metadata,\n                    oldMetadata: peer == null ? new Map() : peer.metadata\n                  }\n                }));\n              }\n            case 25:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[6, 16, 20, 24]]);\n      }));\n      function deleteValue(_x10, _x11) {\n        return _deleteValue.apply(this, arguments);\n      }\n      return deleteValue;\n    }()\n  }]);\n  return PeerStoreMetadataBook;\n}();","map":{"version":3,"names":["logger","errcode","codes","peerIdFromPeerId","equals","uint8ArrayEquals","CustomEvent","log","EVENT_NAME","PeerStoreMetadataBook","dispatchEvent","store","_classCallCheck","_createClass","key","value","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peerId","release","peer","wrap","_callee$","_context","prev","next","trace","lock","readLock","sent","load","abrupt","metadata","t0","code","ERR_NOT_FOUND","finish","Map","stop","get","_x","apply","arguments","_getValue","_callee2","_callee2$","_context2","getValue","_x2","_x3","_set","_callee3","_callee3$","_context3","error","Error","ERR_INVALID_PARAMETERS","writeLock","mergeOrCreate","detail","oldMetadata","set","_x4","_x5","_setValue","_callee4","updatedPeer","existingValue","_callee4$","_context4","Uint8Array","setValue","_x6","_x7","_x8","_delete2","_callee5","_callee5$","_context5","patch","_delete","_x9","_deleteValue","_callee6","_callee6$","_context6","delete","deleteValue","_x10","_x11"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/peer-store/src/metadata-book.ts"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport errcode from 'err-code'\nimport { codes } from './errors.js'\nimport { peerIdFromPeerId } from '@libp2p/peer-id'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { CustomEvent } from '@libp2p/interfaces/events'\nimport type { Store } from './store.js'\nimport type { PeerStore, MetadataBook, PeerMetadataChangeData, Peer } from '@libp2p/interface-peer-store'\nimport type { PeerId } from '@libp2p/interface-peer-id'\n\nconst log = logger('libp2p:peer-store:metadata-book')\n\nconst EVENT_NAME = 'change:metadata'\n\nexport class PeerStoreMetadataBook implements MetadataBook {\n  private readonly dispatchEvent: PeerStore['dispatchEvent']\n  private readonly store: Store\n\n  /**\n   * The MetadataBook is responsible for keeping metadata\n   * about known peers\n   */\n  constructor (dispatchEvent: PeerStore['dispatchEvent'], store: Store) {\n    this.dispatchEvent = dispatchEvent\n    this.store = store\n  }\n\n  /**\n   * Get the known data of a provided peer\n   */\n  async get (peerId: PeerId) {\n    peerId = peerIdFromPeerId(peerId)\n\n    log.trace('get await read lock')\n    const release = await this.store.lock.readLock()\n    log.trace('get got read lock')\n\n    try {\n      const peer = await this.store.load(peerId)\n\n      return peer.metadata\n    } catch (err: any) {\n      if (err.code !== codes.ERR_NOT_FOUND) {\n        throw err\n      }\n    } finally {\n      log.trace('get release read lock')\n      release()\n    }\n\n    return new Map()\n  }\n\n  /**\n   * Get specific metadata value, if it exists\n   */\n  async getValue (peerId: PeerId, key: string) {\n    peerId = peerIdFromPeerId(peerId)\n\n    log.trace('getValue await read lock')\n    const release = await this.store.lock.readLock()\n    log.trace('getValue got read lock')\n\n    try {\n      const peer = await this.store.load(peerId)\n\n      return peer.metadata.get(key)\n    } catch (err: any) {\n      if (err.code !== codes.ERR_NOT_FOUND) {\n        throw err\n      }\n    } finally {\n      log.trace('getValue release write lock')\n      release()\n    }\n  }\n\n  async set (peerId: PeerId, metadata: Map<string, Uint8Array>) {\n    peerId = peerIdFromPeerId(peerId)\n\n    if (!(metadata instanceof Map)) {\n      log.error('valid metadata must be provided to store data')\n      throw errcode(new Error('valid metadata must be provided'), codes.ERR_INVALID_PARAMETERS)\n    }\n\n    log.trace('set await write lock')\n    const release = await this.store.lock.writeLock()\n    log.trace('set got write lock')\n\n    let peer: Peer | undefined\n\n    try {\n      try {\n        peer = await this.store.load(peerId)\n      } catch (err: any) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err\n        }\n      }\n\n      await this.store.mergeOrCreate(peerId, {\n        metadata\n      })\n    } finally {\n      log.trace('set release write lock')\n      release()\n    }\n\n    this.dispatchEvent(new CustomEvent<PeerMetadataChangeData>(EVENT_NAME, {\n      detail: {\n        peerId,\n        metadata,\n        oldMetadata: peer == null ? new Map() : peer.metadata\n      }\n    }))\n  }\n\n  /**\n   * Set metadata key and value of a provided peer\n   */\n  async setValue (peerId: PeerId, key: string, value: Uint8Array) {\n    peerId = peerIdFromPeerId(peerId)\n\n    if (typeof key !== 'string' || !(value instanceof Uint8Array)) {\n      log.error('valid key and value must be provided to store data')\n      throw errcode(new Error('valid key and value must be provided'), codes.ERR_INVALID_PARAMETERS)\n    }\n\n    log.trace('setValue await write lock')\n    const release = await this.store.lock.writeLock()\n    log.trace('setValue got write lock')\n\n    let peer: Peer | undefined\n    let updatedPeer\n\n    try {\n      try {\n        peer = await this.store.load(peerId)\n        const existingValue = peer.metadata.get(key)\n\n        if (existingValue != null && uint8ArrayEquals(value, existingValue)) {\n          return\n        }\n      } catch (err: any) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err\n        }\n      }\n\n      updatedPeer = await this.store.mergeOrCreate(peerId, {\n        metadata: new Map([[key, value]])\n      })\n    } finally {\n      log.trace('setValue release write lock')\n      release()\n    }\n\n    this.dispatchEvent(new CustomEvent<PeerMetadataChangeData>(EVENT_NAME, {\n      detail: {\n        peerId,\n        metadata: updatedPeer.metadata,\n        oldMetadata: peer == null ? new Map() : peer.metadata\n      }\n    }))\n  }\n\n  async delete (peerId: PeerId) {\n    peerId = peerIdFromPeerId(peerId)\n\n    log.trace('delete await write lock')\n    const release = await this.store.lock.writeLock()\n    log.trace('delete got write lock')\n\n    let peer: Peer | undefined\n\n    try {\n      try {\n        peer = await this.store.load(peerId)\n      } catch (err: any) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err\n        }\n      }\n\n      if (peer != null) {\n        await this.store.patch(peerId, {\n          metadata: new Map()\n        })\n      }\n    } finally {\n      log.trace('delete release write lock')\n      release()\n    }\n\n    if (peer != null) {\n      this.dispatchEvent(new CustomEvent<PeerMetadataChangeData>(EVENT_NAME, {\n        detail: {\n          peerId,\n          metadata: new Map(),\n          oldMetadata: peer.metadata\n        }\n      }))\n    }\n  }\n\n  async deleteValue (peerId: PeerId, key: string) {\n    peerId = peerIdFromPeerId(peerId)\n\n    log.trace('deleteValue await write lock')\n    const release = await this.store.lock.writeLock()\n    log.trace('deleteValue got write lock')\n\n    let metadata\n    let peer: Peer | undefined\n\n    try {\n      peer = await this.store.load(peerId)\n      metadata = peer.metadata\n\n      metadata.delete(key)\n\n      await this.store.patch(peerId, {\n        metadata\n      })\n    } catch (err: any) {\n      if (err.code !== codes.ERR_NOT_FOUND) {\n        throw err\n      }\n    } finally {\n      log.trace('deleteValue release write lock')\n      release()\n    }\n\n    if (metadata != null) {\n      this.dispatchEvent(new CustomEvent<PeerMetadataChangeData>(EVENT_NAME, {\n        detail: {\n          peerId,\n          metadata,\n          oldMetadata: peer == null ? new Map() : peer.metadata\n        }\n      }))\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}