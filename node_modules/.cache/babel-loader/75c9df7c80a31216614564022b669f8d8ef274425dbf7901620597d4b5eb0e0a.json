{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nexport function computeScore(peer, pstats, params, peerIPs) {\n  var score = 0;\n  // topic stores\n  Object.entries(pstats.topics).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      topic = _ref2[0],\n      tstats = _ref2[1];\n    // the topic parameters\n    var topicParams = params.topics[topic];\n    if (topicParams === undefined) {\n      // we are not scoring this topic\n      return;\n    }\n    var topicScore = 0;\n    // P1: time in Mesh\n    if (tstats.inMesh) {\n      var p1 = tstats.meshTime / topicParams.timeInMeshQuantum;\n      if (p1 > topicParams.timeInMeshCap) {\n        p1 = topicParams.timeInMeshCap;\n      }\n      topicScore += p1 * topicParams.timeInMeshWeight;\n    }\n    // P2: first message deliveries\n    var p2 = tstats.firstMessageDeliveries;\n    if (p2 > topicParams.firstMessageDeliveriesCap) {\n      p2 = topicParams.firstMessageDeliveriesCap;\n    }\n    topicScore += p2 * topicParams.firstMessageDeliveriesWeight;\n    // P3: mesh message deliveries\n    if (tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold) {\n      var deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries;\n      var p3 = deficit * deficit;\n      topicScore += p3 * topicParams.meshMessageDeliveriesWeight;\n    }\n    // P3b:\n    // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n    var p3b = tstats.meshFailurePenalty;\n    topicScore += p3b * topicParams.meshFailurePenaltyWeight;\n    // P4: invalid messages\n    // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n    var p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries;\n    topicScore += p4 * topicParams.invalidMessageDeliveriesWeight;\n    // update score, mixing with topic weight\n    score += topicScore * topicParams.topicWeight;\n  });\n  // apply the topic score cap, if any\n  if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n    score = params.topicScoreCap;\n  }\n  // P5: application-specific score\n  var p5 = params.appSpecificScore(peer);\n  score += p5 * params.appSpecificWeight;\n  // P6: IP colocation factor\n  pstats.ips.forEach(function (ip) {\n    if (params.IPColocationFactorWhitelist.has(ip)) {\n      return;\n    }\n    // P6 has a cliff (IPColocationFactorThreshold)\n    // It's only applied if at least that many peers are connected to us from that source IP addr.\n    // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n    var peersInIP = peerIPs.get(ip);\n    var numPeersInIP = peersInIP ? peersInIP.size : 0;\n    if (numPeersInIP > params.IPColocationFactorThreshold) {\n      var surplus = numPeersInIP - params.IPColocationFactorThreshold;\n      var p6 = surplus * surplus;\n      score += p6 * params.IPColocationFactorWeight;\n    }\n  });\n  // P7: behavioural pattern penalty\n  if (pstats.behaviourPenalty > params.behaviourPenaltyThreshold) {\n    var excess = pstats.behaviourPenalty - params.behaviourPenaltyThreshold;\n    var p7 = excess * excess;\n    score += p7 * params.behaviourPenaltyWeight;\n  }\n  return score;\n}","map":{"version":3,"names":["computeScore","peer","pstats","params","peerIPs","score","Object","entries","topics","forEach","_ref","_ref2","_slicedToArray","topic","tstats","topicParams","undefined","topicScore","inMesh","p1","meshTime","timeInMeshQuantum","timeInMeshCap","timeInMeshWeight","p2","firstMessageDeliveries","firstMessageDeliveriesCap","firstMessageDeliveriesWeight","meshMessageDeliveriesActive","meshMessageDeliveries","meshMessageDeliveriesThreshold","deficit","p3","meshMessageDeliveriesWeight","p3b","meshFailurePenalty","meshFailurePenaltyWeight","p4","invalidMessageDeliveries","invalidMessageDeliveriesWeight","topicWeight","topicScoreCap","p5","appSpecificScore","appSpecificWeight","ips","ip","IPColocationFactorWhitelist","has","peersInIP","get","numPeersInIP","size","IPColocationFactorThreshold","surplus","p6","IPColocationFactorWeight","behaviourPenalty","behaviourPenaltyThreshold","excess","p7","behaviourPenaltyWeight"],"sources":["../../../src/score/compute-score.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}