{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport var createGet = configure(function (api) {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n  function _get() {\n    _get = _wrapAsyncGenerator(function (path) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var opts, res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              /** @type {Record<string, any>} */\n              opts = _objectSpread({\n                arg: \"\".concat(path instanceof Uint8Array ? CID.decode(path) : path)\n              }, options);\n              if (opts.compressionLevel) {\n                opts['compression-level'] = opts.compressionLevel;\n                delete opts.compressionLevel;\n              }\n              _context.next = 4;\n              return _awaitAsyncGenerator(api.post('get', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(opts),\n                headers: options.headers\n              }));\n            case 4:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.iterator()), _awaitAsyncGenerator), \"t0\", 6);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })();\n    });\n    return _get.apply(this, arguments);\n  }\n  return get;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createGet","api","get","_x","_get","apply","arguments","_wrapAsyncGenerator","path","options","length","undefined","_regeneratorRuntime","mark","_callee","opts","res","wrap","_callee$","_context","prev","next","_objectSpread","arg","concat","Uint8Array","decode","compressionLevel","_awaitAsyncGenerator","post","signal","searchParams","headers","sent","delegateYield","_asyncGeneratorDelegate","_asyncIterator","iterator","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/get.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  async function * get (path, options = {}) {\n    /** @type {Record<string, any>} */\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel\n      delete opts.compressionLevel\n    }\n\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return get\n})\n"],"mappings":";;;;;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;;AAEjE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,SAAS,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EACxC;AACF;AACA;EAFE,SAGiBC,GAAGA,CAAAC,EAAA;IAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,KAAA;IAAAA,IAAA,GAAAG,mBAAA,CAApB,UAAsBC,IAAI;MAAA,IAAEC,OAAO,GAAAH,SAAA,CAAAI,MAAA,QAAAJ,SAAA,QAAAK,SAAA,GAAAL,SAAA,MAAG,CAAC,CAAC;MAAA,oBAAAM,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,IAAA,EAAAC,GAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACtC;cACMN,IAAI,GAAAO,aAAA;gBACRC,GAAG,KAAAC,MAAA,CAAKhB,IAAI,YAAYiB,UAAU,GAAG5B,GAAG,CAAC6B,MAAM,CAAClB,IAAI,CAAC,GAAGA,IAAI;cAAE,GAC3DC,OAAO;cAGZ,IAAIM,IAAI,CAACY,gBAAgB,EAAE;gBACzBZ,IAAI,CAAC,mBAAmB,CAAC,GAAGA,IAAI,CAACY,gBAAgB;gBACjD,OAAOZ,IAAI,CAACY,gBAAgB;cAC9B;cAACR,QAAA,CAAAE,IAAA;cAAA,OAAAO,oBAAA,CAEiB3B,GAAG,CAAC4B,IAAI,CAAC,KAAK,EAAE;gBAChCC,MAAM,EAAErB,OAAO,CAACqB,MAAM;gBACtBC,YAAY,EAAEhC,iBAAiB,CAACgB,IAAI,CAAC;gBACrCiB,OAAO,EAAEvB,OAAO,CAACuB;cACnB,CAAC,CAAC;YAAA;cAJIhB,GAAG,GAAAG,QAAA,CAAAc,IAAA;cAMT,OAAAd,QAAA,CAAAe,aAAA,CAAAC,uBAAA,CAAAC,cAAA,CAAQpB,GAAG,CAACqB,QAAQ,CAAC,CAAC,GAAAT,oBAAA;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAmB,IAAA;UAAA;QAAA,GAAAxB,OAAA;MAAA;IAAA,CACvB;IAAA,OAAAV,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOJ,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}