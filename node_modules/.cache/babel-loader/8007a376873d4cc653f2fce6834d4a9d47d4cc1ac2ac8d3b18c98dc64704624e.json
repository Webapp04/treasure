{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isValidMultiaddr } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAdd(_ref) {\n  var repo = _ref.repo;\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"add\"]}\n   */\n  function add(_x) {\n    return _add.apply(this, arguments);\n  }\n  function _add() {\n    _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(multiaddr) {\n      var options,\n        config,\n        boostrappers,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (isValidMultiaddr(multiaddr)) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error(\"\".concat(multiaddr, \" is not a valid Multiaddr\"));\n          case 3:\n            _context.next = 5;\n            return repo.config.getAll(options);\n          case 5:\n            config = _context.sent;\n            boostrappers = config.Bootstrap || [];\n            boostrappers.push(multiaddr.toString());\n            config.Bootstrap = Array.from(new Set(boostrappers)).sort(function (a, b) {\n              return a.localeCompare(b);\n            });\n            _context.next = 11;\n            return repo.config.replace(config);\n          case 11:\n            return _context.abrupt(\"return\", {\n              Peers: [multiaddr]\n            });\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _add.apply(this, arguments);\n  }\n  return withTimeoutOption(add);\n}","map":{"version":3,"names":["isValidMultiaddr","withTimeoutOption","createAdd","_ref","repo","add","_x","_add","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","multiaddr","options","config","boostrappers","_args","wrap","_callee$","_context","prev","next","length","undefined","Error","concat","getAll","sent","Bootstrap","push","toString","Array","from","Set","sort","a","b","localeCompare","replace","abrupt","Peers","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/bootstrap/add.js"],"sourcesContent":["import { isValidMultiaddr } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAdd ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"add\"]}\n   */\n  async function add (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    const config = await repo.config.getAll(options)\n    const boostrappers = config.Bootstrap || []\n    boostrappers.push(multiaddr.toString())\n\n    config.Bootstrap = Array.from(\n      new Set(boostrappers)\n    ).sort((a, b) => a.localeCompare(b))\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: [multiaddr]\n    }\n  }\n\n  return withTimeoutOption(add)\n}\n"],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,YAAY;AAC7C,SAASC,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAY;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC/B;AACF;AACA;EAFE,SAGeC,GAAGA,CAAAC,EAAA;IAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,KAAA;IAAAA,IAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAlB,SAAAC,QAAoBC,SAAS;MAAA,IAAAC,OAAA;QAAAC,MAAA;QAAAC,YAAA;QAAAC,KAAA,GAAAT,SAAA;MAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAER,OAAO,GAAAG,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAA,IACpClB,gBAAgB,CAACc,SAAS,CAAC;cAAAO,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,MACxB,IAAIG,KAAK,IAAAC,MAAA,CAAIb,SAAS,8BAA2B,CAAC;UAAA;YAAAO,QAAA,CAAAE,IAAA;YAAA,OAGrCnB,IAAI,CAACY,MAAM,CAACY,MAAM,CAACb,OAAO,CAAC;UAAA;YAA1CC,MAAM,GAAAK,QAAA,CAAAQ,IAAA;YACNZ,YAAY,GAAGD,MAAM,CAACc,SAAS,IAAI,EAAE;YAC3Cb,YAAY,CAACc,IAAI,CAACjB,SAAS,CAACkB,QAAQ,CAAC,CAAC,CAAC;YAEvChB,MAAM,CAACc,SAAS,GAAGG,KAAK,CAACC,IAAI,CAC3B,IAAIC,GAAG,CAAClB,YAAY,CACtB,CAAC,CAACmB,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;cAAA,OAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC;YAAA,EAAC;YAAAjB,QAAA,CAAAE,IAAA;YAAA,OAE9BnB,IAAI,CAACY,MAAM,CAACwB,OAAO,CAACxB,MAAM,CAAC;UAAA;YAAA,OAAAK,QAAA,CAAAoB,MAAA,WAE1B;cACLC,KAAK,EAAE,CAAC5B,SAAS;YACnB,CAAC;UAAA;UAAA;YAAA,OAAAO,QAAA,CAAAsB,IAAA;QAAA;MAAA,GAAA9B,OAAA;IAAA,CACF;IAAA,OAAAN,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOR,iBAAiB,CAACI,GAAG,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}