{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { LockExistsError } from '../errors.js';\nimport debug from 'debug';\nvar log = debug('ipfs:repo:lock:memory');\nvar lockFile = 'repo.lock';\n\n/** @type {Record<string,boolean>} */\nvar LOCKS = {};\n\n/**\n * @typedef {import('../types').LockCloser} LockCloser\n */\n\n/**\n * Lock the repo in the given dir.\n *\n * @param {string} dir\n * @returns {Promise<LockCloser>}\n */\nfunction lock(_x) {\n  return _lock.apply(this, arguments);\n}\n/**\n * Check if the repo in the given directory is locked.\n *\n * @param {string} dir\n * @returns {Promise<boolean>}\n */\nfunction _lock() {\n  _lock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dir) {\n    var file, closer;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          file = dir + '/' + lockFile;\n          log('locking %s', file);\n          if (!(LOCKS[file] === true)) {\n            _context2.next = 4;\n            break;\n          }\n          throw new LockExistsError(\"Lock already being held for file: \".concat(file));\n        case 4:\n          LOCKS[file] = true;\n          closer = {\n            close: function close() {\n              return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      if (LOCKS[file]) {\n                        delete LOCKS[file];\n                      }\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }))();\n            }\n          };\n          return _context2.abrupt(\"return\", closer);\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _lock.apply(this, arguments);\n}\nfunction locked(_x2) {\n  return _locked.apply(this, arguments);\n}\nfunction _locked() {\n  _locked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dir) {\n    var file;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          file = dir + '/' + lockFile;\n          log(\"checking lock: \".concat(file));\n          return _context3.abrupt(\"return\", Boolean(LOCKS[file]));\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _locked.apply(this, arguments);\n}\nexport var MemoryLock = {\n  lock: lock,\n  locked: locked\n};","map":{"version":3,"names":["LockExistsError","debug","log","lockFile","LOCKS","lock","_x","_lock","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","dir","file","closer","wrap","_callee2$","_context2","prev","next","concat","close","_callee","_callee$","_context","stop","abrupt","locked","_x2","_locked","_callee3","_callee3$","_context3","Boolean","MemoryLock"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo/src/locks/memory.js"],"sourcesContent":["\nimport { LockExistsError } from '../errors.js'\nimport debug from 'debug'\n\nconst log = debug('ipfs:repo:lock:memory')\nconst lockFile = 'repo.lock'\n\n/** @type {Record<string,boolean>} */\nconst LOCKS = {}\n\n/**\n * @typedef {import('../types').LockCloser} LockCloser\n */\n\n/**\n * Lock the repo in the given dir.\n *\n * @param {string} dir\n * @returns {Promise<LockCloser>}\n */\nasync function lock (dir) {\n  const file = dir + '/' + lockFile\n  log('locking %s', file)\n\n  if (LOCKS[file] === true) {\n    throw new LockExistsError(`Lock already being held for file: ${file}`)\n  }\n\n  LOCKS[file] = true\n  const closer = {\n    async close () {\n      if (LOCKS[file]) {\n        delete LOCKS[file]\n      }\n    }\n  }\n  return closer\n}\n\n/**\n * Check if the repo in the given directory is locked.\n *\n * @param {string} dir\n * @returns {Promise<boolean>}\n */\nasync function locked (dir) {\n  const file = dir + '/' + lockFile\n  log(`checking lock: ${file}`)\n\n  return Boolean(LOCKS[file])\n}\n\nexport const MemoryLock = {\n  lock,\n  locked\n}\n"],"mappings":";;AACA,SAASA,eAAe,QAAQ,cAAc;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,GAAG,GAAGD,KAAK,CAAC,uBAAuB,CAAC;AAC1C,IAAME,QAAQ,GAAG,WAAW;;AAE5B;AACA,IAAMC,KAAK,GAAG,CAAC,CAAC;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,SAMeC,IAAIA,CAAAC,EAAA;EAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAmBnB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAF,MAAA;EAAAA,KAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAnBA,SAAAC,SAAqBC,GAAG;IAAA,IAAAC,IAAA,EAAAC,MAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAChBN,IAAI,GAAGD,GAAG,GAAG,GAAG,GAAGX,QAAQ;UACjCD,GAAG,CAAC,YAAY,EAAEa,IAAI,CAAC;UAAA,MAEnBX,KAAK,CAACW,IAAI,CAAC,KAAK,IAAI;YAAAI,SAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAChB,IAAIrB,eAAe,sCAAAsB,MAAA,CAAsCP,IAAI,CAAE,CAAC;QAAA;UAGxEX,KAAK,CAACW,IAAI,CAAC,GAAG,IAAI;UACZC,MAAM,GAAG;YACPO,KAAK,WAAAA,MAAA,EAAI;cAAA,OAAAb,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAY,QAAA;gBAAA,OAAAb,mBAAA,GAAAM,IAAA,UAAAQ,SAAAC,QAAA;kBAAA,kBAAAA,QAAA,CAAAN,IAAA,GAAAM,QAAA,CAAAL,IAAA;oBAAA;sBACb,IAAIjB,KAAK,CAACW,IAAI,CAAC,EAAE;wBACf,OAAOX,KAAK,CAACW,IAAI,CAAC;sBACpB;oBAAC;oBAAA;sBAAA,OAAAW,QAAA,CAAAC,IAAA;kBAAA;gBAAA,GAAAH,OAAA;cAAA;YACH;UACF,CAAC;UAAA,OAAAL,SAAA,CAAAS,MAAA,WACMZ,MAAM;QAAA;QAAA;UAAA,OAAAG,SAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAd,QAAA;EAAA,CACd;EAAA,OAAAN,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAQcoB,MAAMA,CAAAC,GAAA;EAAA,OAAAC,OAAA,CAAAvB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAsB,QAAA;EAAAA,OAAA,GAAArB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAArB,SAAAoB,SAAuBlB,GAAG;IAAA,IAAAC,IAAA;IAAA,OAAAJ,mBAAA,GAAAM,IAAA,UAAAgB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;QAAA;UAClBN,IAAI,GAAGD,GAAG,GAAG,GAAG,GAAGX,QAAQ;UACjCD,GAAG,mBAAAoB,MAAA,CAAmBP,IAAI,CAAE,CAAC;UAAA,OAAAmB,SAAA,CAAAN,MAAA,WAEtBO,OAAO,CAAC/B,KAAK,CAACW,IAAI,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAmB,SAAA,CAAAP,IAAA;MAAA;IAAA,GAAAK,QAAA;EAAA,CAC5B;EAAA,OAAAD,OAAA,CAAAvB,KAAA,OAAAC,SAAA;AAAA;AAED,OAAO,IAAM2B,UAAU,GAAG;EACxB/B,IAAI,EAAJA,IAAI;EACJwB,MAAM,EAANA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}