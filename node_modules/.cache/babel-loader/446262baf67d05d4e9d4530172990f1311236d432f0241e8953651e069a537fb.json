{"ast":null,"code":"import bases from './util/bases.js';\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString(array) {\n  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n  var base = bases[encoding];\n  if (base == null) {\n    throw new Error(\"Unsupported encoding \\\"\".concat(encoding, \"\\\"\"));\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1);\n}","map":{"version":3,"names":["bases","toString","array","encoding","arguments","length","undefined","base","Error","concat","globalThis","Buffer","from","buffer","byteOffset","byteLength","encoder","encode","substring"],"sources":["/Users/apple/Documents/treasure/node_modules/@multiformats/multiaddr/node_modules/uint8arrays/src/to-string.ts"],"sourcesContent":["import bases, { SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function toString (array: Uint8Array, encoding: SupportedEncodings = 'utf8'): string {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8')\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n"],"mappings":"AAAA,OAAOA,KAA6B,MAAM,iBAAiB;AAI3D;;;;;;;AAOA,OAAM,SAAUC,QAAQA,CAAEC,KAAiB,EAAuC;EAAA,IAArCC,QAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA+B,MAAM;EAChF,IAAMG,IAAI,GAAGP,KAAK,CAACG,QAAQ,CAAC;EAE5B,IAAII,IAAI,IAAI,IAAI,EAAE;IAChB,MAAM,IAAIC,KAAK,2BAAAC,MAAA,CAA0BN,QAAQ,OAAG,CAAC;;EAGvD,IAAI,CAACA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,KAAKO,UAAU,CAACC,MAAM,IAAI,IAAI,IAAID,UAAU,CAACC,MAAM,CAACC,IAAI,IAAI,IAAI,EAAE;IAChH,OAAOF,UAAU,CAACC,MAAM,CAACC,IAAI,CAACV,KAAK,CAACW,MAAM,EAAEX,KAAK,CAACY,UAAU,EAAEZ,KAAK,CAACa,UAAU,CAAC,CAACd,QAAQ,CAAC,MAAM,CAAC;;EAGlG;EACA,OAAOM,IAAI,CAACS,OAAO,CAACC,MAAM,CAACf,KAAK,CAAC,CAACgB,SAAS,CAAC,CAAC,CAAC;AAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}