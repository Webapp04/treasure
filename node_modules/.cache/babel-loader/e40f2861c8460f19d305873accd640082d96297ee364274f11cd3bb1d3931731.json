{"ast":null,"code":"import _defineProperty from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist';\nimport { reader } from 'it-reader';\nexport function lteReader(source) {\n  var _lteReader;\n  var input = reader(source);\n  var overflow;\n  var lteReader = (_lteReader = {}, _defineProperty(_lteReader, Symbol.asyncIterator, function () {\n    return lteReader;\n  }), _defineProperty(_lteReader, \"next\", function next(bytes) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var value, _ref, _yield$input$next, nextValue, done, _result, result;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(overflow != null)) {\n              _context.next = 26;\n              break;\n            }\n            if (!(bytes == null || overflow.length === bytes)) {\n              _context.next = 6;\n              break;\n            }\n            value = overflow;\n            overflow = null;\n            _context.next = 21;\n            break;\n          case 6:\n            if (!(overflow.length > bytes)) {\n              _context.next = 11;\n              break;\n            }\n            value = overflow.sublist(0, bytes);\n            overflow = overflow.sublist(bytes);\n            _context.next = 21;\n            break;\n          case 11:\n            if (!(overflow.length < bytes)) {\n              _context.next = 21;\n              break;\n            }\n            _context.next = 14;\n            return input.next(bytes - overflow.length);\n          case 14:\n            _yield$input$next = _context.sent;\n            nextValue = _yield$input$next.value;\n            done = _yield$input$next.done;\n            if (!((_ref = done === true) !== null && _ref !== void 0 ? _ref : nextValue == null)) {\n              _context.next = 19;\n              break;\n            }\n            throw Object.assign(new Error(\"stream ended before \".concat(bytes - overflow.length, \" bytes became available\")), {\n              code: 'ERR_UNDER_READ'\n            });\n          case 19:\n            value = new Uint8ArrayList(overflow, nextValue);\n            overflow = null;\n          case 21:\n            if (!(value == null)) {\n              _context.next = 24;\n              break;\n            }\n            _result = {\n              done: true,\n              value: undefined\n            };\n            return _context.abrupt(\"return\", _result);\n          case 24:\n            result = {\n              done: false,\n              value: value\n            };\n            return _context.abrupt(\"return\", result);\n          case 26:\n            _context.next = 28;\n            return input.next(bytes);\n          case 28:\n            return _context.abrupt(\"return\", _context.sent);\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }), _defineProperty(_lteReader, \"nextLte\", function nextLte(bytes) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _yield$lteReader$next, done, value, list;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return lteReader.next();\n          case 2:\n            _yield$lteReader$next = _context2.sent;\n            done = _yield$lteReader$next.done;\n            value = _yield$lteReader$next.value;\n            if (!(done === true)) {\n              _context2.next = 7;\n              break;\n            }\n            return _context2.abrupt(\"return\", {\n              done: true,\n              value: undefined\n            });\n          case 7:\n            if (!(value.length <= bytes)) {\n              _context2.next = 9;\n              break;\n            }\n            return _context2.abrupt(\"return\", {\n              done: false,\n              value: value\n            });\n          case 9:\n            list = isUint8ArrayList(value) ? value : new Uint8ArrayList(value);\n            if (overflow != null) {\n              overflow.append(list.sublist(bytes));\n            } else {\n              overflow = list.sublist(bytes);\n            }\n            return _context2.abrupt(\"return\", {\n              done: false,\n              value: list.sublist(0, bytes)\n            });\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }), _defineProperty(_lteReader, \"return\", function _return() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return input.return();\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }), _lteReader);\n  return lteReader;\n}","map":{"version":3,"names":["isUint8ArrayList","Uint8ArrayList","reader","lteReader","source","_lteReader","input","overflow","_defineProperty","Symbol","asyncIterator","next","bytes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","_ref","_yield$input$next","nextValue","done","_result","result","wrap","_callee$","_context","prev","length","sublist","sent","Object","assign","Error","concat","code","undefined","abrupt","stop","nextLte","_callee2","_yield$lteReader$next","list","_callee2$","_context2","append","_return","_callee3","_callee3$","_context3","return"],"sources":["/Users/apple/Documents/treasure/node_modules/it-tar/src/lte-reader.ts"],"sourcesContent":["import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\nimport { reader } from 'it-reader'\nimport type { Source } from 'it-stream-types'\n\nexport interface LteReader extends AsyncIterator<Uint8ArrayList, void, number | undefined> {\n  nextLte: (bytes: number) => Promise<IteratorResult<Uint8ArrayList>>\n  return: () => Promise<IteratorResult<Uint8ArrayList>>\n}\n\nexport function lteReader (source: Source<Uint8Array>): LteReader {\n  const input = reader(source)\n  let overflow: Uint8ArrayList | null\n  const lteReader = {\n    [Symbol.asyncIterator]: () => lteReader,\n    async next (bytes?: number): Promise<IteratorResult<Uint8ArrayList>> {\n      if (overflow != null) {\n        let value\n        if (bytes == null || overflow.length === bytes) {\n          value = overflow\n          overflow = null\n        } else if (overflow.length > bytes) {\n          value = overflow.sublist(0, bytes)\n          overflow = overflow.sublist(bytes)\n        } else if (overflow.length < bytes) {\n          const { value: nextValue, done } = await input.next(bytes - overflow.length)\n          if (done === true ?? nextValue == null) {\n            throw Object.assign(\n              new Error(`stream ended before ${bytes - overflow.length} bytes became available`),\n              { code: 'ERR_UNDER_READ' }\n            )\n          }\n          value = new Uint8ArrayList(overflow, nextValue)\n          overflow = null\n        }\n\n        if (value == null) {\n          const result: IteratorResult<Uint8ArrayList> = { done: true, value: undefined }\n\n          return result\n        }\n\n        const result: IteratorResult<Uint8ArrayList> = { done: false, value }\n\n        return result\n      }\n\n      return await input.next(bytes)\n    },\n    async nextLte (bytes: number): Promise<IteratorResult<Uint8ArrayList>> {\n      const { done, value } = await lteReader.next()\n\n      if (done === true) {\n        return {\n          done: true,\n          value: undefined\n        }\n      }\n\n      if (value.length <= bytes) {\n        return { done: false, value }\n      }\n\n      const list = isUint8ArrayList(value) ? value : new Uint8ArrayList(value)\n\n      if (overflow != null) {\n        overflow.append(list.sublist(bytes))\n      } else {\n        overflow = list.sublist(bytes)\n      }\n\n      return { done: false, value: list.sublist(0, bytes) }\n    },\n    async return () {\n      return await input.return()\n    }\n  }\n\n  return lteReader\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}