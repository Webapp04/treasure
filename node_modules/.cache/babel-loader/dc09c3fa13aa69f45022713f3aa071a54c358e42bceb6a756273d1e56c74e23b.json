{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectWithoutProperties = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nvar _classCallCheck = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _excluded = [\"keyEncoding\", \"valueEncoding\", \"passive\"],\n  _excluded2 = [\"keyEncoding\", \"valueEncoding\"];\nvar _require = require('level-supports'),\n  supports = _require.supports;\nvar _require2 = require('level-transcoder'),\n  Transcoder = _require2.Transcoder;\nvar _require3 = require('events'),\n  EventEmitter = _require3.EventEmitter;\nvar _require4 = require('catering'),\n  fromCallback = _require4.fromCallback;\nvar ModuleError = require('module-error');\nvar _require5 = require('./abstract-iterator'),\n  AbstractIterator = _require5.AbstractIterator;\nvar _require6 = require('./lib/default-kv-iterator'),\n  DefaultKeyIterator = _require6.DefaultKeyIterator,\n  DefaultValueIterator = _require6.DefaultValueIterator;\nvar _require7 = require('./lib/deferred-iterator'),\n  DeferredIterator = _require7.DeferredIterator,\n  DeferredKeyIterator = _require7.DeferredKeyIterator,\n  DeferredValueIterator = _require7.DeferredValueIterator;\nvar _require8 = require('./lib/default-chained-batch'),\n  DefaultChainedBatch = _require8.DefaultChainedBatch;\nvar _require9 = require('./lib/common'),\n  getCallback = _require9.getCallback,\n  getOptions = _require9.getOptions;\nvar rangeOptions = require('./lib/range-options');\nvar kPromise = Symbol('promise');\nvar kLanded = Symbol('landed');\nvar kResources = Symbol('resources');\nvar kCloseResources = Symbol('closeResources');\nvar kOperations = Symbol('operations');\nvar kUndefer = Symbol('undefer');\nvar kDeferOpen = Symbol('deferOpen');\nvar kOptions = Symbol('options');\nvar kStatus = Symbol('status');\nvar kDefaultOptions = Symbol('defaultOptions');\nvar kTranscoder = Symbol('transcoder');\nvar kKeyEncoding = Symbol('keyEncoding');\nvar kValueEncoding = Symbol('valueEncoding');\nvar noop = function noop() {};\nvar AbstractLevel = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(AbstractLevel, _EventEmitter);\n  var _super = _createSuper(AbstractLevel);\n  function AbstractLevel(manifest, options) {\n    var _this;\n    _classCallCheck(this, AbstractLevel);\n    _this = _super.call(this);\n    if (typeof manifest !== 'object' || manifest === null) {\n      throw new TypeError(\"The first argument 'manifest' must be an object\");\n    }\n    options = getOptions(options);\n    var _options = options,\n      keyEncoding = _options.keyEncoding,\n      valueEncoding = _options.valueEncoding,\n      passive = _options.passive,\n      forward = _objectWithoutProperties(_options, _excluded);\n    _this[kResources] = new Set();\n    _this[kOperations] = [];\n    _this[kDeferOpen] = true;\n    _this[kOptions] = forward;\n    _this[kStatus] = 'opening';\n    _this.supports = supports(manifest, {\n      status: true,\n      promises: true,\n      clear: true,\n      getMany: true,\n      deferredOpen: true,\n      // TODO (next major): add seek\n      snapshots: manifest.snapshots !== false,\n      permanence: manifest.permanence !== false,\n      // TODO: remove from level-supports because it's always supported\n      keyIterator: true,\n      valueIterator: true,\n      iteratorNextv: true,\n      iteratorAll: true,\n      encodings: manifest.encodings || {},\n      events: Object.assign({}, manifest.events, {\n        opening: true,\n        open: true,\n        closing: true,\n        closed: true,\n        put: true,\n        del: true,\n        batch: true,\n        clear: true\n      })\n    });\n    _this[kTranscoder] = new Transcoder(formats(_assertThisInitialized(_this)));\n    _this[kKeyEncoding] = _this[kTranscoder].encoding(keyEncoding || 'utf8');\n    _this[kValueEncoding] = _this[kTranscoder].encoding(valueEncoding || 'utf8');\n\n    // Add custom and transcoder encodings to manifest\n    var _iterator2 = _createForOfIteratorHelper(_this[kTranscoder].encodings()),\n      _step;\n    try {\n      for (_iterator2.s(); !(_step = _iterator2.n()).done;) {\n        var encoding = _step.value;\n        if (!_this.supports.encodings[encoding.commonName]) {\n          _this.supports.encodings[encoding.commonName] = true;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    _this[kDefaultOptions] = {\n      empty: Object.freeze({}),\n      entry: Object.freeze({\n        keyEncoding: _this[kKeyEncoding].commonName,\n        valueEncoding: _this[kValueEncoding].commonName\n      }),\n      key: Object.freeze({\n        keyEncoding: _this[kKeyEncoding].commonName\n      })\n    };\n\n    // Let subclass finish its constructor\n    _this.nextTick(function () {\n      if (_this[kDeferOpen]) {\n        _this.open({\n          passive: false\n        }, noop);\n      }\n    });\n    return _this;\n  }\n  _createClass(AbstractLevel, [{\n    key: \"status\",\n    get: function get() {\n      return this[kStatus];\n    }\n  }, {\n    key: \"keyEncoding\",\n    value: function keyEncoding(encoding) {\n      return this[kTranscoder].encoding(encoding != null ? encoding : this[kKeyEncoding]);\n    }\n  }, {\n    key: \"valueEncoding\",\n    value: function valueEncoding(encoding) {\n      return this[kTranscoder].encoding(encoding != null ? encoding : this[kValueEncoding]);\n    }\n  }, {\n    key: \"open\",\n    value: function open(options, callback) {\n      var _this2 = this;\n      callback = getCallback(options, callback);\n      callback = fromCallback(callback, kPromise);\n      options = _objectSpread(_objectSpread({}, this[kOptions]), getOptions(options));\n      options.createIfMissing = options.createIfMissing !== false;\n      options.errorIfExists = !!options.errorIfExists;\n      var maybeOpened = function maybeOpened(err) {\n        if (_this2[kStatus] === 'closing' || _this2[kStatus] === 'opening') {\n          // Wait until pending state changes are done\n          _this2.once(kLanded, err ? function () {\n            return maybeOpened(err);\n          } : maybeOpened);\n        } else if (_this2[kStatus] !== 'open') {\n          callback(new ModuleError('Database is not open', {\n            code: 'LEVEL_DATABASE_NOT_OPEN',\n            cause: err\n          }));\n        } else {\n          callback();\n        }\n      };\n      if (options.passive) {\n        if (this[kStatus] === 'opening') {\n          this.once(kLanded, maybeOpened);\n        } else {\n          this.nextTick(maybeOpened);\n        }\n      } else if (this[kStatus] === 'closed' || this[kDeferOpen]) {\n        this[kDeferOpen] = false;\n        this[kStatus] = 'opening';\n        this.emit('opening');\n        this._open(options, function (err) {\n          if (err) {\n            _this2[kStatus] = 'closed';\n\n            // Resources must be safe to close in any db state\n            _this2[kCloseResources](function () {\n              _this2.emit(kLanded);\n              maybeOpened(err);\n            });\n            _this2[kUndefer]();\n            return;\n          }\n          _this2[kStatus] = 'open';\n          _this2[kUndefer]();\n          _this2.emit(kLanded);\n\n          // Only emit public event if pending state changes are done\n          if (_this2[kStatus] === 'open') _this2.emit('open');\n\n          // TODO (next major): remove this alias\n          if (_this2[kStatus] === 'open') _this2.emit('ready');\n          maybeOpened();\n        });\n      } else if (this[kStatus] === 'open') {\n        this.nextTick(maybeOpened);\n      } else {\n        this.once(kLanded, function () {\n          return _this2.open(options, callback);\n        });\n      }\n      return callback[kPromise];\n    }\n  }, {\n    key: \"_open\",\n    value: function _open(options, callback) {\n      this.nextTick(callback);\n    }\n  }, {\n    key: \"close\",\n    value: function close(callback) {\n      var _this3 = this;\n      callback = fromCallback(callback, kPromise);\n      var maybeClosed = function maybeClosed(err) {\n        if (_this3[kStatus] === 'opening' || _this3[kStatus] === 'closing') {\n          // Wait until pending state changes are done\n          _this3.once(kLanded, err ? maybeClosed(err) : maybeClosed);\n        } else if (_this3[kStatus] !== 'closed') {\n          callback(new ModuleError('Database is not closed', {\n            code: 'LEVEL_DATABASE_NOT_CLOSED',\n            cause: err\n          }));\n        } else {\n          callback();\n        }\n      };\n      if (this[kStatus] === 'open') {\n        this[kStatus] = 'closing';\n        this.emit('closing');\n        var cancel = function cancel(err) {\n          _this3[kStatus] = 'open';\n          _this3[kUndefer]();\n          _this3.emit(kLanded);\n          maybeClosed(err);\n        };\n        this[kCloseResources](function () {\n          _this3._close(function (err) {\n            if (err) return cancel(err);\n            _this3[kStatus] = 'closed';\n            _this3[kUndefer]();\n            _this3.emit(kLanded);\n\n            // Only emit public event if pending state changes are done\n            if (_this3[kStatus] === 'closed') _this3.emit('closed');\n            maybeClosed();\n          });\n        });\n      } else if (this[kStatus] === 'closed') {\n        this.nextTick(maybeClosed);\n      } else {\n        this.once(kLanded, function () {\n          return _this3.close(callback);\n        });\n      }\n      return callback[kPromise];\n    }\n  }, {\n    key: kCloseResources,\n    value: function value(callback) {\n      var _this4 = this;\n      if (this[kResources].size === 0) {\n        return this.nextTick(callback);\n      }\n      var pending = this[kResources].size;\n      var sync = true;\n      var next = function next() {\n        if (--pending === 0) {\n          // We don't have tests for generic resources, so dezalgo\n          if (sync) _this4.nextTick(callback);else callback();\n        }\n      };\n\n      // In parallel so that all resources know they are closed\n      var _iterator3 = _createForOfIteratorHelper(this[kResources]),\n        _step2;\n      try {\n        for (_iterator3.s(); !(_step2 = _iterator3.n()).done;) {\n          var resource = _step2.value;\n          resource.close(next);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      sync = false;\n      this[kResources].clear();\n    }\n  }, {\n    key: \"_close\",\n    value: function _close(callback) {\n      this.nextTick(callback);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, options, callback) {\n      var _this5 = this;\n      callback = getCallback(options, callback);\n      callback = fromCallback(callback, kPromise);\n      options = getOptions(options, this[kDefaultOptions].entry);\n      if (this[kStatus] === 'opening') {\n        this.defer(function () {\n          return _this5.get(key, options, callback);\n        });\n        return callback[kPromise];\n      }\n      if (maybeError(this, callback)) {\n        return callback[kPromise];\n      }\n      var err = this._checkKey(key);\n      if (err) {\n        this.nextTick(callback, err);\n        return callback[kPromise];\n      }\n      var keyEncoding = this.keyEncoding(options.keyEncoding);\n      var valueEncoding = this.valueEncoding(options.valueEncoding);\n      var keyFormat = keyEncoding.format;\n      var valueFormat = valueEncoding.format;\n\n      // Forward encoding options to the underlying store\n      if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n        // Avoid spread operator because of https://bugs.chromium.org/p/chromium/issues/detail?id=1204540\n        options = Object.assign({}, options, {\n          keyEncoding: keyFormat,\n          valueEncoding: valueFormat\n        });\n      }\n      this._get(this.prefixKey(keyEncoding.encode(key), keyFormat), options, function (err, value) {\n        if (err) {\n          // Normalize not found error for backwards compatibility with abstract-leveldown and level(up)\n          if (err.code === 'LEVEL_NOT_FOUND' || err.notFound || /NotFound/i.test(err)) {\n            if (!err.code) err.code = 'LEVEL_NOT_FOUND'; // Preferred way going forward\n            if (!err.notFound) err.notFound = true; // Same as level-errors\n            if (!err.status) err.status = 404; // Same as level-errors\n          }\n\n          return callback(err);\n        }\n        try {\n          value = valueEncoding.decode(value);\n        } catch (err) {\n          return callback(new ModuleError('Could not decode value', {\n            code: 'LEVEL_DECODE_ERROR',\n            cause: err\n          }));\n        }\n        callback(null, value);\n      });\n      return callback[kPromise];\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(key, options, callback) {\n      this.nextTick(callback, new Error('NotFound'));\n    }\n  }, {\n    key: \"getMany\",\n    value: function getMany(keys, options, callback) {\n      var _this6 = this;\n      callback = getCallback(options, callback);\n      callback = fromCallback(callback, kPromise);\n      options = getOptions(options, this[kDefaultOptions].entry);\n      if (this[kStatus] === 'opening') {\n        this.defer(function () {\n          return _this6.getMany(keys, options, callback);\n        });\n        return callback[kPromise];\n      }\n      if (maybeError(this, callback)) {\n        return callback[kPromise];\n      }\n      if (!Array.isArray(keys)) {\n        this.nextTick(callback, new TypeError(\"The first argument 'keys' must be an array\"));\n        return callback[kPromise];\n      }\n      if (keys.length === 0) {\n        this.nextTick(callback, null, []);\n        return callback[kPromise];\n      }\n      var keyEncoding = this.keyEncoding(options.keyEncoding);\n      var valueEncoding = this.valueEncoding(options.valueEncoding);\n      var keyFormat = keyEncoding.format;\n      var valueFormat = valueEncoding.format;\n\n      // Forward encoding options\n      if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n        options = Object.assign({}, options, {\n          keyEncoding: keyFormat,\n          valueEncoding: valueFormat\n        });\n      }\n      var mappedKeys = new Array(keys.length);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var err = this._checkKey(key);\n        if (err) {\n          this.nextTick(callback, err);\n          return callback[kPromise];\n        }\n        mappedKeys[i] = this.prefixKey(keyEncoding.encode(key), keyFormat);\n      }\n      this._getMany(mappedKeys, options, function (err, values) {\n        if (err) return callback(err);\n        try {\n          for (var _i = 0; _i < values.length; _i++) {\n            if (values[_i] !== undefined) {\n              values[_i] = valueEncoding.decode(values[_i]);\n            }\n          }\n        } catch (err) {\n          return callback(new ModuleError(\"Could not decode one or more of \".concat(values.length, \" value(s)\"), {\n            code: 'LEVEL_DECODE_ERROR',\n            cause: err\n          }));\n        }\n        callback(null, values);\n      });\n      return callback[kPromise];\n    }\n  }, {\n    key: \"_getMany\",\n    value: function _getMany(keys, options, callback) {\n      this.nextTick(callback, null, new Array(keys.length).fill(undefined));\n    }\n  }, {\n    key: \"put\",\n    value: function put(key, value, options, callback) {\n      var _this7 = this;\n      callback = getCallback(options, callback);\n      callback = fromCallback(callback, kPromise);\n      options = getOptions(options, this[kDefaultOptions].entry);\n      if (this[kStatus] === 'opening') {\n        this.defer(function () {\n          return _this7.put(key, value, options, callback);\n        });\n        return callback[kPromise];\n      }\n      if (maybeError(this, callback)) {\n        return callback[kPromise];\n      }\n      var err = this._checkKey(key) || this._checkValue(value);\n      if (err) {\n        this.nextTick(callback, err);\n        return callback[kPromise];\n      }\n      var keyEncoding = this.keyEncoding(options.keyEncoding);\n      var valueEncoding = this.valueEncoding(options.valueEncoding);\n      var keyFormat = keyEncoding.format;\n      var valueFormat = valueEncoding.format;\n\n      // Forward encoding options\n      if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n        options = Object.assign({}, options, {\n          keyEncoding: keyFormat,\n          valueEncoding: valueFormat\n        });\n      }\n      var mappedKey = this.prefixKey(keyEncoding.encode(key), keyFormat);\n      var mappedValue = valueEncoding.encode(value);\n      this._put(mappedKey, mappedValue, options, function (err) {\n        if (err) return callback(err);\n        _this7.emit('put', key, value);\n        callback();\n      });\n      return callback[kPromise];\n    }\n  }, {\n    key: \"_put\",\n    value: function _put(key, value, options, callback) {\n      this.nextTick(callback);\n    }\n  }, {\n    key: \"del\",\n    value: function del(key, options, callback) {\n      var _this8 = this;\n      callback = getCallback(options, callback);\n      callback = fromCallback(callback, kPromise);\n      options = getOptions(options, this[kDefaultOptions].key);\n      if (this[kStatus] === 'opening') {\n        this.defer(function () {\n          return _this8.del(key, options, callback);\n        });\n        return callback[kPromise];\n      }\n      if (maybeError(this, callback)) {\n        return callback[kPromise];\n      }\n      var err = this._checkKey(key);\n      if (err) {\n        this.nextTick(callback, err);\n        return callback[kPromise];\n      }\n      var keyEncoding = this.keyEncoding(options.keyEncoding);\n      var keyFormat = keyEncoding.format;\n\n      // Forward encoding options\n      if (options.keyEncoding !== keyFormat) {\n        options = Object.assign({}, options, {\n          keyEncoding: keyFormat\n        });\n      }\n      this._del(this.prefixKey(keyEncoding.encode(key), keyFormat), options, function (err) {\n        if (err) return callback(err);\n        _this8.emit('del', key);\n        callback();\n      });\n      return callback[kPromise];\n    }\n  }, {\n    key: \"_del\",\n    value: function _del(key, options, callback) {\n      this.nextTick(callback);\n    }\n  }, {\n    key: \"batch\",\n    value: function batch(operations, options, callback) {\n      var _this9 = this;\n      if (!arguments.length) {\n        if (this[kStatus] === 'opening') return new DefaultChainedBatch(this);\n        if (this[kStatus] !== 'open') {\n          throw new ModuleError('Database is not open', {\n            code: 'LEVEL_DATABASE_NOT_OPEN'\n          });\n        }\n        return this._chainedBatch();\n      }\n      if (typeof operations === 'function') callback = operations;else callback = getCallback(options, callback);\n      callback = fromCallback(callback, kPromise);\n      options = getOptions(options, this[kDefaultOptions].empty);\n      if (this[kStatus] === 'opening') {\n        this.defer(function () {\n          return _this9.batch(operations, options, callback);\n        });\n        return callback[kPromise];\n      }\n      if (maybeError(this, callback)) {\n        return callback[kPromise];\n      }\n      if (!Array.isArray(operations)) {\n        this.nextTick(callback, new TypeError(\"The first argument 'operations' must be an array\"));\n        return callback[kPromise];\n      }\n      if (operations.length === 0) {\n        this.nextTick(callback);\n        return callback[kPromise];\n      }\n      var mapped = new Array(operations.length);\n      var _options2 = options,\n        ke = _options2.keyEncoding,\n        ve = _options2.valueEncoding,\n        forward = _objectWithoutProperties(_options2, _excluded2);\n      for (var i = 0; i < operations.length; i++) {\n        if (typeof operations[i] !== 'object' || operations[i] === null) {\n          this.nextTick(callback, new TypeError('A batch operation must be an object'));\n          return callback[kPromise];\n        }\n        var op = Object.assign({}, operations[i]);\n        if (op.type !== 'put' && op.type !== 'del') {\n          this.nextTick(callback, new TypeError(\"A batch operation must have a type property that is 'put' or 'del'\"));\n          return callback[kPromise];\n        }\n        var err = this._checkKey(op.key);\n        if (err) {\n          this.nextTick(callback, err);\n          return callback[kPromise];\n        }\n        var db = op.sublevel != null ? op.sublevel : this;\n        var keyEncoding = db.keyEncoding(op.keyEncoding || ke);\n        var keyFormat = keyEncoding.format;\n        op.key = db.prefixKey(keyEncoding.encode(op.key), keyFormat);\n        op.keyEncoding = keyFormat;\n        if (op.type === 'put') {\n          var valueErr = this._checkValue(op.value);\n          if (valueErr) {\n            this.nextTick(callback, valueErr);\n            return callback[kPromise];\n          }\n          var valueEncoding = db.valueEncoding(op.valueEncoding || ve);\n          op.value = valueEncoding.encode(op.value);\n          op.valueEncoding = valueEncoding.format;\n        }\n\n        // Prevent double prefixing\n        if (db !== this) {\n          op.sublevel = null;\n        }\n        mapped[i] = op;\n      }\n      this._batch(mapped, forward, function (err) {\n        if (err) return callback(err);\n        _this9.emit('batch', operations);\n        callback();\n      });\n      return callback[kPromise];\n    }\n  }, {\n    key: \"_batch\",\n    value: function _batch(operations, options, callback) {\n      this.nextTick(callback);\n    }\n  }, {\n    key: \"sublevel\",\n    value: function sublevel(name, options) {\n      return this._sublevel(name, AbstractSublevel.defaults(options));\n    }\n  }, {\n    key: \"_sublevel\",\n    value: function _sublevel(name, options) {\n      return new AbstractSublevel(this, name, options);\n    }\n  }, {\n    key: \"prefixKey\",\n    value: function prefixKey(key, keyFormat) {\n      return key;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(options, callback) {\n      var _this10 = this;\n      callback = getCallback(options, callback);\n      callback = fromCallback(callback, kPromise);\n      options = getOptions(options, this[kDefaultOptions].empty);\n      if (this[kStatus] === 'opening') {\n        this.defer(function () {\n          return _this10.clear(options, callback);\n        });\n        return callback[kPromise];\n      }\n      if (maybeError(this, callback)) {\n        return callback[kPromise];\n      }\n      var original = options;\n      var keyEncoding = this.keyEncoding(options.keyEncoding);\n      options = rangeOptions(options, keyEncoding);\n      options.keyEncoding = keyEncoding.format;\n      if (options.limit === 0) {\n        this.nextTick(callback);\n      } else {\n        this._clear(options, function (err) {\n          if (err) return callback(err);\n          _this10.emit('clear', original);\n          callback();\n        });\n      }\n      return callback[kPromise];\n    }\n  }, {\n    key: \"_clear\",\n    value: function _clear(options, callback) {\n      this.nextTick(callback);\n    }\n  }, {\n    key: \"iterator\",\n    value: function iterator(options) {\n      var keyEncoding = this.keyEncoding(options && options.keyEncoding);\n      var valueEncoding = this.valueEncoding(options && options.valueEncoding);\n      options = rangeOptions(options, keyEncoding);\n      options.keys = options.keys !== false;\n      options.values = options.values !== false;\n\n      // We need the original encoding options in AbstractIterator in order to decode data\n      options[AbstractIterator.keyEncoding] = keyEncoding;\n      options[AbstractIterator.valueEncoding] = valueEncoding;\n\n      // Forward encoding options to private API\n      options.keyEncoding = keyEncoding.format;\n      options.valueEncoding = valueEncoding.format;\n      if (this[kStatus] === 'opening') {\n        return new DeferredIterator(this, options);\n      } else if (this[kStatus] !== 'open') {\n        throw new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN'\n        });\n      }\n      return this._iterator(options);\n    }\n  }, {\n    key: \"_iterator\",\n    value: function _iterator(options) {\n      return new AbstractIterator(this, options);\n    }\n  }, {\n    key: \"keys\",\n    value: function keys(options) {\n      // Also include valueEncoding (though unused) because we may fallback to _iterator()\n      var keyEncoding = this.keyEncoding(options && options.keyEncoding);\n      var valueEncoding = this.valueEncoding(options && options.valueEncoding);\n      options = rangeOptions(options, keyEncoding);\n\n      // We need the original encoding options in AbstractKeyIterator in order to decode data\n      options[AbstractIterator.keyEncoding] = keyEncoding;\n      options[AbstractIterator.valueEncoding] = valueEncoding;\n\n      // Forward encoding options to private API\n      options.keyEncoding = keyEncoding.format;\n      options.valueEncoding = valueEncoding.format;\n      if (this[kStatus] === 'opening') {\n        return new DeferredKeyIterator(this, options);\n      } else if (this[kStatus] !== 'open') {\n        throw new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN'\n        });\n      }\n      return this._keys(options);\n    }\n  }, {\n    key: \"_keys\",\n    value: function _keys(options) {\n      return new DefaultKeyIterator(this, options);\n    }\n  }, {\n    key: \"values\",\n    value: function values(options) {\n      var keyEncoding = this.keyEncoding(options && options.keyEncoding);\n      var valueEncoding = this.valueEncoding(options && options.valueEncoding);\n      options = rangeOptions(options, keyEncoding);\n\n      // We need the original encoding options in AbstractValueIterator in order to decode data\n      options[AbstractIterator.keyEncoding] = keyEncoding;\n      options[AbstractIterator.valueEncoding] = valueEncoding;\n\n      // Forward encoding options to private API\n      options.keyEncoding = keyEncoding.format;\n      options.valueEncoding = valueEncoding.format;\n      if (this[kStatus] === 'opening') {\n        return new DeferredValueIterator(this, options);\n      } else if (this[kStatus] !== 'open') {\n        throw new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN'\n        });\n      }\n      return this._values(options);\n    }\n  }, {\n    key: \"_values\",\n    value: function _values(options) {\n      return new DefaultValueIterator(this, options);\n    }\n  }, {\n    key: \"defer\",\n    value: function defer(fn) {\n      if (typeof fn !== 'function') {\n        throw new TypeError('The first argument must be a function');\n      }\n      this[kOperations].push(fn);\n    }\n  }, {\n    key: kUndefer,\n    value: function value() {\n      if (this[kOperations].length === 0) {\n        return;\n      }\n      var operations = this[kOperations];\n      this[kOperations] = [];\n      var _iterator4 = _createForOfIteratorHelper(operations),\n        _step3;\n      try {\n        for (_iterator4.s(); !(_step3 = _iterator4.n()).done;) {\n          var op = _step3.value;\n          op();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n\n    // TODO: docs and types\n  }, {\n    key: \"attachResource\",\n    value: function attachResource(resource) {\n      if (typeof resource !== 'object' || resource === null || typeof resource.close !== 'function') {\n        throw new TypeError('The first argument must be a resource object');\n      }\n      this[kResources].add(resource);\n    }\n\n    // TODO: docs and types\n  }, {\n    key: \"detachResource\",\n    value: function detachResource(resource) {\n      this[kResources].delete(resource);\n    }\n  }, {\n    key: \"_chainedBatch\",\n    value: function _chainedBatch() {\n      return new DefaultChainedBatch(this);\n    }\n  }, {\n    key: \"_checkKey\",\n    value: function _checkKey(key) {\n      if (key === null || key === undefined) {\n        return new ModuleError('Key cannot be null or undefined', {\n          code: 'LEVEL_INVALID_KEY'\n        });\n      }\n    }\n  }, {\n    key: \"_checkValue\",\n    value: function _checkValue(value) {\n      if (value === null || value === undefined) {\n        return new ModuleError('Value cannot be null or undefined', {\n          code: 'LEVEL_INVALID_VALUE'\n        });\n      }\n    }\n  }]);\n  return AbstractLevel;\n}(EventEmitter); // Expose browser-compatible nextTick for dependents\n// TODO: after we drop node 10, also use queueMicrotask in node\nAbstractLevel.prototype.nextTick = require('./lib/next-tick');\nvar _require10 = require('./lib/abstract-sublevel')({\n    AbstractLevel: AbstractLevel\n  }),\n  AbstractSublevel = _require10.AbstractSublevel;\nexports.AbstractLevel = AbstractLevel;\nexports.AbstractSublevel = AbstractSublevel;\nvar maybeError = function maybeError(db, callback) {\n  if (db[kStatus] !== 'open') {\n    db.nextTick(callback, new ModuleError('Database is not open', {\n      code: 'LEVEL_DATABASE_NOT_OPEN'\n    }));\n    return true;\n  }\n  return false;\n};\nvar formats = function formats(db) {\n  return Object.keys(db.supports.encodings).filter(function (k) {\n    return !!db.supports.encodings[k];\n  });\n};","map":{"version":3,"names":["_objectSpread","require","default","_createForOfIteratorHelper","_objectWithoutProperties","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","_excluded","_excluded2","_require","supports","_require2","Transcoder","_require3","EventEmitter","_require4","fromCallback","ModuleError","_require5","AbstractIterator","_require6","DefaultKeyIterator","DefaultValueIterator","_require7","DeferredIterator","DeferredKeyIterator","DeferredValueIterator","_require8","DefaultChainedBatch","_require9","getCallback","getOptions","rangeOptions","kPromise","Symbol","kLanded","kResources","kCloseResources","kOperations","kUndefer","kDeferOpen","kOptions","kStatus","kDefaultOptions","kTranscoder","kKeyEncoding","kValueEncoding","noop","AbstractLevel","_EventEmitter","_super","manifest","options","_this","call","TypeError","_options","keyEncoding","valueEncoding","passive","forward","Set","status","promises","clear","getMany","deferredOpen","snapshots","permanence","keyIterator","valueIterator","iteratorNextv","iteratorAll","encodings","events","Object","assign","opening","open","closing","closed","put","del","batch","formats","encoding","_iterator2","_step","s","n","done","value","commonName","err","e","f","empty","freeze","entry","key","nextTick","get","callback","_this2","createIfMissing","errorIfExists","maybeOpened","once","code","cause","emit","_open","close","_this3","maybeClosed","cancel","_close","_this4","size","pending","sync","next","_iterator3","_step2","resource","_this5","defer","maybeError","_checkKey","keyFormat","format","valueFormat","_get","prefixKey","encode","notFound","test","decode","Error","keys","_this6","Array","isArray","length","mappedKeys","i","_getMany","values","undefined","concat","fill","_this7","_checkValue","mappedKey","mappedValue","_put","_this8","_del","operations","_this9","arguments","_chainedBatch","mapped","_options2","ke","ve","op","type","db","sublevel","valueErr","_batch","name","_sublevel","AbstractSublevel","defaults","_this10","original","limit","_clear","iterator","_iterator","_keys","_values","fn","push","_iterator4","_step3","attachResource","add","detachResource","delete","prototype","_require10","exports","filter","k"],"sources":["/Users/apple/Documents/treasure/node_modules/abstract-level/abstract-level.js"],"sourcesContent":["'use strict'\n\nconst { supports } = require('level-supports')\nconst { Transcoder } = require('level-transcoder')\nconst { EventEmitter } = require('events')\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { AbstractIterator } = require('./abstract-iterator')\nconst { DefaultKeyIterator, DefaultValueIterator } = require('./lib/default-kv-iterator')\nconst { DeferredIterator, DeferredKeyIterator, DeferredValueIterator } = require('./lib/deferred-iterator')\nconst { DefaultChainedBatch } = require('./lib/default-chained-batch')\nconst { getCallback, getOptions } = require('./lib/common')\nconst rangeOptions = require('./lib/range-options')\n\nconst kPromise = Symbol('promise')\nconst kLanded = Symbol('landed')\nconst kResources = Symbol('resources')\nconst kCloseResources = Symbol('closeResources')\nconst kOperations = Symbol('operations')\nconst kUndefer = Symbol('undefer')\nconst kDeferOpen = Symbol('deferOpen')\nconst kOptions = Symbol('options')\nconst kStatus = Symbol('status')\nconst kDefaultOptions = Symbol('defaultOptions')\nconst kTranscoder = Symbol('transcoder')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst noop = () => {}\n\nclass AbstractLevel extends EventEmitter {\n  constructor (manifest, options) {\n    super()\n\n    if (typeof manifest !== 'object' || manifest === null) {\n      throw new TypeError(\"The first argument 'manifest' must be an object\")\n    }\n\n    options = getOptions(options)\n    const { keyEncoding, valueEncoding, passive, ...forward } = options\n\n    this[kResources] = new Set()\n    this[kOperations] = []\n    this[kDeferOpen] = true\n    this[kOptions] = forward\n    this[kStatus] = 'opening'\n\n    this.supports = supports(manifest, {\n      status: true,\n      promises: true,\n      clear: true,\n      getMany: true,\n      deferredOpen: true,\n\n      // TODO (next major): add seek\n      snapshots: manifest.snapshots !== false,\n      permanence: manifest.permanence !== false,\n\n      // TODO: remove from level-supports because it's always supported\n      keyIterator: true,\n      valueIterator: true,\n      iteratorNextv: true,\n      iteratorAll: true,\n\n      encodings: manifest.encodings || {},\n      events: Object.assign({}, manifest.events, {\n        opening: true,\n        open: true,\n        closing: true,\n        closed: true,\n        put: true,\n        del: true,\n        batch: true,\n        clear: true\n      })\n    })\n\n    this[kTranscoder] = new Transcoder(formats(this))\n    this[kKeyEncoding] = this[kTranscoder].encoding(keyEncoding || 'utf8')\n    this[kValueEncoding] = this[kTranscoder].encoding(valueEncoding || 'utf8')\n\n    // Add custom and transcoder encodings to manifest\n    for (const encoding of this[kTranscoder].encodings()) {\n      if (!this.supports.encodings[encoding.commonName]) {\n        this.supports.encodings[encoding.commonName] = true\n      }\n    }\n\n    this[kDefaultOptions] = {\n      empty: Object.freeze({}),\n      entry: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName,\n        valueEncoding: this[kValueEncoding].commonName\n      }),\n      key: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName\n      })\n    }\n\n    // Let subclass finish its constructor\n    this.nextTick(() => {\n      if (this[kDeferOpen]) {\n        this.open({ passive: false }, noop)\n      }\n    })\n  }\n\n  get status () {\n    return this[kStatus]\n  }\n\n  keyEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kKeyEncoding])\n  }\n\n  valueEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kValueEncoding])\n  }\n\n  open (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n\n    options = { ...this[kOptions], ...getOptions(options) }\n\n    options.createIfMissing = options.createIfMissing !== false\n    options.errorIfExists = !!options.errorIfExists\n\n    const maybeOpened = (err) => {\n      if (this[kStatus] === 'closing' || this[kStatus] === 'opening') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? () => maybeOpened(err) : maybeOpened)\n      } else if (this[kStatus] !== 'open') {\n        callback(new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (options.passive) {\n      if (this[kStatus] === 'opening') {\n        this.once(kLanded, maybeOpened)\n      } else {\n        this.nextTick(maybeOpened)\n      }\n    } else if (this[kStatus] === 'closed' || this[kDeferOpen]) {\n      this[kDeferOpen] = false\n      this[kStatus] = 'opening'\n      this.emit('opening')\n\n      this._open(options, (err) => {\n        if (err) {\n          this[kStatus] = 'closed'\n\n          // Resources must be safe to close in any db state\n          this[kCloseResources](() => {\n            this.emit(kLanded)\n            maybeOpened(err)\n          })\n\n          this[kUndefer]()\n          return\n        }\n\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n\n        // Only emit public event if pending state changes are done\n        if (this[kStatus] === 'open') this.emit('open')\n\n        // TODO (next major): remove this alias\n        if (this[kStatus] === 'open') this.emit('ready')\n\n        maybeOpened()\n      })\n    } else if (this[kStatus] === 'open') {\n      this.nextTick(maybeOpened)\n    } else {\n      this.once(kLanded, () => this.open(options, callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  _open (options, callback) {\n    this.nextTick(callback)\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    const maybeClosed = (err) => {\n      if (this[kStatus] === 'opening' || this[kStatus] === 'closing') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? maybeClosed(err) : maybeClosed)\n      } else if (this[kStatus] !== 'closed') {\n        callback(new ModuleError('Database is not closed', {\n          code: 'LEVEL_DATABASE_NOT_CLOSED',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (this[kStatus] === 'open') {\n      this[kStatus] = 'closing'\n      this.emit('closing')\n\n      const cancel = (err) => {\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n        maybeClosed(err)\n      }\n\n      this[kCloseResources](() => {\n        this._close((err) => {\n          if (err) return cancel(err)\n\n          this[kStatus] = 'closed'\n          this[kUndefer]()\n          this.emit(kLanded)\n\n          // Only emit public event if pending state changes are done\n          if (this[kStatus] === 'closed') this.emit('closed')\n\n          maybeClosed()\n        })\n      })\n    } else if (this[kStatus] === 'closed') {\n      this.nextTick(maybeClosed)\n    } else {\n      this.once(kLanded, () => this.close(callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  [kCloseResources] (callback) {\n    if (this[kResources].size === 0) {\n      return this.nextTick(callback)\n    }\n\n    let pending = this[kResources].size\n    let sync = true\n\n    const next = () => {\n      if (--pending === 0) {\n        // We don't have tests for generic resources, so dezalgo\n        if (sync) this.nextTick(callback)\n        else callback()\n      }\n    }\n\n    // In parallel so that all resources know they are closed\n    for (const resource of this[kResources]) {\n      resource.close(next)\n    }\n\n    sync = false\n    this[kResources].clear()\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  get (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.get(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options to the underlying store\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      // Avoid spread operator because of https://bugs.chromium.org/p/chromium/issues/detail?id=1204540\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    this._get(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err, value) => {\n      if (err) {\n        // Normalize not found error for backwards compatibility with abstract-leveldown and level(up)\n        if (err.code === 'LEVEL_NOT_FOUND' || err.notFound || /NotFound/i.test(err)) {\n          if (!err.code) err.code = 'LEVEL_NOT_FOUND' // Preferred way going forward\n          if (!err.notFound) err.notFound = true // Same as level-errors\n          if (!err.status) err.status = 404 // Same as level-errors\n        }\n\n        return callback(err)\n      }\n\n      try {\n        value = valueEncoding.decode(value)\n      } catch (err) {\n        return callback(new ModuleError('Could not decode value', {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, value)\n    })\n\n    return callback[kPromise]\n  }\n\n  _get (key, options, callback) {\n    this.nextTick(callback, new Error('NotFound'))\n  }\n\n  getMany (keys, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.getMany(keys, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(keys)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'keys' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (keys.length === 0) {\n      this.nextTick(callback, null, [])\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKeys = new Array(keys.length)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const err = this._checkKey(key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      mappedKeys[i] = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    }\n\n    this._getMany(mappedKeys, options, (err, values) => {\n      if (err) return callback(err)\n\n      try {\n        for (let i = 0; i < values.length; i++) {\n          if (values[i] !== undefined) {\n            values[i] = valueEncoding.decode(values[i])\n          }\n        }\n      } catch (err) {\n        return callback(new ModuleError(`Could not decode one or more of ${values.length} value(s)`, {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, values)\n    })\n\n    return callback[kPromise]\n  }\n\n  _getMany (keys, options, callback) {\n    this.nextTick(callback, null, new Array(keys.length).fill(undefined))\n  }\n\n  put (key, value, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.put(key, value, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key) || this._checkValue(value)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKey = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    const mappedValue = valueEncoding.encode(value)\n\n    this._put(mappedKey, mappedValue, options, (err) => {\n      if (err) return callback(err)\n      this.emit('put', key, value)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _put (key, value, options, callback) {\n    this.nextTick(callback)\n  }\n\n  del (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].key)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.del(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat })\n    }\n\n    this._del(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err) => {\n      if (err) return callback(err)\n      this.emit('del', key)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _del (key, options, callback) {\n    this.nextTick(callback)\n  }\n\n  batch (operations, options, callback) {\n    if (!arguments.length) {\n      if (this[kStatus] === 'opening') return new DefaultChainedBatch(this)\n      if (this[kStatus] !== 'open') {\n        throw new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN'\n        })\n      }\n      return this._chainedBatch()\n    }\n\n    if (typeof operations === 'function') callback = operations\n    else callback = getCallback(options, callback)\n\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.batch(operations, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(operations)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'operations' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (operations.length === 0) {\n      this.nextTick(callback)\n      return callback[kPromise]\n    }\n\n    const mapped = new Array(operations.length)\n    const { keyEncoding: ke, valueEncoding: ve, ...forward } = options\n\n    for (let i = 0; i < operations.length; i++) {\n      if (typeof operations[i] !== 'object' || operations[i] === null) {\n        this.nextTick(callback, new TypeError('A batch operation must be an object'))\n        return callback[kPromise]\n      }\n\n      const op = Object.assign({}, operations[i])\n\n      if (op.type !== 'put' && op.type !== 'del') {\n        this.nextTick(callback, new TypeError(\"A batch operation must have a type property that is 'put' or 'del'\"))\n        return callback[kPromise]\n      }\n\n      const err = this._checkKey(op.key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      const db = op.sublevel != null ? op.sublevel : this\n      const keyEncoding = db.keyEncoding(op.keyEncoding || ke)\n      const keyFormat = keyEncoding.format\n\n      op.key = db.prefixKey(keyEncoding.encode(op.key), keyFormat)\n      op.keyEncoding = keyFormat\n\n      if (op.type === 'put') {\n        const valueErr = this._checkValue(op.value)\n\n        if (valueErr) {\n          this.nextTick(callback, valueErr)\n          return callback[kPromise]\n        }\n\n        const valueEncoding = db.valueEncoding(op.valueEncoding || ve)\n\n        op.value = valueEncoding.encode(op.value)\n        op.valueEncoding = valueEncoding.format\n      }\n\n      // Prevent double prefixing\n      if (db !== this) {\n        op.sublevel = null\n      }\n\n      mapped[i] = op\n    }\n\n    this._batch(mapped, forward, (err) => {\n      if (err) return callback(err)\n      this.emit('batch', operations)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _batch (operations, options, callback) {\n    this.nextTick(callback)\n  }\n\n  sublevel (name, options) {\n    return this._sublevel(name, AbstractSublevel.defaults(options))\n  }\n\n  _sublevel (name, options) {\n    return new AbstractSublevel(this, name, options)\n  }\n\n  prefixKey (key, keyFormat) {\n    return key\n  }\n\n  clear (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.clear(options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const original = options\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keyEncoding = keyEncoding.format\n\n    if (options.limit === 0) {\n      this.nextTick(callback)\n    } else {\n      this._clear(options, (err) => {\n        if (err) return callback(err)\n        this.emit('clear', original)\n        callback()\n      })\n    }\n\n    return callback[kPromise]\n  }\n\n  _clear (options, callback) {\n    this.nextTick(callback)\n  }\n\n  iterator (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keys = options.keys !== false\n    options.values = options.values !== false\n\n    // We need the original encoding options in AbstractIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._iterator(options)\n  }\n\n  _iterator (options) {\n    return new AbstractIterator(this, options)\n  }\n\n  keys (options) {\n    // Also include valueEncoding (though unused) because we may fallback to _iterator()\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractKeyIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredKeyIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._keys(options)\n  }\n\n  _keys (options) {\n    return new DefaultKeyIterator(this, options)\n  }\n\n  values (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractValueIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredValueIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._values(options)\n  }\n\n  _values (options) {\n    return new DefaultValueIterator(this, options)\n  }\n\n  defer (fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('The first argument must be a function')\n    }\n\n    this[kOperations].push(fn)\n  }\n\n  [kUndefer] () {\n    if (this[kOperations].length === 0) {\n      return\n    }\n\n    const operations = this[kOperations]\n    this[kOperations] = []\n\n    for (const op of operations) {\n      op()\n    }\n  }\n\n  // TODO: docs and types\n  attachResource (resource) {\n    if (typeof resource !== 'object' || resource === null ||\n      typeof resource.close !== 'function') {\n      throw new TypeError('The first argument must be a resource object')\n    }\n\n    this[kResources].add(resource)\n  }\n\n  // TODO: docs and types\n  detachResource (resource) {\n    this[kResources].delete(resource)\n  }\n\n  _chainedBatch () {\n    return new DefaultChainedBatch(this)\n  }\n\n  _checkKey (key) {\n    if (key === null || key === undefined) {\n      return new ModuleError('Key cannot be null or undefined', {\n        code: 'LEVEL_INVALID_KEY'\n      })\n    }\n  }\n\n  _checkValue (value) {\n    if (value === null || value === undefined) {\n      return new ModuleError('Value cannot be null or undefined', {\n        code: 'LEVEL_INVALID_VALUE'\n      })\n    }\n  }\n}\n\n// Expose browser-compatible nextTick for dependents\n// TODO: after we drop node 10, also use queueMicrotask in node\nAbstractLevel.prototype.nextTick = require('./lib/next-tick')\n\nconst { AbstractSublevel } = require('./lib/abstract-sublevel')({ AbstractLevel })\n\nexports.AbstractLevel = AbstractLevel\nexports.AbstractSublevel = AbstractSublevel\n\nconst maybeError = function (db, callback) {\n  if (db[kStatus] !== 'open') {\n    db.nextTick(callback, new ModuleError('Database is not open', {\n      code: 'LEVEL_DATABASE_NOT_OPEN'\n    }))\n    return true\n  }\n\n  return false\n}\n\nconst formats = function (db) {\n  return Object.keys(db.supports.encodings)\n    .filter(k => !!db.supports.encodings[k])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}