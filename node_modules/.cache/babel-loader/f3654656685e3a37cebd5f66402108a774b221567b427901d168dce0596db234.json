{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Key } from 'interface-datastore';\nimport sortKeys from 'sort-keys';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nvar specKey = new Key('datastore_spec');\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec(store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists: function exists() {\n      return store.has(specKey);\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    get: function get() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var buf;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return store.get(specKey);\n            case 2:\n              buf = _context.sent;\n              return _context.abrupt(\"return\", JSON.parse(uint8ArrayToString(buf)));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    set: function set(spec) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, {\n                deep: true\n              })))));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n}","map":{"version":3,"names":["Key","sortKeys","toString","uint8ArrayToString","fromString","uint8ArrayFromString","specKey","spec","store","exists","has","get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","buf","wrap","_callee$","_context","prev","next","sent","abrupt","JSON","parse","stop","set","_callee2","_callee2$","_context2","put","stringify","deep"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo/src/spec.js"],"sourcesContent":["\nimport { Key } from 'interface-datastore'\nimport sortKeys from 'sort-keys'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst specKey = new Key('datastore_spec')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec (store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists () {\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n"],"mappings":";;AACA,SAASA,GAAG,QAAQ,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AACtE,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAE5E,IAAMC,OAAO,GAAG,IAAIN,GAAG,CAAC,gBAAgB,CAAC;;AAEzC;AACA;AACA;AACA;AACA,OAAO,SAASO,IAAIA,CAAEC,KAAK,EAAE;EAC3B,OAAO;IACL;AACJ;AACA;AACA;IACIC,MAAM,WAAAA,OAAA,EAAI;MACR,OAAOD,KAAK,CAACE,GAAG,CAACJ,OAAO,CAAC;IAC3B,CAAC;IACD;AACJ;AACA;AACA;AACA;IACUK,GAAG,WAAAA,IAAA,EAAI;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,GAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACOb,KAAK,CAACG,GAAG,CAACL,OAAO,CAAC;YAAA;cAA9BU,GAAG,GAAAG,QAAA,CAAAG,IAAA;cAAA,OAAAH,QAAA,CAAAI,MAAA,WACFC,IAAI,CAACC,KAAK,CAACtB,kBAAkB,CAACa,GAAG,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA;IAC5C,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;IACUY,GAAG,WAAAA,IAAEpB,IAAI,EAAE;MAAA,OAAAK,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAc,SAAA;QAAA,OAAAf,mBAAA,GAAAI,IAAA,UAAAY,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAV,IAAA,GAAAU,SAAA,CAAAT,IAAA;YAAA;cAAA,OAAAS,SAAA,CAAAP,MAAA,WACRf,KAAK,CAACuB,GAAG,CAACzB,OAAO,EAAED,oBAAoB,CAACmB,IAAI,CAACQ,SAAS,CAAC/B,QAAQ,CAACM,IAAI,EAAE;gBAAE0B,IAAI,EAAE;cAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAH,SAAA,CAAAJ,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IACjG;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}