{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path';\nimport { resolvePath } from '../../utils.js';\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createResolve(_ref) {\n  var repo = _ref.repo,\n    codecs = _ref.codecs,\n    preload = _ref.preload;\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"resolve\"]}\n   */\n  function dagResolve(_x) {\n    return _dagResolve.apply(this, arguments);\n  }\n  function _dagResolve() {\n    _dagResolve = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ipfsPath) {\n      var options,\n        _toCidAndPath,\n        cid,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _toCidAndPath = toCidAndPath(ipfsPath), cid = _toCidAndPath.cid;\n            if (options.preload !== false) {\n              preload(cid);\n            }\n            return _context.abrupt(\"return\", resolvePath(repo, codecs, ipfsPath, options));\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _dagResolve.apply(this, arguments);\n  }\n  return withTimeoutOption(dagResolve);\n}","map":{"version":3,"names":["withTimeoutOption","toCidAndPath","resolvePath","createResolve","_ref","repo","codecs","preload","dagResolve","_x","_dagResolve","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ipfsPath","options","_toCidAndPath","cid","_args","wrap","_callee$","_context","prev","next","length","undefined","abrupt","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/dag/resolve.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport { resolvePath } from '../../utils.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createResolve ({ repo, codecs, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"resolve\"]}\n   */\n  async function dagResolve (ipfsPath, options = {}) {\n    const {\n      cid\n    } = toCidAndPath(ipfsPath)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return resolvePath(repo, codecs, ipfsPath, options)\n  }\n\n  return withTimeoutOption(dagResolve)\n}\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,WAAW,QAAQ,gBAAgB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAA6B;EAAA,IAAzBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EACpD;AACF;AACA;EAFE,SAGeC,UAAUA,CAAAC,EAAA;IAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,YAAA;IAAAA,WAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAzB,SAAAC,QAA2BC,QAAQ;MAAA,IAAAC,OAAA;QAAAC,aAAA;QAAAC,GAAA;QAAAC,KAAA,GAAAT,SAAA;MAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAER,OAAO,GAAAG,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAF,aAAA,GAG3ClB,YAAY,CAACgB,QAAQ,CAAC,EADxBG,GAAG,GAAAD,aAAA,CAAHC,GAAG;YAGL,IAAIF,OAAO,CAACX,OAAO,KAAK,KAAK,EAAE;cAC7BA,OAAO,CAACa,GAAG,CAAC;YACd;YAAC,OAAAI,QAAA,CAAAK,MAAA,WAEM3B,WAAW,CAACG,IAAI,EAAEC,MAAM,EAAEW,QAAQ,EAAEC,OAAO,CAAC;UAAA;UAAA;YAAA,OAAAM,QAAA,CAAAM,IAAA;QAAA;MAAA,GAAAd,OAAA;IAAA,CACpD;IAAA,OAAAN,WAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOZ,iBAAiB,CAACQ,UAAU,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}