{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useContractTresrStakingCoinWithSigner}from\"hooks/blockchain/useHandleContracts\";import{useSelector}from\"react-redux\";import{selectUser}from\"redux/slice/userSlice\";export default function useGetMaxVeTresr(){var user=useSelector(selectUser);var handleContractTresrStakingCoinWithSigner=useContractTresrStakingCoinWithSigner();var getMaxVeTresr=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var contractTresrStakingCoinWithSigner;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(user!==null&&user!==void 0&&user.wallet_id){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.next=4;return handleContractTresrStakingCoinWithSigner;case 4:contractTresrStakingCoinWithSigner=_context.sent;return _context.abrupt(\"return\",contractTresrStakingCoinWithSigner.maxVeTresr(user.wallet_id).then(function(res){// TODO: set Max Vetresr value\nreturn res._hex/1e18;}).catch(function(){return null;}));case 6:case\"end\":return _context.stop();}},_callee);}));return function getMaxVeTresr(){return _ref.apply(this,arguments);};}();return{getMaxVeTresr:getMaxVeTresr};}","map":{"version":3,"names":["useContractTresrStakingCoinWithSigner","useSelector","selectUser","useGetMaxVeTresr","user","handleContractTresrStakingCoinWithSigner","getMaxVeTresr","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","contractTresrStakingCoinWithSigner","wrap","_callee$","_context","prev","next","wallet_id","abrupt","sent","maxVeTresr","then","res","_hex","catch","stop","apply","arguments"],"sources":["/Users/apple/Documents/treasure/src/hooks/rewards/useGetMaxVeTresr.js"],"sourcesContent":["import { useContractTresrStakingCoinWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"redux/slice/userSlice\";\n\nexport default function useGetMaxVeTresr() {\n  const user = useSelector(selectUser);\n  const handleContractTresrStakingCoinWithSigner =\n    useContractTresrStakingCoinWithSigner();\n\n  const getMaxVeTresr = async () => {\n    if (!user?.wallet_id) return;\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return contractTresrStakingCoinWithSigner\n      .maxVeTresr(user.wallet_id)\n      .then((res) => {\n        // TODO: set Max Vetresr value\n        return res._hex / 1e18;\n      })\n      .catch(() => null);\n  };\n  return { getMaxVeTresr };\n}\n"],"mappings":"0PAAA,OAASA,qCAAqC,KAAQ,qCAAqC,CAC3F,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,UAAU,KAAQ,uBAAuB,CAElD,cAAe,SAAS,CAAAC,gBAAgBA,CAAA,CAAG,CACzC,GAAM,CAAAC,IAAI,CAAGH,WAAW,CAACC,UAAU,CAAC,CACpC,GAAM,CAAAG,wCAAwC,CAC5CL,qCAAqC,CAAC,CAAC,CAEzC,GAAM,CAAAM,aAAa,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,kCAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,YACfb,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEc,SAAS,EAAAH,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAI,MAAA,kBAAAJ,QAAA,CAAAE,IAAA,SAEZ,CAAAZ,wCAAwC,QAD1CO,kCAAkC,CAAAG,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAI,MAAA,UAEjCP,kCAAkC,CACtCS,UAAU,CAACjB,IAAI,CAACc,SAAS,CAAC,CAC1BI,IAAI,CAAC,SAACC,GAAG,CAAK,CACb;AACA,MAAO,CAAAA,GAAG,CAACC,IAAI,CAAG,IAAI,CACxB,CAAC,CAAC,CACDC,KAAK,CAAC,iBAAM,KAAI,GAAC,0BAAAV,QAAA,CAAAW,IAAA,MAAAf,OAAA,GACrB,kBAXK,CAAAL,aAAaA,CAAA,SAAAC,IAAA,CAAAoB,KAAA,MAAAC,SAAA,OAWlB,CACD,MAAO,CAAEtB,aAAa,CAAbA,aAAc,CAAC,CAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}