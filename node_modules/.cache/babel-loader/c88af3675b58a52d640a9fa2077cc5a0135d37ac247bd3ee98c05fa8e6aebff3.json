{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useContractNFKeyWithSigner}from\"hooks/blockchain/useHandleContracts\";import{hexToNumber}from\"utils/blockchain\";export default function useGetAmountUpgradeKey(){var handleContractNFKeyWithSigner=useContractNFKeyWithSigner();var getAmountUpgradeKey=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(currentTier){var count,contractNFKeyWithSigner,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:count=_args.length>1&&_args[1]!==undefined?_args[1]:3;_context.next=3;return handleContractNFKeyWithSigner;case 3:contractNFKeyWithSigner=_context.sent;return _context.abrupt(\"return\",contractNFKeyWithSigner.getAmountUpgradeKey(currentTier).then(function(tx){var _hexToNumber;return((_hexToNumber=hexToNumber(tx===null||tx===void 0?void 0:tx._hex))===null||_hexToNumber===void 0?void 0:_hexToNumber.toString())/Math.pow(10,18);}).then(function(res){return Math.ceil(+res);}).catch(function(){return count?getAmountUpgradeKey(currentTier,count-1):0;}));case 5:case\"end\":return _context.stop();}},_callee);}));return function getAmountUpgradeKey(_x){return _ref.apply(this,arguments);};}();return{getAmountUpgradeKey:getAmountUpgradeKey};}","map":{"version":3,"names":["useContractNFKeyWithSigner","hexToNumber","useGetAmountUpgradeKey","handleContractNFKeyWithSigner","getAmountUpgradeKey","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","currentTier","count","contractNFKeyWithSigner","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","sent","abrupt","then","tx","_hexToNumber","_hex","toString","Math","pow","res","ceil","catch","stop","_x","apply"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useGetAmountUpgradeKey.js"],"sourcesContent":["import { useContractNFKeyWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useGetAmountUpgradeKey() {\n  const handleContractNFKeyWithSigner = useContractNFKeyWithSigner();\n  const getAmountUpgradeKey = async (currentTier, count = 3) => {\n    const contractNFKeyWithSigner = await handleContractNFKeyWithSigner;\n    return contractNFKeyWithSigner\n      .getAmountUpgradeKey(currentTier)\n      .then((tx) => hexToNumber(tx?._hex)?.toString() / 10 ** 18)\n      .then((res) => Math.ceil(+res))\n      .catch(() => (count ? getAmountUpgradeKey(currentTier, count - 1) : 0));\n  };\n  return { getAmountUpgradeKey };\n}\n"],"mappings":"0PAAA,OAASA,0BAA0B,KAAQ,qCAAqC,CAChF,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,cAAe,SAAS,CAAAC,sBAAsBA,CAAA,CAAG,CAC/C,GAAM,CAAAC,6BAA6B,CAAGH,0BAA0B,CAAC,CAAC,CAClE,GAAM,CAAAI,mBAAmB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,WAAW,MAAAC,KAAA,CAAAC,uBAAA,CAAAC,KAAA,CAAAC,SAAA,QAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAER,KAAK,CAAAE,KAAA,CAAAO,MAAA,IAAAP,KAAA,MAAAQ,SAAA,CAAAR,KAAA,IAAG,CAAC,CAAAI,QAAA,CAAAE,IAAA,SACjB,CAAAhB,6BAA6B,QAA7DS,uBAAuB,CAAAK,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAM,MAAA,UACtBX,uBAAuB,CAC3BR,mBAAmB,CAACM,WAAW,CAAC,CAChCc,IAAI,CAAC,SAACC,EAAE,MAAAC,YAAA,OAAK,EAAAA,YAAA,CAAAzB,WAAW,CAACwB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEE,IAAI,CAAC,UAAAD,YAAA,iBAArBA,YAAA,CAAuBE,QAAQ,CAAC,CAAC,EAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,CAAI,EAAE,IAAC,CAC1DN,IAAI,CAAC,SAACO,GAAG,QAAK,CAAAF,IAAI,CAACG,IAAI,CAAC,CAACD,GAAG,CAAC,GAAC,CAC9BE,KAAK,CAAC,iBAAO,CAAAtB,KAAK,CAAGP,mBAAmB,CAACM,WAAW,CAAEC,KAAK,CAAG,CAAC,CAAC,CAAG,CAAC,EAAC,CAAC,0BAAAM,QAAA,CAAAiB,IAAA,MAAAzB,OAAA,GAC1E,kBAPK,CAAAL,mBAAmBA,CAAA+B,EAAA,SAAA9B,IAAA,CAAA+B,KAAA,MAAAtB,SAAA,OAOxB,CACD,MAAO,CAAEV,mBAAmB,CAAnBA,mBAAoB,CAAC,CAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}