{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport errCode from 'err-code';\nimport defer from 'p-defer';\nvar MAX_BUFFERED_AMOUNT = 64 * 1024;\nvar CHANNEL_CLOSING_TIMEOUT = 5 * 1000;\nexport var WebRTCDataChannel = /*#__PURE__*/function () {\n  function WebRTCDataChannel(channel, opts) {\n    var _this = this;\n    _classCallCheck(this, WebRTCDataChannel);\n    this.label = channel.label;\n    this.open = defer();\n    this.channel = channel;\n    this.channel.binaryType = 'arraybuffer';\n    this.log = opts.log;\n    if (typeof this.channel.bufferedAmountLowThreshold === 'number') {\n      this.channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT;\n    }\n    channel.addEventListener('message', function (event) {\n      opts.onMessage(event);\n    });\n    channel.addEventListener('bufferedamountlow', function () {\n      _this.log('stop backpressure: bufferedAmount %d', _this.channel.bufferedAmount);\n      _this.open.resolve();\n    });\n    channel.addEventListener('open', function () {\n      _this.open.resolve();\n      opts.onOpen();\n    });\n    channel.addEventListener('close', function () {\n      opts.onClose();\n    });\n    channel.addEventListener('error', function (event) {\n      var _event$error, _event$error2, _event$error3, _event$error4, _event$error5;\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      if (((_event$error = event.error) === null || _event$error === void 0 ? void 0 : _event$error.message) === 'Transport channel closed') {\n        return _this.close();\n      }\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      opts.log.error('channel encounter an error in state \"%s\" message: \"%s\" detail: \"%s', channel.readyState, (_event$error2 = event.error) === null || _event$error2 === void 0 ? void 0 : _event$error2.message, (_event$error3 = event.error) === null || _event$error3 === void 0 ? void 0 : _event$error3.errorDetail); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      var err = event.error instanceof Error\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      ? event.error\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      : new Error(\"datachannel error: \".concat((_event$error4 = event.error) === null || _event$error4 === void 0 ? void 0 : _event$error4.message, \" \").concat((_event$error5 = event.error) === null || _event$error5 === void 0 ? void 0 : _event$error5.errorDetail)); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n      opts.onError(errCode(err, 'ERR_DATA_CHANNEL'));\n    });\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    var isClosing = false;\n    this.closingInterval = setInterval(function () {\n      if (channel.readyState === 'closing') {\n        if (isClosing) {\n          opts.onClose(); // closing timed out: equivalent to onclose firing\n        }\n\n        isClosing = true;\n      } else {\n        isClosing = false;\n      }\n    }, CHANNEL_CLOSING_TIMEOUT);\n  }\n  _createClass(WebRTCDataChannel, [{\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.open.promise;\n            case 2:\n              this.channel.send(data);\n              if (this.channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n                this.log('start backpressure: bufferedAmount %d', this.channel.bufferedAmount);\n                this.open = defer();\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function send(_x) {\n        return _send.apply(this, arguments);\n      }\n      return send;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      clearInterval(this.closingInterval);\n      this.channel.close();\n    }\n  }, {\n    key: \"bufferedAmount\",\n    get: function get() {\n      return this.channel.bufferedAmount;\n    }\n  }]);\n  return WebRTCDataChannel;\n}();","map":{"version":3,"names":["errCode","defer","MAX_BUFFERED_AMOUNT","CHANNEL_CLOSING_TIMEOUT","WebRTCDataChannel","channel","opts","_this","_classCallCheck","label","open","binaryType","log","bufferedAmountLowThreshold","addEventListener","event","onMessage","bufferedAmount","resolve","onOpen","onClose","_event$error","_event$error2","_event$error3","_event$error4","_event$error5","error","message","close","readyState","errorDetail","err","Error","concat","onError","isClosing","closingInterval","setInterval","_createClass","key","value","_send","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","promise","send","stop","_x","apply","arguments","clearInterval","get"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/webrtc-peer/src/channel.ts"],"sourcesContent":["import errCode from 'err-code'\nimport defer, { DeferredPromise } from 'p-defer'\nimport type { Logger } from '@libp2p/logger'\n\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\nexport interface WebRTCDataChannelOptions {\n  onMessage: (event: MessageEvent<Uint8Array>) => void\n  onOpen: () => void\n  onClose: () => void\n  onError: (err: Error) => void\n  log: Logger\n}\n\nexport class WebRTCDataChannel {\n  public label: string\n  private readonly channel: RTCDataChannel\n  private readonly closingInterval: NodeJS.Timer\n  private open: DeferredPromise<void>\n  private readonly log: Logger\n\n  constructor (channel: RTCDataChannel, opts: WebRTCDataChannelOptions) {\n    this.label = channel.label\n    this.open = defer()\n    this.channel = channel\n    this.channel.binaryType = 'arraybuffer'\n    this.log = opts.log\n\n    if (typeof this.channel.bufferedAmountLowThreshold === 'number') {\n      this.channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    channel.addEventListener('message', event => {\n      opts.onMessage(event)\n    })\n    channel.addEventListener('bufferedamountlow', () => {\n      this.log('stop backpressure: bufferedAmount %d', this.channel.bufferedAmount)\n      this.open.resolve()\n    })\n    channel.addEventListener('open', () => {\n      this.open.resolve()\n      opts.onOpen()\n    })\n    channel.addEventListener('close', () => {\n      opts.onClose()\n    })\n    channel.addEventListener('error', event => {\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      if (event.error?.message === 'Transport channel closed') {\n        return this.close()\n      }\n\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      opts.log.error('channel encounter an error in state \"%s\" message: \"%s\" detail: \"%s', channel.readyState, event.error?.message, event.error?.errorDetail) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      const err = event.error instanceof Error\n        // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n        ? event.error\n        // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n        : new Error(`datachannel error: ${event.error?.message} ${event.error?.errorDetail}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n\n      opts.onError(errCode(err, 'ERR_DATA_CHANNEL'))\n    })\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    let isClosing = false\n    this.closingInterval = setInterval(() => { // No \"onclosing\" event\n      if (channel.readyState === 'closing') {\n        if (isClosing) {\n          opts.onClose() // closing timed out: equivalent to onclose firing\n        }\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  async send (data: Uint8Array) {\n    await this.open.promise\n\n    this.channel.send(data)\n\n    if (this.channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      this.log('start backpressure: bufferedAmount %d', this.channel.bufferedAmount)\n      this.open = defer()\n    }\n  }\n\n  close () {\n    clearInterval(this.closingInterval)\n    this.channel.close()\n  }\n\n  get bufferedAmount () {\n    return this.channel.bufferedAmount\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}