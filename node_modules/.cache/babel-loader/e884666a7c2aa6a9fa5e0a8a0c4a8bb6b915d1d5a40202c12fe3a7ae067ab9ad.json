{"ast":null,"code":"import _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Components } from '@libp2p/components';\nimport { MplexStreamMuxer } from './mplex.js';\nexport var Mplex = /*#__PURE__*/function () {\n  function Mplex() {\n    var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Mplex);\n    this.protocol = '/mplex/6.7.0';\n    this.components = new Components();\n    this._init = init;\n  }\n  _createClass(Mplex, [{\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n    }\n  }, {\n    key: \"createStreamMuxer\",\n    value: function createStreamMuxer() {\n      var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new MplexStreamMuxer(this.components, _objectSpread(_objectSpread({}, init), this._init));\n    }\n  }]);\n  return Mplex;\n}();","map":{"version":3,"names":["Components","MplexStreamMuxer","Mplex","init","arguments","length","undefined","_classCallCheck","protocol","components","_init","_createClass","key","value","createStreamMuxer","_objectSpread"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/mplex/src/index.ts"],"sourcesContent":["import { Components, Initializable } from '@libp2p/components'\nimport type { StreamMuxer, StreamMuxerFactory, StreamMuxerInit } from '@libp2p/interface-stream-muxer'\nimport { MplexStreamMuxer } from './mplex.js'\n\nexport interface MplexInit {\n  /**\n   * The maximum size of message that can be sent in one go in bytes.\n   * Messages larger than this will be split into multiple smaller\n   * messages (default: 1MB)\n   */\n  maxMsgSize?: number\n\n  /**\n   * The maximum number of multiplexed streams that can be open at any\n   * one time. A request to open more than this will have a stream\n   * reset message sent immediately as a response for the newly opened\n   * stream id (default: 1024)\n   */\n  maxInboundStreams?: number\n\n  /**\n   * The maximum number of multiplexed streams that can be open at any\n   * one time. An attempt to open more than this will throw (default: 1024)\n   */\n  maxOutboundStreams?: number\n\n  /**\n   * Incoming stream messages are buffered until processed by the stream\n   * handler. If the buffer reaches this size in bytes the stream will\n   * be reset (default: 4MB)\n   */\n  maxStreamBufferSize?: number\n\n  /**\n   * When `maxInboundStreams` is hit, if the remote continues try to open\n   * more than this many new multiplexed streams per second the connection\n   * will be closed (default: 5)\n   */\n  disconnectThreshold?: number\n}\n\nexport class Mplex implements StreamMuxerFactory, Initializable {\n  public protocol = '/mplex/6.7.0'\n  private readonly _init: MplexInit\n  private components: Components = new Components()\n\n  constructor (init: MplexInit = {}) {\n    this._init = init\n  }\n\n  init (components: Components): void {\n    this.components = components\n  }\n\n  createStreamMuxer (init: StreamMuxerInit = {}): StreamMuxer {\n    return new MplexStreamMuxer(this.components, {\n      ...init,\n      ...this._init\n    })\n  }\n}\n"],"mappings":";;;AAAA,SAASA,UAAU,QAAuB,oBAAoB;AAE9D,SAASC,gBAAgB,QAAQ,YAAY;AAuC7C,WAAaC,KAAK;EAKhB,SAAAA,MAAA,EAAiC;IAAA,IAApBC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkB,EAAE;IAAAG,eAAA,OAAAL,KAAA;IAJ1B,KAAAM,QAAQ,GAAG,cAAc;IAExB,KAAAC,UAAU,GAAe,IAAIT,UAAU,EAAE;IAG/C,IAAI,CAACU,KAAK,GAAGP,IAAI;EACnB;EAACQ,YAAA,CAAAT,KAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAV,KAAMM,UAAsB;MAC1B,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAC,kBAAA,EAA6C;MAAA,IAA1BX,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAwB,EAAE;MAC3C,OAAO,IAAIH,gBAAgB,CAAC,IAAI,CAACQ,UAAU,EAAAM,aAAA,CAAAA,aAAA,KACtCZ,IAAI,GACJ,IAAI,CAACO,KAAK,CACd,CAAC;IACJ;EAAC;EAAA,OAAAR,KAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}