{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport all from 'it-all';\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nexport var sortAll = function sortAll(iterable, sorter) {\n  return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var values;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _awaitAsyncGenerator(all(iterable));\n        case 2:\n          values = _context.sent;\n          return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(values.sort(sorter)), _awaitAsyncGenerator), \"t0\", 4);\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))();\n};\n\n/**\n * @param {string} s\n * @param {string} r\n */\nexport var replaceStartWith = function replaceStartWith(s, r) {\n  var matcher = new RegExp('^' + r);\n  return s.replace(matcher, '');\n};","map":{"version":3,"names":["all","sortAll","iterable","sorter","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_callee$","_context","prev","next","_awaitAsyncGenerator","sent","delegateYield","_asyncGeneratorDelegate","_asyncIterator","sort","stop","replaceStartWith","s","r","matcher","RegExp","replace"],"sources":["/Users/apple/Documents/treasure/node_modules/datastore-core/src/utils.js"],"sourcesContent":["\nimport all from 'it-all'\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nexport const sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @param {string} s\n * @param {string} r\n */\nexport const replaceStartWith = (s, r) => {\n  const matcher = new RegExp('^' + r)\n  return s.replace(matcher, '')\n}\n"],"mappings":";;;;;AACA,OAAOA,GAAG,MAAM,QAAQ;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,QAAQ,EAAEC,MAAM,EAAK;EAC3C,OAAOC,mBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAC,QAAA;IAAA,IAAAC,MAAA;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAAC,oBAAA,CACed,GAAG,CAACE,QAAQ,CAAC;QAAA;UAA5BM,MAAM,GAAAG,QAAA,CAAAI,IAAA;UACZ,OAAAJ,QAAA,CAAAK,aAAA,CAAAC,uBAAA,CAAAC,cAAA,CAAQV,MAAM,CAACW,IAAI,CAAChB,MAAM,CAAC,GAAAW,oBAAA;QAAA;QAAA;UAAA,OAAAH,QAAA,CAAAS,IAAA;MAAA;IAAA,GAAAb,OAAA;EAAA,CAC5B,GAAE,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,IAAMc,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,CAAC,EAAEC,CAAC,EAAK;EACxC,IAAMC,OAAO,GAAG,IAAIC,MAAM,CAAC,GAAG,GAAGF,CAAC,CAAC;EACnC,OAAOD,CAAC,CAACI,OAAO,CAACF,OAAO,EAAE,EAAE,CAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}