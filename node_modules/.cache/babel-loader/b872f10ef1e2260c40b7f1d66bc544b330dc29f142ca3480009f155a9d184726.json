{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  var headerBytes = dagCborEncode({\n    version: 1,\n    roots: roots\n  });\n  var varintBytes = varint.encode(headerBytes.length);\n  var header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    setRoots: function setRoots(roots) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var bytes;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              bytes = createHeader(roots);\n              _context.next = 3;\n              return writer.write(bytes);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    writeBlock: function writeBlock(block) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var cid, bytes;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              cid = block.cid, bytes = block.bytes;\n              _context2.next = 3;\n              return writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n            case 3:\n              _context2.next = 5;\n              return writer.write(cid.bytes);\n            case 5:\n              if (!bytes.length) {\n                _context2.next = 8;\n                break;\n              }\n              _context2.next = 8;\n              return writer.write(bytes);\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    close: function close() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return writer.end();\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n}\nexport { createEncoder };","map":{"version":3,"names":["varint","encode","dagCborEncode","createHeader","roots","headerBytes","version","varintBytes","length","header","Uint8Array","set","createEncoder","writer","setRoots","_asyncToGenerator","_regeneratorRuntime","mark","_callee","bytes","wrap","_callee$","_context","prev","next","write","stop","writeBlock","block","_callee2","cid","_callee2$","_context2","close","_callee3","_callee3$","_context3","end"],"sources":["/Users/apple/Documents/treasure/node_modules/@ipld/car/esm/lib/encoder.js"],"sourcesContent":["import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      if (bytes.length) {\n        await writer.write(bytes);\n      }\n    },\n    async close() {\n      await writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,MAAM,IAAIC,aAAa,QAAQ,gBAAgB;AACxD,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAClC,IAAMC,WAAW,GAAGH,aAAa,CAAC;IAChCI,OAAO,EAAE,CAAC;IACVF,KAAK,EAALA;EACF,CAAC,CAAC;EACF,IAAMG,WAAW,GAAGP,MAAM,CAACC,MAAM,CAACI,WAAW,CAACG,MAAM,CAAC;EACrD,IAAMC,MAAM,GAAG,IAAIC,UAAU,CAACH,WAAW,CAACC,MAAM,GAAGH,WAAW,CAACG,MAAM,CAAC;EACtEC,MAAM,CAACE,GAAG,CAACJ,WAAW,EAAE,CAAC,CAAC;EAC1BE,MAAM,CAACE,GAAG,CAACN,WAAW,EAAEE,WAAW,CAACC,MAAM,CAAC;EAC3C,OAAOC,MAAM;AACf;AACA,SAASG,aAAaA,CAACC,MAAM,EAAE;EAC7B,OAAO;IACCC,QAAQ,WAAAA,SAACV,KAAK,EAAE;MAAA,OAAAW,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,KAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACdL,KAAK,GAAGhB,YAAY,CAACC,KAAK,CAAC;cAAAkB,QAAA,CAAAE,IAAA;cAAA,OAC3BX,MAAM,CAACY,KAAK,CAACN,KAAK,CAAC;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAR,OAAA;MAAA;IAC3B,CAAC;IACKS,UAAU,WAAAA,WAACC,KAAK,EAAE;MAAA,OAAAb,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAY,SAAA;QAAA,IAAAC,GAAA,EAAAX,KAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAW,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAT,IAAA,GAAAS,SAAA,CAAAR,IAAA;YAAA;cACfM,GAAG,GAAWF,KAAK,CAAnBE,GAAG,EAAEX,KAAK,GAAIS,KAAK,CAAdT,KAAK;cAAAa,SAAA,CAAAR,IAAA;cAAA,OACXX,MAAM,CAACY,KAAK,CAAC,IAAIf,UAAU,CAACV,MAAM,CAACC,MAAM,CAAC6B,GAAG,CAACX,KAAK,CAACX,MAAM,GAAGW,KAAK,CAACX,MAAM,CAAC,CAAC,CAAC;YAAA;cAAAwB,SAAA,CAAAR,IAAA;cAAA,OAC5EX,MAAM,CAACY,KAAK,CAACK,GAAG,CAACX,KAAK,CAAC;YAAA;cAAA,KACzBA,KAAK,CAACX,MAAM;gBAAAwB,SAAA,CAAAR,IAAA;gBAAA;cAAA;cAAAQ,SAAA,CAAAR,IAAA;cAAA,OACRX,MAAM,CAACY,KAAK,CAACN,KAAK,CAAC;YAAA;YAAA;cAAA,OAAAa,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAE7B,CAAC;IACKI,KAAK,WAAAA,MAAA,EAAG;MAAA,OAAAlB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,OAAAlB,mBAAA,GAAAI,IAAA,UAAAe,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;YAAA;cAAAY,SAAA,CAAAZ,IAAA;cAAA,OACNX,MAAM,CAACwB,GAAG,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAD,SAAA,CAAAV,IAAA;UAAA;QAAA,GAAAQ,QAAA;MAAA;IACpB;EACF,CAAC;AACH;AACA,SACEtB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}