{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport * as dagCbor from '@ipld/dag-cbor';\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @type {Resolver}\n */\nvar resolve = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(cid, name, path, toResolve, _resolve, depth, blockstore, options) {\n    var block, object, subObject, subPath, prop, subObjectCid;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return blockstore.get(cid);\n        case 2:\n          block = _context3.sent;\n          object = dagCbor.decode(block);\n          subObject = object;\n          subPath = path;\n        case 6:\n          if (!toResolve.length) {\n            _context3.next = 20;\n            break;\n          }\n          prop = toResolve[0];\n          if (!(prop in subObject)) {\n            _context3.next = 17;\n            break;\n          }\n          // remove the bit of the path we have resolved\n          toResolve.shift();\n          subPath = \"\".concat(subPath, \"/\").concat(prop);\n          subObjectCid = CID.asCID(subObject[prop]);\n          if (!subObjectCid) {\n            _context3.next = 14;\n            break;\n          }\n          return _context3.abrupt(\"return\", {\n            entry: {\n              type: 'object',\n              name: name,\n              path: path,\n              cid: cid,\n              node: block,\n              depth: depth,\n              size: block.length,\n              content: function () {\n                var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return object;\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                return function content() {\n                  return _ref.apply(this, arguments);\n                };\n              }()\n            },\n            next: {\n              cid: subObjectCid,\n              name: prop,\n              path: subPath,\n              toResolve: toResolve\n            }\n          });\n        case 14:\n          subObject = subObject[prop];\n          _context3.next = 18;\n          break;\n        case 17:\n          throw errCode(new Error(\"No property named \".concat(prop, \" found in cbor node \").concat(cid)), 'ERR_NO_PROP');\n        case 18:\n          _context3.next = 6;\n          break;\n        case 20:\n          return _context3.abrupt(\"return\", {\n            entry: {\n              type: 'object',\n              name: name,\n              path: path,\n              cid: cid,\n              node: block,\n              depth: depth,\n              size: block.length,\n              content: function () {\n                var _ref2 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return object;\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2);\n                }));\n                return function content() {\n                  return _ref2.apply(this, arguments);\n                };\n              }()\n            }\n          });\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return function resolve(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport default resolve;","map":{"version":3,"names":["CID","errCode","dagCbor","resolve","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","cid","name","path","toResolve","depth","blockstore","options","block","object","subObject","subPath","prop","subObjectCid","wrap","_callee3$","_context3","prev","next","get","sent","decode","length","shift","concat","asCID","abrupt","entry","type","node","size","content","_ref","_wrapAsyncGenerator","_callee","_callee$","_context","stop","apply","arguments","Error","_ref2","_callee2","_callee2$","_context2","_x","_x2","_x3","_x4","_x5","_x6","_x7","_x8"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-exporter/src/resolvers/dag-cbor.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport * as dagCbor from '@ipld/dag-cbor'\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid)\n  const object = dagCbor.decode(block)\n  let subObject = object\n  let subPath = path\n\n  while (toResolve.length) {\n    const prop = toResolve[0]\n\n    if (prop in subObject) {\n      // remove the bit of the path we have resolved\n      toResolve.shift()\n      subPath = `${subPath}/${prop}`\n\n      const subObjectCid = CID.asCID(subObject[prop])\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function * () {\n              yield object\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        }\n      }\n\n      subObject = subObject[prop]\n    } else {\n      // cannot resolve further\n      throw errCode(new Error(`No property named ${prop} found in cbor node ${cid}`), 'ERR_NO_PROP')\n    }\n  }\n\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function * () {\n        yield object\n      }\n    }\n  }\n}\n\nexport default resolve\n"],"mappings":";;;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,OAAO,MAAM,UAAU;AAC9B,OAAO,KAAKC,OAAO,MAAM,gBAAgB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMC,OAAO;EAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,SAAOC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAET,QAAO,EAAEU,KAAK,EAAEC,UAAU,EAAEC,OAAO;IAAA,IAAAC,KAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,YAAA;IAAA,OAAAf,mBAAA,GAAAgB,IAAA,UAAAC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;QAAA;UAAAF,SAAA,CAAAE,IAAA;UAAA,OAChEZ,UAAU,CAACa,GAAG,CAAClB,GAAG,CAAC;QAAA;UAAjCO,KAAK,GAAAQ,SAAA,CAAAI,IAAA;UACLX,MAAM,GAAGf,OAAO,CAAC2B,MAAM,CAACb,KAAK,CAAC;UAChCE,SAAS,GAAGD,MAAM;UAClBE,OAAO,GAAGR,IAAI;QAAA;UAAA,KAEXC,SAAS,CAACkB,MAAM;YAAAN,SAAA,CAAAE,IAAA;YAAA;UAAA;UACfN,IAAI,GAAGR,SAAS,CAAC,CAAC,CAAC;UAAA,MAErBQ,IAAI,IAAIF,SAAS;YAAAM,SAAA,CAAAE,IAAA;YAAA;UAAA;UACnB;UACAd,SAAS,CAACmB,KAAK,CAAC,CAAC;UACjBZ,OAAO,MAAAa,MAAA,CAAMb,OAAO,OAAAa,MAAA,CAAIZ,IAAI,CAAE;UAExBC,YAAY,GAAGrB,GAAG,CAACiC,KAAK,CAACf,SAAS,CAACE,IAAI,CAAC,CAAC;UAAA,KAC3CC,YAAY;YAAAG,SAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,SAAA,CAAAU,MAAA,WACP;YACLC,KAAK,EAAE;cACLC,IAAI,EAAE,QAAQ;cACd1B,IAAI,EAAJA,IAAI;cACJC,IAAI,EAAJA,IAAI;cACJF,GAAG,EAAHA,GAAG;cACH4B,IAAI,EAAErB,KAAK;cACXH,KAAK,EAALA,KAAK;cACLyB,IAAI,EAAEtB,KAAK,CAACc,MAAM;cAClBS,OAAO;gBAAA,IAAAC,IAAA,GAAAC,mBAAA,eAAAnC,mBAAA,GAAAC,IAAA,CAAE,SAAAmC,QAAA;kBAAA,OAAApC,mBAAA,GAAAgB,IAAA,UAAAqB,SAAAC,QAAA;oBAAA,kBAAAA,QAAA,CAAAnB,IAAA,GAAAmB,QAAA,CAAAlB,IAAA;sBAAA;wBAAAkB,QAAA,CAAAlB,IAAA;wBACP,OAAMT,MAAM;sBAAA;sBAAA;wBAAA,OAAA2B,QAAA,CAAAC,IAAA;oBAAA;kBAAA,GAAAH,OAAA;gBAAA,CACb;gBAAA,gBAAAH,QAAA;kBAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;gBAAA;cAAA;YACH,CAAC;YACDrB,IAAI,EAAE;cACJjB,GAAG,EAAEY,YAAY;cACjBX,IAAI,EAAEU,IAAI;cACVT,IAAI,EAAEQ,OAAO;cACbP,SAAS,EAATA;YACF;UACF,CAAC;QAAA;UAGHM,SAAS,GAAGA,SAAS,CAACE,IAAI,CAAC;UAAAI,SAAA,CAAAE,IAAA;UAAA;QAAA;UAAA,MAGrBzB,OAAO,CAAC,IAAI+C,KAAK,sBAAAhB,MAAA,CAAsBZ,IAAI,0BAAAY,MAAA,CAAuBvB,GAAG,CAAE,CAAC,EAAE,aAAa,CAAC;QAAA;UAAAe,SAAA,CAAAE,IAAA;UAAA;QAAA;UAAA,OAAAF,SAAA,CAAAU,MAAA,WAI3F;YACLC,KAAK,EAAE;cACLC,IAAI,EAAE,QAAQ;cACd1B,IAAI,EAAJA,IAAI;cACJC,IAAI,EAAJA,IAAI;cACJF,GAAG,EAAHA,GAAG;cACH4B,IAAI,EAAErB,KAAK;cACXH,KAAK,EAALA,KAAK;cACLyB,IAAI,EAAEtB,KAAK,CAACc,MAAM;cAClBS,OAAO;gBAAA,IAAAU,KAAA,GAAAR,mBAAA,eAAAnC,mBAAA,GAAAC,IAAA,CAAE,SAAA2C,SAAA;kBAAA,OAAA5C,mBAAA,GAAAgB,IAAA,UAAA6B,UAAAC,SAAA;oBAAA,kBAAAA,SAAA,CAAA3B,IAAA,GAAA2B,SAAA,CAAA1B,IAAA;sBAAA;wBAAA0B,SAAA,CAAA1B,IAAA;wBACP,OAAMT,MAAM;sBAAA;sBAAA;wBAAA,OAAAmC,SAAA,CAAAP,IAAA;oBAAA;kBAAA,GAAAK,QAAA;gBAAA,CACb;gBAAA,gBAAAX,QAAA;kBAAA,OAAAU,KAAA,CAAAH,KAAA,OAAAC,SAAA;gBAAA;cAAA;YACH;UACF,CAAC;QAAA;QAAA;UAAA,OAAAvB,SAAA,CAAAqB,IAAA;MAAA;IAAA,GAAArC,QAAA;EAAA,CACF;EAAA,gBAAAL,QAAAkD,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAxD,KAAA,CAAA0C,KAAA,OAAAC,SAAA;EAAA;AAAA;AAED,eAAe5C,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}