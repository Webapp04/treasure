{"ast":null,"code":"import _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { createWantlist } from './wantlist.js';\nimport { createWantlistForPeer } from './wantlist-for-peer.js';\nimport { createUnwant } from './unwant.js';\nimport { createStat } from './stat.js';\n\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport var BitswapAPI = /*#__PURE__*/_createClass(\n/**\n * @param {object} config\n * @param {NetworkService} config.network\n */\nfunction BitswapAPI(_ref) {\n  var network = _ref.network;\n  _classCallCheck(this, BitswapAPI);\n  this.wantlist = createWantlist({\n    network: network\n  });\n  this.wantlistForPeer = createWantlistForPeer({\n    network: network\n  });\n  this.unwant = createUnwant({\n    network: network\n  });\n  this.stat = createStat({\n    network: network\n  });\n});","map":{"version":3,"names":["createWantlist","createWantlistForPeer","createUnwant","createStat","BitswapAPI","_createClass","_ref","network","_classCallCheck","wantlist","wantlistForPeer","unwant","stat"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/bitswap/index.js"],"sourcesContent":["import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createUnwant } from './unwant.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class BitswapAPI {\n  /**\n   * @param {object} config\n   * @param {NetworkService} config.network\n   */\n  constructor ({ network }) {\n    this.wantlist = createWantlist({ network })\n    this.wantlistForPeer = createWantlistForPeer({ network })\n    this.unwant = createUnwant({ network })\n    this.stat = createStat({ network })\n  }\n}\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,eAAe;AAC9C,SAASC,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,UAAU,QAAQ,WAAW;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAaC,UAAU,gBAAAC,YAAA;AACrB;AACF;AACA;AACA;AACE,SAAAD,WAAAE,IAAA,EAA0B;EAAA,IAAXC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EAAAC,eAAA,OAAAJ,UAAA;EACpB,IAAI,CAACK,QAAQ,GAAGT,cAAc,CAAC;IAAEO,OAAO,EAAPA;EAAQ,CAAC,CAAC;EAC3C,IAAI,CAACG,eAAe,GAAGT,qBAAqB,CAAC;IAAEM,OAAO,EAAPA;EAAQ,CAAC,CAAC;EACzD,IAAI,CAACI,MAAM,GAAGT,YAAY,CAAC;IAAEK,OAAO,EAAPA;EAAQ,CAAC,CAAC;EACvC,IAAI,CAACK,IAAI,GAAGT,UAAU,CAAC;IAAEI,OAAO,EAAPA;EAAQ,CAAC,CAAC;AACrC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}