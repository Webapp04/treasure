{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { walkPath } from 'ipfs-unixfs-exporter';\nimport { logger } from '@libp2p/logger';\nvar log = logger('ipfs:mfs:utils:to-trail');\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {object} MfsTrail\n * @property {string} name\n * @property {import('multiformats/cid').CID} cid\n * @property {number} [size]\n * @property {string} [type]\n *\n * TODO: export supported types from unixfs-exporter and use for `type` above\n */\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @returns {Promise<MfsTrail[]>}\n */\nexport function toTrail(_x, _x2) {\n  return _toTrail.apply(this, arguments);\n}\nfunction _toTrail() {\n  _toTrail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(context, path) {\n    var output, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, fsEntry;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          log(\"Creating trail for path \".concat(path));\n          output = [];\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 4;\n          _iterator = _asyncIterator(walkPath(path, context.repo.blocks));\n        case 6:\n          _context.next = 8;\n          return _iterator.next();\n        case 8:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 14;\n            break;\n          }\n          fsEntry = _step.value;\n          output.push({\n            name: fsEntry.name,\n            cid: fsEntry.cid,\n            size: fsEntry.size,\n            type: fsEntry.type\n          });\n        case 11:\n          _iteratorAbruptCompletion = false;\n          _context.next = 6;\n          break;\n        case 14:\n          _context.next = 20;\n          break;\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](4);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 20:\n          _context.prev = 20;\n          _context.prev = 21;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 25;\n            break;\n          }\n          _context.next = 25;\n          return _iterator.return();\n        case 25:\n          _context.prev = 25;\n          if (!_didIteratorError) {\n            _context.next = 28;\n            break;\n          }\n          throw _iteratorError;\n        case 28:\n          return _context.finish(25);\n        case 29:\n          return _context.finish(20);\n        case 30:\n          return _context.abrupt(\"return\", output);\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[4, 16, 20, 30], [21,, 25, 29]]);\n  }));\n  return _toTrail.apply(this, arguments);\n}","map":{"version":3,"names":["walkPath","logger","log","toTrail","_x","_x2","_toTrail","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","context","path","output","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","fsEntry","wrap","_callee$","_context","prev","next","concat","_asyncIterator","repo","blocks","sent","done","value","push","name","cid","size","type","t0","return","finish","abrupt","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/files/utils/to-trail.js"],"sourcesContent":["import { walkPath } from 'ipfs-unixfs-exporter'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:mfs:utils:to-trail')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {object} MfsTrail\n * @property {string} name\n * @property {import('multiformats/cid').CID} cid\n * @property {number} [size]\n * @property {string} [type]\n *\n * TODO: export supported types from unixfs-exporter and use for `type` above\n */\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @returns {Promise<MfsTrail[]>}\n */\nexport async function toTrail (context, path) {\n  log(`Creating trail for path ${path}`)\n\n  const output = []\n\n  for await (const fsEntry of walkPath(path, context.repo.blocks)) {\n    output.push({\n      name: fsEntry.name,\n      cid: fsEntry.cid,\n      size: fsEntry.size,\n      type: fsEntry.type\n    })\n  }\n\n  return output\n}\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,IAAMC,GAAG,GAAGD,MAAM,CAAC,yBAAyB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAsBE,OAAOA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAe5B,SAAAF,SAAA;EAAAA,QAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAfM,SAAAC,QAAwBC,OAAO,EAAEC,IAAI;IAAA,IAAAC,MAAA,EAAAC,yBAAA,EAAAC,iBAAA,EAAAC,cAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,OAAA;IAAA,OAAAX,mBAAA,GAAAY,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAC1CxB,GAAG,4BAAAyB,MAAA,CAA4Bb,IAAI,CAAE,CAAC;UAEhCC,MAAM,GAAG,EAAE;UAAAC,yBAAA;UAAAC,iBAAA;UAAAO,QAAA,CAAAC,IAAA;UAAAN,SAAA,GAAAS,cAAA,CAEW5B,QAAQ,CAACc,IAAI,EAAED,OAAO,CAACgB,IAAI,CAACC,MAAM,CAAC;QAAA;UAAAN,QAAA,CAAAE,IAAA;UAAA,OAAAP,SAAA,CAAAO,IAAA;QAAA;UAAA,MAAAV,yBAAA,KAAAI,KAAA,GAAAI,QAAA,CAAAO,IAAA,EAAAC,IAAA;YAAAR,QAAA,CAAAE,IAAA;YAAA;UAAA;UAA9CL,OAAO,GAAAD,KAAA,CAAAa,KAAA;UACtBlB,MAAM,CAACmB,IAAI,CAAC;YACVC,IAAI,EAAEd,OAAO,CAACc,IAAI;YAClBC,GAAG,EAAEf,OAAO,CAACe,GAAG;YAChBC,IAAI,EAAEhB,OAAO,CAACgB,IAAI;YAClBC,IAAI,EAAEjB,OAAO,CAACiB;UAChB,CAAC,CAAC;QAAA;UAAAtB,yBAAA;UAAAQ,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAe,EAAA,GAAAf,QAAA;UAAAP,iBAAA;UAAAC,cAAA,GAAAM,QAAA,CAAAe,EAAA;QAAA;UAAAf,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAC,IAAA;UAAA,MAAAT,yBAAA,IAAAG,SAAA,CAAAqB,MAAA;YAAAhB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAAP,SAAA,CAAAqB,MAAA;QAAA;UAAAhB,QAAA,CAAAC,IAAA;UAAA,KAAAR,iBAAA;YAAAO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAAAR,cAAA;QAAA;UAAA,OAAAM,QAAA,CAAAiB,MAAA;QAAA;UAAA,OAAAjB,QAAA,CAAAiB,MAAA;QAAA;UAAA,OAAAjB,QAAA,CAAAkB,MAAA,WAGG3B,MAAM;QAAA;QAAA;UAAA,OAAAS,QAAA,CAAAmB,IAAA;MAAA;IAAA,GAAA/B,OAAA;EAAA,CACd;EAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}