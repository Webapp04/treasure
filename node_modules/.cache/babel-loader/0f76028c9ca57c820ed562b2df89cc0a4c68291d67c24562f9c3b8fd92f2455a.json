{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\n\n/**\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @type {ChunkValidator}\n */\nfunction validateChunks(_x) {\n  return _validateChunks.apply(this, arguments);\n}\nfunction _validateChunks() {\n  _validateChunks = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, content;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 2;\n          _iterator = _asyncIterator(source);\n        case 4:\n          _context.next = 6;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 6:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 29;\n            break;\n          }\n          content = _step.value;\n          if (!(content.length === undefined)) {\n            _context.next = 10;\n            break;\n          }\n          throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n        case 10:\n          if (!(typeof content === 'string' || content instanceof String)) {\n            _context.next = 15;\n            break;\n          }\n          _context.next = 13;\n          return uint8ArrayFromString(content.toString());\n        case 13:\n          _context.next = 26;\n          break;\n        case 15:\n          if (!Array.isArray(content)) {\n            _context.next = 20;\n            break;\n          }\n          _context.next = 18;\n          return Uint8Array.from(content);\n        case 18:\n          _context.next = 26;\n          break;\n        case 20:\n          if (!(content instanceof Uint8Array)) {\n            _context.next = 25;\n            break;\n          }\n          _context.next = 23;\n          return content;\n        case 23:\n          _context.next = 26;\n          break;\n        case 25:\n          throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n        case 26:\n          _iteratorAbruptCompletion = false;\n          _context.next = 4;\n          break;\n        case 29:\n          _context.next = 35;\n          break;\n        case 31:\n          _context.prev = 31;\n          _context.t0 = _context[\"catch\"](2);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 35:\n          _context.prev = 35;\n          _context.prev = 36;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 40;\n            break;\n          }\n          _context.next = 40;\n          return _awaitAsyncGenerator(_iterator.return());\n        case 40:\n          _context.prev = 40;\n          if (!_didIteratorError) {\n            _context.next = 43;\n            break;\n          }\n          throw _iteratorError;\n        case 43:\n          return _context.finish(40);\n        case 44:\n          return _context.finish(35);\n        case 45:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 31, 35, 45], [36,, 40, 44]]);\n  }));\n  return _validateChunks.apply(this, arguments);\n}\nexport default validateChunks;","map":{"version":3,"names":["errCode","fromString","uint8ArrayFromString","validateChunks","_x","_validateChunks","apply","arguments","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","source","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","content","wrap","_callee$","_context","prev","next","_asyncIterator","_awaitAsyncGenerator","sent","done","value","length","undefined","Error","String","toString","Array","isArray","Uint8Array","from","t0","return","finish","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-importer/src/dag-builder/validate-chunks.js"],"sourcesContent":["import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @type {ChunkValidator}\n */\nasync function * validateChunks (source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString())\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content)\n    } else if (content instanceof Uint8Array) {\n      yield content\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n  }\n}\n\nexport default validateChunks\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}