{"ast":null,"code":"import _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name: name,\n    prefix: prefix,\n    encoder: {\n      name: name,\n      prefix: prefix,\n      encode: encode\n    },\n    decoder: {\n      decode: decode\n    }\n  };\n}\nvar string = createCodec('utf8', 'u', function (buf) {\n  var decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, function (str) {\n  var encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nvar ascii = createCodec('ascii', 'a', function (buf) {\n  var string = 'a';\n  for (var i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, function (str) {\n  str = str.substring(1);\n  var buf = allocUnsafe(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nvar BASES = _objectSpread({\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii\n}, bases);\nexport default BASES;","map":{"version":3,"names":["bases","allocUnsafe","createCodec","name","prefix","encode","decode","encoder","decoder","string","buf","TextDecoder","str","TextEncoder","substring","ascii","i","length","String","fromCharCode","charCodeAt","BASES","_objectSpread","utf8","hex","base16","latin1","binary"],"sources":["/Users/apple/Documents/treasure/node_modules/is-ipfs/node_modules/uint8arrays/src/util/bases.ts"],"sourcesContent":["import type { MultibaseCodec } from 'multiformats'\nimport { bases } from 'multiformats/basics'\nimport { allocUnsafe } from '../alloc.js'\n\nfunction createCodec (name: string, prefix: string, encode: (buf: Uint8Array) => string, decode: (str: string) => Uint8Array): MultibaseCodec<any> {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = allocUnsafe(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\nexport type SupportedEncodings = 'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof typeof bases\n\nconst BASES: Record<SupportedEncodings, MultibaseCodec<any>> = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n\n  ...bases\n}\n\nexport default BASES\n"],"mappings":";AACA,SAASA,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,WAAWA,CAAEC,IAAY,EAAEC,MAAc,EAAEC,MAAmC,EAAEC,MAAmC;EAC1H,OAAO;IACLH,IAAI,EAAJA,IAAI;IACJC,MAAM,EAANA,MAAM;IACNG,OAAO,EAAE;MACPJ,IAAI,EAAJA,IAAI;MACJC,MAAM,EAANA,MAAM;MACNC,MAAM,EAANA;KACD;IACDG,OAAO,EAAE;MACPF,MAAM,EAANA;;GAEH;AACH;AAEA,IAAMG,MAAM,GAAGP,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,UAACQ,GAAG,EAAI;EAC9C,IAAMF,OAAO,GAAG,IAAIG,WAAW,CAAC,MAAM,CAAC;EACvC,OAAO,GAAG,GAAGH,OAAO,CAACF,MAAM,CAACI,GAAG,CAAC;AAClC,CAAC,EAAE,UAACE,GAAG,EAAI;EACT,IAAML,OAAO,GAAG,IAAIM,WAAW,EAAE;EACjC,OAAON,OAAO,CAACF,MAAM,CAACO,GAAG,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,IAAMC,KAAK,GAAGb,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,UAACQ,GAAG,EAAI;EAC9C,IAAID,MAAM,GAAG,GAAG;EAEhB,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,GAAG,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IACnCP,MAAM,IAAIS,MAAM,CAACC,YAAY,CAACT,GAAG,CAACM,CAAC,CAAC,CAAC;;EAEvC,OAAOP,MAAM;AACf,CAAC,EAAE,UAACG,GAAG,EAAI;EACTA,GAAG,GAAGA,GAAG,CAACE,SAAS,CAAC,CAAC,CAAC;EACtB,IAAMJ,GAAG,GAAGT,WAAW,CAACW,GAAG,CAACK,MAAM,CAAC;EAEnC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACnCN,GAAG,CAACM,CAAC,CAAC,GAAGJ,GAAG,CAACQ,UAAU,CAACJ,CAAC,CAAC;;EAG5B,OAAON,GAAG;AACZ,CAAC,CAAC;AAIF,IAAMW,KAAK,GAAAC,aAAA;EACTC,IAAI,EAAEd,MAAM;EACZ,OAAO,EAAEA,MAAM;EACfe,GAAG,EAAExB,KAAK,CAACyB,MAAM;EACjBC,MAAM,EAAEX,KAAK;EACbA,KAAK,EAAEA,KAAK;EACZY,MAAM,EAAEZ;AAAK,GAEVf,KAAK,CACT;AAED,eAAeqB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}