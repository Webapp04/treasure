{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn\n *\n * @typedef {object} Subscription\n * @property {MessageHandlerFn} handler\n * @property {AbortController} controller\n */\n\nexport var SubscriptionTracker = /*#__PURE__*/function () {\n  function SubscriptionTracker() {\n    _classCallCheck(this, SubscriptionTracker);\n    /** @type {Map<string, Subscription[]>} */\n    this._subs = new Map();\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} handler\n   * @param {AbortSignal} [signal]\n   */\n  _createClass(SubscriptionTracker, [{\n    key: \"subscribe\",\n    value: function subscribe(topic, handler, signal) {\n      var _this = this;\n      var topicSubs = this._subs.get(topic) || [];\n      if (topicSubs.find(function (s) {\n        return s.handler === handler;\n      })) {\n        throw new Error(\"Already subscribed to \".concat(topic, \" with this handler\"));\n      }\n\n      // Create controller so a call to unsubscribe can cancel the request\n      var controller = new AbortController();\n      this._subs.set(topic, [{\n        handler: handler,\n        controller: controller\n      }].concat(topicSubs));\n\n      // If there is an external signal, forward the abort event\n      if (signal) {\n        signal.addEventListener('abort', function () {\n          return _this.unsubscribe(topic, handler);\n        });\n      }\n      return controller.signal;\n    }\n\n    /**\n     * @param {string} topic\n     * @param {MessageHandlerFn} [handler]\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(topic, handler) {\n      var subs = this._subs.get(topic) || [];\n      var unsubs;\n      if (handler) {\n        this._subs.set(topic, subs.filter(function (s) {\n          return s.handler !== handler;\n        }));\n        unsubs = subs.filter(function (s) {\n          return s.handler === handler;\n        });\n      } else {\n        this._subs.set(topic, []);\n        unsubs = subs;\n      }\n      if (!(this._subs.get(topic) || []).length) {\n        this._subs.delete(topic);\n      }\n      unsubs.forEach(function (s) {\n        return s.controller.abort();\n      });\n    }\n  }]);\n  return SubscriptionTracker;\n}();","map":{"version":3,"names":["SubscriptionTracker","_classCallCheck","_subs","Map","_createClass","key","value","subscribe","topic","handler","signal","_this","topicSubs","get","find","s","Error","concat","controller","AbortController","set","addEventListener","unsubscribe","subs","unsubs","filter","length","delete","forEach","abort"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js"],"sourcesContent":["\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn\n *\n * @typedef {object} Subscription\n * @property {MessageHandlerFn} handler\n * @property {AbortController} controller\n */\n\nexport class SubscriptionTracker {\n  constructor () {\n    /** @type {Map<string, Subscription[]>} */\n    this._subs = new Map()\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} handler\n   * @param {AbortSignal} [signal]\n   */\n  subscribe (topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || []\n\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`)\n    }\n\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController()\n\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\n\n    // If there is an external signal, forward the abort event\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler))\n    }\n\n    return controller.signal\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} [handler]\n   */\n  unsubscribe (topic, handler) {\n    const subs = this._subs.get(topic) || []\n    let unsubs\n\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\n      unsubs = subs.filter(s => s.handler === handler)\n    } else {\n      this._subs.set(topic, [])\n      unsubs = subs\n    }\n\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic)\n    }\n\n    unsubs.forEach(s => s.controller.abort())\n  }\n}\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAaA,mBAAmB;EAC9B,SAAAA,oBAAA,EAAe;IAAAC,eAAA,OAAAD,mBAAA;IACb;IACA,IAAI,CAACE,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EACxB;;EAEA;AACF;AACA;AACA;AACA;EAJEC,YAAA,CAAAJ,mBAAA;IAAAK,GAAA;IAAAC,KAAA,EAKA,SAAAC,UAAWC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAE;MAAA,IAAAC,KAAA;MACjC,IAAMC,SAAS,GAAG,IAAI,CAACV,KAAK,CAACW,GAAG,CAACL,KAAK,CAAC,IAAI,EAAE;MAE7C,IAAII,SAAS,CAACE,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACN,OAAO,KAAKA,OAAO;MAAA,EAAC,EAAE;QAC9C,MAAM,IAAIO,KAAK,0BAAAC,MAAA,CAA0BT,KAAK,uBAAoB,CAAC;MACrE;;MAEA;MACA,IAAMU,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MAExC,IAAI,CAACjB,KAAK,CAACkB,GAAG,CAACZ,KAAK,EAAE,CAAC;QAAEC,OAAO,EAAPA,OAAO;QAAES,UAAU,EAAVA;MAAW,CAAC,CAAC,CAACD,MAAM,CAACL,SAAS,CAAC,CAAC;;MAElE;MACA,IAAIF,MAAM,EAAE;QACVA,MAAM,CAACW,gBAAgB,CAAC,OAAO,EAAE;UAAA,OAAMV,KAAI,CAACW,WAAW,CAACd,KAAK,EAAEC,OAAO,CAAC;QAAA,EAAC;MAC1E;MAEA,OAAOS,UAAU,CAACR,MAAM;IAC1B;;IAEA;AACF;AACA;AACA;EAHE;IAAAL,GAAA;IAAAC,KAAA,EAIA,SAAAgB,YAAad,KAAK,EAAEC,OAAO,EAAE;MAC3B,IAAMc,IAAI,GAAG,IAAI,CAACrB,KAAK,CAACW,GAAG,CAACL,KAAK,CAAC,IAAI,EAAE;MACxC,IAAIgB,MAAM;MAEV,IAAIf,OAAO,EAAE;QACX,IAAI,CAACP,KAAK,CAACkB,GAAG,CAACZ,KAAK,EAAEe,IAAI,CAACE,MAAM,CAAC,UAAAV,CAAC;UAAA,OAAIA,CAAC,CAACN,OAAO,KAAKA,OAAO;QAAA,EAAC,CAAC;QAC9De,MAAM,GAAGD,IAAI,CAACE,MAAM,CAAC,UAAAV,CAAC;UAAA,OAAIA,CAAC,CAACN,OAAO,KAAKA,OAAO;QAAA,EAAC;MAClD,CAAC,MAAM;QACL,IAAI,CAACP,KAAK,CAACkB,GAAG,CAACZ,KAAK,EAAE,EAAE,CAAC;QACzBgB,MAAM,GAAGD,IAAI;MACf;MAEA,IAAI,CAAC,CAAC,IAAI,CAACrB,KAAK,CAACW,GAAG,CAACL,KAAK,CAAC,IAAI,EAAE,EAAEkB,MAAM,EAAE;QACzC,IAAI,CAACxB,KAAK,CAACyB,MAAM,CAACnB,KAAK,CAAC;MAC1B;MAEAgB,MAAM,CAACI,OAAO,CAAC,UAAAb,CAAC;QAAA,OAAIA,CAAC,CAACG,UAAU,CAACW,KAAK,CAAC,CAAC;MAAA,EAAC;IAC3C;EAAC;EAAA,OAAA7B,mBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}