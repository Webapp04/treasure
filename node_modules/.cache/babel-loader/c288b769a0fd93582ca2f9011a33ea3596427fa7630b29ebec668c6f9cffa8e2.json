{"ast":null,"code":"import _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { createGet } from './get.js';\nimport { createPut } from './put.js';\nimport { createRm } from './rm.js';\nimport { createStat } from './stat.js';\n\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nexport var BlockAPI = /*#__PURE__*/_createClass(\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/src/multihashes').Multihashes} config.hashers\n * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} config.codecs\n * @param {Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nfunction BlockAPI(_ref) {\n  var codecs = _ref.codecs,\n    hashers = _ref.hashers,\n    preload = _ref.preload,\n    repo = _ref.repo;\n  _classCallCheck(this, BlockAPI);\n  this.get = createGet({\n    preload: preload,\n    repo: repo\n  });\n  this.put = createPut({\n    codecs: codecs,\n    hashers: hashers,\n    preload: preload,\n    repo: repo\n  });\n  this.rm = createRm({\n    repo: repo\n  });\n  this.stat = createStat({\n    preload: preload,\n    repo: repo\n  });\n});","map":{"version":3,"names":["createGet","createPut","createRm","createStat","BlockAPI","_createClass","_ref","codecs","hashers","preload","repo","_classCallCheck","get","put","rm","stat"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/block/index.js"],"sourcesContent":["import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nexport class BlockAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/src/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, hashers, preload, repo }) {\n    this.get = createGet({ preload, repo })\n    this.put = createPut({ codecs, hashers, preload, repo })\n    this.rm = createRm({ repo })\n    this.stat = createStat({ preload, repo })\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,UAAU;AACpC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,QAAQ,QAAQ,SAAS;AAClC,SAASC,UAAU,QAAQ,WAAW;;AAEtC;AACA;AACA;;AAEA,WAAaC,QAAQ,gBAAAC,YAAA;AACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACE,SAAAD,SAAAE,IAAA,EAAiD;EAAA,IAAlCC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;EAAAC,eAAA,OAAAP,QAAA;EAC3C,IAAI,CAACQ,GAAG,GAAGZ,SAAS,CAAC;IAAES,OAAO,EAAPA,OAAO;IAAEC,IAAI,EAAJA;EAAK,CAAC,CAAC;EACvC,IAAI,CAACG,GAAG,GAAGZ,SAAS,CAAC;IAAEM,MAAM,EAANA,MAAM;IAAEC,OAAO,EAAPA,OAAO;IAAEC,OAAO,EAAPA,OAAO;IAAEC,IAAI,EAAJA;EAAK,CAAC,CAAC;EACxD,IAAI,CAACI,EAAE,GAAGZ,QAAQ,CAAC;IAAEQ,IAAI,EAAJA;EAAK,CAAC,CAAC;EAC5B,IAAI,CAACK,IAAI,GAAGZ,UAAU,CAAC;IAAEM,OAAO,EAAPA,OAAO;IAAEC,IAAI,EAAJA;EAAK,CAAC,CAAC;AAC3C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}