{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport var createImport = configure(function (api) {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  function importKey(_x, _x2, _x3) {\n    return _importKey.apply(this, arguments);\n  }\n  function _importKey() {\n    _importKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, pem, password) {\n      var options,\n        res,\n        data,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n            _context.next = 3;\n            return api.post('key/import', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: name,\n                pem: pem,\n                password: password\n              }, options)),\n              headers: options.headers\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", objectToCamel(data));\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _importKey.apply(this, arguments);\n  }\n  return importKey;\n});","map":{"version":3,"names":["objectToCamel","configure","toUrlSearchParams","createImport","api","importKey","_x","_x2","_x3","_importKey","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","pem","password","options","res","data","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","_objectSpread","arg","headers","sent","json","abrupt","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/key/import.js"],"sourcesContent":["import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return importKey\n})\n"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAC3C;AACF;AACA;EAFE,SAGeC,SAASA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,WAAA;IAAAA,UAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAxB,SAAAC,QAA0BC,IAAI,EAAEC,GAAG,EAAEC,QAAQ;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,IAAA;QAAAC,KAAA,GAAAX,SAAA;MAAA,OAAAE,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAER,OAAO,GAAAG,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACvCvB,GAAG,CAAC0B,IAAI,CAAC,YAAY,EAAE;cACvCC,MAAM,EAAEZ,OAAO,CAACY,MAAM;cACtBC,YAAY,EAAE9B,iBAAiB,CAAA+B,aAAA;gBAC7BC,GAAG,EAAElB,IAAI;gBACTC,GAAG,EAAHA,GAAG;gBACHC,QAAQ,EAARA;cAAQ,GACLC,OAAO,CACX,CAAC;cACFgB,OAAO,EAAEhB,OAAO,CAACgB;YACnB,CAAC,CAAC;UAAA;YATIf,GAAG,GAAAK,QAAA,CAAAW,IAAA;YAAAX,QAAA,CAAAE,IAAA;YAAA,OAUUP,GAAG,CAACiB,IAAI,CAAC,CAAC;UAAA;YAAvBhB,IAAI,GAAAI,QAAA,CAAAW,IAAA;YAAA,OAAAX,QAAA,CAAAa,MAAA,WAGHtC,aAAa,CAACqB,IAAI,CAAC;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAc,IAAA;QAAA;MAAA,GAAAxB,OAAA;IAAA,CAC3B;IAAA,OAAAN,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAON,SAAS;AAClB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}