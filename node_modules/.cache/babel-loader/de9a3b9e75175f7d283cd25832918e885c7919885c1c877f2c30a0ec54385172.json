{"ast":null,"code":"/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var Envelope;\n(function (Envelope) {\n  var _codec;\n  Envelope.codec = function () {\n    if (_codec == null) {\n      _codec = message(function (obj, w) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (opts.writeDefaults === true || obj.publicKey != null && obj.publicKey.byteLength > 0) {\n          w.uint32(10);\n          w.bytes(obj.publicKey);\n        }\n        if (opts.writeDefaults === true || obj.payloadType != null && obj.payloadType.byteLength > 0) {\n          w.uint32(18);\n          w.bytes(obj.payloadType);\n        }\n        if (opts.writeDefaults === true || obj.payload != null && obj.payload.byteLength > 0) {\n          w.uint32(26);\n          w.bytes(obj.payload);\n        }\n        if (opts.writeDefaults === true || obj.signature != null && obj.signature.byteLength > 0) {\n          w.uint32(42);\n          w.bytes(obj.signature);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, function (reader, length) {\n        var obj = {\n          publicKey: new Uint8Array(0),\n          payloadType: new Uint8Array(0),\n          payload: new Uint8Array(0),\n          signature: new Uint8Array(0)\n        };\n        var end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.publicKey = reader.bytes();\n              break;\n            case 2:\n              obj.payloadType = reader.bytes();\n              break;\n            case 3:\n              obj.payload = reader.bytes();\n              break;\n            case 5:\n              obj.signature = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  Envelope.encode = function (obj) {\n    return encodeMessage(obj, Envelope.codec());\n  };\n  Envelope.decode = function (buf) {\n    return decodeMessage(buf, Envelope.codec());\n  };\n})(Envelope || (Envelope = {}));","map":{"version":3,"names":["encodeMessage","decodeMessage","message","Envelope","_codec","codec","obj","w","opts","arguments","length","undefined","lengthDelimited","fork","writeDefaults","publicKey","byteLength","uint32","bytes","payloadType","payload","signature","ldelim","reader","Uint8Array","end","len","pos","tag","skipType","encode","decode","buf"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/peer-record/src/envelope/envelope.ts"],"sourcesContent":["/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\nimport type { Codec } from 'protons-runtime'\n\nexport interface Envelope {\n  publicKey: Uint8Array\n  payloadType: Uint8Array\n  payload: Uint8Array\n  signature: Uint8Array\n}\n\nexport namespace Envelope {\n  let _codec: Codec<Envelope>\n\n  export const codec = (): Codec<Envelope> => {\n    if (_codec == null) {\n      _codec = message<Envelope>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (opts.writeDefaults === true || (obj.publicKey != null && obj.publicKey.byteLength > 0)) {\n          w.uint32(10)\n          w.bytes(obj.publicKey)\n        }\n\n        if (opts.writeDefaults === true || (obj.payloadType != null && obj.payloadType.byteLength > 0)) {\n          w.uint32(18)\n          w.bytes(obj.payloadType)\n        }\n\n        if (opts.writeDefaults === true || (obj.payload != null && obj.payload.byteLength > 0)) {\n          w.uint32(26)\n          w.bytes(obj.payload)\n        }\n\n        if (opts.writeDefaults === true || (obj.signature != null && obj.signature.byteLength > 0)) {\n          w.uint32(42)\n          w.bytes(obj.signature)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {\n          publicKey: new Uint8Array(0),\n          payloadType: new Uint8Array(0),\n          payload: new Uint8Array(0),\n          signature: new Uint8Array(0)\n        }\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.publicKey = reader.bytes()\n              break\n            case 2:\n              obj.payloadType = reader.bytes()\n              break\n            case 3:\n              obj.payload = reader.bytes()\n              break\n            case 5:\n              obj.signature = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: Envelope): Uint8Array => {\n    return encodeMessage(obj, Envelope.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): Envelope => {\n    return decodeMessage(buf, Envelope.codec())\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}