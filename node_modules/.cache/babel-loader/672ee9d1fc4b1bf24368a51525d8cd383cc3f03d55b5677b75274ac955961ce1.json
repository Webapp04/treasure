{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createCp } from './cp.js';\nimport { createRm } from './rm.js';\nimport mergeOpts from 'merge-options';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nvar mergeOptions = mergeOpts.bind({\n  ignoreUndefined: true\n});\n\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nvar defaultOptions = {\n  parents: false,\n  flush: true,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  shardSplitThreshold: 1000\n};\n\n/**\n * @param {MfsContext} context\n */\nexport function createMv(context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"mv\"]}\n   */\n  function mfsMv(_x, _x2) {\n    return _mfsMv.apply(this, arguments);\n  }\n  function _mfsMv() {\n    _mfsMv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(from, to) {\n      var options,\n        opts,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            /** @type {DefaultOptions} */\n            opts = mergeOptions(defaultOptions, options);\n            _context.next = 4;\n            return createCp(context)(from, to, opts);\n          case 4:\n            _context.next = 6;\n            return createRm(context)(from, _objectSpread(_objectSpread({}, opts), {}, {\n              recursive: true\n            }));\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _mfsMv.apply(this, arguments);\n  }\n  return withTimeoutOption(mfsMv);\n}","map":{"version":3,"names":["createCp","createRm","mergeOpts","withTimeoutOption","mergeOptions","bind","ignoreUndefined","defaultOptions","parents","flush","cidVersion","hashAlg","shardSplitThreshold","createMv","context","mfsMv","_x","_x2","_mfsMv","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","from","to","options","opts","_args","wrap","_callee$","_context","prev","next","length","undefined","_objectSpread","recursive","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/files/mv.js"],"sourcesContent":["import { createCp } from './cp.js'\nimport { createRm } from './rm.js'\nimport mergeOpts from 'merge-options'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  flush: true,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createMv (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"mv\"]}\n   */\n  async function mfsMv (from, to, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    await createCp(context)(from, to, opts)\n    await createRm(context)(from, {\n      ...opts,\n      recursive: true\n    })\n  }\n\n  return withTimeoutOption(mfsMv)\n}\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,SAAS;AAClC,SAASC,QAAQ,QAAQ,SAAS;AAClC,OAAOC,SAAS,MAAM,eAAe;AACrC,SAASC,iBAAiB,QAAQ,qCAAqC;AAEvE,IAAMC,YAAY,GAAGF,SAAS,CAACG,IAAI,CAAC;EAAEC,eAAe,EAAE;AAAK,CAAC,CAAC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,UAAU;EACnBC,mBAAmB,EAAE;AACvB,CAAC;;AAED;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAAEC,OAAO,EAAE;EACjC;AACF;AACA;EAFE,SAGeC,KAAKA,CAAAC,EAAA,EAAAC,GAAA;IAAA,OAAAC,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,OAAA;IAAAA,MAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAApB,SAAAC,QAAsBC,IAAI,EAAEC,EAAE;MAAA,IAAAC,OAAA;QAAAC,IAAA;QAAAC,KAAA,GAAAT,SAAA;MAAA,OAAAE,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEP,OAAO,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAC1C;YACMD,IAAI,GAAGxB,YAAY,CAACG,cAAc,EAAEoB,OAAO,CAAC;YAAAK,QAAA,CAAAE,IAAA;YAAA,OAE5ClC,QAAQ,CAACc,OAAO,CAAC,CAACW,IAAI,EAAEC,EAAE,EAAEE,IAAI,CAAC;UAAA;YAAAI,QAAA,CAAAE,IAAA;YAAA,OACjCjC,QAAQ,CAACa,OAAO,CAAC,CAACW,IAAI,EAAAY,aAAA,CAAAA,aAAA,KACvBT,IAAI;cACPU,SAAS,EAAE;YAAI,EAChB,CAAC;UAAA;UAAA;YAAA,OAAAN,QAAA,CAAAO,IAAA;QAAA;MAAA,GAAAf,OAAA;IAAA,CACH;IAAA,OAAAN,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOjB,iBAAiB,CAACY,KAAK,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}