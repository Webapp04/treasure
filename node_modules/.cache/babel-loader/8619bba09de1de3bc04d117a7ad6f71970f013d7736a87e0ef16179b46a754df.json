{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport map from 'it-map';\nimport errCode from 'err-code';\nimport { PinTypes } from './pin-types.js';\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./pin-manager').Pins} Pins\n */\n\n/**\n * @param {Pins} pins\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createPinnedBlockstore(pins, store) {\n  return {\n    open: function open() {\n      return store.open();\n    },\n    close: function close() {\n      return store.close();\n    },\n    query: function query(_query, options) {\n      return store.query(_query, options);\n    },\n    queryKeys: function queryKeys(query, options) {\n      return store.queryKeys(query, options);\n    },\n    get: function get(cid, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", store.get(cid, options));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    getMany: function getMany(cids, options) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(store.getMany(cids, options)), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    put: function put(cid, buf, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return store.put(cid, buf, options);\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    putMany: function putMany(pairs, options) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.delegateYield(_asyncGeneratorDelegate(_asyncIterator(store.putMany(pairs, options)), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    has: function has(cid, options) {\n      return store.has(cid, options);\n    },\n    delete: function _delete(cid, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return ensureNotPinned(cid, pins);\n            case 2:\n              return _context5.abrupt(\"return\", store.delete(cid, options));\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    },\n    deleteMany: function deleteMany(cids, options) {\n      return store.deleteMany(map(cids, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(cid) {\n          return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n            while (1) switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return ensureNotPinned(cid, pins);\n              case 2:\n                return _context6.abrupt(\"return\", cid);\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }, _callee6);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()), options);\n    },\n    batch: function batch() {\n      return store.batch();\n    }\n  };\n}\n\n/**\n * @param {CID} cid\n * @param {Pins} pins\n */\nfunction ensureNotPinned(_x2, _x3) {\n  return _ensureNotPinned.apply(this, arguments);\n}\nfunction _ensureNotPinned() {\n  _ensureNotPinned = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(cid, pins) {\n    var _yield$pins$isPinnedW, pinned, reason;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return pins.isPinnedWithType(cid, PinTypes.all);\n        case 2:\n          _yield$pins$isPinnedW = _context7.sent;\n          pinned = _yield$pins$isPinnedW.pinned;\n          reason = _yield$pins$isPinnedW.reason;\n          if (!pinned) {\n            _context7.next = 7;\n            break;\n          }\n          throw errCode(new Error(\"pinned: \".concat(reason)), 'ERR_BLOCK_PINNED');\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _ensureNotPinned.apply(this, arguments);\n}","map":{"version":3,"names":["map","errCode","PinTypes","createPinnedBlockstore","pins","store","open","close","query","options","queryKeys","get","cid","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","getMany","cids","_wrapAsyncGenerator","_callee2","_callee2$","_context2","delegateYield","_asyncGeneratorDelegate","_asyncIterator","_awaitAsyncGenerator","put","buf","_callee3","_callee3$","_context3","putMany","pairs","_callee4","_callee4$","_context4","has","delete","_delete","_callee5","_callee5$","_context5","ensureNotPinned","deleteMany","_ref","_callee6","_callee6$","_context6","_x","apply","arguments","batch","_x2","_x3","_ensureNotPinned","_callee7","_yield$pins$isPinnedW","pinned","reason","_callee7$","_context7","isPinnedWithType","all","sent","Error","concat"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo/src/pinned-blockstore.js"],"sourcesContent":["\nimport map from 'it-map'\nimport errCode from 'err-code'\nimport { PinTypes } from './pin-types.js'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./pin-manager').Pins} Pins\n */\n\n/**\n * @param {Pins} pins\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createPinnedBlockstore (pins, store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      yield * store.getMany(cids, options)\n    },\n\n    async put (cid, buf, options) {\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      yield * store.putMany(pairs, options)\n    },\n\n    has (cid, options) {\n      return store.has(cid, options)\n    },\n\n    async delete (cid, options) {\n      await ensureNotPinned(cid, pins)\n\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(map(cids, async cid => {\n        await ensureNotPinned(cid, pins)\n\n        return cid\n      }), options)\n    },\n\n    batch () {\n      return store.batch()\n    }\n  }\n}\n\n/**\n * @param {CID} cid\n * @param {Pins} pins\n */\nasync function ensureNotPinned (cid, pins) {\n  const { pinned, reason } = await pins.isPinnedWithType(cid, PinTypes.all)\n\n  if (pinned) {\n    throw errCode(new Error(`pinned: ${reason}`), 'ERR_BLOCK_PINNED')\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}