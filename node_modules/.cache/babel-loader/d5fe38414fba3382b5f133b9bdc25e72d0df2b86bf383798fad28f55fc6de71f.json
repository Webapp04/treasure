{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ModuleError = require('module-error');\nvar formats = new Set(['buffer', 'view', 'utf8']);\n\n/**\n * @template TIn, TFormat, TOut\n * @abstract\n */\nvar Encoding = /*#__PURE__*/function () {\n  /**\n   * @param {IEncoding<TIn,TFormat,TOut>} options\n   */\n  function Encoding(options) {\n    _classCallCheck(this, Encoding);\n    /** @type {(data: TIn) => TFormat} */\n    this.encode = options.encode || this.encode;\n\n    /** @type {(data: TFormat) => TOut} */\n    this.decode = options.decode || this.decode;\n\n    /** @type {string} */\n    this.name = options.name || this.name;\n\n    /** @type {string} */\n    this.format = options.format || this.format;\n    if (typeof this.encode !== 'function') {\n      throw new TypeError(\"The 'encode' property must be a function\");\n    }\n    if (typeof this.decode !== 'function') {\n      throw new TypeError(\"The 'decode' property must be a function\");\n    }\n    this.encode = this.encode.bind(this);\n    this.decode = this.decode.bind(this);\n    if (typeof this.name !== 'string' || this.name === '') {\n      throw new TypeError(\"The 'name' property must be a string\");\n    }\n    if (typeof this.format !== 'string' || !formats.has(this.format)) {\n      throw new TypeError(\"The 'format' property must be one of 'buffer', 'view', 'utf8'\");\n    }\n    if (options.createViewTranscoder) {\n      this.createViewTranscoder = options.createViewTranscoder;\n    }\n    if (options.createBufferTranscoder) {\n      this.createBufferTranscoder = options.createBufferTranscoder;\n    }\n    if (options.createUTF8Transcoder) {\n      this.createUTF8Transcoder = options.createUTF8Transcoder;\n    }\n  }\n  _createClass(Encoding, [{\n    key: \"commonName\",\n    get: function get() {\n      return (/** @type {string} */this.name.split('+')[0]\n      );\n    }\n\n    /** @return {BufferFormat<TIn,TOut>} */\n  }, {\n    key: \"createBufferTranscoder\",\n    value: function createBufferTranscoder() {\n      throw new ModuleError(\"Encoding '\".concat(this.name, \"' cannot be transcoded to 'buffer'\"), {\n        code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n      });\n    }\n\n    /** @return {ViewFormat<TIn,TOut>} */\n  }, {\n    key: \"createViewTranscoder\",\n    value: function createViewTranscoder() {\n      throw new ModuleError(\"Encoding '\".concat(this.name, \"' cannot be transcoded to 'view'\"), {\n        code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n      });\n    }\n\n    /** @return {UTF8Format<TIn,TOut>} */\n  }, {\n    key: \"createUTF8Transcoder\",\n    value: function createUTF8Transcoder() {\n      throw new ModuleError(\"Encoding '\".concat(this.name, \"' cannot be transcoded to 'utf8'\"), {\n        code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n      });\n    }\n  }]);\n  return Encoding;\n}();\nexports.Encoding = Encoding;\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */\n\n/**\n * @typedef {import('./formats').BufferFormat<TIn,TOut>} BufferFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').ViewFormat<TIn,TOut>} ViewFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').UTF8Format<TIn,TOut>} UTF8Format\n * @template TIn, TOut\n */","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","ModuleError","formats","Set","Encoding","options","encode","decode","name","format","TypeError","bind","has","createViewTranscoder","createBufferTranscoder","createUTF8Transcoder","key","get","split","value","concat","code","exports"],"sources":["/Users/apple/Documents/treasure/node_modules/level-transcoder/lib/encoding.js"],"sourcesContent":["'use strict'\n\nconst ModuleError = require('module-error')\nconst formats = new Set(['buffer', 'view', 'utf8'])\n\n/**\n * @template TIn, TFormat, TOut\n * @abstract\n */\nclass Encoding {\n  /**\n   * @param {IEncoding<TIn,TFormat,TOut>} options\n   */\n  constructor (options) {\n    /** @type {(data: TIn) => TFormat} */\n    this.encode = options.encode || this.encode\n\n    /** @type {(data: TFormat) => TOut} */\n    this.decode = options.decode || this.decode\n\n    /** @type {string} */\n    this.name = options.name || this.name\n\n    /** @type {string} */\n    this.format = options.format || this.format\n\n    if (typeof this.encode !== 'function') {\n      throw new TypeError(\"The 'encode' property must be a function\")\n    }\n\n    if (typeof this.decode !== 'function') {\n      throw new TypeError(\"The 'decode' property must be a function\")\n    }\n\n    this.encode = this.encode.bind(this)\n    this.decode = this.decode.bind(this)\n\n    if (typeof this.name !== 'string' || this.name === '') {\n      throw new TypeError(\"The 'name' property must be a string\")\n    }\n\n    if (typeof this.format !== 'string' || !formats.has(this.format)) {\n      throw new TypeError(\"The 'format' property must be one of 'buffer', 'view', 'utf8'\")\n    }\n\n    if (options.createViewTranscoder) {\n      this.createViewTranscoder = options.createViewTranscoder\n    }\n\n    if (options.createBufferTranscoder) {\n      this.createBufferTranscoder = options.createBufferTranscoder\n    }\n\n    if (options.createUTF8Transcoder) {\n      this.createUTF8Transcoder = options.createUTF8Transcoder\n    }\n  }\n\n  get commonName () {\n    return /** @type {string} */ (this.name.split('+')[0])\n  }\n\n  /** @return {BufferFormat<TIn,TOut>} */\n  createBufferTranscoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'buffer'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n\n  /** @return {ViewFormat<TIn,TOut>} */\n  createViewTranscoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'view'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n\n  /** @return {UTF8Format<TIn,TOut>} */\n  createUTF8Transcoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'utf8'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n}\n\nexports.Encoding = Encoding\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */\n\n/**\n * @typedef {import('./formats').BufferFormat<TIn,TOut>} BufferFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').ViewFormat<TIn,TOut>} ViewFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').UTF8Format<TIn,TOut>} UTF8Format\n * @template TIn, TOut\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}