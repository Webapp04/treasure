{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport drain from 'it-drain';\nimport { notFoundError } from 'datastore-core/errors';\nimport { logger } from '@libp2p/logger';\nvar log = logger('ipfs:ipns:dht-datastore');\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nexport var DHTDatastore = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {import('@libp2p/interface-dht').DHT} dht\n   */\n  function DHTDatastore(dht) {\n    _classCallCheck(this, DHTDatastore);\n    this._dht = dht;\n  }\n\n  /**\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  _createClass(DHTDatastore, [{\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, value, options) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return drain(this._dht.put(key, value, options));\n            case 3:\n              _context.next = 9;\n              break;\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              log.error(_context.t0);\n              throw _context.t0;\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 5]]);\n      }));\n      function put(_x, _x2, _x3) {\n        return _put.apply(this, arguments);\n      }\n      return put;\n    }()\n    /**\n     * @param {Uint8Array} key - identifier of the value to be obtained.\n     * @param {AbortOptions} [options]\n     */\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key, options) {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, event;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context2.prev = 2;\n              _iterator = _asyncIterator(this._dht.get(key, options));\n            case 4:\n              _context2.next = 6;\n              return _iterator.next();\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                _context2.next = 13;\n                break;\n              }\n              event = _step.value;\n              if (!(event.name === 'VALUE')) {\n                _context2.next = 10;\n                break;\n              }\n              return _context2.abrupt(\"return\", event.value);\n            case 10:\n              _iteratorAbruptCompletion = false;\n              _context2.next = 4;\n              break;\n            case 13:\n              _context2.next = 19;\n              break;\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n            case 19:\n              _context2.prev = 19;\n              _context2.prev = 20;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context2.next = 24;\n                break;\n              }\n              _context2.next = 24;\n              return _iterator.return();\n            case 24:\n              _context2.prev = 24;\n              if (!_didIteratorError) {\n                _context2.next = 27;\n                break;\n              }\n              throw _iteratorError;\n            case 27:\n              return _context2.finish(24);\n            case 28:\n              return _context2.finish(19);\n            case 29:\n              throw notFoundError();\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 15, 19, 29], [20,, 24, 28]]);\n      }));\n      function get(_x4, _x5) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }]);\n  return DHTDatastore;\n}();","map":{"version":3,"names":["drain","notFoundError","logger","log","DHTDatastore","dht","_classCallCheck","_dht","_createClass","key","value","_put","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","wrap","_callee$","_context","prev","next","put","t0","error","stop","_x","_x2","_x3","apply","arguments","_get","_callee2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","event","_callee2$","_context2","_asyncIterator","get","sent","done","name","abrupt","return","finish","_x4","_x5"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/ipns/routing/dht-datastore.js"],"sourcesContent":["import drain from 'it-drain'\nimport { notFoundError } from 'datastore-core/errors'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:ipns:dht-datastore')\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nexport class DHTDatastore {\n  /**\n   *\n   * @param {import('@libp2p/interface-dht').DHT} dht\n   */\n  constructor (dht) {\n    this._dht = dht\n  }\n\n  /**\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await drain(this._dht.put(key, value, options))\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n  }\n\n  /**\n   * @param {Uint8Array} key - identifier of the value to be obtained.\n   * @param {AbortOptions} [options]\n   */\n  async get (key, options) {\n    for await (const event of this._dht.get(key, options)) {\n      if (event.name === 'VALUE') {\n        return event.value\n      }\n    }\n\n    throw notFoundError()\n  }\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,UAAU;AAC5B,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,IAAMC,GAAG,GAAGD,MAAM,CAAC,yBAAyB,CAAC;;AAE7C;AACA;AACA;;AAEA,WAAaE,YAAY;EACvB;AACF;AACA;AACA;EACE,SAAAA,aAAaC,GAAG,EAAE;IAAAC,eAAA,OAAAF,YAAA;IAChB,IAAI,CAACG,IAAI,GAAGF,GAAG;EACjB;;EAEA;AACF;AACA;AACA;AACA;EAJEG,YAAA,CAAAJ,YAAA;IAAAK,GAAA;IAAAC,KAAA;MAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAKA,SAAAC,QAAWN,GAAG,EAAEC,KAAK,EAAEM,OAAO;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEpBrB,KAAK,CAAC,IAAI,CAACO,IAAI,CAACe,GAAG,CAACb,GAAG,EAAEC,KAAK,EAAEM,OAAO,CAAC,CAAC;YAAA;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAI,EAAA,GAAAJ,QAAA;cAE/ChB,GAAG,CAACqB,KAAK,CAAAL,QAAA,CAAAI,EAAI,CAAC;cAAA,MAAAJ,QAAA,CAAAI,EAAA;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAV,OAAA;MAAA,CAGjB;MAAA,SAAAO,IAAAI,EAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAjB,IAAA,CAAAkB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAR,GAAA;IAAA;IAED;AACF;AACA;AACA;EAHE;IAAAb,GAAA;IAAAC,KAAA;MAAA,IAAAqB,IAAA,GAAAnB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAIA,SAAAkB,SAAWvB,GAAG,EAAEO,OAAO;QAAA,IAAAiB,yBAAA,EAAAC,iBAAA,EAAAC,cAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,KAAA;QAAA,OAAAzB,mBAAA,GAAAI,IAAA,UAAAsB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;YAAA;cAAAY,yBAAA;cAAAC,iBAAA;cAAAM,SAAA,CAAApB,IAAA;cAAAgB,SAAA,GAAAK,cAAA,CACK,IAAI,CAAClC,IAAI,CAACmC,GAAG,CAACjC,GAAG,EAAEO,OAAO,CAAC;YAAA;cAAAwB,SAAA,CAAAnB,IAAA;cAAA,OAAAe,SAAA,CAAAf,IAAA;YAAA;cAAA,MAAAY,yBAAA,KAAAI,KAAA,GAAAG,SAAA,CAAAG,IAAA,EAAAC,IAAA;gBAAAJ,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cAApCiB,KAAK,GAAAD,KAAA,CAAA3B,KAAA;cAAA,MAChB4B,KAAK,CAACO,IAAI,KAAK,OAAO;gBAAAL,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cAAA,OAAAmB,SAAA,CAAAM,MAAA,WACjBR,KAAK,CAAC5B,KAAK;YAAA;cAAAuB,yBAAA;cAAAO,SAAA,CAAAnB,IAAA;cAAA;YAAA;cAAAmB,SAAA,CAAAnB,IAAA;cAAA;YAAA;cAAAmB,SAAA,CAAApB,IAAA;cAAAoB,SAAA,CAAAjB,EAAA,GAAAiB,SAAA;cAAAN,iBAAA;cAAAC,cAAA,GAAAK,SAAA,CAAAjB,EAAA;YAAA;cAAAiB,SAAA,CAAApB,IAAA;cAAAoB,SAAA,CAAApB,IAAA;cAAA,MAAAa,yBAAA,IAAAG,SAAA,CAAAW,MAAA;gBAAAP,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cAAAmB,SAAA,CAAAnB,IAAA;cAAA,OAAAe,SAAA,CAAAW,MAAA;YAAA;cAAAP,SAAA,CAAApB,IAAA;cAAA,KAAAc,iBAAA;gBAAAM,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cAAA,MAAAc,cAAA;YAAA;cAAA,OAAAK,SAAA,CAAAQ,MAAA;YAAA;cAAA,OAAAR,SAAA,CAAAQ,MAAA;YAAA;cAAA,MAIhB/C,aAAa,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAuC,SAAA,CAAAf,IAAA;UAAA;QAAA,GAAAO,QAAA;MAAA,CACtB;MAAA,SAAAU,IAAAO,GAAA,EAAAC,GAAA;QAAA,OAAAnB,IAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAY,GAAA;IAAA;EAAA;EAAA,OAAAtC,YAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}