{"ast":null,"code":"import _defineAccessor from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/defineAccessor.js\";\nimport _defineProperty from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\nimport { FIFO } from './fifo.js';\nexport function pushable() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getNext = function getNext(buffer) {\n    var next = buffer.shift();\n    if (next == null) {\n      return {\n        done: true\n      };\n    }\n    if (next.error != null) {\n      throw next.error;\n    }\n    return {\n      done: next.done === true,\n      // @ts-expect-error\n      value: next.value\n    };\n  };\n  return _pushable(getNext, options);\n}\nexport function pushableV() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getNext = function getNext(buffer) {\n    var next;\n    var values = [];\n    while (!buffer.isEmpty()) {\n      next = buffer.shift();\n      if (next == null) {\n        break;\n      }\n      if (next.error != null) {\n        throw next.error;\n      }\n      if (next.done === false) {\n        // @ts-expect-error\n        values.push(next.value);\n      }\n    }\n    if (next == null) {\n      return {\n        done: true\n      };\n    }\n    return {\n      done: next.done === true,\n      value: values\n    };\n  };\n  return _pushable(getNext, options);\n}\nfunction _pushable(getNext, options) {\n  var _options, _pushable2, _pushable3;\n  options = (_options = options) !== null && _options !== void 0 ? _options : {};\n  var onEnd = options.onEnd;\n  var buffer = new FIFO();\n  var pushable;\n  var _onNext;\n  var ended;\n  var waitNext = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (buffer.isEmpty()) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt(\"return\", getNext(buffer));\n          case 2:\n            if (!ended) {\n              _context.next = 4;\n              break;\n            }\n            return _context.abrupt(\"return\", {\n              done: true\n            });\n          case 4:\n            _context.next = 6;\n            return new Promise(function (resolve, reject) {\n              _onNext = function onNext(next) {\n                _onNext = null;\n                buffer.push(next);\n                try {\n                  resolve(getNext(buffer));\n                } catch (err) {\n                  reject(err);\n                }\n                return pushable;\n              };\n            });\n          case 6:\n            return _context.abrupt(\"return\", _context.sent);\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function waitNext() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var bufferNext = function bufferNext(next) {\n    if (_onNext != null) {\n      return _onNext(next);\n    }\n    buffer.push(next);\n    return pushable;\n  };\n  var bufferError = function bufferError(err) {\n    buffer = new FIFO();\n    if (_onNext != null) {\n      return _onNext({\n        error: err\n      });\n    }\n    buffer.push({\n      error: err\n    });\n    return pushable;\n  };\n  var push = function push(value) {\n    var _options2;\n    if (ended) {\n      return pushable;\n    }\n    // @ts-expect-error `byteLength` is not declared on PushType\n    if (((_options2 = options) === null || _options2 === void 0 ? void 0 : _options2.objectMode) !== true && (value === null || value === void 0 ? void 0 : value.byteLength) == null) {\n      throw new Error('objectMode was not true but tried to push non-Uint8Array value');\n    }\n    return bufferNext({\n      done: false,\n      value: value\n    });\n  };\n  var end = function end(err) {\n    if (ended) return pushable;\n    ended = true;\n    return err != null ? bufferError(err) : bufferNext({\n      done: true\n    });\n  };\n  var _return = function _return() {\n    buffer = new FIFO();\n    end();\n    return {\n      done: true\n    };\n  };\n  var _throw = function _throw(err) {\n    end(err);\n    return {\n      done: true\n    };\n  };\n  pushable = (_pushable2 = {}, _defineProperty(_pushable2, Symbol.asyncIterator, function () {\n    return this;\n  }), _defineProperty(_pushable2, \"next\", waitNext), _defineProperty(_pushable2, \"return\", _return), _defineProperty(_pushable2, \"throw\", _throw), _defineProperty(_pushable2, \"push\", push), _defineProperty(_pushable2, \"end\", end), _defineAccessor(\"get\", _pushable2, \"readableLength\", function () {\n    return buffer.size;\n  }), _pushable2);\n  if (onEnd == null) {\n    return pushable;\n  }\n  var _pushable = pushable;\n  pushable = (_pushable3 = {}, _defineProperty(_pushable3, Symbol.asyncIterator, function () {\n    return this;\n  }), _defineProperty(_pushable3, \"next\", function next() {\n    return _pushable.next();\n  }), _defineProperty(_pushable3, \"throw\", function _throw(err) {\n    _pushable.throw(err);\n    if (onEnd != null) {\n      onEnd(err);\n      onEnd = undefined;\n    }\n    return {\n      done: true\n    };\n  }), _defineProperty(_pushable3, \"return\", function _return() {\n    _pushable.return();\n    if (onEnd != null) {\n      onEnd();\n      onEnd = undefined;\n    }\n    return {\n      done: true\n    };\n  }), _defineProperty(_pushable3, \"push\", push), _defineProperty(_pushable3, \"end\", function end(err) {\n    _pushable.end(err);\n    if (onEnd != null) {\n      onEnd(err);\n      onEnd = undefined;\n    }\n    return pushable;\n  }), _defineAccessor(\"get\", _pushable3, \"readableLength\", function () {\n    return _pushable.readableLength;\n  }), _pushable3);\n  return pushable;\n}","map":{"version":3,"names":["FIFO","pushable","options","arguments","length","undefined","getNext","buffer","next","shift","done","error","value","_pushable","pushableV","values","isEmpty","push","_options","_pushable2","_pushable3","onEnd","onNext","ended","waitNext","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","abrupt","Promise","resolve","reject","err","sent","stop","apply","bufferNext","bufferError","_options2","objectMode","byteLength","Error","end","_return","_throw","_defineProperty","Symbol","asyncIterator","_defineAccessor","size","throw","return","readableLength"],"sources":["/Users/apple/Documents/treasure/node_modules/it-pushable/src/index.ts"],"sourcesContent":["/**\n * @packageDocumentation\n *\n * An iterable that you can push values into.\n *\n * @example\n *\n * ```js\n * import { pushable } from 'it-pushable'\n *\n * const source = pushable()\n *\n * setTimeout(() => source.push('hello'), 100)\n * setTimeout(() => source.push('world'), 200)\n * setTimeout(() => source.end(), 300)\n *\n * const start = Date.now()\n *\n * for await (const value of source) {\n *   console.log(`got \"${value}\" after ${Date.now() - start}ms`)\n * }\n * console.log(`done after ${Date.now() - start}ms`)\n *\n * // Output:\n * // got \"hello\" after 105ms\n * // got \"world\" after 207ms\n * // done after 309ms\n * ```\n *\n * @example\n *\n * ```js\n * import { pushableV } from 'it-pushable'\n * import all from 'it-all'\n *\n * const source = pushableV()\n *\n * source.push(1)\n * source.push(2)\n * source.push(3)\n * source.end()\n *\n * console.info(await all(source))\n *\n * // Output:\n * // [ [1, 2, 3] ]\n * ```\n */\n\nimport { FIFO } from './fifo.js'\n\nexport interface Next<T> {\n  done?: boolean\n  error?: Error\n  value?: T\n}\n\ninterface BasePushable<T> {\n  /**\n   * End the iterable after all values in the buffer (if any) have been yielded. If an\n   * error is passed the buffer is cleared immediately and the next iteration will\n   * throw the passed error\n   */\n  end: (err?: Error) => this\n\n  /**\n   * Push a value into the iterable. Values are yielded from the iterable in the order\n   * they are pushed. Values not yet consumed from the iterable are buffered.\n   */\n  push: (value: T) => this\n  next: () => Promise<Next<T>>\n  return: () => { done: boolean }\n  throw: (err: Error) => { done: boolean }\n\n  /**\n   * This property contains the number of bytes (or objects) in the queue ready to be read.\n   *\n   * If `objectMode` is true, this is the number of objects in the queue, if false it's the\n   * total number of bytes in the queue.\n   */\n  readableLength: number\n}\n\n/**\n * An iterable that you can push values into.\n */\nexport interface Pushable<T> extends AsyncIterable<T>, BasePushable<T> {}\n\n/**\n * Similar to `pushable`, except it yields multiple buffered chunks at a time. All values yielded from the iterable will be arrays.\n */\nexport interface PushableV<T> extends AsyncIterable<T[]>, BasePushable<T> {}\n\nexport interface Options {\n  /**\n   * A boolean value that means non-`Uint8Array`s will be passed to `.push`, default: `false`\n   */\n  objectMode?: boolean\n\n  /**\n   * A function called after *all* values have been yielded from the iterator (including\n   * buffered values). In the case when the iterator is ended with an error it will be\n   * passed the error as a parameter.\n   */\n  onEnd?: (err?: Error) => void\n}\n\ntype NextResult<T> = { done: false, value: T} | { done: true }\n\ninterface getNext<T, V = T> { (buffer: FIFO<T>): NextResult<V> }\n\nexport interface ObjectPushableOptions extends Options {\n  objectMode: true\n}\n\nexport interface BytePushableOptions extends Options {\n  objectMode?: false\n}\n\n/**\n * Create a new async iterable. The values yielded from calls to `.next()`\n * or when used in a `for await of`loop are \"pushed\" into the iterable.\n * Returns an async iterable object with additional methods.\n */\nexport function pushable<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): Pushable<T>\nexport function pushable<T> (options: ObjectPushableOptions): Pushable<T>\nexport function pushable<T> (options: Options = {}): Pushable<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T> => {\n    const next: Next<T> | undefined = buffer.shift()\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    if (next.error != null) {\n      throw next.error\n    }\n\n    return {\n      done: next.done === true,\n      // @ts-expect-error\n      value: next.value\n    }\n  }\n\n  return _pushable<T, T, Pushable<T>>(getNext, options)\n}\n\nexport function pushableV<T extends { byteLength: number } = Uint8Array> (options?: BytePushableOptions): PushableV<T>\nexport function pushableV<T> (options: ObjectPushableOptions): PushableV<T>\nexport function pushableV<T> (options: Options = {}): PushableV<T> {\n  const getNext = (buffer: FIFO<T>): NextResult<T[]> => {\n    let next: Next<T> | undefined\n    const values: T[] = []\n\n    while (!buffer.isEmpty()) {\n      next = buffer.shift()\n\n      if (next == null) {\n        break\n      }\n\n      if (next.error != null) {\n        throw next.error\n      }\n\n      if (next.done === false) {\n        // @ts-expect-error\n        values.push(next.value)\n      }\n    }\n\n    if (next == null) {\n      return { done: true }\n    }\n\n    return {\n      done: next.done === true,\n      value: values\n    }\n  }\n\n  return _pushable<T, T[], PushableV<T>>(getNext, options)\n}\n\nfunction _pushable<PushType, ValueType, ReturnType> (getNext: getNext<PushType, ValueType>, options?: Options): ReturnType {\n  options = options ?? {}\n  let onEnd = options.onEnd\n  let buffer = new FIFO<PushType>()\n  let pushable: any\n  let onNext: ((next: Next<PushType>) => ReturnType) | null\n  let ended: boolean\n\n  const waitNext = async (): Promise<NextResult<ValueType>> => {\n    if (!buffer.isEmpty()) {\n      return getNext(buffer)\n    }\n\n    if (ended) {\n      return { done: true }\n    }\n\n    return await new Promise((resolve, reject) => {\n      onNext = (next: Next<PushType>) => {\n        onNext = null\n        buffer.push(next)\n\n        try {\n          resolve(getNext(buffer))\n        } catch (err) {\n          reject(err)\n        }\n\n        return pushable\n      }\n    })\n  }\n\n  const bufferNext = (next: Next<PushType>) => {\n    if (onNext != null) {\n      return onNext(next)\n    }\n\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = (err: Error) => {\n    buffer = new FIFO()\n\n    if (onNext != null) {\n      return onNext({ error: err })\n    }\n\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = (value: PushType) => {\n    if (ended) {\n      return pushable\n    }\n\n    // @ts-expect-error `byteLength` is not declared on PushType\n    if (options?.objectMode !== true && value?.byteLength == null) {\n      throw new Error('objectMode was not true but tried to push non-Uint8Array value')\n    }\n\n    return bufferNext({ done: false, value })\n  }\n  const end = (err?: Error) => {\n    if (ended) return pushable\n    ended = true\n\n    return (err != null) ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = () => {\n    buffer = new FIFO()\n    end()\n\n    return { done: true }\n  }\n  const _throw = (err: Error) => {\n    end(err)\n\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end,\n    get readableLength () {\n      return buffer.size\n    }\n  }\n\n  if (onEnd == null) {\n    return pushable\n  }\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err: Error) {\n      _pushable.throw(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n\n      if (onEnd != null) {\n        onEnd()\n        onEnd = undefined\n      }\n\n      return { done: true }\n    },\n    push,\n    end (err: Error) {\n      _pushable.end(err)\n\n      if (onEnd != null) {\n        onEnd(err)\n        onEnd = undefined\n      }\n\n      return pushable\n    },\n    get readableLength () {\n      return _pushable.readableLength\n    }\n  }\n\n  return pushable\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}