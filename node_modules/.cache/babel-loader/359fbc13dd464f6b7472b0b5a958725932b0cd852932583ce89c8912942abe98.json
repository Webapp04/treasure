{"ast":null,"code":"import _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\n/* eslint-disable no-unreachable */\n\nimport { TimeoutController } from 'timeout-abort-controller';\nimport { anySignal } from 'any-signal';\nimport parseDuration from 'parse-duration';\nimport { TimeoutError } from './errors.js';\n\n/**\n * @template {any[]} Args\n * @template {Promise<any> | AsyncIterable<any>} R - The return type of `fn`\n * @param {(...args:Args) => R} fn\n * @param {number} [optionsArgIndex]\n * @returns {(...args:Args) => R}\n */\nexport function withTimeoutOption(fn, optionsArgIndex) {\n  // eslint-disable-next-line\n  return (/** @returns {R} */function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var options = args[optionsArgIndex == null ? args.length - 1 : optionsArgIndex];\n      if (!options || !options.timeout) return fn.apply(void 0, args);\n      var timeout = typeof options.timeout === 'string' ? parseDuration(options.timeout) : options.timeout;\n      var controller = new TimeoutController(timeout);\n      options.signal = anySignal([options.signal, controller.signal]);\n      var fnRes = fn.apply(void 0, args);\n      // eslint-disable-next-line promise/param-names\n      var timeoutPromise = new Promise(function (_resolve, reject) {\n        controller.signal.addEventListener('abort', function () {\n          reject(new TimeoutError());\n        });\n      });\n      var start = Date.now();\n      var maybeThrowTimeoutError = function maybeThrowTimeoutError() {\n        if (controller.signal.aborted) {\n          throw new TimeoutError();\n        }\n        var timeTaken = Date.now() - start;\n\n        // if we have starved the event loop by adding microtasks, we could have\n        // timed out already but the TimeoutController will never know because it's\n        // setTimeout will not fire until we stop adding microtasks\n        if (timeTaken > timeout) {\n          controller.abort();\n          throw new TimeoutError();\n        }\n      };\n\n      // @ts-expect-error\n      if (fnRes[Symbol.asyncIterator]) {\n        // @ts-expect-error\n        return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var it, _yield$_awaitAsyncGen, value, done;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                // @ts-expect-error\n                it = fnRes[Symbol.asyncIterator]();\n                _context.prev = 1;\n              case 2:\n                if (!true) {\n                  _context.next = 15;\n                  break;\n                }\n                _context.next = 5;\n                return _awaitAsyncGenerator(Promise.race([it.next(), timeoutPromise]));\n              case 5:\n                _yield$_awaitAsyncGen = _context.sent;\n                value = _yield$_awaitAsyncGen.value;\n                done = _yield$_awaitAsyncGen.done;\n                if (!done) {\n                  _context.next = 10;\n                  break;\n                }\n                return _context.abrupt(\"break\", 15);\n              case 10:\n                maybeThrowTimeoutError();\n                _context.next = 13;\n                return value;\n              case 13:\n                _context.next = 2;\n                break;\n              case 15:\n                _context.next = 21;\n                break;\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](1);\n                maybeThrowTimeoutError();\n                throw _context.t0;\n              case 21:\n                _context.prev = 21;\n                controller.clear();\n                if (it.return) {\n                  it.return();\n                }\n                return _context.finish(21);\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[1, 17, 21, 25]]);\n        }))();\n      }\n\n      // @ts-expect-error\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return Promise.race([fnRes, timeoutPromise]);\n            case 3:\n              res = _context2.sent;\n              maybeThrowTimeoutError();\n              return _context2.abrupt(\"return\", res);\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              maybeThrowTimeoutError();\n              throw _context2.t0;\n            case 12:\n              _context2.prev = 12;\n              controller.clear();\n              return _context2.finish(12);\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 8, 12, 15]]);\n      }))();\n    }\n  );\n}","map":{"version":3,"names":["TimeoutController","anySignal","parseDuration","TimeoutError","withTimeoutOption","fn","optionsArgIndex","_len","arguments","length","args","Array","_key","options","timeout","apply","controller","signal","fnRes","timeoutPromise","Promise","_resolve","reject","addEventListener","start","Date","now","maybeThrowTimeoutError","aborted","timeTaken","abort","Symbol","asyncIterator","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","it","_yield$_awaitAsyncGen","value","done","wrap","_callee$","_context","prev","next","_awaitAsyncGenerator","race","sent","abrupt","t0","clear","return","finish","stop","_asyncToGenerator","_callee2","res","_callee2$","_context2"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core-utils/src/with-timeout-option.js"],"sourcesContent":["/* eslint-disable no-unreachable */\n\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { anySignal } from 'any-signal'\nimport parseDuration from 'parse-duration'\nimport { TimeoutError } from './errors.js'\n\n/**\n * @template {any[]} Args\n * @template {Promise<any> | AsyncIterable<any>} R - The return type of `fn`\n * @param {(...args:Args) => R} fn\n * @param {number} [optionsArgIndex]\n * @returns {(...args:Args) => R}\n */\nexport function withTimeoutOption (fn, optionsArgIndex) {\n  // eslint-disable-next-line\n  return /** @returns {R} */(/** @type {Args} */...args) => {\n    const options = args[optionsArgIndex == null ? args.length - 1 : optionsArgIndex]\n    if (!options || !options.timeout) return fn(...args)\n\n    const timeout = typeof options.timeout === 'string'\n      ? parseDuration(options.timeout)\n      : options.timeout\n\n    const controller = new TimeoutController(timeout)\n\n    options.signal = anySignal([options.signal, controller.signal])\n\n    const fnRes = fn(...args)\n    // eslint-disable-next-line promise/param-names\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      controller.signal.addEventListener('abort', () => {\n        reject(new TimeoutError())\n      })\n    })\n\n    const start = Date.now()\n\n    const maybeThrowTimeoutError = () => {\n      if (controller.signal.aborted) {\n        throw new TimeoutError()\n      }\n\n      const timeTaken = Date.now() - start\n\n      // if we have starved the event loop by adding microtasks, we could have\n      // timed out already but the TimeoutController will never know because it's\n      // setTimeout will not fire until we stop adding microtasks\n      if (timeTaken > timeout) {\n        controller.abort()\n        throw new TimeoutError()\n      }\n    }\n\n    // @ts-expect-error\n    if (fnRes[Symbol.asyncIterator]) {\n      // @ts-expect-error\n      return (async function * () {\n        // @ts-expect-error\n        const it = fnRes[Symbol.asyncIterator]()\n\n        try {\n          while (true) {\n            const { value, done } = await Promise.race([it.next(), timeoutPromise])\n\n            if (done) {\n              break\n            }\n\n            maybeThrowTimeoutError()\n\n            yield value\n          }\n        } catch (/** @type {any} */ err) {\n          maybeThrowTimeoutError()\n\n          throw err\n        } finally {\n          controller.clear()\n\n          if (it.return) {\n            it.return()\n          }\n        }\n      })()\n    }\n\n    // @ts-expect-error\n    return (async () => {\n      try {\n        const res = await Promise.race([fnRes, timeoutPromise])\n\n        maybeThrowTimeoutError()\n\n        return res\n      } catch (/** @type {any} */ err) {\n        maybeThrowTimeoutError()\n\n        throw err\n      } finally {\n        controller.clear()\n      }\n    })()\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}