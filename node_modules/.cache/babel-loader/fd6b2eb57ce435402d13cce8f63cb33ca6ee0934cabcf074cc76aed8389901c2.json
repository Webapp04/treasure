{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { logger } from '@libp2p/logger';\nimport { addLink } from './add-link.js';\nimport { decode } from '@ipld/dag-pb';\nvar log = logger('ipfs:mfs:utils:update-tree');\nvar defaultOptions = {\n  shardSplitThreshold: 1000\n};\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('./to-trail').MfsTrail} MfsTrail\n */\n\n/**\n * Loop backwards through the trail, replacing links of all components to update CIDs\n *\n * @param {MfsContext} context\n * @param {MfsTrail[]} trail\n * @param {object} options\n * @param {number} options.shardSplitThreshold\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n */\nexport function updateTree(_x, _x2, _x3) {\n  return _updateTree.apply(this, arguments);\n}\nfunction _updateTree() {\n  _updateTree = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(context, trail, options) {\n    var index, child, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, block, node, _cid, name, result, _child, cid;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = Object.assign({}, defaultOptions, options);\n          log('Trail', trail);\n          trail = trail.slice().reverse();\n          index = 0;\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 6;\n          _iterator = _asyncIterator(context.repo.blocks.getMany(trail.map(function (node) {\n            return node.cid;\n          })));\n        case 8:\n          _context.next = 10;\n          return _iterator.next();\n        case 10:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 26;\n            break;\n          }\n          block = _step.value;\n          node = decode(block);\n          _cid = trail[index].cid;\n          name = trail[index].name;\n          index++;\n          if (child) {\n            _context.next = 19;\n            break;\n          }\n          child = {\n            cid: _cid,\n            name: name,\n            size: block.length\n          };\n          return _context.abrupt(\"continue\", 23);\n        case 19:\n          _context.next = 21;\n          return addLink(context, {\n            parent: node,\n            name: child.name,\n            cid: child.cid,\n            // TODO vmx 2021-04-05: check what to do with the size\n            size: child.size,\n            flush: options.flush,\n            shardSplitThreshold: options.shardSplitThreshold,\n            hashAlg: options.hashAlg,\n            cidVersion: options.cidVersion\n          });\n        case 21:\n          result = _context.sent;\n          // new child for next loop\n          child = {\n            cid: result.cid,\n            name: name,\n            // TODO vmx 2021-04-05: check what to do with the size\n            size: result.size\n          };\n        case 23:\n          _iteratorAbruptCompletion = false;\n          _context.next = 8;\n          break;\n        case 26:\n          _context.next = 32;\n          break;\n        case 28:\n          _context.prev = 28;\n          _context.t0 = _context[\"catch\"](6);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 32:\n          _context.prev = 32;\n          _context.prev = 33;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 37;\n            break;\n          }\n          _context.next = 37;\n          return _iterator.return();\n        case 37:\n          _context.prev = 37;\n          if (!_didIteratorError) {\n            _context.next = 40;\n            break;\n          }\n          throw _iteratorError;\n        case 40:\n          return _context.finish(37);\n        case 41:\n          return _context.finish(32);\n        case 42:\n          // @ts-expect-error - child is possibly undefined\n          _child = child, cid = _child.cid;\n          log(\"Final CID \".concat(cid));\n          return _context.abrupt(\"return\", cid);\n        case 45:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[6, 28, 32, 42], [33,, 37, 41]]);\n  }));\n  return _updateTree.apply(this, arguments);\n}","map":{"version":3,"names":["logger","addLink","decode","log","defaultOptions","shardSplitThreshold","updateTree","_x","_x2","_x3","_updateTree","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","context","trail","options","index","child","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","block","node","_cid","name","result","_child","cid","wrap","_callee$","_context","prev","next","Object","assign","slice","reverse","_asyncIterator","repo","blocks","getMany","map","sent","done","value","size","length","abrupt","parent","flush","hashAlg","cidVersion","t0","return","finish","concat","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/files/utils/update-tree.js"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport { addLink } from './add-link.js'\nimport {\n  decode\n} from '@ipld/dag-pb'\n\nconst log = logger('ipfs:mfs:utils:update-tree')\n\nconst defaultOptions = {\n  shardSplitThreshold: 1000\n}\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('./to-trail').MfsTrail} MfsTrail\n */\n\n/**\n * Loop backwards through the trail, replacing links of all components to update CIDs\n *\n * @param {MfsContext} context\n * @param {MfsTrail[]} trail\n * @param {object} options\n * @param {number} options.shardSplitThreshold\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n */\nexport async function updateTree (context, trail, options) {\n  options = Object.assign({}, defaultOptions, options)\n\n  log('Trail', trail)\n  trail = trail.slice().reverse()\n\n  let index = 0\n  let child\n\n  for await (const block of context.repo.blocks.getMany(trail.map(node => node.cid))) {\n    const node = decode(block)\n    const cid = trail[index].cid\n    const name = trail[index].name\n    index++\n\n    if (!child) {\n      child = {\n        cid,\n        name,\n        size: block.length\n      }\n\n      continue\n    }\n\n    /** @type {{ cid: CID, size: number }} */\n    const result = await addLink(context, {\n      parent: node,\n      name: child.name,\n      cid: child.cid,\n      // TODO vmx 2021-04-05: check what to do with the size\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    })\n\n    // new child for next loop\n    child = {\n      cid: result.cid,\n      name,\n      // TODO vmx 2021-04-05: check what to do with the size\n      size: result.size\n    }\n  }\n\n  // @ts-expect-error - child is possibly undefined\n  const { cid } = child\n  log(`Final CID ${cid}`)\n\n  return cid\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}