{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _objectWithoutProperties = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nvar _classCallCheck = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _excluded = [\"separator\", \"manifest\"];\nvar ModuleError = require('module-error');\nvar _ref = require('buffer') || {},\n  Buffer = _ref.Buffer;\nvar _require = require('./abstract-sublevel-iterator'),\n  AbstractSublevelIterator = _require.AbstractSublevelIterator,\n  AbstractSublevelKeyIterator = _require.AbstractSublevelKeyIterator,\n  AbstractSublevelValueIterator = _require.AbstractSublevelValueIterator;\nvar kPrefix = Symbol('prefix');\nvar kUpperBound = Symbol('upperBound');\nvar kPrefixRange = Symbol('prefixRange');\nvar kParent = Symbol('parent');\nvar kUnfix = Symbol('unfix');\nvar textEncoder = new TextEncoder();\nvar _defaults = {\n  separator: '!'\n};\n\n// Wrapped to avoid circular dependency\nmodule.exports = function (_ref2) {\n  var AbstractLevel = _ref2.AbstractLevel;\n  var AbstractSublevel = /*#__PURE__*/function (_AbstractLevel) {\n    _inherits(AbstractSublevel, _AbstractLevel);\n    var _super = _createSuper(AbstractSublevel);\n    // TODO: add autoClose option, which if true, does parent.attachResource(this)\n    function AbstractSublevel(db, name, options) {\n      var _this;\n      _classCallCheck(this, AbstractSublevel);\n      // Don't forward AbstractSublevel options to AbstractLevel\n      var _AbstractSublevel$def = AbstractSublevel.defaults(options),\n        separator = _AbstractSublevel$def.separator,\n        manifest = _AbstractSublevel$def.manifest,\n        forward = _objectWithoutProperties(_AbstractSublevel$def, _excluded);\n      name = trim(name, separator);\n\n      // Reserve one character between separator and name to give us an upper bound\n      var reserved = separator.charCodeAt(0) + 1;\n      var parent = db[kParent] || db;\n\n      // Keys should sort like ['!a!', '!a!!a!', '!a\"', '!aa!', '!b!'].\n      // Use ASCII for consistent length between string, Buffer and Uint8Array\n      if (!textEncoder.encode(name).every(function (x) {\n        return x > reserved && x < 127;\n      })) {\n        throw new ModuleError(\"Prefix must use bytes > \".concat(reserved, \" < \", 127), {\n          code: 'LEVEL_INVALID_PREFIX'\n        });\n      }\n      _this = _super.call(this, mergeManifests(parent, manifest), forward);\n      var prefix = (db.prefix || '') + separator + name + separator;\n      var upperBound = prefix.slice(0, -1) + String.fromCharCode(reserved);\n      _this[kParent] = parent;\n      _this[kPrefix] = new MultiFormat(prefix);\n      _this[kUpperBound] = new MultiFormat(upperBound);\n      _this[kUnfix] = new Unfixer();\n      _this.nextTick = parent.nextTick;\n      return _this;\n    }\n    _createClass(AbstractSublevel, [{\n      key: \"prefixKey\",\n      value: function prefixKey(key, keyFormat) {\n        if (keyFormat === 'utf8') {\n          return this[kPrefix].utf8 + key;\n        } else if (key.byteLength === 0) {\n          // Fast path for empty key (no copy)\n          return this[kPrefix][keyFormat];\n        } else if (keyFormat === 'view') {\n          var view = this[kPrefix].view;\n          var result = new Uint8Array(view.byteLength + key.byteLength);\n          result.set(view, 0);\n          result.set(key, view.byteLength);\n          return result;\n        } else {\n          var buffer = this[kPrefix].buffer;\n          return Buffer.concat([buffer, key], buffer.byteLength + key.byteLength);\n        }\n      }\n\n      // Not exposed for now.\n    }, {\n      key: kPrefixRange,\n      value: function value(range, keyFormat) {\n        if (range.gte !== undefined) {\n          range.gte = this.prefixKey(range.gte, keyFormat);\n        } else if (range.gt !== undefined) {\n          range.gt = this.prefixKey(range.gt, keyFormat);\n        } else {\n          range.gte = this[kPrefix][keyFormat];\n        }\n        if (range.lte !== undefined) {\n          range.lte = this.prefixKey(range.lte, keyFormat);\n        } else if (range.lt !== undefined) {\n          range.lt = this.prefixKey(range.lt, keyFormat);\n        } else {\n          range.lte = this[kUpperBound][keyFormat];\n        }\n      }\n    }, {\n      key: \"prefix\",\n      get: function get() {\n        return this[kPrefix].utf8;\n      }\n    }, {\n      key: \"db\",\n      get: function get() {\n        return this[kParent];\n      }\n    }, {\n      key: \"_open\",\n      value: function _open(options, callback) {\n        // The parent db must open itself or be (re)opened by the user because\n        // a sublevel should not initiate state changes on the rest of the db.\n        this[kParent].open({\n          passive: true\n        }, callback);\n      }\n    }, {\n      key: \"_put\",\n      value: function _put(key, value, options, callback) {\n        this[kParent].put(key, value, options, callback);\n      }\n    }, {\n      key: \"_get\",\n      value: function _get(key, options, callback) {\n        this[kParent].get(key, options, callback);\n      }\n    }, {\n      key: \"_getMany\",\n      value: function _getMany(keys, options, callback) {\n        this[kParent].getMany(keys, options, callback);\n      }\n    }, {\n      key: \"_del\",\n      value: function _del(key, options, callback) {\n        this[kParent].del(key, options, callback);\n      }\n    }, {\n      key: \"_batch\",\n      value: function _batch(operations, options, callback) {\n        this[kParent].batch(operations, options, callback);\n      }\n    }, {\n      key: \"_clear\",\n      value: function _clear(options, callback) {\n        // TODO (refactor): move to AbstractLevel\n        this[kPrefixRange](options, options.keyEncoding);\n        this[kParent].clear(options, callback);\n      }\n    }, {\n      key: \"_iterator\",\n      value: function _iterator(options) {\n        // TODO (refactor): move to AbstractLevel\n        this[kPrefixRange](options, options.keyEncoding);\n        var iterator = this[kParent].iterator(options);\n        var unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding);\n        return new AbstractSublevelIterator(this, options, iterator, unfix);\n      }\n    }, {\n      key: \"_keys\",\n      value: function _keys(options) {\n        this[kPrefixRange](options, options.keyEncoding);\n        var iterator = this[kParent].keys(options);\n        var unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding);\n        return new AbstractSublevelKeyIterator(this, options, iterator, unfix);\n      }\n    }, {\n      key: \"_values\",\n      value: function _values(options) {\n        this[kPrefixRange](options, options.keyEncoding);\n        var iterator = this[kParent].values(options);\n        return new AbstractSublevelValueIterator(this, options, iterator);\n      }\n    }], [{\n      key: \"defaults\",\n      value: function defaults(options) {\n        // To help migrating from subleveldown to abstract-level\n        if (typeof options === 'string') {\n          throw new ModuleError('The subleveldown string shorthand for { separator } has been removed', {\n            code: 'LEVEL_LEGACY'\n          });\n        } else if (options && options.open) {\n          throw new ModuleError('The subleveldown open option has been removed', {\n            code: 'LEVEL_LEGACY'\n          });\n        }\n        if (options == null) {\n          return _defaults;\n        } else if (!options.separator) {\n          return _objectSpread(_objectSpread({}, options), {}, {\n            separator: '!'\n          });\n        } else {\n          return options;\n        }\n      }\n    }]);\n    return AbstractSublevel;\n  }(AbstractLevel);\n  return {\n    AbstractSublevel: AbstractSublevel\n  };\n};\nvar mergeManifests = function mergeManifests(parent, manifest) {\n  return _objectSpread(_objectSpread(_objectSpread({}, parent.supports), {}, {\n    // Disable unsupported features\n    createIfMissing: false,\n    errorIfExists: false,\n    // Unset additional events because we're not forwarding them\n    events: {},\n    // Unset additional methods (like approximateSize) which we can't support here unless\n    // the AbstractSublevel class is overridden by an implementation of `abstract-level`.\n    additionalMethods: {}\n  }, manifest), {}, {\n    encodings: {\n      utf8: supportsEncoding(parent, 'utf8'),\n      buffer: supportsEncoding(parent, 'buffer'),\n      view: supportsEncoding(parent, 'view')\n    }\n  });\n};\nvar supportsEncoding = function supportsEncoding(parent, encoding) {\n  // Prefer a non-transcoded encoding for optimal performance\n  return parent.supports.encodings[encoding] ? parent.keyEncoding(encoding).name === encoding : false;\n};\nvar MultiFormat = /*#__PURE__*/_createClass(function MultiFormat(key) {\n  _classCallCheck(this, MultiFormat);\n  this.utf8 = key;\n  this.view = textEncoder.encode(key);\n  this.buffer = Buffer ? Buffer.from(this.view.buffer, 0, this.view.byteLength) : {};\n});\nvar Unfixer = /*#__PURE__*/function () {\n  function Unfixer() {\n    _classCallCheck(this, Unfixer);\n    this.cache = new Map();\n  }\n  _createClass(Unfixer, [{\n    key: \"get\",\n    value: function get(prefixLength, keyFormat) {\n      var unfix = this.cache.get(keyFormat);\n      if (unfix === undefined) {\n        if (keyFormat === 'view') {\n          unfix = function (prefixLength, key) {\n            // Avoid Uint8Array#slice() because it copies\n            return key.subarray(prefixLength);\n          }.bind(null, prefixLength);\n        } else {\n          unfix = function (prefixLength, key) {\n            // Avoid Buffer#subarray() because it's slow\n            return key.slice(prefixLength);\n          }.bind(null, prefixLength);\n        }\n        this.cache.set(keyFormat, unfix);\n      }\n      return unfix;\n    }\n  }]);\n  return Unfixer;\n}();\nvar trim = function trim(str, char) {\n  var start = 0;\n  var end = str.length;\n  while (start < end && str[start] === char) start++;\n  while (end > start && str[end - 1] === char) end--;\n  return str.slice(start, end);\n};","map":{"version":3,"names":["_objectSpread","require","default","_objectWithoutProperties","_classCallCheck","_createClass","_inherits","_createSuper","_excluded","ModuleError","_ref","Buffer","_require","AbstractSublevelIterator","AbstractSublevelKeyIterator","AbstractSublevelValueIterator","kPrefix","Symbol","kUpperBound","kPrefixRange","kParent","kUnfix","textEncoder","TextEncoder","defaults","separator","module","exports","_ref2","AbstractLevel","AbstractSublevel","_AbstractLevel","_super","db","name","options","_this","_AbstractSublevel$def","manifest","forward","trim","reserved","charCodeAt","parent","encode","every","x","concat","code","call","mergeManifests","prefix","upperBound","slice","String","fromCharCode","MultiFormat","Unfixer","nextTick","key","value","prefixKey","keyFormat","utf8","byteLength","view","result","Uint8Array","set","buffer","range","gte","undefined","gt","lte","lt","get","_open","callback","open","passive","_put","put","_get","_getMany","keys","getMany","_del","del","_batch","operations","batch","_clear","keyEncoding","clear","_iterator","iterator","unfix","length","_keys","_values","values","supports","createIfMissing","errorIfExists","events","additionalMethods","encodings","supportsEncoding","encoding","from","cache","Map","prefixLength","subarray","bind","str","char","start","end"],"sources":["/Users/apple/Documents/treasure/node_modules/abstract-level/lib/abstract-sublevel.js"],"sourcesContent":["'use strict'\n\nconst ModuleError = require('module-error')\nconst { Buffer } = require('buffer') || {}\nconst {\n  AbstractSublevelIterator,\n  AbstractSublevelKeyIterator,\n  AbstractSublevelValueIterator\n} = require('./abstract-sublevel-iterator')\n\nconst kPrefix = Symbol('prefix')\nconst kUpperBound = Symbol('upperBound')\nconst kPrefixRange = Symbol('prefixRange')\nconst kParent = Symbol('parent')\nconst kUnfix = Symbol('unfix')\n\nconst textEncoder = new TextEncoder()\nconst defaults = { separator: '!' }\n\n// Wrapped to avoid circular dependency\nmodule.exports = function ({ AbstractLevel }) {\n  class AbstractSublevel extends AbstractLevel {\n    static defaults (options) {\n      // To help migrating from subleveldown to abstract-level\n      if (typeof options === 'string') {\n        throw new ModuleError('The subleveldown string shorthand for { separator } has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      } else if (options && options.open) {\n        throw new ModuleError('The subleveldown open option has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      }\n\n      if (options == null) {\n        return defaults\n      } else if (!options.separator) {\n        return { ...options, separator: '!' }\n      } else {\n        return options\n      }\n    }\n\n    // TODO: add autoClose option, which if true, does parent.attachResource(this)\n    constructor (db, name, options) {\n      // Don't forward AbstractSublevel options to AbstractLevel\n      const { separator, manifest, ...forward } = AbstractSublevel.defaults(options)\n      name = trim(name, separator)\n\n      // Reserve one character between separator and name to give us an upper bound\n      const reserved = separator.charCodeAt(0) + 1\n      const parent = db[kParent] || db\n\n      // Keys should sort like ['!a!', '!a!!a!', '!a\"', '!aa!', '!b!'].\n      // Use ASCII for consistent length between string, Buffer and Uint8Array\n      if (!textEncoder.encode(name).every(x => x > reserved && x < 127)) {\n        throw new ModuleError(`Prefix must use bytes > ${reserved} < ${127}`, {\n          code: 'LEVEL_INVALID_PREFIX'\n        })\n      }\n\n      super(mergeManifests(parent, manifest), forward)\n\n      const prefix = (db.prefix || '') + separator + name + separator\n      const upperBound = prefix.slice(0, -1) + String.fromCharCode(reserved)\n\n      this[kParent] = parent\n      this[kPrefix] = new MultiFormat(prefix)\n      this[kUpperBound] = new MultiFormat(upperBound)\n      this[kUnfix] = new Unfixer()\n\n      this.nextTick = parent.nextTick\n    }\n\n    prefixKey (key, keyFormat) {\n      if (keyFormat === 'utf8') {\n        return this[kPrefix].utf8 + key\n      } else if (key.byteLength === 0) {\n        // Fast path for empty key (no copy)\n        return this[kPrefix][keyFormat]\n      } else if (keyFormat === 'view') {\n        const view = this[kPrefix].view\n        const result = new Uint8Array(view.byteLength + key.byteLength)\n\n        result.set(view, 0)\n        result.set(key, view.byteLength)\n\n        return result\n      } else {\n        const buffer = this[kPrefix].buffer\n        return Buffer.concat([buffer, key], buffer.byteLength + key.byteLength)\n      }\n    }\n\n    // Not exposed for now.\n    [kPrefixRange] (range, keyFormat) {\n      if (range.gte !== undefined) {\n        range.gte = this.prefixKey(range.gte, keyFormat)\n      } else if (range.gt !== undefined) {\n        range.gt = this.prefixKey(range.gt, keyFormat)\n      } else {\n        range.gte = this[kPrefix][keyFormat]\n      }\n\n      if (range.lte !== undefined) {\n        range.lte = this.prefixKey(range.lte, keyFormat)\n      } else if (range.lt !== undefined) {\n        range.lt = this.prefixKey(range.lt, keyFormat)\n      } else {\n        range.lte = this[kUpperBound][keyFormat]\n      }\n    }\n\n    get prefix () {\n      return this[kPrefix].utf8\n    }\n\n    get db () {\n      return this[kParent]\n    }\n\n    _open (options, callback) {\n      // The parent db must open itself or be (re)opened by the user because\n      // a sublevel should not initiate state changes on the rest of the db.\n      this[kParent].open({ passive: true }, callback)\n    }\n\n    _put (key, value, options, callback) {\n      this[kParent].put(key, value, options, callback)\n    }\n\n    _get (key, options, callback) {\n      this[kParent].get(key, options, callback)\n    }\n\n    _getMany (keys, options, callback) {\n      this[kParent].getMany(keys, options, callback)\n    }\n\n    _del (key, options, callback) {\n      this[kParent].del(key, options, callback)\n    }\n\n    _batch (operations, options, callback) {\n      this[kParent].batch(operations, options, callback)\n    }\n\n    _clear (options, callback) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      this[kParent].clear(options, callback)\n    }\n\n    _iterator (options) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].iterator(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelIterator(this, options, iterator, unfix)\n    }\n\n    _keys (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].keys(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelKeyIterator(this, options, iterator, unfix)\n    }\n\n    _values (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].values(options)\n      return new AbstractSublevelValueIterator(this, options, iterator)\n    }\n  }\n\n  return { AbstractSublevel }\n}\n\nconst mergeManifests = function (parent, manifest) {\n  return {\n    // Inherit manifest of parent db\n    ...parent.supports,\n\n    // Disable unsupported features\n    createIfMissing: false,\n    errorIfExists: false,\n\n    // Unset additional events because we're not forwarding them\n    events: {},\n\n    // Unset additional methods (like approximateSize) which we can't support here unless\n    // the AbstractSublevel class is overridden by an implementation of `abstract-level`.\n    additionalMethods: {},\n\n    // Inherit manifest of custom AbstractSublevel subclass. Such a class is not\n    // allowed to override encodings.\n    ...manifest,\n\n    encodings: {\n      utf8: supportsEncoding(parent, 'utf8'),\n      buffer: supportsEncoding(parent, 'buffer'),\n      view: supportsEncoding(parent, 'view')\n    }\n  }\n}\n\nconst supportsEncoding = function (parent, encoding) {\n  // Prefer a non-transcoded encoding for optimal performance\n  return parent.supports.encodings[encoding]\n    ? parent.keyEncoding(encoding).name === encoding\n    : false\n}\n\nclass MultiFormat {\n  constructor (key) {\n    this.utf8 = key\n    this.view = textEncoder.encode(key)\n    this.buffer = Buffer ? Buffer.from(this.view.buffer, 0, this.view.byteLength) : {}\n  }\n}\n\nclass Unfixer {\n  constructor () {\n    this.cache = new Map()\n  }\n\n  get (prefixLength, keyFormat) {\n    let unfix = this.cache.get(keyFormat)\n\n    if (unfix === undefined) {\n      if (keyFormat === 'view') {\n        unfix = function (prefixLength, key) {\n          // Avoid Uint8Array#slice() because it copies\n          return key.subarray(prefixLength)\n        }.bind(null, prefixLength)\n      } else {\n        unfix = function (prefixLength, key) {\n          // Avoid Buffer#subarray() because it's slow\n          return key.slice(prefixLength)\n        }.bind(null, prefixLength)\n      }\n\n      this.cache.set(keyFormat, unfix)\n    }\n\n    return unfix\n  }\n}\n\nconst trim = function (str, char) {\n  let start = 0\n  let end = str.length\n\n  while (start < end && str[start] === char) start++\n  while (end > start && str[end - 1] === char) end--\n\n  return str.slice(start, end)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}