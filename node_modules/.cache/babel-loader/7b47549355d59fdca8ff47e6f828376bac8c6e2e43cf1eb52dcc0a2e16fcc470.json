{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as dagPB from '@ipld/dag-pb';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createGet(_ref) {\n  var repo = _ref.repo,\n    preload = _ref.preload;\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"get\"]}\n   */\n  function get(_x) {\n    return _get.apply(this, arguments);\n  }\n  function _get() {\n    _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var options,\n        block,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            // eslint-disable-line require-await\n            if (options.preload !== false) {\n              preload(cid);\n            }\n            _context.next = 4;\n            return repo.blocks.get(cid, options);\n          case 4:\n            block = _context.sent;\n            return _context.abrupt(\"return\", dagPB.decode(block));\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _get.apply(this, arguments);\n  }\n  return withTimeoutOption(get);\n}","map":{"version":3,"names":["dagPB","withTimeoutOption","createGet","_ref","repo","preload","get","_x","_get","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cid","options","block","_args","wrap","_callee$","_context","prev","next","length","undefined","blocks","sent","abrupt","decode","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/object/get.js"],"sourcesContent":["import * as dagPB from '@ipld/dag-pb'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createGet ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid, options)\n\n    return dagPB.decode(block)\n  }\n\n  return withTimeoutOption(get)\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,cAAc;AACrC,SAASC,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAAC,IAAA,EAAqB;EAAA,IAAjBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EACxC;AACF;AACA;EAFE,SAGeC,GAAGA,CAAAC,EAAA;IAAA,OAAAC,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,KAAA;IAAAA,IAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAlB,SAAAC,QAAoBC,GAAG;MAAA,IAAAC,OAAA;QAAAC,KAAA;QAAAC,KAAA,GAAAR,SAAA;MAAA,OAAAE,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEP,OAAO,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAI;YACvC,IAAIF,OAAO,CAACX,OAAO,KAAK,KAAK,EAAE;cAC7BA,OAAO,CAACU,GAAG,CAAC;YACd;YAACM,QAAA,CAAAE,IAAA;YAAA,OAEmBnB,IAAI,CAACsB,MAAM,CAACpB,GAAG,CAACS,GAAG,EAAEC,OAAO,CAAC;UAAA;YAA3CC,KAAK,GAAAI,QAAA,CAAAM,IAAA;YAAA,OAAAN,QAAA,CAAAO,MAAA,WAEJ5B,KAAK,CAAC6B,MAAM,CAACZ,KAAK,CAAC;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAhB,OAAA;IAAA,CAC3B;IAAA,OAAAN,IAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOT,iBAAiB,CAACK,GAAG,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}