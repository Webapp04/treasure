{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// dns-nodejs gets replaced by dns-browser when bundled\nimport { resolveDnslink } from 'ipfs-core-config/dns';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {string} domain\n * @returns {string}\n */\nfunction fqdnFixups(domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link');\n  }\n  return domain;\n}\nexport function createDns() {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"dns\"]}\n   */\n  var resolveDNS = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(domain) {\n      var options,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {\n              recursive: true\n            };\n            if (!(typeof domain !== 'string')) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error('Invalid arguments, domain must be a string');\n          case 3:\n            domain = fqdnFixups(domain);\n            return _context.abrupt(\"return\", resolveDnslink(domain, options));\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function resolveDNS(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return withTimeoutOption(resolveDNS);\n}","map":{"version":3,"names":["resolveDnslink","withTimeoutOption","fqdnFixups","domain","endsWith","replace","createDns","resolveDNS","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","recursive","Error","abrupt","stop","_x","apply"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/dns.js"],"sourcesContent":["// dns-nodejs gets replaced by dns-browser when bundled\nimport { resolveDnslink } from 'ipfs-core-config/dns'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {string} domain\n * @returns {string}\n */\nfunction fqdnFixups (domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link')\n  }\n  return domain\n}\n\nexport function createDns () {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"dns\"]}\n   */\n  const resolveDNS = async (domain, options = { recursive: true }) => { // eslint-disable-line require-await\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string')\n    }\n\n    domain = fqdnFixups(domain)\n\n    return resolveDnslink(domain, options)\n  }\n\n  return withTimeoutOption(resolveDNS)\n}\n"],"mappings":";;AAAA;AACA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,SAASC,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAAEC,MAAM,EAAE;EAC3B;EACA;EACA,IAAIA,MAAM,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC3BD,MAAM,GAAGA,MAAM,CAACE,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC;EAC/C;EACA,OAAOF,MAAM;AACf;AAEA,OAAO,SAASG,SAASA,CAAA,EAAI;EAC3B;AACF;AACA;EACE,IAAMC,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOT,MAAM;MAAA,IAAAU,OAAA;QAAAC,KAAA,GAAAC,SAAA;MAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEP,OAAO,GAAAC,KAAA,CAAAO,MAAA,QAAAP,KAAA,QAAAQ,SAAA,GAAAR,KAAA,MAAG;cAAES,SAAS,EAAE;YAAK,CAAC;YAAA,MACzD,OAAOpB,MAAM,KAAK,QAAQ;cAAAe,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,MACtB,IAAII,KAAK,CAAC,4CAA4C,CAAC;UAAA;YAG/DrB,MAAM,GAAGD,UAAU,CAACC,MAAM,CAAC;YAAA,OAAAe,QAAA,CAAAO,MAAA,WAEpBzB,cAAc,CAACG,MAAM,EAAEU,OAAO,CAAC;UAAA;UAAA;YAAA,OAAAK,QAAA,CAAAQ,IAAA;QAAA;MAAA,GAAAd,OAAA;IAAA,CACvC;IAAA,gBARKL,UAAUA,CAAAoB,EAAA;MAAA,OAAAnB,IAAA,CAAAoB,KAAA,OAAAb,SAAA;IAAA;EAAA,GAQf;EAED,OAAOd,iBAAiB,CAACM,UAAU,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}