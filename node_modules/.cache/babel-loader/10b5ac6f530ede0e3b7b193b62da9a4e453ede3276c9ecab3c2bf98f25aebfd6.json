{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport debug from 'debug';\nimport { CONFIG_KEY, VERSION_KEY } from '../utils.js';\nimport { MissingRepoOptionsError } from '../errors.js';\nvar log = debug('ipfs:repo:migrator:repo:init');\n\n/**\n * @param {import('../types').Backends} backends\n */\nexport function isRepoInitialized(_x) {\n  return _isRepoInitialized.apply(this, arguments);\n}\nfunction _isRepoInitialized() {\n  _isRepoInitialized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(backends) {\n    var root, versionCheck, configCheck;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (backends) {\n            _context.next = 2;\n            break;\n          }\n          throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n        case 2:\n          root = backends.root;\n          _context.prev = 3;\n          _context.next = 6;\n          return root.open();\n        case 6:\n          _context.next = 8;\n          return root.has(VERSION_KEY);\n        case 8:\n          versionCheck = _context.sent;\n          _context.next = 11;\n          return root.has(CONFIG_KEY);\n        case 11:\n          configCheck = _context.sent;\n          if (!(!versionCheck || !configCheck)) {\n            _context.next = 16;\n            break;\n          }\n          log(\"Version entry present: \".concat(versionCheck));\n          log(\"Config entry present: \".concat(configCheck));\n          return _context.abrupt(\"return\", false);\n        case 16:\n          return _context.abrupt(\"return\", true);\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](3);\n          log('While checking if repo is initialized error was thrown: ' + _context.t0.message);\n          return _context.abrupt(\"return\", false);\n        case 23:\n          _context.prev = 23;\n          if (!(root !== undefined)) {\n            _context.next = 32;\n            break;\n          }\n          _context.prev = 25;\n          _context.next = 28;\n          return root.close();\n        case 28:\n          _context.next = 32;\n          break;\n        case 30:\n          _context.prev = 30;\n          _context.t1 = _context[\"catch\"](25);\n        case 32:\n          return _context.finish(23);\n        case 33:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3, 19, 23, 33], [25, 30]]);\n  }));\n  return _isRepoInitialized.apply(this, arguments);\n}","map":{"version":3,"names":["debug","CONFIG_KEY","VERSION_KEY","MissingRepoOptionsError","log","isRepoInitialized","_x","_isRepoInitialized","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","backends","root","versionCheck","configCheck","wrap","_callee$","_context","prev","next","open","has","sent","concat","abrupt","t0","message","undefined","close","t1","finish","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo-migrations/src/repo/init.js"],"sourcesContent":["\nimport debug from 'debug'\nimport { CONFIG_KEY, VERSION_KEY } from '../utils.js'\nimport { MissingRepoOptionsError } from '../errors.js'\n\nconst log = debug('ipfs:repo:migrator:repo:init')\n\n/**\n * @param {import('../types').Backends} backends\n */\nexport async function isRepoInitialized (backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const root = backends.root\n\n  try {\n    await root.open()\n    const versionCheck = await root.has(VERSION_KEY)\n    const configCheck = await root.has(CONFIG_KEY)\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`)\n      log(`Config entry present: ${configCheck}`)\n      return false\n    }\n\n    return true\n  } catch (/** @type {any} */ e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message)\n    return false\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close()\n      } catch {}\n    }\n  }\n}\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,WAAW,QAAQ,aAAa;AACrD,SAASC,uBAAuB,QAAQ,cAAc;AAEtD,IAAMC,GAAG,GAAGJ,KAAK,CAAC,8BAA8B,CAAC;;AAEjD;AACA;AACA;AACA,gBAAsBK,iBAAiBA,CAAAC,EAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AA4BtC,SAAAF,mBAAA;EAAAA,kBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CA5BM,SAAAC,QAAkCC,QAAQ;IAAA,IAAAC,IAAA,EAAAC,YAAA,EAAAC,WAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,IAC1CR,QAAQ;YAAAM,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACL,IAAInB,uBAAuB,CAAC,qDAAqD,CAAC;QAAA;UAGpFY,IAAI,GAAGD,QAAQ,CAACC,IAAI;UAAAK,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAGlBP,IAAI,CAACQ,IAAI,CAAC,CAAC;QAAA;UAAAH,QAAA,CAAAE,IAAA;UAAA,OACUP,IAAI,CAACS,GAAG,CAACtB,WAAW,CAAC;QAAA;UAA1Cc,YAAY,GAAAI,QAAA,CAAAK,IAAA;UAAAL,QAAA,CAAAE,IAAA;UAAA,OACQP,IAAI,CAACS,GAAG,CAACvB,UAAU,CAAC;QAAA;UAAxCgB,WAAW,GAAAG,QAAA,CAAAK,IAAA;UAAA,MACb,CAACT,YAAY,IAAI,CAACC,WAAW;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;UAC/BlB,GAAG,2BAAAsB,MAAA,CAA2BV,YAAY,CAAE,CAAC;UAC7CZ,GAAG,0BAAAsB,MAAA,CAA0BT,WAAW,CAAE,CAAC;UAAA,OAAAG,QAAA,CAAAO,MAAA,WACpC,KAAK;QAAA;UAAA,OAAAP,QAAA,CAAAO,MAAA,WAGP,IAAI;QAAA;UAAAP,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAQ,EAAA,GAAAR,QAAA;UAEXhB,GAAG,CAAC,0DAA0D,GAAGgB,QAAA,CAAAQ,EAAA,CAAEC,OAAO,CAAC;UAAA,OAAAT,QAAA,CAAAO,MAAA,WACpE,KAAK;QAAA;UAAAP,QAAA,CAAAC,IAAA;UAAA,MAERN,IAAI,KAAKe,SAAS;YAAAV,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAEZP,IAAI,CAACgB,KAAK,CAAC,CAAC;QAAA;UAAAX,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;QAAA;UAAA,OAAAA,QAAA,CAAAa,MAAA;QAAA;QAAA;UAAA,OAAAb,QAAA,CAAAc,IAAA;MAAA;IAAA,GAAArB,OAAA;EAAA,CAIzB;EAAA,OAAAN,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}