{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Message } from '../../message/index.js';\nimport { logger } from '@libp2p/logger';\nimport { removePrivateAddresses, removePublicAddresses } from '../../utils.js';\nimport { equals as uint8ArrayEquals } from 'uint8arrays';\nimport { Components } from '@libp2p/components';\nimport { protocols } from '@multiformats/multiaddr';\nvar log = logger('libp2p:kad-dht:rpc:handlers:find-node');\nexport var FindNodeHandler = /*#__PURE__*/function () {\n  function FindNodeHandler(init) {\n    _classCallCheck(this, FindNodeHandler);\n    this.components = new Components();\n    var peerRouting = init.peerRouting,\n      lan = init.lan;\n    this.peerRouting = peerRouting;\n    this.lan = Boolean(lan);\n  }\n  _createClass(FindNodeHandler, [{\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n    }\n    /**\n     * Process `FindNode` DHT messages\n     */\n  }, {\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId, msg) {\n        var closer, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              log('incoming request from %p for peers closer to %b', peerId, msg.key);\n              closer = [];\n              if (!uint8ArrayEquals(this.components.getPeerId().toBytes(), msg.key)) {\n                _context.next = 6;\n                break;\n              }\n              closer = [{\n                id: this.components.getPeerId(),\n                multiaddrs: this.components.getAddressManager().getAddresses().map(function (ma) {\n                  return ma.decapsulateCode(protocols('p2p').code);\n                }),\n                protocols: []\n              }];\n              _context.next = 9;\n              break;\n            case 6:\n              _context.next = 8;\n              return this.peerRouting.getCloserPeersOffline(msg.key, peerId);\n            case 8:\n              closer = _context.sent;\n            case 9:\n              closer = closer.map(this.lan ? removePublicAddresses : removePrivateAddresses).filter(function (_ref) {\n                var multiaddrs = _ref.multiaddrs;\n                return multiaddrs.length;\n              });\n              response = new Message(msg.type, new Uint8Array(0), msg.clusterLevel);\n              if (closer.length > 0) {\n                response.closerPeers = closer;\n              } else {\n                log('could not find any peers closer to %b than %p', msg.key, peerId);\n              }\n              return _context.abrupt(\"return\", response);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function handle(_x, _x2) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }]);\n  return FindNodeHandler;\n}();","map":{"version":3,"names":["Message","logger","removePrivateAddresses","removePublicAddresses","equals","uint8ArrayEquals","Components","protocols","log","FindNodeHandler","init","_classCallCheck","components","peerRouting","lan","Boolean","_createClass","key","value","_handle","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peerId","msg","closer","response","wrap","_callee$","_context","prev","next","getPeerId","toBytes","id","multiaddrs","getAddressManager","getAddresses","map","ma","decapsulateCode","code","getCloserPeersOffline","sent","filter","_ref","length","type","Uint8Array","clusterLevel","closerPeers","abrupt","stop","handle","_x","_x2","apply","arguments"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/rpc/handlers/find-node.ts"],"sourcesContent":["import { Message } from '../../message/index.js'\nimport { logger } from '@libp2p/logger'\nimport {\n  removePrivateAddresses,\n  removePublicAddresses\n} from '../../utils.js'\nimport { equals as uint8ArrayEquals } from 'uint8arrays'\nimport { Components } from '@libp2p/components'\nimport { protocols } from '@multiformats/multiaddr'\nimport type { Initializable } from '@libp2p/components'\nimport type { PeerInfo } from '@libp2p/interface-peer-info'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { PeerRouting } from '../../peer-routing/index.js'\nimport type { PeerId } from '@libp2p/interface-peer-id'\n\nconst log = logger('libp2p:kad-dht:rpc:handlers:find-node')\n\nexport interface FindNodeHandlerInit {\n  peerRouting: PeerRouting\n  lan: boolean\n}\n\nexport class FindNodeHandler implements DHTMessageHandler, Initializable {\n  private readonly peerRouting: PeerRouting\n  private readonly lan: boolean\n  private components = new Components()\n\n  constructor (init: FindNodeHandlerInit) {\n    const { peerRouting, lan } = init\n    this.peerRouting = peerRouting\n    this.lan = Boolean(lan)\n  }\n\n  init (components: Components): void {\n    this.components = components\n  }\n\n  /**\n   * Process `FindNode` DHT messages\n   */\n  async handle (peerId: PeerId, msg: Message) {\n    log('incoming request from %p for peers closer to %b', peerId, msg.key)\n\n    let closer: PeerInfo[] = []\n\n    if (uint8ArrayEquals(this.components.getPeerId().toBytes(), msg.key)) {\n      closer = [{\n        id: this.components.getPeerId(),\n        multiaddrs: this.components.getAddressManager().getAddresses().map(ma => ma.decapsulateCode(protocols('p2p').code)),\n        protocols: []\n      }]\n    } else {\n      closer = await this.peerRouting.getCloserPeersOffline(msg.key, peerId)\n    }\n\n    closer = closer\n      .map(this.lan ? removePublicAddresses : removePrivateAddresses)\n      .filter(({ multiaddrs }) => multiaddrs.length)\n\n    const response = new Message(msg.type, new Uint8Array(0), msg.clusterLevel)\n\n    if (closer.length > 0) {\n      response.closerPeers = closer\n    } else {\n      log('could not find any peers closer to %b than %p', msg.key, peerId)\n    }\n\n    return response\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}