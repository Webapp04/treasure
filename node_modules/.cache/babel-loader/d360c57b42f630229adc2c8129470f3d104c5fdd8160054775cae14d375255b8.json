{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { murmur3128 } from '@multiformats/murmur3';\nexport var hamtHashCode = murmur3128.code;\nexport var hamtBucketBits = 8;\n\n/**\n * @param {Uint8Array} buf\n */\nexport function hamtHashFn(_x) {\n  return _hamtHashFn.apply(this, arguments);\n}\nfunction _hamtHashFn() {\n  _hamtHashFn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(buf) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return murmur3128.encode(buf);\n        case 2:\n          return _context.abrupt(\"return\", _context.sent.slice(0, 8).reverse());\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _hamtHashFn.apply(this, arguments);\n}","map":{"version":3,"names":["murmur3128","hamtHashCode","code","hamtBucketBits","hamtHashFn","_x","_hamtHashFn","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","buf","wrap","_callee$","_context","prev","next","encode","abrupt","sent","slice","reverse","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/files/utils/hamt-constants.js"],"sourcesContent":["import { murmur3128 } from '@multiformats/murmur3'\n\nexport const hamtHashCode = murmur3128.code\nexport const hamtBucketBits = 8\n\n/**\n * @param {Uint8Array} buf\n */\nexport async function hamtHashFn (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,uBAAuB;AAElD,OAAO,IAAMC,YAAY,GAAGD,UAAU,CAACE,IAAI;AAC3C,OAAO,IAAMC,cAAc,GAAG,CAAC;;AAE/B;AACA;AACA;AACA,gBAAsBC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAQ/B,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CARM,SAAAC,QAA2BC,GAAG;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACrBlB,UAAU,CAACmB,MAAM,CAACN,GAAG,CAAC;QAAA;UAAA,OAAAG,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA,CAIjCC,KAAK,CAAC,CAAC,EAAE,CAAC,EAEVC,OAAO;QAAA;QAAA;UAAA,OAAAP,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAZ,OAAA;EAAA,CACX;EAAA,OAAAN,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}