{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useContractNFKeyWithSigner}from\"hooks/blockchain/useHandleContracts\";import{useDispatch}from\"react-redux\";import ACTIONS from\"redux/action\";import{hexToNumber}from\"utils/blockchain\";export default function useTargetUpgradeDate(){var dispatch=useDispatch();var handleContractNFKeyWithSigner=useContractNFKeyWithSigner();var targetUpgradeDate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(tokenID){var count,contractNFKeyWithSigner,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:count=_args.length>1&&_args[1]!==undefined?_args[1]:3;_context.next=3;return handleContractNFKeyWithSigner;case 3:contractNFKeyWithSigner=_context.sent;return _context.abrupt(\"return\",contractNFKeyWithSigner.getUpgradeDelay(tokenID).then(function(tx){return ACTIONS.SET_TARGET_UPGRADE_DATE(dispatch,hexToNumber(tx===null||tx===void 0?void 0:tx._hex));}).catch(function(){return count?targetUpgradeDate(tokenID,count-1):null;}));case 5:case\"end\":return _context.stop();}},_callee);}));return function targetUpgradeDate(_x){return _ref.apply(this,arguments);};}();return{targetUpgradeDate:targetUpgradeDate};}","map":{"version":3,"names":["useContractNFKeyWithSigner","useDispatch","ACTIONS","hexToNumber","useTargetUpgradeDate","dispatch","handleContractNFKeyWithSigner","targetUpgradeDate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tokenID","count","contractNFKeyWithSigner","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","sent","abrupt","getUpgradeDelay","then","tx","SET_TARGET_UPGRADE_DATE","_hex","catch","stop","_x","apply"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useTargetUpgradeDate.js"],"sourcesContent":["import { useContractNFKeyWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { useDispatch } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useTargetUpgradeDate() {\n  const dispatch = useDispatch();\n  const handleContractNFKeyWithSigner = useContractNFKeyWithSigner();\n  const targetUpgradeDate = async (tokenID, count = 3) => {\n    const contractNFKeyWithSigner = await handleContractNFKeyWithSigner;\n    return contractNFKeyWithSigner\n      .getUpgradeDelay(tokenID)\n      .then((tx) =>\n        ACTIONS.SET_TARGET_UPGRADE_DATE(dispatch, hexToNumber(tx?._hex))\n      )\n      .catch(() => (count ? targetUpgradeDate(tokenID, count - 1) : null));\n  };\n  return { targetUpgradeDate };\n}\n"],"mappings":"0PAAA,OAASA,0BAA0B,KAAQ,qCAAqC,CAChF,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,CAAAC,OAAO,KAAM,cAAc,CAClC,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,cAAe,SAAS,CAAAC,oBAAoBA,CAAA,CAAG,CAC7C,GAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAK,6BAA6B,CAAGN,0BAA0B,CAAC,CAAC,CAClE,GAAM,CAAAO,iBAAiB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,OAAO,MAAAC,KAAA,CAAAC,uBAAA,CAAAC,KAAA,CAAAC,SAAA,QAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAER,KAAK,CAAAE,KAAA,CAAAO,MAAA,IAAAP,KAAA,MAAAQ,SAAA,CAAAR,KAAA,IAAG,CAAC,CAAAI,QAAA,CAAAE,IAAA,SACX,CAAAhB,6BAA6B,QAA7DS,uBAAuB,CAAAK,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAM,MAAA,UACtBX,uBAAuB,CAC3BY,eAAe,CAACd,OAAO,CAAC,CACxBe,IAAI,CAAC,SAACC,EAAE,QACP,CAAA3B,OAAO,CAAC4B,uBAAuB,CAACzB,QAAQ,CAAEF,WAAW,CAAC0B,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEE,IAAI,CAAC,CAAC,EAClE,CAAC,CACAC,KAAK,CAAC,iBAAO,CAAAlB,KAAK,CAAGP,iBAAiB,CAACM,OAAO,CAAEC,KAAK,CAAG,CAAC,CAAC,CAAG,IAAI,EAAC,CAAC,0BAAAM,QAAA,CAAAa,IAAA,MAAArB,OAAA,GACvE,kBARK,CAAAL,iBAAiBA,CAAA2B,EAAA,SAAA1B,IAAA,CAAA2B,KAAA,MAAAlB,SAAA,OAQtB,CACD,MAAO,CAAEV,iBAAiB,CAAjBA,iBAAkB,CAAC,CAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}