{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Key } from 'interface-datastore/key';\nimport PQueue from 'p-queue';\nimport _get from 'just-safe-get';\nimport _set from 'just-safe-set';\nimport errCode from 'err-code';\nimport { NotFoundError } from './errors.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { getWithFallback, hasWithFallback } from './utils/level.js';\n\n// @ts-ignore types are broken in p-queue@6.x.x - also, if we imported via esm\n// we can use the default, if via cjs we need to get the default via prop access\nvar Queue = PQueue.default ? PQueue.default : PQueue;\nvar configKey = new Key('config');\n\n/**\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {Datastore} store\n */\nexport function config(store) {\n  var setQueue = new Queue({\n    concurrency: 1\n  });\n  var configStore = {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     * @returns {Promise<Config>}\n     */\n    getAll: function getAll() {\n      var _arguments = arguments;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var options, encodedValue;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              options = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {};\n              _context.next = 3;\n              return getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store);\n            case 3:\n              encodedValue = _context.sent;\n              return _context.abrupt(\"return\", JSON.parse(uint8ArrayToString(encodedValue)));\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    /**\n     * Get the value for the passed configuration key from the repo.\n     *\n     * @param {string} key - the config key to get\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     */\n    get: function get(key) {\n      var _arguments2 = arguments,\n        _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var options, config, value;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _arguments2.length > 1 && _arguments2[1] !== undefined ? _arguments2[1] : {};\n              if (!(key == null)) {\n                _context2.next = 3;\n                break;\n              }\n              throw new NotFoundError(\"Key \".concat(key, \" does not exist in config\"));\n            case 3:\n              _context2.next = 5;\n              return _this.getAll(options);\n            case 5:\n              config = _context2.sent;\n              value = _get(config, key);\n              if (!(value === undefined)) {\n                _context2.next = 9;\n                break;\n              }\n              throw new NotFoundError(\"Key \".concat(key, \" does not exist in config\"));\n            case 9:\n              return _context2.abrupt(\"return\", value);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {string} key - the config key to be written\n     * @param {any} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    set: function set(key, value) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      // @ts-ignore ts thinks key will only be a string, but it may not be\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode(new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY');\n      }\n      if (value === undefined || value instanceof Uint8Array) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n      return setQueue.add(function () {\n        return _maybeDoSet({\n          key: key,\n          value: value\n        }, options.signal);\n      });\n    },\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {Config} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    replace: function replace(value) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!value || value instanceof Uint8Array) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE');\n      }\n      return setQueue.add(function () {\n        return _maybeDoSet({\n          key: undefined,\n          value: value\n        }, options.signal);\n      });\n    },\n    /**\n     * Check if a config file exists.\n     *\n     */\n    exists: function exists() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", hasWithFallback(configKey, store.has.bind(store), store));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n  return configStore;\n\n  /**\n   * @param {{ key: any; value: any; }} m\n   * @param {AbortSignal | undefined} signal\n   */\n  function _maybeDoSet(_x, _x2) {\n    return _maybeDoSet2.apply(this, arguments);\n  }\n  /**\n   * @param {unknown} config\n   */\n  function _maybeDoSet2() {\n    _maybeDoSet2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(m, signal) {\n      var key, value, _config;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(signal && signal.aborted)) {\n              _context4.next = 2;\n              break;\n            }\n            return _context4.abrupt(\"return\");\n          case 2:\n            key = m.key;\n            value = m.value;\n            if (!key) {\n              _context4.next = 10;\n              break;\n            }\n            _context4.next = 7;\n            return configStore.getAll();\n          case 7:\n            _config = _context4.sent;\n            if (typeof _config === 'object' && _config !== null) {\n              _set(_config, key, value);\n            }\n            return _context4.abrupt(\"return\", _saveAll(_config));\n          case 10:\n            return _context4.abrupt(\"return\", _saveAll(value));\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _maybeDoSet2.apply(this, arguments);\n  }\n  function _saveAll(config) {\n    var buf = uint8ArrayFromString(JSON.stringify(config, null, 2));\n    return store.put(configKey, buf);\n  }\n}","map":{"version":3,"names":["Key","PQueue","_get","_set","errCode","NotFoundError","toString","uint8ArrayToString","fromString","uint8ArrayFromString","getWithFallback","hasWithFallback","Queue","default","configKey","config","store","setQueue","concurrency","configStore","getAll","_arguments","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","encodedValue","wrap","_callee$","_context","prev","next","length","undefined","get","bind","has","sent","abrupt","JSON","parse","stop","key","_arguments2","_this","_callee2","value","_callee2$","_context2","concat","set","String","Error","Uint8Array","add","_maybeDoSet","signal","replace","exists","_callee3","_callee3$","_context3","_x","_x2","_maybeDoSet2","apply","_callee4","m","_config","_callee4$","_context4","aborted","_saveAll","buf","stringify","put"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo/src/config.js"],"sourcesContent":["\nimport { Key } from 'interface-datastore/key'\nimport PQueue from 'p-queue'\nimport _get from 'just-safe-get'\nimport _set from 'just-safe-set'\nimport errCode from 'err-code'\nimport { NotFoundError } from './errors.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { getWithFallback, hasWithFallback } from './utils/level.js'\n\n// @ts-ignore types are broken in p-queue@6.x.x - also, if we imported via esm\n// we can use the default, if via cjs we need to get the default via prop access\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\nconst configKey = new Key('config')\n\n/**\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {Datastore} store\n */\nexport function config (store) {\n  const setQueue = new Queue({ concurrency: 1 })\n\n  const configStore = {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     * @returns {Promise<Config>}\n     */\n    async getAll (options = {}) { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      const encodedValue = await getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store)\n\n      return JSON.parse(uint8ArrayToString(encodedValue))\n    },\n\n    /**\n     * Get the value for the passed configuration key from the repo.\n     *\n     * @param {string} key - the config key to get\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     */\n    async get (key, options = {}) {\n      if (key == null) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      const config = await this.getAll(options)\n      const value = _get(config, key)\n\n      if (value === undefined) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      return value\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {string} key - the config key to be written\n     * @param {any} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    set (key, value, options = {}) {\n      // @ts-ignore ts thinks key will only be a string, but it may not be\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode(new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY')\n      }\n\n      if (value === undefined || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: key,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {Config} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    replace (value, options = {}) {\n      if (!value || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: undefined,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Check if a config file exists.\n     *\n     */\n    async exists () { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migration to v10 or above\n      return hasWithFallback(configKey, store.has.bind(store), store)\n    }\n  }\n\n  return configStore\n\n  /**\n   * @param {{ key: any; value: any; }} m\n   * @param {AbortSignal | undefined} signal\n   */\n  async function _maybeDoSet (m, signal) {\n    if (signal && signal.aborted) {\n      return\n    }\n\n    const key = m.key\n    const value = m.value\n    if (key) {\n      const config = await configStore.getAll()\n      if (typeof config === 'object' && config !== null) {\n        _set(config, key, value)\n      }\n      return _saveAll(config)\n    }\n    return _saveAll(value)\n  }\n\n  /**\n   * @param {unknown} config\n   */\n  function _saveAll (config) {\n    const buf = uint8ArrayFromString(JSON.stringify(config, null, 2))\n    return store.put(configKey, buf)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}