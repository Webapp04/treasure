{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { CID } from 'multiformats/cid';\nimport { objectToCamel } from '../lib/object-to-camel.js';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { createLocal } from './local.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport var createRefs = configure(function (api, opts) {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  var refs = /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator(function (args) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var argsArr, res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n              argsArr = Array.isArray(args) ? args : [args];\n              _context.next = 3;\n              return _awaitAsyncGenerator(api.post('refs', {\n                signal: options.signal,\n                searchParams: toUrlSearchParams(_objectSpread({\n                  arg: argsArr.map(function (arg) {\n                    return \"\".concat(arg instanceof Uint8Array ? CID.decode(arg) : arg);\n                  })\n                }, options)),\n                headers: options.headers,\n                transform: objectToCamel\n              }));\n            case 3:\n              res = _context.sent;\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(res.ndjson()), _awaitAsyncGenerator), \"t0\", 5);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })();\n    });\n    return function refs(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  });\n});","map":{"version":3,"names":["CID","objectToCamel","configure","toUrlSearchParams","createLocal","createRefs","api","opts","refs","_ref","_wrapAsyncGenerator","args","options","arguments","length","undefined","_regeneratorRuntime","mark","_callee","argsArr","res","wrap","_callee$","_context","prev","next","Array","isArray","_awaitAsyncGenerator","post","signal","searchParams","_objectSpread","arg","map","concat","Uint8Array","decode","headers","transform","sent","delegateYield","_asyncGeneratorDelegate","_asyncIterator","ndjson","stop","_x","apply","Object","assign","local"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/refs/index.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { createLocal } from './local.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createRefs = configure((api, opts) => {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  const refs = async function * (args, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const argsArr = Array.isArray(args) ? args : [args]\n\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${arg instanceof Uint8Array ? CID.decode(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  })\n})\n"],"mappings":";;;;;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,WAAW,QAAQ,YAAY;;AAExC;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,UAAU,GAAGH,SAAS,CAAC,UAACI,GAAG,EAAEC,IAAI,EAAK;EACjD;AACF;AACA;EACE,IAAMC,IAAI;IAAA,IAAAC,IAAA,GAAAC,mBAAA,CAAG,UAAkBC,IAAI;MAAA,IAAEC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MAAA,oBAAAG,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,OAAA,EAAAC,GAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAC/C;cACMN,OAAO,GAAGO,KAAK,CAACC,OAAO,CAAChB,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;cAAAY,QAAA,CAAAE,IAAA;cAAA,OAAAG,oBAAA,CAEjCtB,GAAG,CAACuB,IAAI,CAAC,MAAM,EAAE;gBACjCC,MAAM,EAAElB,OAAO,CAACkB,MAAM;gBACtBC,YAAY,EAAE5B,iBAAiB,CAAA6B,aAAA;kBAC7BC,GAAG,EAAEd,OAAO,CAACe,GAAG,CAAC,UAAAD,GAAG;oBAAA,UAAAE,MAAA,CAAOF,GAAG,YAAYG,UAAU,GAAGpC,GAAG,CAACqC,MAAM,CAACJ,GAAG,CAAC,GAAGA,GAAG;kBAAA,CAAE;gBAAC,GAC5ErB,OAAO,CACX,CAAC;gBACF0B,OAAO,EAAE1B,OAAO,CAAC0B,OAAO;gBACxBC,SAAS,EAAEtC;cACb,CAAC,CAAC;YAAA;cARImB,GAAG,GAAAG,QAAA,CAAAiB,IAAA;cAUT,OAAAjB,QAAA,CAAAkB,aAAA,CAAAC,uBAAA,CAAAC,cAAA,CAAQvB,GAAG,CAACwB,MAAM,CAAC,CAAC,GAAAhB,oBAAA;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAsB,IAAA;UAAA;QAAA,GAAA3B,OAAA;MAAA;IAAA,CACrB;IAAA,gBAfKV,IAAIA,CAAAsC,EAAA;MAAA,OAAArC,IAAA,CAAAsC,KAAA,OAAAlC,SAAA;IAAA;EAAA,GAeT;EAED,OAAOmC,MAAM,CAACC,MAAM,CAACzC,IAAI,EAAE;IACzB0C,KAAK,EAAE9C,WAAW,CAACG,IAAI;EACzB,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}