{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport errcode from 'err-code';\nimport { verifyRecord } from '@libp2p/record/validators';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { Message, MESSAGE_TYPE } from '../message/index.js';\nimport * as utils from '../utils.js';\nimport { queryErrorEvent, finalPeerEvent, valueEvent } from '../query/events.js';\nimport { PeerDistanceList } from '../peer-list/peer-distance-list.js';\nimport { Libp2pRecord } from '@libp2p/record';\nimport { logger } from '@libp2p/logger';\nimport { keys } from '@libp2p/crypto';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nimport { Components } from '@libp2p/components';\nexport var PeerRouting = /*#__PURE__*/function () {\n  function PeerRouting(init) {\n    _classCallCheck(this, PeerRouting);\n    this.components = new Components();\n    var routingTable = init.routingTable,\n      network = init.network,\n      validators = init.validators,\n      queryManager = init.queryManager,\n      lan = init.lan;\n    this.routingTable = routingTable;\n    this.network = network;\n    this.validators = validators;\n    this.queryManager = queryManager;\n    this.log = logger(\"libp2p:kad-dht:\".concat(lan ? 'lan' : 'wan', \":peer-routing\"));\n  }\n  _createClass(PeerRouting, [{\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n    }\n    /**\n     * Look if we are connected to a peer with the given id.\n     * Returns its id and addresses, if found, otherwise `undefined`.\n     */\n  }, {\n    key: \"findPeerLocal\",\n    value: function () {\n      var _findPeerLocal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peer) {\n        var peerData, p;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.routingTable.find(peer);\n            case 2:\n              p = _context.sent;\n              if (!(p != null)) {\n                _context.next = 15;\n                break;\n              }\n              this.log('findPeerLocal found %p in routing table', peer);\n              _context.prev = 5;\n              _context.next = 8;\n              return this.components.getPeerStore().get(p);\n            case 8:\n              peerData = _context.sent;\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](5);\n              if (!(_context.t0.code !== 'ERR_NOT_FOUND')) {\n                _context.next = 15;\n                break;\n              }\n              throw _context.t0;\n            case 15:\n              if (!(peerData == null)) {\n                _context.next = 26;\n                break;\n              }\n              _context.prev = 16;\n              _context.next = 19;\n              return this.components.getPeerStore().get(peer);\n            case 19:\n              peerData = _context.sent;\n              _context.next = 26;\n              break;\n            case 22:\n              _context.prev = 22;\n              _context.t1 = _context[\"catch\"](16);\n              if (!(_context.t1.code !== 'ERR_NOT_FOUND')) {\n                _context.next = 26;\n                break;\n              }\n              throw _context.t1;\n            case 26:\n              if (!(peerData != null)) {\n                _context.next = 29;\n                break;\n              }\n              this.log('findPeerLocal found %p in peer store', peer);\n              return _context.abrupt(\"return\", {\n                id: peerData.id,\n                multiaddrs: peerData.addresses.map(function (address) {\n                  return address.multiaddr;\n                }),\n                protocols: []\n              });\n            case 29:\n              return _context.abrupt(\"return\", undefined);\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[5, 11], [16, 22]]);\n      }));\n      function findPeerLocal(_x3) {\n        return _findPeerLocal.apply(this, arguments);\n      }\n      return findPeerLocal;\n    }()\n    /**\n     * Get a value via rpc call for the given parameters\n     */\n  }, {\n    key: \"_getValueSingle\",\n    value: function _getValueSingle(peer, key) {\n      var _this = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var msg;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              msg = new Message(MESSAGE_TYPE.GET_VALUE, key, 0);\n              return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(_this.network.sendRequest(peer, msg, options)), _awaitAsyncGenerator), \"t0\", 2);\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n    /**\n     * Get the public key directly from a node\n     */\n  }, {\n    key: \"getPublicKeyFromNode\",\n    value: function getPublicKeyFromNode(peer) {\n      var _this2 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var pkKey, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, event, recPeer;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              pkKey = utils.keyForPublicKey(peer);\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context3.prev = 3;\n              _iterator = _asyncIterator(_this2._getValueSingle(peer, pkKey, options));\n            case 5:\n              _context3.next = 7;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 7:\n              if (!(_iteratorAbruptCompletion = !(_step = _context3.sent).done)) {\n                _context3.next = 24;\n                break;\n              }\n              event = _step.value;\n              _context3.next = 11;\n              return event;\n            case 11:\n              if (!(event.name === 'PEER_RESPONSE' && event.record != null)) {\n                _context3.next = 21;\n                break;\n              }\n              _context3.next = 14;\n              return _awaitAsyncGenerator(peerIdFromKeys(keys.marshalPublicKey({\n                bytes: event.record.value\n              })));\n            case 14:\n              recPeer = _context3.sent;\n              if (recPeer.equals(peer)) {\n                _context3.next = 17;\n                break;\n              }\n              throw errcode(new Error('public key does not match id'), 'ERR_PUBLIC_KEY_DOES_NOT_MATCH_ID');\n            case 17:\n              if (!(recPeer.publicKey == null)) {\n                _context3.next = 19;\n                break;\n              }\n              throw errcode(new Error('public key missing'), 'ERR_PUBLIC_KEY_MISSING');\n            case 19:\n              _context3.next = 21;\n              return valueEvent({\n                from: peer,\n                value: recPeer.publicKey\n              });\n            case 21:\n              _iteratorAbruptCompletion = false;\n              _context3.next = 5;\n              break;\n            case 24:\n              _context3.next = 30;\n              break;\n            case 26:\n              _context3.prev = 26;\n              _context3.t0 = _context3[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context3.t0;\n            case 30:\n              _context3.prev = 30;\n              _context3.prev = 31;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context3.next = 35;\n                break;\n              }\n              _context3.next = 35;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 35:\n              _context3.prev = 35;\n              if (!_didIteratorError) {\n                _context3.next = 38;\n                break;\n              }\n              throw _iteratorError;\n            case 38:\n              return _context3.finish(35);\n            case 39:\n              return _context3.finish(30);\n            case 40:\n              throw errcode(new Error(\"Node not responding with its public key: \".concat(peer.toString())), 'ERR_INVALID_RECORD');\n            case 41:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[3, 26, 30, 40], [31,, 35, 39]]);\n      }))();\n    }\n    /**\n     * Search for a peer with the given ID\n     */\n  }, {\n    key: \"findPeer\",\n    value: function findPeer(id) {\n      var _this3 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var pi, key, peers, match, peer, self, findPeerQuery, foundPeer, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, event;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _this3.log('findPeer %p', id);\n              // Try to find locally\n              _context5.next = 3;\n              return _awaitAsyncGenerator(_this3.findPeerLocal(id));\n            case 3:\n              pi = _context5.sent;\n              if (!(pi != null)) {\n                _context5.next = 9;\n                break;\n              }\n              _this3.log('found local');\n              _context5.next = 8;\n              return finalPeerEvent({\n                from: _this3.components.getPeerId(),\n                peer: pi\n              });\n            case 8:\n              return _context5.abrupt(\"return\");\n            case 9:\n              _context5.next = 11;\n              return _awaitAsyncGenerator(utils.convertPeerId(id));\n            case 11:\n              key = _context5.sent;\n              peers = _this3.routingTable.closestPeers(key); // sanity check\n              match = peers.find(function (p) {\n                return p.equals(id);\n              });\n              if (!(match != null)) {\n                _context5.next = 29;\n                break;\n              }\n              _context5.prev = 15;\n              _context5.next = 18;\n              return _awaitAsyncGenerator(_this3.components.getPeerStore().get(id));\n            case 18:\n              peer = _context5.sent;\n              _this3.log('found in peerStore');\n              _context5.next = 22;\n              return finalPeerEvent({\n                from: _this3.components.getPeerId(),\n                peer: {\n                  id: peer.id,\n                  multiaddrs: peer.addresses.map(function (address) {\n                    return address.multiaddr;\n                  }),\n                  protocols: []\n                }\n              });\n            case 22:\n              return _context5.abrupt(\"return\");\n            case 25:\n              _context5.prev = 25;\n              _context5.t0 = _context5[\"catch\"](15);\n              if (!(_context5.t0.code !== 'ERR_NOT_FOUND')) {\n                _context5.next = 29;\n                break;\n              }\n              throw _context5.t0;\n            case 29:\n              self = _this3; // eslint-disable-line @typescript-eslint/no-this-alias\n              findPeerQuery = /*#__PURE__*/function () {\n                var _ref = _wrapAsyncGenerator(function (_ref3) {\n                  var peer = _ref3.peer,\n                    signal = _ref3.signal;\n                  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                    var request, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, event, _match;\n                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                      while (1) switch (_context4.prev = _context4.next) {\n                        case 0:\n                          request = new Message(MESSAGE_TYPE.FIND_NODE, id.toBytes(), 0);\n                          _iteratorAbruptCompletion3 = false;\n                          _didIteratorError3 = false;\n                          _context4.prev = 3;\n                          _iterator3 = _asyncIterator(self.network.sendRequest(peer, request, {\n                            signal: signal\n                          }));\n                        case 5:\n                          _context4.next = 7;\n                          return _awaitAsyncGenerator(_iterator3.next());\n                        case 7:\n                          if (!(_iteratorAbruptCompletion3 = !(_step3 = _context4.sent).done)) {\n                            _context4.next = 19;\n                            break;\n                          }\n                          event = _step3.value;\n                          _context4.next = 11;\n                          return event;\n                        case 11:\n                          if (!(event.name === 'PEER_RESPONSE')) {\n                            _context4.next = 16;\n                            break;\n                          }\n                          _match = event.closer.find(function (p) {\n                            return p.id.equals(id);\n                          }); // found the peer\n                          if (!(_match != null)) {\n                            _context4.next = 16;\n                            break;\n                          }\n                          _context4.next = 16;\n                          return finalPeerEvent({\n                            from: event.from,\n                            peer: _match\n                          });\n                        case 16:\n                          _iteratorAbruptCompletion3 = false;\n                          _context4.next = 5;\n                          break;\n                        case 19:\n                          _context4.next = 25;\n                          break;\n                        case 21:\n                          _context4.prev = 21;\n                          _context4.t0 = _context4[\"catch\"](3);\n                          _didIteratorError3 = true;\n                          _iteratorError3 = _context4.t0;\n                        case 25:\n                          _context4.prev = 25;\n                          _context4.prev = 26;\n                          if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {\n                            _context4.next = 30;\n                            break;\n                          }\n                          _context4.next = 30;\n                          return _awaitAsyncGenerator(_iterator3.return());\n                        case 30:\n                          _context4.prev = 30;\n                          if (!_didIteratorError3) {\n                            _context4.next = 33;\n                            break;\n                          }\n                          throw _iteratorError3;\n                        case 33:\n                          return _context4.finish(30);\n                        case 34:\n                          return _context4.finish(25);\n                        case 35:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }, _callee4, null, [[3, 21, 25, 35], [26,, 30, 34]]);\n                  })();\n                });\n                return function findPeerQuery(_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }();\n              foundPeer = false;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context5.prev = 34;\n              _iterator2 = _asyncIterator(_this3.queryManager.run(id.toBytes(), peers, findPeerQuery, options));\n            case 36:\n              _context5.next = 38;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 38:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context5.sent).done)) {\n                _context5.next = 46;\n                break;\n              }\n              event = _step2.value;\n              if (event.name === 'FINAL_PEER') {\n                foundPeer = true;\n              }\n              _context5.next = 43;\n              return event;\n            case 43:\n              _iteratorAbruptCompletion2 = false;\n              _context5.next = 36;\n              break;\n            case 46:\n              _context5.next = 52;\n              break;\n            case 48:\n              _context5.prev = 48;\n              _context5.t1 = _context5[\"catch\"](34);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context5.t1;\n            case 52:\n              _context5.prev = 52;\n              _context5.prev = 53;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context5.next = 57;\n                break;\n              }\n              _context5.next = 57;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 57:\n              _context5.prev = 57;\n              if (!_didIteratorError2) {\n                _context5.next = 60;\n                break;\n              }\n              throw _iteratorError2;\n            case 60:\n              return _context5.finish(57);\n            case 61:\n              return _context5.finish(52);\n            case 62:\n              if (foundPeer) {\n                _context5.next = 65;\n                break;\n              }\n              _context5.next = 65;\n              return queryErrorEvent({\n                from: _this3.components.getPeerId(),\n                error: errcode(new Error('Not found'), 'ERR_NOT_FOUND')\n              });\n            case 65:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[15, 25], [34, 48, 52, 62], [53,, 57, 61]]);\n      }))();\n    }\n    /**\n     * Kademlia 'node lookup' operation on a key, which could be a the\n     * bytes from a multihash or a peer ID\n     */\n  }, {\n    key: \"getClosestPeers\",\n    value: function getClosestPeers(key) {\n      var _this4 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var id, tablePeers, self, peers, getCloserPeersQuery, _iteratorAbruptCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, event, _iterator6, _step6, _yield$_awaitAsyncGen, peer;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _this4.log('getClosestPeers to %b', key);\n              _context9.next = 3;\n              return _awaitAsyncGenerator(utils.convertBuffer(key));\n            case 3:\n              id = _context9.sent;\n              tablePeers = _this4.routingTable.closestPeers(id);\n              self = _this4; // eslint-disable-line @typescript-eslint/no-this-alias\n              peers = new PeerDistanceList(id, _this4.routingTable.kBucketSize);\n              _context9.next = 9;\n              return _awaitAsyncGenerator(Promise.all(tablePeers.map( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(peer) {\n                  return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                    while (1) switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.next = 2;\n                        return peers.add(peer);\n                      case 2:\n                        return _context6.abrupt(\"return\", _context6.sent);\n                      case 3:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }, _callee6);\n                }));\n                return function (_x4) {\n                  return _ref4.apply(this, arguments);\n                };\n              }())));\n            case 9:\n              getCloserPeersQuery = /*#__PURE__*/function () {\n                var _ref2 = _wrapAsyncGenerator(function (_ref5) {\n                  var peer = _ref5.peer,\n                    signal = _ref5.signal;\n                  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n                    var request;\n                    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                      while (1) switch (_context7.prev = _context7.next) {\n                        case 0:\n                          self.log('closerPeersSingle %s from %p', uint8ArrayToString(key, 'base32'), peer);\n                          request = new Message(MESSAGE_TYPE.FIND_NODE, key, 0);\n                          return _context7.delegateYield(_asyncGeneratorDelegate(_asyncIterator(self.network.sendRequest(peer, request, {\n                            signal: signal\n                          })), _awaitAsyncGenerator), \"t0\", 3);\n                        case 3:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }, _callee7);\n                  })();\n                });\n                return function getCloserPeersQuery(_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n              _iteratorAbruptCompletion4 = false;\n              _didIteratorError4 = false;\n              _context9.prev = 12;\n              _iterator4 = _asyncIterator(_this4.queryManager.run(key, tablePeers, getCloserPeersQuery, options));\n            case 14:\n              _context9.next = 16;\n              return _awaitAsyncGenerator(_iterator4.next());\n            case 16:\n              if (!(_iteratorAbruptCompletion4 = !(_step4 = _context9.sent).done)) {\n                _context9.next = 26;\n                break;\n              }\n              event = _step4.value;\n              _context9.next = 20;\n              return event;\n            case 20:\n              if (!(event.name === 'PEER_RESPONSE')) {\n                _context9.next = 23;\n                break;\n              }\n              _context9.next = 23;\n              return _awaitAsyncGenerator(Promise.all(event.closer.map( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(peerData) {\n                  return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n                    while (1) switch (_context8.prev = _context8.next) {\n                      case 0:\n                        _context8.next = 2;\n                        return peers.add(peerData.id);\n                      case 2:\n                        return _context8.abrupt(\"return\", _context8.sent);\n                      case 3:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }, _callee8);\n                }));\n                return function (_x5) {\n                  return _ref6.apply(this, arguments);\n                };\n              }())));\n            case 23:\n              _iteratorAbruptCompletion4 = false;\n              _context9.next = 14;\n              break;\n            case 26:\n              _context9.next = 32;\n              break;\n            case 28:\n              _context9.prev = 28;\n              _context9.t0 = _context9[\"catch\"](12);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context9.t0;\n            case 32:\n              _context9.prev = 32;\n              _context9.prev = 33;\n              if (!(_iteratorAbruptCompletion4 && _iterator4.return != null)) {\n                _context9.next = 37;\n                break;\n              }\n              _context9.next = 37;\n              return _awaitAsyncGenerator(_iterator4.return());\n            case 37:\n              _context9.prev = 37;\n              if (!_didIteratorError4) {\n                _context9.next = 40;\n                break;\n              }\n              throw _iteratorError4;\n            case 40:\n              return _context9.finish(37);\n            case 41:\n              return _context9.finish(32);\n            case 42:\n              _this4.log('found %d peers close to %b', peers.length, key);\n              _iterator6 = _createForOfIteratorHelper(peers.peers);\n              _context9.prev = 44;\n              _iterator6.s();\n            case 46:\n              if ((_step6 = _iterator6.n()).done) {\n                _context9.next = 70;\n                break;\n              }\n              peer = _step6.value;\n              _context9.t1 = finalPeerEvent;\n              _context9.t2 = _this4.components.getPeerId();\n              _context9.t3 = peer;\n              _context9.next = 53;\n              return _awaitAsyncGenerator(_this4.components.getPeerStore().addressBook.get(peer));\n            case 53:\n              _context9.t5 = _yield$_awaitAsyncGen = _context9.sent;\n              _context9.t4 = _context9.t5 !== null;\n              if (!_context9.t4) {\n                _context9.next = 57;\n                break;\n              }\n              _context9.t4 = _yield$_awaitAsyncGen !== void 0;\n            case 57:\n              if (!_context9.t4) {\n                _context9.next = 61;\n                break;\n              }\n              _context9.t6 = _yield$_awaitAsyncGen;\n              _context9.next = 62;\n              break;\n            case 61:\n              _context9.t6 = [];\n            case 62:\n              _context9.t7 = _context9.t6.map(function (addr) {\n                return addr.multiaddr;\n              });\n              _context9.t8 = [];\n              _context9.t9 = {\n                id: _context9.t3,\n                multiaddrs: _context9.t7,\n                protocols: _context9.t8\n              };\n              _context9.t10 = {\n                from: _context9.t2,\n                peer: _context9.t9\n              };\n              _context9.next = 68;\n              return (0, _context9.t1)(_context9.t10);\n            case 68:\n              _context9.next = 46;\n              break;\n            case 70:\n              _context9.next = 75;\n              break;\n            case 72:\n              _context9.prev = 72;\n              _context9.t11 = _context9[\"catch\"](44);\n              _iterator6.e(_context9.t11);\n            case 75:\n              _context9.prev = 75;\n              _iterator6.f();\n              return _context9.finish(75);\n            case 78:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[12, 28, 32, 42], [33,, 37, 41], [44, 72, 75, 78]]);\n      }))();\n    }\n    /**\n     * Query a particular peer for the value for the given key.\n     * It will either return the value or a list of closer peers.\n     *\n     * Note: The peerStore is updated with new addresses found for the given peer.\n     */\n  }, {\n    key: \"getValueOrPeers\",\n    value: function getValueOrPeers(peer, key) {\n      var _this5 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var _iteratorAbruptCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, event, errMsg;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _iteratorAbruptCompletion5 = false;\n              _didIteratorError5 = false;\n              _context10.prev = 2;\n              _iterator5 = _asyncIterator(_this5._getValueSingle(peer, key, options));\n            case 4:\n              _context10.next = 6;\n              return _awaitAsyncGenerator(_iterator5.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion5 = !(_step5 = _context10.sent).done)) {\n                _context10.next = 27;\n                break;\n              }\n              event = _step5.value;\n              if (!(event.name === 'PEER_RESPONSE')) {\n                _context10.next = 22;\n                break;\n              }\n              if (!(event.record != null)) {\n                _context10.next = 22;\n                break;\n              }\n              _context10.prev = 10;\n              _context10.next = 13;\n              return _awaitAsyncGenerator(_this5._verifyRecordOnline(event.record));\n            case 13:\n              _context10.next = 22;\n              break;\n            case 15:\n              _context10.prev = 15;\n              _context10.t0 = _context10[\"catch\"](10);\n              errMsg = 'invalid record received, discarded';\n              _this5.log(errMsg);\n              _context10.next = 21;\n              return queryErrorEvent({\n                from: event.from,\n                error: errcode(new Error(errMsg), 'ERR_INVALID_RECORD')\n              });\n            case 21:\n              return _context10.abrupt(\"continue\", 24);\n            case 22:\n              _context10.next = 24;\n              return event;\n            case 24:\n              _iteratorAbruptCompletion5 = false;\n              _context10.next = 4;\n              break;\n            case 27:\n              _context10.next = 33;\n              break;\n            case 29:\n              _context10.prev = 29;\n              _context10.t1 = _context10[\"catch\"](2);\n              _didIteratorError5 = true;\n              _iteratorError5 = _context10.t1;\n            case 33:\n              _context10.prev = 33;\n              _context10.prev = 34;\n              if (!(_iteratorAbruptCompletion5 && _iterator5.return != null)) {\n                _context10.next = 38;\n                break;\n              }\n              _context10.next = 38;\n              return _awaitAsyncGenerator(_iterator5.return());\n            case 38:\n              _context10.prev = 38;\n              if (!_didIteratorError5) {\n                _context10.next = 41;\n                break;\n              }\n              throw _iteratorError5;\n            case 41:\n              return _context10.finish(38);\n            case 42:\n              return _context10.finish(33);\n            case 43:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, null, [[2, 29, 33, 43], [10, 15], [34,, 38, 42]]);\n      }))();\n    }\n    /**\n     * Verify a record, fetching missing public keys from the network.\n     * Throws an error if the record is invalid.\n     */\n  }, {\n    key: \"_verifyRecordOnline\",\n    value: function () {\n      var _verifyRecordOnline2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(record) {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!(record.timeReceived == null)) {\n                _context11.next = 2;\n                break;\n              }\n              throw errcode(new Error('invalid record received'), 'ERR_INVALID_RECORD');\n            case 2:\n              _context11.next = 4;\n              return verifyRecord(this.validators, new Libp2pRecord(record.key, record.value, record.timeReceived));\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function _verifyRecordOnline(_x6) {\n        return _verifyRecordOnline2.apply(this, arguments);\n      }\n      return _verifyRecordOnline;\n    }()\n    /**\n     * Get the nearest peers to the given query, but if closer\n     * than self\n     */\n  }, {\n    key: \"getCloserPeersOffline\",\n    value: function () {\n      var _getCloserPeersOffline = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(key, closerThan) {\n        var id, ids, output, _iterator7, _step7, peerId, addresses, protocols;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return utils.convertBuffer(key);\n            case 2:\n              id = _context12.sent;\n              ids = this.routingTable.closestPeers(id);\n              output = [];\n              _iterator7 = _createForOfIteratorHelper(ids);\n              _context12.prev = 6;\n              _iterator7.s();\n            case 8:\n              if ((_step7 = _iterator7.n()).done) {\n                _context12.next = 28;\n                break;\n              }\n              peerId = _step7.value;\n              if (!peerId.equals(closerThan)) {\n                _context12.next = 12;\n                break;\n              }\n              return _context12.abrupt(\"continue\", 26);\n            case 12:\n              _context12.prev = 12;\n              _context12.next = 15;\n              return this.components.getPeerStore().addressBook.get(peerId);\n            case 15:\n              addresses = _context12.sent;\n              _context12.next = 18;\n              return this.components.getPeerStore().protoBook.get(peerId);\n            case 18:\n              protocols = _context12.sent;\n              output.push({\n                id: peerId,\n                multiaddrs: addresses.map(function (address) {\n                  return address.multiaddr;\n                }),\n                protocols: protocols\n              });\n              _context12.next = 26;\n              break;\n            case 22:\n              _context12.prev = 22;\n              _context12.t0 = _context12[\"catch\"](12);\n              if (!(_context12.t0.code !== 'ERR_NOT_FOUND')) {\n                _context12.next = 26;\n                break;\n              }\n              throw _context12.t0;\n            case 26:\n              _context12.next = 8;\n              break;\n            case 28:\n              _context12.next = 33;\n              break;\n            case 30:\n              _context12.prev = 30;\n              _context12.t1 = _context12[\"catch\"](6);\n              _iterator7.e(_context12.t1);\n            case 33:\n              _context12.prev = 33;\n              _iterator7.f();\n              return _context12.finish(33);\n            case 36:\n              if (output.length > 0) {\n                this.log('getCloserPeersOffline found %d peer(s) closer to %b than %p', output.length, key, closerThan);\n              } else {\n                this.log('getCloserPeersOffline could not find peer closer to %b than %p', key, closerThan);\n              }\n              return _context12.abrupt(\"return\", output);\n            case 38:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[6, 30, 33, 36], [12, 22]]);\n      }));\n      function getCloserPeersOffline(_x7, _x8) {\n        return _getCloserPeersOffline.apply(this, arguments);\n      }\n      return getCloserPeersOffline;\n    }()\n  }]);\n  return PeerRouting;\n}();","map":{"version":3,"names":["errcode","verifyRecord","toString","uint8ArrayToString","Message","MESSAGE_TYPE","utils","queryErrorEvent","finalPeerEvent","valueEvent","PeerDistanceList","Libp2pRecord","logger","keys","peerIdFromKeys","Components","PeerRouting","init","_classCallCheck","components","routingTable","network","validators","queryManager","lan","log","concat","_createClass","key","value","_findPeerLocal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peer","peerData","p","wrap","_callee$","_context","prev","next","find","sent","getPeerStore","get","t0","code","t1","abrupt","id","multiaddrs","addresses","map","address","multiaddr","protocols","undefined","stop","findPeerLocal","_x3","apply","arguments","_getValueSingle","_this","options","length","_wrapAsyncGenerator","_callee2","msg","_callee2$","_context2","GET_VALUE","delegateYield","_asyncGeneratorDelegate","_asyncIterator","sendRequest","_awaitAsyncGenerator","getPublicKeyFromNode","_this2","_callee3","pkKey","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","event","recPeer","_callee3$","_context3","keyForPublicKey","done","name","record","marshalPublicKey","bytes","equals","Error","publicKey","from","return","finish","findPeer","_this3","_callee5","pi","peers","match","self","findPeerQuery","foundPeer","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee5$","_context5","getPeerId","convertPeerId","closestPeers","_ref","_ref3","signal","_callee4","request","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_match","_callee4$","_context4","FIND_NODE","toBytes","closer","_x","run","error","getClosestPeers","_this4","_callee9","tablePeers","getCloserPeersQuery","_iteratorAbruptCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_iterator6","_step6","_yield$_awaitAsyncGen","_callee9$","_context9","convertBuffer","kBucketSize","Promise","all","_ref4","_callee6","_callee6$","_context6","add","_x4","_ref2","_ref5","_callee7","_callee7$","_context7","_x2","_ref6","_callee8","_callee8$","_context8","_x5","_createForOfIteratorHelper","s","n","t2","t3","addressBook","t5","t4","t6","t7","addr","t8","t9","t10","t11","e","f","getValueOrPeers","_this5","_callee10","_iteratorAbruptCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","errMsg","_callee10$","_context10","_verifyRecordOnline","_verifyRecordOnline2","_callee11","_callee11$","_context11","timeReceived","_x6","_getCloserPeersOffline","_callee12","closerThan","ids","output","_iterator7","_step7","peerId","_callee12$","_context12","protoBook","push","getCloserPeersOffline","_x7","_x8"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/peer-routing/index.ts"],"sourcesContent":["import errcode from 'err-code'\nimport { verifyRecord } from '@libp2p/record/validators'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { Message, MESSAGE_TYPE } from '../message/index.js'\nimport * as utils from '../utils.js'\nimport {\n  queryErrorEvent,\n  finalPeerEvent,\n  valueEvent\n} from '../query/events.js'\nimport { PeerDistanceList } from '../peer-list/peer-distance-list.js'\nimport { Libp2pRecord } from '@libp2p/record'\nimport { logger } from '@libp2p/logger'\nimport { keys } from '@libp2p/crypto'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport type { DHTRecord, QueryOptions, Validators } from '@libp2p/interface-dht'\nimport type { RoutingTable } from '../routing-table/index.js'\nimport type { QueryManager } from '../query/manager.js'\nimport type { Network } from '../network.js'\nimport type { Logger } from '@libp2p/logger'\nimport type { AbortOptions } from '@libp2p/interfaces'\nimport type { QueryFunc } from '../query/types.js'\nimport type { PeerInfo } from '@libp2p/interface-peer-info'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport { Components, Initializable } from '@libp2p/components'\n\nexport interface PeerRoutingInit {\n  routingTable: RoutingTable\n  network: Network\n  validators: Validators\n  queryManager: QueryManager\n  lan: boolean\n}\n\nexport class PeerRouting implements Initializable {\n  private components: Components = new Components()\n  private readonly log: Logger\n  private readonly routingTable: RoutingTable\n  private readonly network: Network\n  private readonly validators: Validators\n  private readonly queryManager: QueryManager\n\n  constructor (init: PeerRoutingInit) {\n    const { routingTable, network, validators, queryManager, lan } = init\n\n    this.routingTable = routingTable\n    this.network = network\n    this.validators = validators\n    this.queryManager = queryManager\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:peer-routing`)\n  }\n\n  init (components: Components): void {\n    this.components = components\n  }\n\n  /**\n   * Look if we are connected to a peer with the given id.\n   * Returns its id and addresses, if found, otherwise `undefined`.\n   */\n  async findPeerLocal (peer: PeerId): Promise<PeerInfo | undefined> {\n    let peerData\n    const p = await this.routingTable.find(peer)\n\n    if (p != null) {\n      this.log('findPeerLocal found %p in routing table', peer)\n\n      try {\n        peerData = await this.components.getPeerStore().get(p)\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    if (peerData == null) {\n      try {\n        peerData = await this.components.getPeerStore().get(peer)\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    if (peerData != null) {\n      this.log('findPeerLocal found %p in peer store', peer)\n\n      return {\n        id: peerData.id,\n        multiaddrs: peerData.addresses.map((address) => address.multiaddr),\n        protocols: []\n      }\n    }\n\n    return undefined\n  }\n\n  /**\n   * Get a value via rpc call for the given parameters\n   */\n  async * _getValueSingle (peer: PeerId, key: Uint8Array, options: AbortOptions = {}) { // eslint-disable-line require-await\n    const msg = new Message(MESSAGE_TYPE.GET_VALUE, key, 0)\n    yield * this.network.sendRequest(peer, msg, options)\n  }\n\n  /**\n   * Get the public key directly from a node\n   */\n  async * getPublicKeyFromNode (peer: PeerId, options: AbortOptions = {}) {\n    const pkKey = utils.keyForPublicKey(peer)\n\n    for await (const event of this._getValueSingle(peer, pkKey, options)) {\n      yield event\n\n      if (event.name === 'PEER_RESPONSE' && event.record != null) {\n        const recPeer = await peerIdFromKeys(keys.marshalPublicKey({ bytes: event.record.value }))\n\n        // compare hashes of the pub key\n        if (!recPeer.equals(peer)) {\n          throw errcode(new Error('public key does not match id'), 'ERR_PUBLIC_KEY_DOES_NOT_MATCH_ID')\n        }\n\n        if (recPeer.publicKey == null) {\n          throw errcode(new Error('public key missing'), 'ERR_PUBLIC_KEY_MISSING')\n        }\n\n        yield valueEvent({ from: peer, value: recPeer.publicKey })\n      }\n    }\n\n    throw errcode(new Error(`Node not responding with its public key: ${peer.toString()}`), 'ERR_INVALID_RECORD')\n  }\n\n  /**\n   * Search for a peer with the given ID\n   */\n  async * findPeer (id: PeerId, options: QueryOptions = {}) {\n    this.log('findPeer %p', id)\n\n    // Try to find locally\n    const pi = await this.findPeerLocal(id)\n\n    // already got it\n    if (pi != null) {\n      this.log('found local')\n      yield finalPeerEvent({\n        from: this.components.getPeerId(),\n        peer: pi\n      })\n      return\n    }\n\n    const key = await utils.convertPeerId(id)\n    const peers = this.routingTable.closestPeers(key)\n\n    // sanity check\n    const match = peers.find((p) => p.equals(id))\n\n    if (match != null) {\n      try {\n        const peer = await this.components.getPeerStore().get(id)\n\n        this.log('found in peerStore')\n        yield finalPeerEvent({\n          from: this.components.getPeerId(),\n          peer: {\n            id: peer.id,\n            multiaddrs: peer.addresses.map((address) => address.multiaddr),\n            protocols: []\n          }\n        })\n\n        return\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n    const findPeerQuery: QueryFunc = async function * ({ peer, signal }) {\n      const request = new Message(MESSAGE_TYPE.FIND_NODE, id.toBytes(), 0)\n\n      for await (const event of self.network.sendRequest(peer, request, { signal })) {\n        yield event\n\n        if (event.name === 'PEER_RESPONSE') {\n          const match = event.closer.find((p) => p.id.equals(id))\n\n          // found the peer\n          if (match != null) {\n            yield finalPeerEvent({ from: event.from, peer: match })\n          }\n        }\n      }\n    }\n\n    let foundPeer = false\n\n    for await (const event of this.queryManager.run(id.toBytes(), peers, findPeerQuery, options)) {\n      if (event.name === 'FINAL_PEER') {\n        foundPeer = true\n      }\n\n      yield event\n    }\n\n    if (!foundPeer) {\n      yield queryErrorEvent({ from: this.components.getPeerId(), error: errcode(new Error('Not found'), 'ERR_NOT_FOUND') })\n    }\n  }\n\n  /**\n   * Kademlia 'node lookup' operation on a key, which could be a the\n   * bytes from a multihash or a peer ID\n   */\n  async * getClosestPeers (key: Uint8Array, options: QueryOptions = {}) {\n    this.log('getClosestPeers to %b', key)\n    const id = await utils.convertBuffer(key)\n    const tablePeers = this.routingTable.closestPeers(id)\n    const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n    const peers = new PeerDistanceList(id, this.routingTable.kBucketSize)\n    await Promise.all(tablePeers.map(async peer => await peers.add(peer)))\n\n    const getCloserPeersQuery: QueryFunc = async function * ({ peer, signal }) {\n      self.log('closerPeersSingle %s from %p', uint8ArrayToString(key, 'base32'), peer)\n      const request = new Message(MESSAGE_TYPE.FIND_NODE, key, 0)\n\n      yield * self.network.sendRequest(peer, request, { signal })\n    }\n\n    for await (const event of this.queryManager.run(key, tablePeers, getCloserPeersQuery, options)) {\n      yield event\n\n      if (event.name === 'PEER_RESPONSE') {\n        await Promise.all(event.closer.map(async peerData => await peers.add(peerData.id)))\n      }\n    }\n\n    this.log('found %d peers close to %b', peers.length, key)\n\n    for (const peer of peers.peers) {\n      yield finalPeerEvent({\n        from: this.components.getPeerId(),\n        peer: {\n          id: peer,\n          multiaddrs: (await (this.components.getPeerStore().addressBook.get(peer)) ?? []).map(addr => addr.multiaddr),\n          protocols: []\n        }\n      })\n    }\n  }\n\n  /**\n   * Query a particular peer for the value for the given key.\n   * It will either return the value or a list of closer peers.\n   *\n   * Note: The peerStore is updated with new addresses found for the given peer.\n   */\n  async * getValueOrPeers (peer: PeerId, key: Uint8Array, options: AbortOptions = {}) {\n    for await (const event of this._getValueSingle(peer, key, options)) {\n      if (event.name === 'PEER_RESPONSE') {\n        if (event.record != null) {\n          // We have a record\n          try {\n            await this._verifyRecordOnline(event.record)\n          } catch (err: any) {\n            const errMsg = 'invalid record received, discarded'\n            this.log(errMsg)\n\n            yield queryErrorEvent({ from: event.from, error: errcode(new Error(errMsg), 'ERR_INVALID_RECORD') })\n            continue\n          }\n        }\n      }\n\n      yield event\n    }\n  }\n\n  /**\n   * Verify a record, fetching missing public keys from the network.\n   * Throws an error if the record is invalid.\n   */\n  async _verifyRecordOnline (record: DHTRecord) {\n    if (record.timeReceived == null) {\n      throw errcode(new Error('invalid record received'), 'ERR_INVALID_RECORD')\n    }\n\n    await verifyRecord(this.validators, new Libp2pRecord(record.key, record.value, record.timeReceived))\n  }\n\n  /**\n   * Get the nearest peers to the given query, but if closer\n   * than self\n   */\n  async getCloserPeersOffline (key: Uint8Array, closerThan: PeerId) {\n    const id = await utils.convertBuffer(key)\n    const ids = this.routingTable.closestPeers(id)\n    const output: PeerInfo[] = []\n\n    for (const peerId of ids) {\n      if (peerId.equals(closerThan)) {\n        continue\n      }\n\n      try {\n        const addresses = await this.components.getPeerStore().addressBook.get(peerId)\n        const protocols = await this.components.getPeerStore().protoBook.get(peerId)\n\n        output.push({\n          id: peerId,\n          multiaddrs: addresses.map((address) => address.multiaddr),\n          protocols\n        })\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n    }\n\n    if (output.length > 0) {\n      this.log('getCloserPeersOffline found %d peer(s) closer to %b than %p', output.length, key, closerThan)\n    } else {\n      this.log('getCloserPeersOffline could not find peer closer to %b than %p', key, closerThan)\n    }\n\n    return output\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}