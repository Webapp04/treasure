{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport mergeOptions from 'merge-options';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { murmur3128 } from '@multiformats/murmur3';\n\n/**\n * @param {Uint8Array} buf\n */\nfunction hamtHashFn(_x) {\n  return _hamtHashFn.apply(this, arguments);\n}\n/**\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n/**\n * @type {ImporterOptions}\n */\nfunction _hamtHashFn() {\n  _hamtHashFn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(buf) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return murmur3128.encode(buf);\n        case 2:\n          return _context.abrupt(\"return\", _context.sent.slice(0, 8).reverse());\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _hamtHashFn.apply(this, arguments);\n}\nvar defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  // 'flat', 'trickle'\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file',\n  // 'raw'\n  cidVersion: 0,\n  progress: function progress() {\n    return function () {};\n  },\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  // FIXME: This number is too big for JavaScript\n  // https://github.com/ipfs/go-ipfs-chunker/blob/d0125832512163708c0804a3cda060e21acddae4/rabin.go#L11\n  polynomial: 17437180132763653,\n  // eslint-disable-line no-loss-of-precision\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn: hamtHashFn,\n  hamtHashCode: 0x22,\n  hamtBucketBits: 8\n};\n\n/**\n * @param {UserImporterOptions} options\n * @returns {ImporterOptions}\n */\nexport default (function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = mergeOptions.bind({\n    ignoreUndefined: true\n  });\n  return defaults(defaultOptions, options);\n});","map":{"version":3,"names":["mergeOptions","sha256","murmur3128","hamtHashFn","_x","_hamtHashFn","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","buf","wrap","_callee$","_context","prev","next","encode","abrupt","sent","slice","reverse","stop","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","hasher","leafType","cidVersion","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","window","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hidden","timeout","undefined","hamtHashCode","hamtBucketBits","options","length","defaults","bind","ignoreUndefined"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-importer/src/options.js"],"sourcesContent":["import mergeOptions from 'merge-options'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { murmur3128 } from '@multiformats/murmur3'\n\n/**\n * @param {Uint8Array} buf\n */\nasync function hamtHashFn (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\n/**\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @type {ImporterOptions}\n */\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced', // 'flat', 'trickle'\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file', // 'raw'\n  cidVersion: 0,\n  progress: () => () => {},\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  // FIXME: This number is too big for JavaScript\n  // https://github.com/ipfs/go-ipfs-chunker/blob/d0125832512163708c0804a3cda060e21acddae4/rabin.go#L11\n  polynomial: 17437180132763653, // eslint-disable-line no-loss-of-precision\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 0x22,\n  hamtBucketBits: 8\n}\n\n/**\n * @param {UserImporterOptions} options\n * @returns {ImporterOptions}\n */\nexport default (options = {}) => {\n  const defaults = mergeOptions.bind({ ignoreUndefined: true })\n  return defaults(defaultOptions, options)\n}\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,eAAe;AACxC,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,UAAU,QAAQ,uBAAuB;;AAElD;AACA;AACA;AAFA,SAGeC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAUzB;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAfA,SAAAC,QAA2BC,GAAG;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACdf,UAAU,CAACgB,MAAM,CAACN,GAAG,CAAC;QAAA;UAAA,OAAAG,QAAA,CAAAI,MAAA,WAAAJ,QAAA,CAAAK,IAAA,CAIjCC,KAAK,CAAC,CAAC,EAAE,CAAC,EAEVC,OAAO;QAAA;QAAA;UAAA,OAAAP,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAZ,OAAA;EAAA,CACX;EAAA,OAAAN,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAUD,IAAMiB,cAAc,GAAG;EACrBC,OAAO,EAAE,OAAO;EAChBC,QAAQ,EAAE,UAAU;EAAE;EACtBC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,KAAK;EACfC,sBAAsB,EAAE,IAAI;EAC5BC,MAAM,EAAE7B,MAAM;EACd8B,QAAQ,EAAE,MAAM;EAAE;EAClBC,UAAU,EAAE,CAAC;EACbC,QAAQ,EAAE,SAAAA,SAAA;IAAA,OAAM,YAAM,CAAC,CAAC;EAAA;EACxBC,mBAAmB,EAAE,IAAI;EACzBC,qBAAqB,EAAE,EAAE;EACzBC,qBAAqB,EAAE,EAAE;EACzBC,YAAY,EAAE,MAAM;EACpBC,YAAY,EAAE,MAAM;EACpBC,YAAY,EAAE,MAAM;EACpBC,MAAM,EAAE,EAAE;EACV;EACA;EACAC,UAAU,EAAE,iBAAiB;EAAE;EAC/BC,kBAAkB,EAAE,GAAG;EACvBC,WAAW,EAAE,CAAC;EACdC,iBAAiB,EAAE,KAAK;EACxBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAEC,SAAS;EAClB7C,UAAU,EAAVA,UAAU;EACV8C,YAAY,EAAE,IAAI;EAClBC,cAAc,EAAE;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA,gBAAe,YAAkB;EAAA,IAAjBC,OAAO,GAAA5C,SAAA,CAAA6C,MAAA,QAAA7C,SAAA,QAAAyC,SAAA,GAAAzC,SAAA,MAAG,CAAC,CAAC;EAC1B,IAAM8C,QAAQ,GAAGrD,YAAY,CAACsD,IAAI,CAAC;IAAEC,eAAe,EAAE;EAAK,CAAC,CAAC;EAC7D,OAAOF,QAAQ,CAAC7B,cAAc,EAAE2B,OAAO,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}