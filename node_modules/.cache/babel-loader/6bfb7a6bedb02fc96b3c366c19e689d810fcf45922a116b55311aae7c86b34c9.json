{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport parseDuration from 'parse-duration';\nimport errCode from 'err-code';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @typedef {import('ipfs-core-types/src/stats').BWOptions} BWOptions\n * @typedef {import('ipfs-core-types/src/stats').BWResult} BandwidthInfo\n * @typedef {import('libp2p').Libp2p} libp2p\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @param {libp2p} libp2p\n * @param {BWOptions} opts\n * @returns {BandwidthInfo}\n */\nfunction getBandwidthStats(libp2p, opts) {\n  var stats;\n  if (!libp2p.metrics) {\n    stats = undefined;\n  } else if (opts.peer) {\n    stats = libp2p.metrics.forPeer(opts.peer);\n  } else if (opts.proto) {\n    stats = libp2p.metrics.forProtocol(opts.proto);\n  } else {\n    stats = libp2p.metrics.getGlobal();\n  }\n  if (!stats) {\n    return {\n      totalIn: BigInt(0),\n      totalOut: BigInt(0),\n      rateIn: 0.0,\n      rateOut: 0.0\n    };\n  }\n  var movingAverages = stats.getMovingAverages();\n  var snapshot = stats.getSnapshot();\n  return {\n    totalIn: snapshot.dataReceived,\n    totalOut: snapshot.dataSent,\n    rateIn: movingAverages.dataReceived[60000].movingAverage / 60,\n    rateOut: movingAverages.dataSent[60000].movingAverage / 60\n  };\n}\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createBw(_ref2) {\n  var network = _ref2.network;\n  /**\n   * @type {import('ipfs-core-types/src/stats').API<{}>[\"bw\"]}\n   */\n  var bw = /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator(function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$_awaitAsyncGen, libp2p, interval, ms, timeoutId;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _awaitAsyncGenerator(network.use(options));\n            case 2:\n              _yield$_awaitAsyncGen = _context.sent;\n              libp2p = _yield$_awaitAsyncGen.libp2p;\n              if (options.poll) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 7;\n              return getBandwidthStats(libp2p, options);\n            case 7:\n              return _context.abrupt(\"return\");\n            case 8:\n              interval = options.interval || 1000;\n              ms = -1;\n              _context.prev = 10;\n              ms = typeof interval === 'string' ? parseDuration(interval) || -1 : interval;\n              if (!(!ms || ms < 0)) {\n                _context.next = 14;\n                break;\n              }\n              throw new Error('invalid duration');\n            case 14:\n              _context.next = 19;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](10);\n              throw errCode(_context.t0, 'ERR_INVALID_POLL_INTERVAL');\n            case 19:\n              _context.prev = 19;\n            case 20:\n              if (!true) {\n                _context.next = 27;\n                break;\n              }\n              _context.next = 23;\n              return getBandwidthStats(libp2p, options);\n            case 23:\n              _context.next = 25;\n              return _awaitAsyncGenerator(new Promise(function (resolve) {\n                timeoutId = setTimeout(resolve, ms);\n              }));\n            case 25:\n              _context.next = 20;\n              break;\n            case 27:\n              _context.prev = 27;\n              clearTimeout(timeoutId);\n              return _context.finish(27);\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[10, 16], [19,, 27, 30]]);\n      })();\n    });\n    return function bw() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return withTimeoutOption(bw);\n}","map":{"version":3,"names":["parseDuration","errCode","withTimeoutOption","getBandwidthStats","libp2p","opts","stats","metrics","undefined","peer","forPeer","proto","forProtocol","getGlobal","totalIn","BigInt","totalOut","rateIn","rateOut","movingAverages","getMovingAverages","snapshot","getSnapshot","dataReceived","dataSent","movingAverage","createBw","_ref2","network","bw","_ref","_wrapAsyncGenerator","options","arguments","length","_regeneratorRuntime","mark","_callee","_yield$_awaitAsyncGen","interval","ms","timeoutId","wrap","_callee$","_context","prev","next","_awaitAsyncGenerator","use","sent","poll","abrupt","Error","t0","Promise","resolve","setTimeout","clearTimeout","finish","stop","apply"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/stats/bw.js"],"sourcesContent":["import parseDuration from 'parse-duration'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('ipfs-core-types/src/stats').BWOptions} BWOptions\n * @typedef {import('ipfs-core-types/src/stats').BWResult} BandwidthInfo\n * @typedef {import('libp2p').Libp2p} libp2p\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @param {libp2p} libp2p\n * @param {BWOptions} opts\n * @returns {BandwidthInfo}\n */\nfunction getBandwidthStats (libp2p, opts) {\n  let stats\n\n  if (!libp2p.metrics) {\n    stats = undefined\n  } else if (opts.peer) {\n    stats = libp2p.metrics.forPeer(opts.peer)\n  } else if (opts.proto) {\n    stats = libp2p.metrics.forProtocol(opts.proto)\n  } else {\n    stats = libp2p.metrics.getGlobal()\n  }\n\n  if (!stats) {\n    return {\n      totalIn: BigInt(0),\n      totalOut: BigInt(0),\n      rateIn: 0.0,\n      rateOut: 0.0\n    }\n  }\n\n  const movingAverages = stats.getMovingAverages()\n  const snapshot = stats.getSnapshot()\n\n  return {\n    totalIn: snapshot.dataReceived,\n    totalOut: snapshot.dataSent,\n    rateIn: movingAverages.dataReceived[60000].movingAverage / 60,\n    rateOut: movingAverages.dataSent[60000].movingAverage / 60\n  }\n}\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createBw ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/stats').API<{}>[\"bw\"]}\n   */\n  const bw = async function * (options = {}) {\n    const { libp2p } = await network.use(options)\n\n    if (!options.poll) {\n      yield getBandwidthStats(libp2p, options)\n      return\n    }\n\n    const interval = options.interval || 1000\n    let ms = -1\n    try {\n      ms = typeof interval === 'string' ? parseDuration(interval) || -1 : interval\n      if (!ms || ms < 0) throw new Error('invalid duration')\n    } catch (/** @type {any} */ err) {\n      throw errCode(err, 'ERR_INVALID_POLL_INTERVAL')\n    }\n\n    let timeoutId\n    try {\n      while (true) {\n        yield getBandwidthStats(libp2p, options)\n        // eslint-disable-next-line no-loop-func\n        await new Promise(resolve => { timeoutId = setTimeout(resolve, ms) })\n      }\n    } finally {\n      clearTimeout(timeoutId)\n    }\n  }\n\n  return withTimeoutOption(bw)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}