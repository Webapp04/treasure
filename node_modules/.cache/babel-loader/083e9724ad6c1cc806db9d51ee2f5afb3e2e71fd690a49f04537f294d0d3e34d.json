{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { randomBytes } from '@libp2p/crypto';\nimport { peerIdFromBytes } from '@libp2p/peer-id';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { RPC } from '../message/rpc.js';\nimport { PublishConfigType, ValidateError } from '../types.js';\nimport { StrictSign, StrictNoSign } from '@libp2p/interface-pubsub';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nexport var SignPrefix = uint8ArrayFromString('libp2p-pubsub:');\nexport function buildRawMessage(_x, _x2, _x3, _x4) {\n  return _buildRawMessage.apply(this, arguments);\n}\nfunction _buildRawMessage() {\n  _buildRawMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(publishConfig, topic, originalData, transformedData) {\n    var rpcMsg, bytes, msg;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = publishConfig.type;\n          _context.next = _context.t0 === PublishConfigType.Signing ? 3 : _context.t0 === PublishConfigType.Anonymous ? 11 : 12;\n          break;\n        case 3:\n          rpcMsg = {\n            from: publishConfig.author.toBytes(),\n            data: transformedData,\n            seqno: randomBytes(8),\n            topic: topic,\n            signature: undefined,\n            key: undefined // Exclude key field for signing\n          }; // Get the message in bytes, and prepend with the pubsub prefix\n          // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n          bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsg).finish()]);\n          _context.next = 7;\n          return publishConfig.privateKey.sign(bytes);\n        case 7:\n          rpcMsg.signature = _context.sent;\n          rpcMsg.key = publishConfig.key;\n          msg = {\n            type: 'signed',\n            from: publishConfig.author,\n            data: originalData,\n            sequenceNumber: BigInt(\"0x\".concat(uint8ArrayToString(rpcMsg.seqno, 'base16'))),\n            topic: topic,\n            signature: rpcMsg.signature,\n            key: rpcMsg.key\n          };\n          return _context.abrupt(\"return\", {\n            raw: rpcMsg,\n            msg: msg\n          });\n        case 11:\n          return _context.abrupt(\"return\", {\n            raw: {\n              from: undefined,\n              data: transformedData,\n              seqno: undefined,\n              topic: topic,\n              signature: undefined,\n              key: undefined\n            },\n            msg: {\n              type: 'unsigned',\n              data: originalData,\n              topic: topic\n            }\n          });\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _buildRawMessage.apply(this, arguments);\n}\nexport function validateToRawMessage(_x5, _x6) {\n  return _validateToRawMessage.apply(this, arguments);\n}\nfunction _validateToRawMessage() {\n  _validateToRawMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(signaturePolicy, msg) {\n    var _msg$data;\n    var _msg$data2, _msg$key, fromPeerId, publicKey, rpcMsgPreSign, bytes;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = signaturePolicy;\n          _context2.next = _context2.t0 === StrictNoSign ? 3 : _context2.t0 === StrictSign ? 10 : 41;\n          break;\n        case 3:\n          if (!(msg.signature != null)) {\n            _context2.next = 5;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.SignaturePresent\n          });\n        case 5:\n          if (!(msg.seqno != null)) {\n            _context2.next = 7;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.SeqnoPresent\n          });\n        case 7:\n          if (!(msg.key != null)) {\n            _context2.next = 9;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.FromPresent\n          });\n        case 9:\n          return _context2.abrupt(\"return\", {\n            valid: true,\n            message: {\n              type: 'unsigned',\n              topic: msg.topic,\n              data: (_msg$data = msg.data) !== null && _msg$data !== void 0 ? _msg$data : new Uint8Array(0)\n            }\n          });\n        case 10:\n          if (!(msg.seqno == null)) {\n            _context2.next = 12;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidSeqno\n          });\n        case 12:\n          if (!(msg.seqno.length !== 8)) {\n            _context2.next = 14;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidSeqno\n          });\n        case 14:\n          if (!(msg.signature == null)) {\n            _context2.next = 16;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidSignature\n          });\n        case 16:\n          if (!(msg.from == null)) {\n            _context2.next = 18;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidPeerId\n          });\n        case 18:\n          _context2.prev = 18;\n          // TODO: Fix PeerId types\n          fromPeerId = peerIdFromBytes(msg.from);\n          _context2.next = 25;\n          break;\n        case 22:\n          _context2.prev = 22;\n          _context2.t1 = _context2[\"catch\"](18);\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidPeerId\n          });\n        case 25:\n          if (!msg.key) {\n            _context2.next = 31;\n            break;\n          }\n          publicKey = unmarshalPublicKey(msg.key);\n          // TODO: Should `fromPeerId.pubKey` be optional?\n          if (!(fromPeerId.publicKey !== undefined && !uint8ArrayEquals(publicKey.bytes, fromPeerId.publicKey))) {\n            _context2.next = 29;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidPeerId\n          });\n        case 29:\n          _context2.next = 34;\n          break;\n        case 31:\n          if (!(fromPeerId.publicKey == null)) {\n            _context2.next = 33;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidPeerId\n          });\n        case 33:\n          publicKey = unmarshalPublicKey(fromPeerId.publicKey);\n        case 34:\n          rpcMsgPreSign = {\n            from: msg.from,\n            data: msg.data,\n            seqno: msg.seqno,\n            topic: msg.topic,\n            signature: undefined,\n            key: undefined // Exclude key field for signing\n          }; // Get the message in bytes, and prepend with the pubsub prefix\n          // the signature is over the bytes \"libp2p-pubsub:<protobuf-message>\"\n          bytes = uint8ArrayConcat([SignPrefix, RPC.Message.encode(rpcMsgPreSign).finish()]);\n          _context2.next = 38;\n          return publicKey.verify(bytes, msg.signature);\n        case 38:\n          if (_context2.sent) {\n            _context2.next = 40;\n            break;\n          }\n          return _context2.abrupt(\"return\", {\n            valid: false,\n            error: ValidateError.InvalidSignature\n          });\n        case 40:\n          return _context2.abrupt(\"return\", {\n            valid: true,\n            message: {\n              type: 'signed',\n              from: fromPeerId,\n              data: (_msg$data2 = msg.data) !== null && _msg$data2 !== void 0 ? _msg$data2 : new Uint8Array(0),\n              sequenceNumber: BigInt(\"0x\".concat(uint8ArrayToString(msg.seqno, 'base16'))),\n              topic: msg.topic,\n              signature: msg.signature,\n              key: (_msg$key = msg.key) !== null && _msg$key !== void 0 ? _msg$key : marshalPublicKey(publicKey)\n            }\n          });\n        case 41:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[18, 22]]);\n  }));\n  return _validateToRawMessage.apply(this, arguments);\n}","map":{"version":3,"names":["concat","uint8ArrayConcat","fromString","uint8ArrayFromString","marshalPublicKey","unmarshalPublicKey","randomBytes","peerIdFromBytes","equals","uint8ArrayEquals","RPC","PublishConfigType","ValidateError","StrictSign","StrictNoSign","toString","uint8ArrayToString","SignPrefix","buildRawMessage","_x","_x2","_x3","_x4","_buildRawMessage","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","publishConfig","topic","originalData","transformedData","rpcMsg","bytes","msg","wrap","_callee$","_context","prev","next","t0","type","Signing","Anonymous","from","author","toBytes","data","seqno","signature","undefined","key","Message","encode","finish","privateKey","sign","sent","sequenceNumber","BigInt","abrupt","raw","stop","validateToRawMessage","_x5","_x6","_validateToRawMessage","_callee2","signaturePolicy","_msg$data","_msg$data2","_msg$key","fromPeerId","publicKey","rpcMsgPreSign","_callee2$","_context2","valid","error","SignaturePresent","SeqnoPresent","FromPresent","message","Uint8Array","InvalidSeqno","length","InvalidSignature","InvalidPeerId","t1","verify"],"sources":["../../../src/utils/buildRawMessage.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}