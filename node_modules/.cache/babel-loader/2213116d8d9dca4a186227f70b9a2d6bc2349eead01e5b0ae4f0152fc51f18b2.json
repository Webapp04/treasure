{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport hashlru from 'hashlru';\n\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n * @todo move this to ipfs-utils or it's own package\n *\n * @template T\n * @class TLRU\n */\nexport var TLRU = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of TLRU.\n   *\n   * @param {number} maxSize\n   */\n  function TLRU(maxSize) {\n    _classCallCheck(this, TLRU);\n    this.lru = hashlru(maxSize);\n  }\n\n  /**\n   * Get the value from the a key\n   *\n   * @param {string} key\n   * @returns {T|undefined}\n   * @memberof TLoRU\n   */\n  _createClass(TLRU, [{\n    key: \"get\",\n    value: function get(key) {\n      var value = this.lru.get(key);\n      if (value) {\n        if (value.expire && value.expire < Date.now()) {\n          this.lru.remove(key);\n          return undefined;\n        }\n        return value.value;\n      }\n      return undefined;\n    }\n\n    /**\n     * Set a key value pair\n     *\n     * @param {string} key\n     * @param {T} value\n     * @param {number} ttl - in miliseconds\n     * @returns {void}\n     */\n  }, {\n    key: \"set\",\n    value: function set(key, value, ttl) {\n      this.lru.set(key, {\n        value: value,\n        expire: Date.now() + ttl\n      });\n    }\n\n    /**\n     * Find if the cache has the key\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      var value = this.get(key);\n      if (value) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Remove key\n     *\n     * @param {string} key\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      this.lru.remove(key);\n    }\n\n    /**\n     * Clears the cache\n     *\n     * @memberof TLRU\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.lru.clear();\n    }\n  }]);\n  return TLRU;\n}();","map":{"version":3,"names":["hashlru","TLRU","maxSize","_classCallCheck","lru","_createClass","key","value","get","expire","Date","now","remove","undefined","set","ttl","has","clear"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core-config/src/utils/tlru.js"],"sourcesContent":["import hashlru from 'hashlru'\n\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n * @todo move this to ipfs-utils or it's own package\n *\n * @template T\n * @class TLRU\n */\nexport class TLRU {\n  /**\n   * Creates an instance of TLRU.\n   *\n   * @param {number} maxSize\n   */\n  constructor (maxSize) {\n    this.lru = hashlru(maxSize)\n  }\n\n  /**\n   * Get the value from the a key\n   *\n   * @param {string} key\n   * @returns {T|undefined}\n   * @memberof TLoRU\n   */\n  get (key) {\n    const value = this.lru.get(key)\n    if (value) {\n      if ((value.expire) && (value.expire < Date.now())) {\n        this.lru.remove(key)\n        return undefined\n      }\n      return value.value\n    }\n    return undefined\n  }\n\n  /**\n   * Set a key value pair\n   *\n   * @param {string} key\n   * @param {T} value\n   * @param {number} ttl - in miliseconds\n   * @returns {void}\n   */\n  set (key, value, ttl) {\n    this.lru.set(key, { value, expire: Date.now() + ttl })\n  }\n\n  /**\n   * Find if the cache has the key\n   *\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has (key) {\n    const value = this.get(key)\n    if (value) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Remove key\n   *\n   * @param {string} key\n   */\n  remove (key) {\n    this.lru.remove(key)\n  }\n\n  /**\n   * Clears the cache\n   *\n   * @memberof TLRU\n   */\n  clear () {\n    this.lru.clear()\n  }\n}\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,SAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,IAAI;EACf;AACF;AACA;AACA;AACA;EACE,SAAAA,KAAaC,OAAO,EAAE;IAAAC,eAAA,OAAAF,IAAA;IACpB,IAAI,CAACG,GAAG,GAAGJ,OAAO,CAACE,OAAO,CAAC;EAC7B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANEG,YAAA,CAAAJ,IAAA;IAAAK,GAAA;IAAAC,KAAA,EAOA,SAAAC,IAAKF,GAAG,EAAE;MACR,IAAMC,KAAK,GAAG,IAAI,CAACH,GAAG,CAACI,GAAG,CAACF,GAAG,CAAC;MAC/B,IAAIC,KAAK,EAAE;QACT,IAAKA,KAAK,CAACE,MAAM,IAAMF,KAAK,CAACE,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAE,EAAE;UACjD,IAAI,CAACP,GAAG,CAACQ,MAAM,CAACN,GAAG,CAAC;UACpB,OAAOO,SAAS;QAClB;QACA,OAAON,KAAK,CAACA,KAAK;MACpB;MACA,OAAOM,SAAS;IAClB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAP,GAAA;IAAAC,KAAA,EAQA,SAAAO,IAAKR,GAAG,EAAEC,KAAK,EAAEQ,GAAG,EAAE;MACpB,IAAI,CAACX,GAAG,CAACU,GAAG,CAACR,GAAG,EAAE;QAAEC,KAAK,EAALA,KAAK;QAAEE,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGI;MAAI,CAAC,CAAC;IACxD;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAT,GAAA;IAAAC,KAAA,EAMA,SAAAS,IAAKV,GAAG,EAAE;MACR,IAAMC,KAAK,GAAG,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC;MAC3B,IAAIC,KAAK,EAAE;QACT,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAD,GAAA;IAAAC,KAAA,EAKA,SAAAK,OAAQN,GAAG,EAAE;MACX,IAAI,CAACF,GAAG,CAACQ,MAAM,CAACN,GAAG,CAAC;IACtB;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAAA,GAAA;IAAAC,KAAA,EAKA,SAAAU,MAAA,EAAS;MACP,IAAI,CAACb,GAAG,CAACa,KAAK,CAAC,CAAC;IAClB;EAAC;EAAA,OAAAhB,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}