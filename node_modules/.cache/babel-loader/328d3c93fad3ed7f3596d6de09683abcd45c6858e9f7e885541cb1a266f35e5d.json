{"ast":null,"code":"import _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { createAdd } from './add.js';\nimport { createAddAll } from './add-all/index.js';\nimport { createCat } from './cat.js';\nimport { createGet } from './get.js';\nimport { createLs } from './ls.js';\n\n/**\n * @typedef {AddAllContext & CatContext & GetContext & ListContext } Context\n * @typedef {import('./add-all').Context} AddAllContext\n * @typedef {import('./cat').Context} CatContext\n * @typedef {import('./get').Context} GetContext\n * @typedef {import('./ls').Context} ListContext\n */\nexport var RootAPI = /*#__PURE__*/_createClass(\n/**\n * @param {Context} context\n */\nfunction RootAPI(_ref) {\n  var preload = _ref.preload,\n    repo = _ref.repo,\n    hashers = _ref.hashers,\n    options = _ref.options;\n  _classCallCheck(this, RootAPI);\n  var addAll = createAddAll({\n    preload: preload,\n    repo: repo,\n    options: options,\n    hashers: hashers\n  });\n  this.addAll = addAll;\n  this.add = createAdd({\n    addAll: addAll\n  });\n  this.cat = createCat({\n    repo: repo,\n    preload: preload\n  });\n  this.get = createGet({\n    repo: repo,\n    preload: preload\n  });\n  this.ls = createLs({\n    repo: repo,\n    preload: preload\n  });\n});","map":{"version":3,"names":["createAdd","createAddAll","createCat","createGet","createLs","RootAPI","_createClass","_ref","preload","repo","hashers","options","_classCallCheck","addAll","add","cat","get","ls"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/root.js"],"sourcesContent":["import { createAdd } from './add.js'\nimport { createAddAll } from './add-all/index.js'\nimport { createCat } from './cat.js'\nimport { createGet } from './get.js'\nimport { createLs } from './ls.js'\n\n/**\n * @typedef {AddAllContext & CatContext & GetContext & ListContext } Context\n * @typedef {import('./add-all').Context} AddAllContext\n * @typedef {import('./cat').Context} CatContext\n * @typedef {import('./get').Context} GetContext\n * @typedef {import('./ls').Context} ListContext\n */\nexport class RootAPI {\n  /**\n   * @param {Context} context\n   */\n  constructor ({ preload, repo, hashers, options }) {\n    const addAll = createAddAll({\n      preload,\n      repo,\n      options,\n      hashers\n    })\n\n    this.addAll = addAll\n    this.add = createAdd({ addAll })\n    this.cat = createCat({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.ls = createLs({ repo, preload })\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,UAAU;AACpC,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,QAAQ,QAAQ,SAAS;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,OAAO,gBAAAC,YAAA;AAClB;AACF;AACA;AACE,SAAAD,QAAAE,IAAA,EAAkD;EAAA,IAAnCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;EAAAC,eAAA,OAAAP,OAAA;EAC5C,IAAMQ,MAAM,GAAGZ,YAAY,CAAC;IAC1BO,OAAO,EAAPA,OAAO;IACPC,IAAI,EAAJA,IAAI;IACJE,OAAO,EAAPA,OAAO;IACPD,OAAO,EAAPA;EACF,CAAC,CAAC;EAEF,IAAI,CAACG,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,GAAG,GAAGd,SAAS,CAAC;IAAEa,MAAM,EAANA;EAAO,CAAC,CAAC;EAChC,IAAI,CAACE,GAAG,GAAGb,SAAS,CAAC;IAAEO,IAAI,EAAJA,IAAI;IAAED,OAAO,EAAPA;EAAQ,CAAC,CAAC;EACvC,IAAI,CAACQ,GAAG,GAAGb,SAAS,CAAC;IAAEM,IAAI,EAAJA,IAAI;IAAED,OAAO,EAAPA;EAAQ,CAAC,CAAC;EACvC,IAAI,CAACS,EAAE,GAAGb,QAAQ,CAAC;IAAEK,IAAI,EAAJA,IAAI;IAAED,OAAO,EAAPA;EAAQ,CAAC,CAAC;AACvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}