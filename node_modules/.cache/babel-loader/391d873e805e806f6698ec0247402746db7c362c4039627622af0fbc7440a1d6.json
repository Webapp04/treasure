{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Key } from 'interface-datastore/key';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nvar apiFile = new Key('api');\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function apiAddr(store) {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    get: function get() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var value;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return store.get(apiFile);\n            case 2:\n              value = _context.sent;\n              return _context.abrupt(\"return\", value && value.toString());\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set: function set(value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()));\n    },\n    /**\n     * Deletes api file\n     */\n    delete: function _delete() {\n      return store.delete(apiFile);\n    }\n  };\n}","map":{"version":3,"names":["Key","fromString","uint8ArrayFromString","apiFile","apiAddr","store","get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","value","wrap","_callee$","_context","prev","next","sent","abrupt","toString","stop","set","put","delete","_delete"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo/src/api-addr.js"],"sourcesContent":["\nimport { Key } from 'interface-datastore/key'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst apiFile = new Key('api')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function apiAddr (store) {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    async get () {\n      const value = await store.get(apiFile)\n      return value && value.toString()\n    },\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set (value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()))\n    },\n    /**\n     * Deletes api file\n     */\n    delete () {\n      return store.delete(apiFile)\n    }\n  }\n}\n"],"mappings":";;AACA,SAASA,GAAG,QAAQ,yBAAyB;AAC7C,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAE5E,IAAMC,OAAO,GAAG,IAAIH,GAAG,CAAC,KAAK,CAAC;;AAE9B;AACA;AACA;AACA;AACA,OAAO,SAASI,OAAOA,CAAEC,KAAK,EAAE;EAC9B,OAAO;IACL;AACJ;AACA;AACA;AACA;IACUC,GAAG,WAAAA,IAAA,EAAI;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,KAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACSX,KAAK,CAACC,GAAG,CAACH,OAAO,CAAC;YAAA;cAAhCQ,KAAK,GAAAG,QAAA,CAAAG,IAAA;cAAA,OAAAH,QAAA,CAAAI,MAAA,WACJP,KAAK,IAAIA,KAAK,CAACQ,QAAQ,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAV,OAAA;MAAA;IAClC,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;IACIW,GAAG,WAAAA,IAAEV,KAAK,EAAE;MACV,OAAON,KAAK,CAACiB,GAAG,CAACnB,OAAO,EAAED,oBAAoB,CAACS,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IACD;AACJ;AACA;IACII,MAAM,WAAAC,QAAA,EAAI;MACR,OAAOnB,KAAK,CAACkB,MAAM,CAACpB,OAAO,CAAC;IAC9B;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}