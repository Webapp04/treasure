{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar START_MASKS = [255, 254, 252, 248, 240, 224, 192, 128];\nvar STOP_MASKS = [1, 3, 7, 15, 31, 63, 127, 255];\nexport var ConsumableBuffer = /*#__PURE__*/function () {\n  function ConsumableBuffer(value) {\n    _classCallCheck(this, ConsumableBuffer);\n    this._value = value;\n    this._currentBytePos = value.length - 1;\n    this._currentBitPos = 7;\n  }\n  _createClass(ConsumableBuffer, [{\n    key: \"availableBits\",\n    value: function availableBits() {\n      return this._currentBitPos + 1 + this._currentBytePos * 8;\n    }\n  }, {\n    key: \"totalBits\",\n    value: function totalBits() {\n      return this._value.length * 8;\n    }\n  }, {\n    key: \"take\",\n    value: function take(bits) {\n      var pendingBits = bits;\n      var result = 0;\n      while (pendingBits > 0 && this._haveBits()) {\n        var byte = this._value[this._currentBytePos];\n        var availableBits = this._currentBitPos + 1;\n        var taking = Math.min(availableBits, pendingBits);\n        var value = byteBitsToInt(byte, availableBits - taking, taking);\n        result = (result << taking) + value;\n        pendingBits -= taking;\n        this._currentBitPos -= taking;\n        if (this._currentBitPos < 0) {\n          this._currentBitPos = 7;\n          this._currentBytePos--;\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"untake\",\n    value: function untake(bits) {\n      this._currentBitPos += bits;\n      while (this._currentBitPos > 7) {\n        this._currentBitPos -= 8;\n        this._currentBytePos += 1;\n      }\n    }\n  }, {\n    key: \"_haveBits\",\n    value: function _haveBits() {\n      return this._currentBytePos >= 0;\n    }\n  }]);\n  return ConsumableBuffer;\n}();\nfunction byteBitsToInt(byte, start, length) {\n  var mask = maskFor(start, length);\n  return (byte & mask) >>> start;\n}\nfunction maskFor(start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)];\n}","map":{"version":3,"names":["START_MASKS","STOP_MASKS","ConsumableBuffer","value","_classCallCheck","_value","_currentBytePos","length","_currentBitPos","_createClass","key","availableBits","totalBits","take","bits","pendingBits","result","_haveBits","byte","taking","Math","min","byteBitsToInt","untake","start","mask","maskFor"],"sources":["/Users/apple/Documents/treasure/node_modules/hamt-sharding/src/consumable-buffer.ts"],"sourcesContent":["const START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nexport class ConsumableBuffer {\n  _value: Uint8Array\n  _currentBytePos: number\n  _currentBitPos: number\n\n  constructor (value: Uint8Array) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  take (bits: number) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits > 0 && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  untake (bits: number) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\nfunction byteBitsToInt (byte: number, start: number, length: number) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\nfunction maskFor (start: number, length: number) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n"],"mappings":";;AAAA,IAAMA,WAAW,GAAG,CAClB,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,EACV,GAAU,CACX;AAED,IAAMC,UAAU,GAAG,CACjB,CAAU,EACV,CAAU,EACV,CAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,GAAU,EACV,GAAU,CACX;AAED,WAAaC,gBAAgB;EAK3B,SAAAA,iBAAaC,KAAiB;IAAAC,eAAA,OAAAF,gBAAA;IAC5B,IAAI,CAACG,MAAM,GAAGF,KAAK;IACnB,IAAI,CAACG,eAAe,GAAGH,KAAK,CAACI,MAAM,GAAG,CAAC;IACvC,IAAI,CAACC,cAAc,GAAG,CAAC;EACzB;EAACC,YAAA,CAAAP,gBAAA;IAAAQ,GAAA;IAAAP,KAAA,EAED,SAAAQ,cAAA,EAAa;MACX,OAAO,IAAI,CAACH,cAAc,GAAG,CAAC,GAAG,IAAI,CAACF,eAAe,GAAG,CAAC;IAC3D;EAAC;IAAAI,GAAA;IAAAP,KAAA,EAED,SAAAS,UAAA,EAAS;MACP,OAAO,IAAI,CAACP,MAAM,CAACE,MAAM,GAAG,CAAC;IAC/B;EAAC;IAAAG,GAAA;IAAAP,KAAA,EAED,SAAAU,KAAMC,IAAY;MAChB,IAAIC,WAAW,GAAGD,IAAI;MACtB,IAAIE,MAAM,GAAG,CAAC;MACd,OAAOD,WAAW,GAAG,CAAC,IAAI,IAAI,CAACE,SAAS,EAAE,EAAE;QAC1C,IAAMC,IAAI,GAAG,IAAI,CAACb,MAAM,CAAC,IAAI,CAACC,eAAe,CAAC;QAC9C,IAAMK,aAAa,GAAG,IAAI,CAACH,cAAc,GAAG,CAAC;QAC7C,IAAMW,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACV,aAAa,EAAEI,WAAW,CAAC;QACnD,IAAMZ,KAAK,GAAGmB,aAAa,CAACJ,IAAI,EAAEP,aAAa,GAAGQ,MAAM,EAAEA,MAAM,CAAC;QACjEH,MAAM,GAAG,CAACA,MAAM,IAAIG,MAAM,IAAIhB,KAAK;QAEnCY,WAAW,IAAII,MAAM;QAErB,IAAI,CAACX,cAAc,IAAIW,MAAM;QAC7B,IAAI,IAAI,CAACX,cAAc,GAAG,CAAC,EAAE;UAC3B,IAAI,CAACA,cAAc,GAAG,CAAC;UACvB,IAAI,CAACF,eAAe,EAAE;;;MAI1B,OAAOU,MAAM;IACf;EAAC;IAAAN,GAAA;IAAAP,KAAA,EAED,SAAAoB,OAAQT,IAAY;MAClB,IAAI,CAACN,cAAc,IAAIM,IAAI;MAC3B,OAAO,IAAI,CAACN,cAAc,GAAG,CAAC,EAAE;QAC9B,IAAI,CAACA,cAAc,IAAI,CAAC;QACxB,IAAI,CAACF,eAAe,IAAI,CAAC;;IAE7B;EAAC;IAAAI,GAAA;IAAAP,KAAA,EAED,SAAAc,UAAA,EAAS;MACP,OAAO,IAAI,CAACX,eAAe,IAAI,CAAC;IAClC;EAAC;EAAA,OAAAJ,gBAAA;AAAA;AAGH,SAASoB,aAAaA,CAAEJ,IAAY,EAAEM,KAAa,EAAEjB,MAAc;EACjE,IAAMkB,IAAI,GAAGC,OAAO,CAACF,KAAK,EAAEjB,MAAM,CAAC;EACnC,OAAO,CAACW,IAAI,GAAGO,IAAI,MAAMD,KAAK;AAChC;AAEA,SAASE,OAAOA,CAAEF,KAAa,EAAEjB,MAAc;EAC7C,OAAOP,WAAW,CAACwB,KAAK,CAAC,GAAGvB,UAAU,CAACmB,IAAI,CAACC,GAAG,CAACd,MAAM,GAAGiB,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}