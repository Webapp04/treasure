{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\n// @ts-ignore\nimport BufferList from 'bl/BufferList.js';\n// @ts-ignore\nimport { create } from 'rabin-wasm';\nimport errcode from 'err-code';\n\n/**\n * @typedef {object} RabinOptions\n * @property {number} min\n * @property {number} max\n * @property {number} bits\n * @property {number} window\n * @property {number} polynomial\n */\n\n/**\n * @type {import('../types').Chunker}\n */\nfunction rabinChunker(_x, _x2) {\n  return _rabinChunker.apply(this, arguments);\n}\nfunction _rabinChunker() {\n  _rabinChunker = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source, options) {\n    var min, max, avg, sizepow, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(options.minChunkSize && options.maxChunkSize && options.avgChunkSize)) {\n            _context.next = 6;\n            break;\n          }\n          avg = options.avgChunkSize;\n          min = options.minChunkSize;\n          max = options.maxChunkSize;\n          _context.next = 13;\n          break;\n        case 6:\n          if (options.avgChunkSize) {\n            _context.next = 10;\n            break;\n          }\n          throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n        case 10:\n          avg = options.avgChunkSize;\n          min = avg / 3;\n          max = avg + avg / 2;\n        case 13:\n          if (!(min < 16)) {\n            _context.next = 15;\n            break;\n          }\n          throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n        case 15:\n          if (max < min) {\n            max = min;\n          }\n          if (avg < min) {\n            avg = min;\n          }\n          sizepow = Math.floor(Math.log2(avg));\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 20;\n          _iterator = _asyncIterator(rabin(source, {\n            min: min,\n            max: max,\n            bits: sizepow,\n            window: options.window,\n            polynomial: options.polynomial\n          }));\n        case 22:\n          _context.next = 24;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 24:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 31;\n            break;\n          }\n          chunk = _step.value;\n          _context.next = 28;\n          return chunk;\n        case 28:\n          _iteratorAbruptCompletion = false;\n          _context.next = 22;\n          break;\n        case 31:\n          _context.next = 37;\n          break;\n        case 33:\n          _context.prev = 33;\n          _context.t0 = _context[\"catch\"](20);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 37:\n          _context.prev = 37;\n          _context.prev = 38;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 42;\n            break;\n          }\n          _context.next = 42;\n          return _awaitAsyncGenerator(_iterator.return());\n        case 42:\n          _context.prev = 42;\n          if (!_didIteratorError) {\n            _context.next = 45;\n            break;\n          }\n          throw _iteratorError;\n        case 45:\n          return _context.finish(42);\n        case 46:\n          return _context.finish(37);\n        case 47:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[20, 33, 37, 47], [38,, 42, 46]]);\n  }));\n  return _rabinChunker.apply(this, arguments);\n}\nexport default rabinChunker;\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {RabinOptions} options\n */\nfunction rabin(_x3, _x4) {\n  return _rabin.apply(this, arguments);\n}\nfunction _rabin() {\n  _rabin = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(source, options) {\n    var r, buffers, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, chunk, sizes, i, size, buf;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _awaitAsyncGenerator(create(options.bits, options.min, options.max, options.window));\n        case 2:\n          r = _context2.sent;\n          buffers = new BufferList();\n          _iteratorAbruptCompletion2 = false;\n          _didIteratorError2 = false;\n          _context2.prev = 6;\n          _iterator2 = _asyncIterator(source);\n        case 8:\n          _context2.next = 10;\n          return _awaitAsyncGenerator(_iterator2.next());\n        case 10:\n          if (!(_iteratorAbruptCompletion2 = !(_step2 = _context2.sent).done)) {\n            _context2.next = 27;\n            break;\n          }\n          chunk = _step2.value;\n          buffers.append(chunk);\n          sizes = r.fingerprint(chunk);\n          i = 0;\n        case 15:\n          if (!(i < sizes.length)) {\n            _context2.next = 24;\n            break;\n          }\n          size = sizes[i];\n          buf = buffers.slice(0, size);\n          buffers.consume(size);\n          _context2.next = 21;\n          return buf;\n        case 21:\n          i++;\n          _context2.next = 15;\n          break;\n        case 24:\n          _iteratorAbruptCompletion2 = false;\n          _context2.next = 8;\n          break;\n        case 27:\n          _context2.next = 33;\n          break;\n        case 29:\n          _context2.prev = 29;\n          _context2.t0 = _context2[\"catch\"](6);\n          _didIteratorError2 = true;\n          _iteratorError2 = _context2.t0;\n        case 33:\n          _context2.prev = 33;\n          _context2.prev = 34;\n          if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n            _context2.next = 38;\n            break;\n          }\n          _context2.next = 38;\n          return _awaitAsyncGenerator(_iterator2.return());\n        case 38:\n          _context2.prev = 38;\n          if (!_didIteratorError2) {\n            _context2.next = 41;\n            break;\n          }\n          throw _iteratorError2;\n        case 41:\n          return _context2.finish(38);\n        case 42:\n          return _context2.finish(33);\n        case 43:\n          if (!buffers.length) {\n            _context2.next = 46;\n            break;\n          }\n          _context2.next = 46;\n          return buffers.slice(0);\n        case 46:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[6, 29, 33, 43], [34,, 38, 42]]);\n  }));\n  return _rabin.apply(this, arguments);\n}","map":{"version":3,"names":["BufferList","create","errcode","rabinChunker","_x","_x2","_rabinChunker","apply","arguments","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","source","options","min","max","avg","sizepow","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","wrap","_callee$","_context","prev","next","minChunkSize","maxChunkSize","avgChunkSize","Error","Math","floor","log2","_asyncIterator","rabin","bits","window","polynomial","_awaitAsyncGenerator","sent","done","value","t0","return","finish","stop","_x3","_x4","_rabin","_callee2","r","buffers","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","sizes","i","size","buf","_callee2$","_context2","append","fingerprint","length","slice","consume"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-importer/src/chunker/rabin.js"],"sourcesContent":["// @ts-ignore\nimport BufferList from 'bl/BufferList.js'\n// @ts-ignore\nimport { create } from 'rabin-wasm'\nimport errcode from 'err-code'\n\n/**\n * @typedef {object} RabinOptions\n * @property {number} min\n * @property {number} max\n * @property {number} bits\n * @property {number} window\n * @property {number} polynomial\n */\n\n/**\n * @type {import('../types').Chunker}\n */\nasync function * rabinChunker (source, options) {\n  let min, max, avg\n\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize\n    min = options.minChunkSize\n    max = options.maxChunkSize\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE')\n  } else {\n    avg = options.avgChunkSize\n    min = avg / 3\n    max = avg + (avg / 2)\n  }\n\n  // validate min/max/avg in the same way as go\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE')\n  }\n\n  if (max < min) {\n    max = min\n  }\n\n  if (avg < min) {\n    avg = min\n  }\n\n  const sizepow = Math.floor(Math.log2(avg))\n\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk\n  }\n}\n\nexport default rabinChunker\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {RabinOptions} options\n */\nasync function * rabin (source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window)\n  const buffers = new BufferList()\n\n  for await (const chunk of source) {\n    buffers.append(chunk)\n\n    const sizes = r.fingerprint(chunk)\n\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i]\n      const buf = buffers.slice(0, size)\n      buffers.consume(size)\n\n      yield buf\n    }\n  }\n\n  if (buffers.length) {\n    yield buffers.slice(0)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}