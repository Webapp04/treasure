{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createStat(_ref) {\n  var network = _ref.network;\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"stat\"]}\n   */\n  function stat() {\n    return _stat.apply(this, arguments);\n  }\n  function _stat() {\n    _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        bitswap,\n        snapshot,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return network.use(options);\n          case 3:\n            bitswap = _context.sent.bitswap;\n            snapshot = bitswap.stat().snapshot;\n            return _context.abrupt(\"return\", {\n              provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n              blocksReceived: BigInt(snapshot.blocksReceived.toString()),\n              wantlist: Array.from(bitswap.getWantlist()).map(function (e) {\n                return e[1].cid;\n              }),\n              peers: bitswap.peers(),\n              dupBlksReceived: BigInt(snapshot.dupBlksReceived.toString()),\n              dupDataReceived: BigInt(snapshot.dupDataReceived.toString()),\n              dataReceived: BigInt(snapshot.dataReceived.toString()),\n              blocksSent: BigInt(snapshot.blocksSent.toString()),\n              dataSent: BigInt(snapshot.dataSent.toString())\n            });\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _stat.apply(this, arguments);\n  }\n  return withTimeoutOption(stat);\n}","map":{"version":3,"names":["withTimeoutOption","createStat","_ref","network","stat","_stat","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","bitswap","snapshot","_args","wrap","_callee$","_context","prev","next","length","undefined","use","sent","abrupt","provideBufLen","parseInt","providesBufferLength","toString","blocksReceived","BigInt","wantlist","Array","from","getWantlist","map","e","cid","peers","dupBlksReceived","dupDataReceived","dataReceived","blocksSent","dataSent","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/bitswap/stat.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createStat ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    /** @type {import('ipfs-bitswap').IPFSBitswap} */\n    const bitswap = (await network.use(options)).bitswap\n    const snapshot = bitswap.stat().snapshot\n\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: BigInt(snapshot.blocksReceived.toString()),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers(),\n      dupBlksReceived: BigInt(snapshot.dupBlksReceived.toString()),\n      dupDataReceived: BigInt(snapshot.dupDataReceived.toString()),\n      dataReceived: BigInt(snapshot.dataReceived.toString()),\n      blocksSent: BigInt(snapshot.blocksSent.toString()),\n      dataSent: BigInt(snapshot.dataSent.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAAe;EAAA,IAAXC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EACnC;AACF;AACA;EAFE,SAGeC,IAAIA,CAAA;IAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,MAAA;IAAAA,KAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAnB,SAAAC,QAAA;MAAA,IAAAC,OAAA;QAAAC,OAAA;QAAAC,QAAA;QAAAC,KAAA,GAAAR,SAAA;MAAA,OAAAE,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAqBR,OAAO,GAAAG,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OAERjB,OAAO,CAACoB,GAAG,CAACX,OAAO,CAAC;UAAA;YAArCC,OAAO,GAAAK,QAAA,CAAAM,IAAA,CAAgCX,OAAO;YAC9CC,QAAQ,GAAGD,OAAO,CAACT,IAAI,CAAC,CAAC,CAACU,QAAQ;YAAA,OAAAI,QAAA,CAAAO,MAAA,WAEjC;cACLC,aAAa,EAAEC,QAAQ,CAACb,QAAQ,CAACc,oBAAoB,CAACC,QAAQ,CAAC,CAAC,CAAC;cACjEC,cAAc,EAAEC,MAAM,CAACjB,QAAQ,CAACgB,cAAc,CAACD,QAAQ,CAAC,CAAC,CAAC;cAC1DG,QAAQ,EAAEC,KAAK,CAACC,IAAI,CAACrB,OAAO,CAACsB,WAAW,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG;cAAA,EAAC;cAC9DC,KAAK,EAAE1B,OAAO,CAAC0B,KAAK,CAAC,CAAC;cACtBC,eAAe,EAAET,MAAM,CAACjB,QAAQ,CAAC0B,eAAe,CAACX,QAAQ,CAAC,CAAC,CAAC;cAC5DY,eAAe,EAAEV,MAAM,CAACjB,QAAQ,CAAC2B,eAAe,CAACZ,QAAQ,CAAC,CAAC,CAAC;cAC5Da,YAAY,EAAEX,MAAM,CAACjB,QAAQ,CAAC4B,YAAY,CAACb,QAAQ,CAAC,CAAC,CAAC;cACtDc,UAAU,EAAEZ,MAAM,CAACjB,QAAQ,CAAC6B,UAAU,CAACd,QAAQ,CAAC,CAAC,CAAC;cAClDe,QAAQ,EAAEb,MAAM,CAACjB,QAAQ,CAAC8B,QAAQ,CAACf,QAAQ,CAAC,CAAC;YAC/C,CAAC;UAAA;UAAA;YAAA,OAAAX,QAAA,CAAA2B,IAAA;QAAA;MAAA,GAAAlC,OAAA;IAAA,CACF;IAAA,OAAAN,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOP,iBAAiB,CAACI,IAAI,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}