{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar Kinds = {\n  Null: function Null(obj) {\n    return obj === null;\n  },\n  Int: function Int(obj) {\n    return Number.isInteger(obj);\n  },\n  Float: function Float(obj) {\n    return typeof obj === 'number' && Number.isFinite(obj);\n  },\n  String: function String(obj) {\n    return typeof obj === 'string';\n  },\n  Bool: function Bool(obj) {\n    return typeof obj === 'boolean';\n  },\n  Bytes: function Bytes(obj) {\n    return obj instanceof Uint8Array;\n  },\n  Link: function Link(obj) {\n    return !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID === obj;\n  },\n  List: function List(obj) {\n    return Array.isArray(obj);\n  },\n  Map: function Map(obj) {\n    return !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID !== obj && !Kinds.List(obj) && !Kinds.Bytes(obj);\n  }\n};\nvar Types = {\n  Int: Kinds.Int,\n  'CarHeader > version': function CarHeaderVersion(obj) {\n    return Types.Int(obj);\n  },\n  'CarHeader > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarHeader > roots (anon)': function CarHeaderRootsAnon(obj) {\n    return Kinds.List(obj) && Array.prototype.every.call(obj, Types['CarHeader > roots (anon) > valueType (anon)']);\n  },\n  'CarHeader > roots': function CarHeaderRoots(obj) {\n    return Types['CarHeader > roots (anon)'](obj);\n  },\n  CarHeader: function CarHeader(obj) {\n    var keys = obj && Object.keys(obj);\n    return Kinds.Map(obj) && ['version'].every(function (k) {\n      return keys.includes(k);\n    }) && Object.entries(obj).every(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        value = _ref2[1];\n      return Types['CarHeader > ' + name] && Types['CarHeader > ' + name](value);\n    });\n  }\n};\nexport var CarHeader = Types.CarHeader;","map":{"version":3,"names":["Kinds","Null","obj","Int","Number","isInteger","Float","isFinite","String","Bool","Bytes","Uint8Array","Link","asCID","List","Array","isArray","Map","Types","CarHeaderVersion","CarHeaderRootsAnon","prototype","every","call","CarHeaderRoots","CarHeader","keys","Object","k","includes","entries","_ref","_ref2","_slicedToArray","name","value"],"sources":["/Users/apple/Documents/treasure/node_modules/@ipld/car/esm/lib/header-validator.js"],"sourcesContent":["const Kinds = {\n  Null: obj => obj === null,\n  Int: obj => Number.isInteger(obj),\n  Float: obj => typeof obj === 'number' && Number.isFinite(obj),\n  String: obj => typeof obj === 'string',\n  Bool: obj => typeof obj === 'boolean',\n  Bytes: obj => obj instanceof Uint8Array,\n  Link: obj => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID === obj,\n  List: obj => Array.isArray(obj),\n  Map: obj => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID !== obj && !Kinds.List(obj) && !Kinds.Bytes(obj)\n};\nconst Types = {\n  Int: Kinds.Int,\n  'CarHeader > version': obj => Types.Int(obj),\n  'CarHeader > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarHeader > roots (anon)': obj => Kinds.List(obj) && Array.prototype.every.call(obj, Types['CarHeader > roots (anon) > valueType (anon)']),\n  'CarHeader > roots': obj => Types['CarHeader > roots (anon)'](obj),\n  CarHeader: obj => {\n    const keys = obj && Object.keys(obj);\n    return Kinds.Map(obj) && ['version'].every(k => keys.includes(k)) && Object.entries(obj).every(([name, value]) => Types['CarHeader > ' + name] && Types['CarHeader > ' + name](value));\n  }\n};\nexport const CarHeader = Types.CarHeader;"],"mappings":";AAAA,IAAMA,KAAK,GAAG;EACZC,IAAI,EAAE,SAAAA,KAAAC,GAAG;IAAA,OAAIA,GAAG,KAAK,IAAI;EAAA;EACzBC,GAAG,EAAE,SAAAA,IAAAD,GAAG;IAAA,OAAIE,MAAM,CAACC,SAAS,CAACH,GAAG,CAAC;EAAA;EACjCI,KAAK,EAAE,SAAAA,MAAAJ,GAAG;IAAA,OAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIE,MAAM,CAACG,QAAQ,CAACL,GAAG,CAAC;EAAA;EAC7DM,MAAM,EAAE,SAAAA,OAAAN,GAAG;IAAA,OAAI,OAAOA,GAAG,KAAK,QAAQ;EAAA;EACtCO,IAAI,EAAE,SAAAA,KAAAP,GAAG;IAAA,OAAI,OAAOA,GAAG,KAAK,SAAS;EAAA;EACrCQ,KAAK,EAAE,SAAAA,MAAAR,GAAG;IAAA,OAAIA,GAAG,YAAYS,UAAU;EAAA;EACvCC,IAAI,EAAE,SAAAA,KAAAV,GAAG;IAAA,OAAI,CAACF,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACW,KAAK,KAAKX,GAAG;EAAA;EAC7EY,IAAI,EAAE,SAAAA,KAAAZ,GAAG;IAAA,OAAIa,KAAK,CAACC,OAAO,CAACd,GAAG,CAAC;EAAA;EAC/Be,GAAG,EAAE,SAAAA,IAAAf,GAAG;IAAA,OAAI,CAACF,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACW,KAAK,KAAKX,GAAG,IAAI,CAACF,KAAK,CAACc,IAAI,CAACZ,GAAG,CAAC,IAAI,CAACF,KAAK,CAACU,KAAK,CAACR,GAAG,CAAC;EAAA;AACvH,CAAC;AACD,IAAMgB,KAAK,GAAG;EACZf,GAAG,EAAEH,KAAK,CAACG,GAAG;EACd,qBAAqB,EAAE,SAAAgB,iBAAAjB,GAAG;IAAA,OAAIgB,KAAK,CAACf,GAAG,CAACD,GAAG,CAAC;EAAA;EAC5C,6CAA6C,EAAEF,KAAK,CAACY,IAAI;EACzD,0BAA0B,EAAE,SAAAQ,mBAAAlB,GAAG;IAAA,OAAIF,KAAK,CAACc,IAAI,CAACZ,GAAG,CAAC,IAAIa,KAAK,CAACM,SAAS,CAACC,KAAK,CAACC,IAAI,CAACrB,GAAG,EAAEgB,KAAK,CAAC,6CAA6C,CAAC,CAAC;EAAA;EAC3I,mBAAmB,EAAE,SAAAM,eAAAtB,GAAG;IAAA,OAAIgB,KAAK,CAAC,0BAA0B,CAAC,CAAChB,GAAG,CAAC;EAAA;EAClEuB,SAAS,EAAE,SAAAA,UAAAvB,GAAG,EAAI;IAChB,IAAMwB,IAAI,GAAGxB,GAAG,IAAIyB,MAAM,CAACD,IAAI,CAACxB,GAAG,CAAC;IACpC,OAAOF,KAAK,CAACiB,GAAG,CAACf,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAACoB,KAAK,CAAC,UAAAM,CAAC;MAAA,OAAIF,IAAI,CAACG,QAAQ,CAACD,CAAC,CAAC;IAAA,EAAC,IAAID,MAAM,CAACG,OAAO,CAAC5B,GAAG,CAAC,CAACoB,KAAK,CAAC,UAAAS,IAAA;MAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;QAAEG,IAAI,GAAAF,KAAA;QAAEG,KAAK,GAAAH,KAAA;MAAA,OAAMd,KAAK,CAAC,cAAc,GAAGgB,IAAI,CAAC,IAAIhB,KAAK,CAAC,cAAc,GAAGgB,IAAI,CAAC,CAACC,KAAK,CAAC;IAAA,EAAC;EACxL;AACF,CAAC;AACD,OAAO,IAAMV,SAAS,GAAGP,KAAK,CAACO,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}