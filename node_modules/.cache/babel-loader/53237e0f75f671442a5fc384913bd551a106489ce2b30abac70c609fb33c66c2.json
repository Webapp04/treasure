{"ast":null,"code":"import { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { IpnsEntry } from './pb/ipns.js';\nimport { parseRFC3339 } from './utils.js';\nexport var ipnsSelector = function ipnsSelector(key, data) {\n  var entries = data.map(function (buf, index) {\n    return {\n      entry: IpnsEntry.decode(buf),\n      index: index\n    };\n  });\n  entries.sort(function (a, b) {\n    var _a$entry$sequence, _b$entry$sequence, _a$entry$validity, _b$entry$validity;\n    // having a newer signature version is better than an older signature version\n    if (a.entry.signatureV2 != null && b.entry.signatureV2 == null) {\n      return -1;\n    } else if (a.entry.signatureV2 == null && b.entry.signatureV2 != null) {\n      return 1;\n    }\n    var aSeq = (_a$entry$sequence = a.entry.sequence) !== null && _a$entry$sequence !== void 0 ? _a$entry$sequence : 0n;\n    var bSeq = (_b$entry$sequence = b.entry.sequence) !== null && _b$entry$sequence !== void 0 ? _b$entry$sequence : 0n;\n    // choose later sequence number\n    if (aSeq > bSeq) {\n      return -1;\n    } else if (aSeq < bSeq) {\n      return 1;\n    }\n    var aValidty = (_a$entry$validity = a.entry.validity) !== null && _a$entry$validity !== void 0 ? _a$entry$validity : new Uint8Array(0);\n    var bValidty = (_b$entry$validity = b.entry.validity) !== null && _b$entry$validity !== void 0 ? _b$entry$validity : new Uint8Array(0);\n    // choose longer lived record if sequence numbers the same\n    var entryAValidityDate = parseRFC3339(uint8ArrayToString(aValidty));\n    var entryBValidityDate = parseRFC3339(uint8ArrayToString(bValidty));\n    if (entryAValidityDate.getTime() > entryBValidityDate.getTime()) {\n      return -1;\n    }\n    if (entryAValidityDate.getTime() < entryBValidityDate.getTime()) {\n      return 1;\n    }\n    return 0;\n  });\n  return entries[0].index;\n};","map":{"version":3,"names":["toString","uint8ArrayToString","IpnsEntry","parseRFC3339","ipnsSelector","key","data","entries","map","buf","index","entry","decode","sort","a","b","_a$entry$sequence","_b$entry$sequence","_a$entry$validity","_b$entry$validity","signatureV2","aSeq","sequence","bSeq","aValidty","validity","Uint8Array","bValidty","entryAValidityDate","entryBValidityDate","getTime"],"sources":["/Users/apple/Documents/treasure/node_modules/ipns/src/selector.ts"],"sourcesContent":["import { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { IpnsEntry } from './pb/ipns.js'\nimport { parseRFC3339 } from './utils.js'\nimport type { SelectFn } from '@libp2p/interface-dht'\n\nexport const ipnsSelector: SelectFn = (key, data) => {\n  const entries = data.map((buf, index) => ({\n    entry: IpnsEntry.decode(buf),\n    index\n  }))\n\n  entries.sort((a, b) => {\n    // having a newer signature version is better than an older signature version\n    if (a.entry.signatureV2 != null && b.entry.signatureV2 == null) {\n      return -1\n    } else if (a.entry.signatureV2 == null && b.entry.signatureV2 != null) {\n      return 1\n    }\n\n    const aSeq = a.entry.sequence ?? 0n\n    const bSeq = b.entry.sequence ?? 0n\n\n    // choose later sequence number\n    if (aSeq > bSeq) {\n      return -1\n    } else if (aSeq < bSeq) {\n      return 1\n    }\n\n    const aValidty = a.entry.validity ?? new Uint8Array(0)\n    const bValidty = b.entry.validity ?? new Uint8Array(0)\n\n    // choose longer lived record if sequence numbers the same\n    const entryAValidityDate = parseRFC3339(uint8ArrayToString(aValidty))\n    const entryBValidityDate = parseRFC3339(uint8ArrayToString(bValidty))\n\n    if (entryAValidityDate.getTime() > entryBValidityDate.getTime()) {\n      return -1\n    }\n\n    if (entryAValidityDate.getTime() < entryBValidityDate.getTime()) {\n      return 1\n    }\n\n    return 0\n  })\n\n  return entries[0].index\n}\n"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AACtE,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,YAAY,QAAQ,YAAY;AAGzC,OAAO,IAAMC,YAAY,GAAa,SAAzBA,YAAYA,CAAcC,GAAG,EAAEC,IAAI,EAAI;EAClD,IAAMC,OAAO,GAAGD,IAAI,CAACE,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK;IAAA,OAAM;MACxCC,KAAK,EAAET,SAAS,CAACU,MAAM,CAACH,GAAG,CAAC;MAC5BC,KAAK,EAALA;KACD;EAAA,CAAC,CAAC;EAEHH,OAAO,CAACM,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAI;IAAA,IAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA;IACpB;IACA,IAAIL,CAAC,CAACH,KAAK,CAACS,WAAW,IAAI,IAAI,IAAIL,CAAC,CAACJ,KAAK,CAACS,WAAW,IAAI,IAAI,EAAE;MAC9D,OAAO,CAAC,CAAC;KACV,MAAM,IAAIN,CAAC,CAACH,KAAK,CAACS,WAAW,IAAI,IAAI,IAAIL,CAAC,CAACJ,KAAK,CAACS,WAAW,IAAI,IAAI,EAAE;MACrE,OAAO,CAAC;;IAGV,IAAMC,IAAI,IAAAL,iBAAA,GAAGF,CAAC,CAACH,KAAK,CAACW,QAAQ,cAAAN,iBAAA,cAAAA,iBAAA,GAAI,EAAE;IACnC,IAAMO,IAAI,IAAAN,iBAAA,GAAGF,CAAC,CAACJ,KAAK,CAACW,QAAQ,cAAAL,iBAAA,cAAAA,iBAAA,GAAI,EAAE;IAEnC;IACA,IAAII,IAAI,GAAGE,IAAI,EAAE;MACf,OAAO,CAAC,CAAC;KACV,MAAM,IAAIF,IAAI,GAAGE,IAAI,EAAE;MACtB,OAAO,CAAC;;IAGV,IAAMC,QAAQ,IAAAN,iBAAA,GAAGJ,CAAC,CAACH,KAAK,CAACc,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI,IAAIQ,UAAU,CAAC,CAAC,CAAC;IACtD,IAAMC,QAAQ,IAAAR,iBAAA,GAAGJ,CAAC,CAACJ,KAAK,CAACc,QAAQ,cAAAN,iBAAA,cAAAA,iBAAA,GAAI,IAAIO,UAAU,CAAC,CAAC,CAAC;IAEtD;IACA,IAAME,kBAAkB,GAAGzB,YAAY,CAACF,kBAAkB,CAACuB,QAAQ,CAAC,CAAC;IACrE,IAAMK,kBAAkB,GAAG1B,YAAY,CAACF,kBAAkB,CAAC0B,QAAQ,CAAC,CAAC;IAErE,IAAIC,kBAAkB,CAACE,OAAO,EAAE,GAAGD,kBAAkB,CAACC,OAAO,EAAE,EAAE;MAC/D,OAAO,CAAC,CAAC;;IAGX,IAAIF,kBAAkB,CAACE,OAAO,EAAE,GAAGD,kBAAkB,CAACC,OAAO,EAAE,EAAE;MAC/D,OAAO,CAAC;;IAGV,OAAO,CAAC;EACV,CAAC,CAAC;EAEF,OAAOvB,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}