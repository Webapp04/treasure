{"ast":null,"code":"/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var KeyType;\n(function (KeyType) {\n  KeyType[\"RSA\"] = \"RSA\";\n  KeyType[\"Ed25519\"] = \"Ed25519\";\n  KeyType[\"Secp256k1\"] = \"Secp256k1\";\n})(KeyType || (KeyType = {}));\nvar __KeyTypeValues;\n(function (__KeyTypeValues) {\n  __KeyTypeValues[__KeyTypeValues[\"RSA\"] = 0] = \"RSA\";\n  __KeyTypeValues[__KeyTypeValues[\"Ed25519\"] = 1] = \"Ed25519\";\n  __KeyTypeValues[__KeyTypeValues[\"Secp256k1\"] = 2] = \"Secp256k1\";\n})(__KeyTypeValues || (__KeyTypeValues = {}));\n(function (KeyType) {\n  KeyType.codec = function () {\n    return enumeration(__KeyTypeValues);\n  };\n})(KeyType || (KeyType = {}));\nexport var PublicKey;\n(function (PublicKey) {\n  var _codec;\n  PublicKey.codec = function () {\n    if (_codec == null) {\n      _codec = message(function (obj, w) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.Type != null) {\n          w.uint32(8);\n          KeyType.codec().encode(obj.Type, w);\n        }\n        if (obj.Data != null) {\n          w.uint32(18);\n          w.bytes(obj.Data);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, function (reader, length) {\n        var obj = {};\n        var end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader);\n              break;\n            case 2:\n              obj.Data = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  PublicKey.encode = function (obj) {\n    return encodeMessage(obj, PublicKey.codec());\n  };\n  PublicKey.decode = function (buf) {\n    return decodeMessage(buf, PublicKey.codec());\n  };\n})(PublicKey || (PublicKey = {}));\nexport var PrivateKey;\n(function (PrivateKey) {\n  var _codec;\n  PrivateKey.codec = function () {\n    if (_codec == null) {\n      _codec = message(function (obj, w) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.Type != null) {\n          w.uint32(8);\n          KeyType.codec().encode(obj.Type, w);\n        }\n        if (obj.Data != null) {\n          w.uint32(18);\n          w.bytes(obj.Data);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, function (reader, length) {\n        var obj = {};\n        var end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader);\n              break;\n            case 2:\n              obj.Data = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  PrivateKey.encode = function (obj) {\n    return encodeMessage(obj, PrivateKey.codec());\n  };\n  PrivateKey.decode = function (buf) {\n    return decodeMessage(buf, PrivateKey.codec());\n  };\n})(PrivateKey || (PrivateKey = {}));","map":{"version":3,"names":["enumeration","encodeMessage","decodeMessage","message","KeyType","__KeyTypeValues","codec","PublicKey","_codec","obj","w","opts","arguments","length","undefined","lengthDelimited","fork","Type","uint32","encode","Data","bytes","ldelim","reader","end","len","pos","tag","decode","skipType","buf","PrivateKey"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/crypto/src/keys/keys.ts"],"sourcesContent":["/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\nimport type { Codec } from 'protons-runtime'\n\nexport enum KeyType {\n  RSA = 'RSA',\n  Ed25519 = 'Ed25519',\n  Secp256k1 = 'Secp256k1'\n}\n\nenum __KeyTypeValues {\n  RSA = 0,\n  Ed25519 = 1,\n  Secp256k1 = 2\n}\n\nexport namespace KeyType {\n  export const codec = () => {\n    return enumeration<KeyType>(__KeyTypeValues)\n  }\n}\nexport interface PublicKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PublicKey {\n  let _codec: Codec<PublicKey>\n\n  export const codec = (): Codec<PublicKey> => {\n    if (_codec == null) {\n      _codec = message<PublicKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            case 2:\n              obj.Data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: PublicKey): Uint8Array => {\n    return encodeMessage(obj, PublicKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PublicKey => {\n    return decodeMessage(buf, PublicKey.codec())\n  }\n}\n\nexport interface PrivateKey {\n  Type?: KeyType\n  Data?: Uint8Array\n}\n\nexport namespace PrivateKey {\n  let _codec: Codec<PrivateKey>\n\n  export const codec = (): Codec<PrivateKey> => {\n    if (_codec == null) {\n      _codec = message<PrivateKey>((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork()\n        }\n\n        if (obj.Type != null) {\n          w.uint32(8)\n          KeyType.codec().encode(obj.Type, w)\n        }\n\n        if (obj.Data != null) {\n          w.uint32(18)\n          w.bytes(obj.Data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          w.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.Type = KeyType.codec().decode(reader)\n              break\n            case 2:\n              obj.Data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: PrivateKey): Uint8Array => {\n    return encodeMessage(obj, PrivateKey.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): PrivateKey => {\n    return decodeMessage(buf, PrivateKey.codec())\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}