{"ast":null,"code":"'use strict';\n\nvar _ref = require('buffer') || {\n    Buffer: {\n      isBuffer: function isBuffer() {\n        return false;\n      }\n    }\n  },\n  Buffer = _ref.Buffer;\nvar _require = require('./text-endec')(),\n  textEncoder = _require.textEncoder,\n  textDecoder = _require.textDecoder;\nvar _require2 = require('./formats'),\n  BufferFormat = _require2.BufferFormat,\n  ViewFormat = _require2.ViewFormat,\n  UTF8Format = _require2.UTF8Format;\n\n/** @type {<T>(v: T) => v} */\nvar identity = function identity(v) {\n  return v;\n};\n\n/**\n * @type {typeof import('./encodings').utf8}\n */\nexports.utf8 = new UTF8Format({\n  encode: function encode(data) {\n    // On node 16.9.1 buffer.toString() is 5x faster than TextDecoder\n    return Buffer.isBuffer(data) ? data.toString('utf8') : ArrayBuffer.isView(data) ? textDecoder.decode(data) : String(data);\n  },\n  decode: identity,\n  name: 'utf8',\n  createViewTranscoder: function createViewTranscoder() {\n    return new ViewFormat({\n      encode: function encode(data) {\n        return ArrayBuffer.isView(data) ? data : textEncoder.encode(data);\n      },\n      decode: function decode(data) {\n        return textDecoder.decode(data);\n      },\n      name: \"\".concat(this.name, \"+view\")\n    });\n  },\n  createBufferTranscoder: function createBufferTranscoder() {\n    return new BufferFormat({\n      encode: function encode(data) {\n        return Buffer.isBuffer(data) ? data : ArrayBuffer.isView(data) ? Buffer.from(data.buffer, data.byteOffset, data.byteLength) : Buffer.from(String(data), 'utf8');\n      },\n      decode: function decode(data) {\n        return data.toString('utf8');\n      },\n      name: \"\".concat(this.name, \"+buffer\")\n    });\n  }\n});\n\n/**\n * @type {typeof import('./encodings').json}\n */\nexports.json = new UTF8Format({\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  name: 'json'\n});\n\n/**\n * @type {typeof import('./encodings').buffer}\n */\nexports.buffer = new BufferFormat({\n  encode: function encode(data) {\n    return Buffer.isBuffer(data) ? data : ArrayBuffer.isView(data) ? Buffer.from(data.buffer, data.byteOffset, data.byteLength) : Buffer.from(String(data), 'utf8');\n  },\n  decode: identity,\n  name: 'buffer',\n  createViewTranscoder: function createViewTranscoder() {\n    return new ViewFormat({\n      encode: function encode(data) {\n        return ArrayBuffer.isView(data) ? data : Buffer.from(String(data), 'utf8');\n      },\n      decode: function decode(data) {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n      },\n      name: \"\".concat(this.name, \"+view\")\n    });\n  }\n});\n\n/**\n * @type {typeof import('./encodings').view}\n */\nexports.view = new ViewFormat({\n  encode: function encode(data) {\n    return ArrayBuffer.isView(data) ? data : textEncoder.encode(data);\n  },\n  decode: identity,\n  name: 'view',\n  createBufferTranscoder: function createBufferTranscoder() {\n    return new BufferFormat({\n      encode: function encode(data) {\n        return Buffer.isBuffer(data) ? data : ArrayBuffer.isView(data) ? Buffer.from(data.buffer, data.byteOffset, data.byteLength) : Buffer.from(String(data), 'utf8');\n      },\n      decode: identity,\n      name: \"\".concat(this.name, \"+buffer\")\n    });\n  }\n});\n\n/**\n * @type {typeof import('./encodings').hex}\n */\nexports.hex = new BufferFormat({\n  encode: function encode(data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'hex');\n  },\n  decode: function decode(buffer) {\n    return buffer.toString('hex');\n  },\n  name: 'hex'\n});\n\n/**\n * @type {typeof import('./encodings').base64}\n */\nexports.base64 = new BufferFormat({\n  encode: function encode(data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'base64');\n  },\n  decode: function decode(buffer) {\n    return buffer.toString('base64');\n  },\n  name: 'base64'\n});","map":{"version":3,"names":["_ref","require","Buffer","isBuffer","_require","textEncoder","textDecoder","_require2","BufferFormat","ViewFormat","UTF8Format","identity","v","exports","utf8","encode","data","toString","ArrayBuffer","isView","decode","String","name","createViewTranscoder","concat","createBufferTranscoder","from","buffer","byteOffset","byteLength","json","JSON","stringify","parse","view","hex","base64"],"sources":["/Users/apple/Documents/treasure/node_modules/level-transcoder/lib/encodings.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer') || { Buffer: { isBuffer: () => false } }\nconst { textEncoder, textDecoder } = require('./text-endec')()\nconst { BufferFormat, ViewFormat, UTF8Format } = require('./formats')\n\n/** @type {<T>(v: T) => v} */\nconst identity = (v) => v\n\n/**\n * @type {typeof import('./encodings').utf8}\n */\nexports.utf8 = new UTF8Format({\n  encode: function (data) {\n    // On node 16.9.1 buffer.toString() is 5x faster than TextDecoder\n    return Buffer.isBuffer(data)\n      ? data.toString('utf8')\n      : ArrayBuffer.isView(data)\n        ? textDecoder.decode(data)\n        : String(data)\n  },\n  decode: identity,\n  name: 'utf8',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n      },\n      decode: function (data) {\n        return textDecoder.decode(data)\n      },\n      name: `${this.name}+view`\n    })\n  },\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return data.toString('utf8')\n      },\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').json}\n */\nexports.json = new UTF8Format({\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  name: 'json'\n})\n\n/**\n * @type {typeof import('./encodings').buffer}\n */\nexports.buffer = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data)\n      ? data\n      : ArrayBuffer.isView(data)\n        ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n        : Buffer.from(String(data), 'utf8')\n  },\n  decode: identity,\n  name: 'buffer',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n      },\n      name: `${this.name}+view`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').view}\n */\nexports.view = new ViewFormat({\n  encode: function (data) {\n    return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n  },\n  decode: identity,\n  name: 'view',\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: identity,\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').hex}\n */\nexports.hex = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'hex')\n  },\n  decode: function (buffer) {\n    return buffer.toString('hex')\n  },\n  name: 'hex'\n})\n\n/**\n * @type {typeof import('./encodings').base64}\n */\nexports.base64 = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'base64')\n  },\n  decode: function (buffer) {\n    return buffer.toString('base64')\n  },\n  name: 'base64'\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}