{"ast":null,"code":"import { Bucket } from './bucket.js';\nimport { wrapHash } from './consumable-hash.js';\nexport function createHAMT(options) {\n  var _options$bits;\n  if (options == null || options.hashFn == null) {\n    throw new Error('please define an options.hashFn');\n  }\n  var bucketOptions = {\n    bits: (_options$bits = options.bits) !== null && _options$bits !== void 0 ? _options$bits : 8,\n    hash: wrapHash(options.hashFn)\n  };\n  return new Bucket(bucketOptions);\n}\nexport { Bucket };","map":{"version":3,"names":["Bucket","wrapHash","createHAMT","options","_options$bits","hashFn","Error","bucketOptions","bits","hash"],"sources":["/Users/apple/Documents/treasure/node_modules/hamt-sharding/src/index.ts"],"sourcesContent":["import { Bucket } from './bucket.js'\nimport type { BucketOptions, BucketPosition, BucketChild } from './bucket.js'\nimport { wrapHash } from './consumable-hash.js'\n\ninterface UserBucketOptions {\n  hashFn: (value: Uint8Array) => Promise<Uint8Array>\n  bits?: number\n}\n\nexport function createHAMT<T> (options: UserBucketOptions) {\n  if (options == null || options.hashFn == null) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits ?? 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket<T>(bucketOptions)\n}\n\nexport { Bucket }\nexport type { BucketOptions, BucketPosition, BucketChild }\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AAEpC,SAASC,QAAQ,QAAQ,sBAAsB;AAO/C,OAAM,SAAUC,UAAUA,CAAKC,OAA0B;EAAA,IAAAC,aAAA;EACvD,IAAID,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACE,MAAM,IAAI,IAAI,EAAE;IAC7C,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;;EAGpD,IAAMC,aAAa,GAAG;IACpBC,IAAI,GAAAJ,aAAA,GAAED,OAAO,CAACK,IAAI,cAAAJ,aAAA,cAAAA,aAAA,GAAI,CAAC;IACvBK,IAAI,EAAER,QAAQ,CAACE,OAAO,CAACE,MAAM;GAC9B;EAED,OAAO,IAAIL,MAAM,CAAIO,aAAa,CAAC;AACrC;AAEA,SAASP,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}