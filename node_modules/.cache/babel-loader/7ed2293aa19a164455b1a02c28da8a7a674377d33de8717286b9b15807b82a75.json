{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Libp2pRecord } from '@libp2p/record';\nimport errcode from 'err-code';\nimport { Message, MESSAGE_TYPE } from '../../message/index.js';\nimport { MAX_RECORD_AGE } from '../../constants.js';\nimport { bufferToRecordKey, isPublicKeyKey, fromPublicKeyKey } from '../../utils.js';\nimport { logger } from '@libp2p/logger';\nimport { Components } from '@libp2p/components';\nvar log = logger('libp2p:kad-dht:rpc:handlers:get-value');\nexport var GetValueHandler = /*#__PURE__*/function () {\n  function GetValueHandler(init) {\n    _classCallCheck(this, GetValueHandler);\n    this.components = new Components();\n    var peerRouting = init.peerRouting;\n    this.peerRouting = peerRouting;\n  }\n  _createClass(GetValueHandler, [{\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n    }\n  }, {\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId, msg) {\n        var key, response, idFromKey, pubKey, _key, _yield$Promise$all, _yield$Promise$all2, record, closer;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              key = msg.key;\n              log('%p asked for key %b', peerId, key);\n              if (!(key == null || key.length === 0)) {\n                _context.next = 4;\n                break;\n              }\n              throw errcode(new Error('Invalid key'), 'ERR_INVALID_KEY');\n            case 4:\n              response = new Message(MESSAGE_TYPE.GET_VALUE, key, msg.clusterLevel);\n              if (!isPublicKeyKey(key)) {\n                _context.next = 25;\n                break;\n              }\n              log('is public key');\n              idFromKey = fromPublicKeyKey(key);\n              _context.prev = 8;\n              _context.next = 11;\n              return this.components.getPeerStore().keyBook.get(idFromKey);\n            case 11:\n              _key = _context.sent;\n              if (!(_key == null)) {\n                _context.next = 14;\n                break;\n              }\n              throw errcode(new Error('No public key found in key book'), 'ERR_NOT_FOUND');\n            case 14:\n              pubKey = _key;\n              _context.next = 21;\n              break;\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](8);\n              if (!(_context.t0.code !== 'ERR_NOT_FOUND')) {\n                _context.next = 21;\n                break;\n              }\n              throw _context.t0;\n            case 21:\n              if (!(pubKey != null)) {\n                _context.next = 25;\n                break;\n              }\n              log('returning found public key');\n              response.record = new Libp2pRecord(key, pubKey, new Date());\n              return _context.abrupt(\"return\", response);\n            case 25:\n              _context.next = 27;\n              return Promise.all([this._checkLocalDatastore(key), this.peerRouting.getCloserPeersOffline(msg.key, peerId)]);\n            case 27:\n              _yield$Promise$all = _context.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              record = _yield$Promise$all2[0];\n              closer = _yield$Promise$all2[1];\n              if (record != null) {\n                log('had record for %b in local datastore', key);\n                response.record = record;\n              }\n              if (closer.length > 0) {\n                log('had %s closer peers in routing table', closer.length);\n                response.closerPeers = closer;\n              }\n              return _context.abrupt(\"return\", response);\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[8, 17]]);\n      }));\n      function handle(_x, _x2) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n    /**\n     * Try to fetch a given record by from the local datastore.\n     * Returns the record iff it is still valid, meaning\n     * - it was either authored by this node, or\n     * - it was received less than `MAX_RECORD_AGE` ago.\n     */\n  }, {\n    key: \"_checkLocalDatastore\",\n    value: function () {\n      var _checkLocalDatastore2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key) {\n        var dsKey, rawRecord, record;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              log('checkLocalDatastore looking for %b', key);\n              dsKey = bufferToRecordKey(key); // Fetch value from ds\n              _context2.prev = 2;\n              _context2.next = 5;\n              return this.components.getDatastore().get(dsKey);\n            case 5:\n              rawRecord = _context2.sent;\n              _context2.next = 13;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              if (!(_context2.t0.code === 'ERR_NOT_FOUND')) {\n                _context2.next = 12;\n                break;\n              }\n              return _context2.abrupt(\"return\", undefined);\n            case 12:\n              throw _context2.t0;\n            case 13:\n              // Create record from the returned bytes\n              record = Libp2pRecord.deserialize(rawRecord);\n              if (!(record == null)) {\n                _context2.next = 16;\n                break;\n              }\n              throw errcode(new Error('Invalid record'), 'ERR_INVALID_RECORD');\n            case 16:\n              if (!(record.timeReceived == null || Date.now() - record.timeReceived.getTime() > MAX_RECORD_AGE)) {\n                _context2.next = 20;\n                break;\n              }\n              _context2.next = 19;\n              return this.components.getDatastore().delete(dsKey);\n            case 19:\n              return _context2.abrupt(\"return\", undefined);\n            case 20:\n              return _context2.abrupt(\"return\", record);\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 8]]);\n      }));\n      function _checkLocalDatastore(_x3) {\n        return _checkLocalDatastore2.apply(this, arguments);\n      }\n      return _checkLocalDatastore;\n    }()\n  }]);\n  return GetValueHandler;\n}();","map":{"version":3,"names":["Libp2pRecord","errcode","Message","MESSAGE_TYPE","MAX_RECORD_AGE","bufferToRecordKey","isPublicKeyKey","fromPublicKeyKey","logger","Components","log","GetValueHandler","init","_classCallCheck","components","peerRouting","_createClass","key","value","_handle","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peerId","msg","response","idFromKey","pubKey","_key","_yield$Promise$all","_yield$Promise$all2","record","closer","wrap","_callee$","_context","prev","next","length","Error","GET_VALUE","clusterLevel","getPeerStore","keyBook","get","sent","t0","code","Date","abrupt","Promise","all","_checkLocalDatastore","getCloserPeersOffline","_slicedToArray","closerPeers","stop","handle","_x","_x2","apply","arguments","_checkLocalDatastore2","_callee2","dsKey","rawRecord","_callee2$","_context2","getDatastore","undefined","deserialize","timeReceived","now","getTime","delete","_x3"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/rpc/handlers/get-value.ts"],"sourcesContent":["import { Libp2pRecord } from '@libp2p/record'\nimport errcode from 'err-code'\nimport { Message, MESSAGE_TYPE } from '../../message/index.js'\nimport {\n  MAX_RECORD_AGE\n} from '../../constants.js'\nimport { bufferToRecordKey, isPublicKeyKey, fromPublicKeyKey } from '../../utils.js'\nimport { logger } from '@libp2p/logger'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { PeerRouting } from '../../peer-routing/index.js'\nimport { Components, Initializable } from '@libp2p/components'\n\nconst log = logger('libp2p:kad-dht:rpc:handlers:get-value')\n\nexport interface GetValueHandlerInit {\n  peerRouting: PeerRouting\n}\n\nexport class GetValueHandler implements DHTMessageHandler, Initializable {\n  private components: Components = new Components()\n  private readonly peerRouting: PeerRouting\n\n  constructor (init: GetValueHandlerInit) {\n    const { peerRouting } = init\n\n    this.peerRouting = peerRouting\n  }\n\n  init (components: Components): void {\n    this.components = components\n  }\n\n  async handle (peerId: PeerId, msg: Message) {\n    const key = msg.key\n\n    log('%p asked for key %b', peerId, key)\n\n    if (key == null || key.length === 0) {\n      throw errcode(new Error('Invalid key'), 'ERR_INVALID_KEY')\n    }\n\n    const response = new Message(MESSAGE_TYPE.GET_VALUE, key, msg.clusterLevel)\n\n    if (isPublicKeyKey(key)) {\n      log('is public key')\n      const idFromKey = fromPublicKeyKey(key)\n      let pubKey: Uint8Array | undefined\n\n      try {\n        const key = await this.components.getPeerStore().keyBook.get(idFromKey)\n\n        if (key == null) {\n          throw errcode(new Error('No public key found in key book'), 'ERR_NOT_FOUND')\n        }\n\n        pubKey = key\n      } catch (err: any) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      if (pubKey != null) {\n        log('returning found public key')\n        response.record = new Libp2pRecord(key, pubKey, new Date())\n        return response\n      }\n    }\n\n    const [record, closer] = await Promise.all([\n      this._checkLocalDatastore(key),\n      this.peerRouting.getCloserPeersOffline(msg.key, peerId)\n    ])\n\n    if (record != null) {\n      log('had record for %b in local datastore', key)\n      response.record = record\n    }\n\n    if (closer.length > 0) {\n      log('had %s closer peers in routing table', closer.length)\n      response.closerPeers = closer\n    }\n\n    return response\n  }\n\n  /**\n   * Try to fetch a given record by from the local datastore.\n   * Returns the record iff it is still valid, meaning\n   * - it was either authored by this node, or\n   * - it was received less than `MAX_RECORD_AGE` ago.\n   */\n  async _checkLocalDatastore (key: Uint8Array) {\n    log('checkLocalDatastore looking for %b', key)\n    const dsKey = bufferToRecordKey(key)\n\n    // Fetch value from ds\n    let rawRecord\n    try {\n      rawRecord = await this.components.getDatastore().get(dsKey)\n    } catch (err: any) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        return undefined\n      }\n      throw err\n    }\n\n    // Create record from the returned bytes\n    const record = Libp2pRecord.deserialize(rawRecord)\n\n    if (record == null) {\n      throw errcode(new Error('Invalid record'), 'ERR_INVALID_RECORD')\n    }\n\n    // Check validity: compare time received with max record age\n    if (record.timeReceived == null ||\n      Date.now() - record.timeReceived.getTime() > MAX_RECORD_AGE) {\n      // If record is bad delete it and return\n      await this.components.getDatastore().delete(dsKey)\n      return undefined\n    }\n\n    // Record is valid\n    return record\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}