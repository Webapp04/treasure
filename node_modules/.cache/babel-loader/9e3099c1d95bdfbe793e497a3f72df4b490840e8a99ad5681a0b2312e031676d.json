{"ast":null,"code":"var _classCallCheck = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createClass.js\").default;\n/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nvar Rabin = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\n   * Creates an instance of Rabin.\n   * @param { import(\"./../dist/rabin-wasm\") } asModule\n   * @param {number} [bits=12]\n   * @param {number} [min=8 * 1024]\n   * @param {number} [max=32 * 1024]\n   * @param {number} polynomial\n   * @memberof Rabin\n   */\n  function Rabin(asModule) {\n    var bits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n    var min = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8 * 1024;\n    var max = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32 * 1024;\n    var windowSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 64;\n    var polynomial = arguments.length > 5 ? arguments[5] : undefined;\n    _classCallCheck(this, Rabin);\n    this.bits = bits;\n    this.min = min;\n    this.max = max;\n    this.asModule = asModule;\n    this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial);\n    this.polynomial = polynomial;\n  }\n\n  /**\n   * Fingerprints the buffer\n   *\n   * @param {Uint8Array} buf\n   * @returns {Array<number>}\n   * @memberof Rabin\n   */\n  _createClass(Rabin, [{\n    key: \"fingerprint\",\n    value: function fingerprint(buf) {\n      var _this$asModule = this.asModule,\n        __retain = _this$asModule.__retain,\n        __release = _this$asModule.__release,\n        __allocArray = _this$asModule.__allocArray,\n        __getInt32Array = _this$asModule.__getInt32Array,\n        Int32Array_ID = _this$asModule.Int32Array_ID,\n        Uint8Array_ID = _this$asModule.Uint8Array_ID;\n      var lengths = new Int32Array(Math.ceil(buf.length / this.min));\n      var lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths));\n      var pointer = __retain(__allocArray(Uint8Array_ID, buf));\n      var out = this.rabin.fingerprint(pointer, lengthsPtr);\n      var processed = __getInt32Array(out);\n      __release(pointer);\n      __release(lengthsPtr);\n      var end = processed.indexOf(0);\n      return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n  }]);\n  return Rabin;\n}();\nmodule.exports = Rabin;","map":{"version":3,"names":["Rabin","asModule","bits","arguments","length","undefined","min","max","windowSize","polynomial","_classCallCheck","rabin","_createClass","key","value","fingerprint","buf","_this$asModule","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengths","Int32Array","Math","ceil","lengthsPtr","pointer","out","processed","end","indexOf","subarray","module","exports"],"sources":["/Users/apple/Documents/treasure/node_modules/rabin-wasm/src/rabin.js"],"sourcesContent":["/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAJA,IAKMA,KAAK;EAAA;;EACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAAAA,MAAYC,QAAQ,EAA2E;IAAA,IAAzEC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IAAEG,GAAG,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,GAAG,IAAI;IAAA,IAAEI,GAAG,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE,GAAG,IAAI;IAAA,IAAEK,UAAU,GAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IAAEM,UAAU,GAAAN,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAAK,eAAA,OAAAV,KAAA;IACzF,IAAI,CAACE,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACI,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;IACd,IAAI,CAACN,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACU,KAAK,GAAG,IAAIV,QAAQ,CAACD,KAAK,CAACE,IAAI,EAAEI,GAAG,EAAEC,GAAG,EAAEC,UAAU,EAAEC,UAAU,CAAC;IACvE,IAAI,CAACA,UAAU,GAAGA,UAAU;EAChC;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EANIG,YAAA,CAAAZ,KAAA;IAAAa,GAAA;IAAAC,KAAA,EAOA,SAAAC,YAAYC,GAAG,EAAE;MACb,IAAAC,cAAA,GAOI,IAAI,CAAChB,QAAQ;QANbiB,QAAQ,GAAAD,cAAA,CAARC,QAAQ;QACRC,SAAS,GAAAF,cAAA,CAATE,SAAS;QACTC,YAAY,GAAAH,cAAA,CAAZG,YAAY;QACZC,eAAe,GAAAJ,cAAA,CAAfI,eAAe;QACfC,aAAa,GAAAL,cAAA,CAAbK,aAAa;QACbC,aAAa,GAAAN,cAAA,CAAbM,aAAa;MAGjB,IAAMC,OAAO,GAAG,IAAIC,UAAU,CAACC,IAAI,CAACC,IAAI,CAACX,GAAG,CAACZ,MAAM,GAAC,IAAI,CAACE,GAAG,CAAC,CAAC;MAC9D,IAAMsB,UAAU,GAAGV,QAAQ,CAACE,YAAY,CAACE,aAAa,EAAEE,OAAO,CAAC,CAAC;MACjE,IAAMK,OAAO,GAAGX,QAAQ,CAACE,YAAY,CAACG,aAAa,EAAEP,GAAG,CAAC,CAAC;MAE1D,IAAMc,GAAG,GAAG,IAAI,CAACnB,KAAK,CAACI,WAAW,CAACc,OAAO,EAAED,UAAU,CAAC;MACvD,IAAMG,SAAS,GAAGV,eAAe,CAACS,GAAG,CAAC;MAEtCX,SAAS,CAACU,OAAO,CAAC;MAClBV,SAAS,CAACS,UAAU,CAAC;MAErB,IAAMI,GAAG,GAAGD,SAAS,CAACE,OAAO,CAAC,CAAC,CAAC;MAChC,OAAOD,GAAG,IAAI,CAAC,GAAGD,SAAS,CAACG,QAAQ,CAAC,CAAC,EAAEF,GAAG,CAAC,GAAGD,SAAS;IAC5D;EAAC;EAAA,OAAA/B,KAAA;AAAA;AAGLmC,MAAM,CAACC,OAAO,GAAGpC,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}