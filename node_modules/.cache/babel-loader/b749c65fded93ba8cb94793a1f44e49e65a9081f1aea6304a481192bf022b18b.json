{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * @packageDocumentation\n *\n * Provides strategies to sort a list of multiaddrs.\n *\n * @example\n *\n * ```typescript\n * import { publicAddressesFirst } from '@libp2p/utils/address-sort'\n * import { multiaddr } from '@multformats/multiaddr'\n *\n *\n * const addresses = [\n *   multiaddr('/ip4/127.0.0.1/tcp/9000'),\n *   multiaddr('/ip4/82.41.53.1/tcp/9000')\n * ].sort(publicAddressesFirst)\n *\n * console.info(addresses)\n * // ['/ip4/82.41.53.1/tcp/9000', '/ip4/127.0.0.1/tcp/9000']\n * ```\n */\nimport { isPrivate } from './multiaddr/is-private.js';\n/**\n * Compare function for array.sort().\n * This sort aims to move the private addresses to the end of the array.\n * In case of equality, a certified address will come first.\n */\nexport function publicAddressesFirst(a, b) {\n  var isAPrivate = isPrivate(a.multiaddr);\n  var isBPrivate = isPrivate(b.multiaddr);\n  if (isAPrivate && !isBPrivate) {\n    return 1;\n  } else if (!isAPrivate && isBPrivate) {\n    return -1;\n  }\n  // Check certified?\n  if (a.isCertified && !b.isCertified) {\n    return -1;\n  } else if (!a.isCertified && b.isCertified) {\n    return 1;\n  }\n  return 0;\n}\n/**\n * A test thing\n */\nexport function something() {\n  return _something.apply(this, arguments);\n}\nfunction _something() {\n  _something = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", Uint8Array.from([0, 1, 2]));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _something.apply(this, arguments);\n}","map":{"version":3,"names":["isPrivate","publicAddressesFirst","a","b","isAPrivate","multiaddr","isBPrivate","isCertified","something","_something","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","Uint8Array","from","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/utils/src/address-sort.ts"],"sourcesContent":["/**\n * @packageDocumentation\n *\n * Provides strategies to sort a list of multiaddrs.\n *\n * @example\n *\n * ```typescript\n * import { publicAddressesFirst } from '@libp2p/utils/address-sort'\n * import { multiaddr } from '@multformats/multiaddr'\n *\n *\n * const addresses = [\n *   multiaddr('/ip4/127.0.0.1/tcp/9000'),\n *   multiaddr('/ip4/82.41.53.1/tcp/9000')\n * ].sort(publicAddressesFirst)\n *\n * console.info(addresses)\n * // ['/ip4/82.41.53.1/tcp/9000', '/ip4/127.0.0.1/tcp/9000']\n * ```\n */\n\nimport type { Address } from '@libp2p/interface-peer-store'\nimport { isPrivate } from './multiaddr/is-private.js'\n\n/**\n * Compare function for array.sort().\n * This sort aims to move the private addresses to the end of the array.\n * In case of equality, a certified address will come first.\n */\nexport function publicAddressesFirst (a: Address, b: Address): -1 | 0 | 1 {\n  const isAPrivate = isPrivate(a.multiaddr)\n  const isBPrivate = isPrivate(b.multiaddr)\n\n  if (isAPrivate && !isBPrivate) {\n    return 1\n  } else if (!isAPrivate && isBPrivate) {\n    return -1\n  }\n  // Check certified?\n  if (a.isCertified && !b.isCertified) {\n    return -1\n  } else if (!a.isCertified && b.isCertified) {\n    return 1\n  }\n\n  return 0\n}\n\n/**\n * A test thing\n */\nexport async function something (): Promise<Uint8Array> {\n  return Uint8Array.from([0, 1, 2])\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASA,SAAS,QAAQ,2BAA2B;AAErD;;;;;AAKA,OAAM,SAAUC,oBAAoBA,CAAEC,CAAU,EAAEC,CAAU;EAC1D,IAAMC,UAAU,GAAGJ,SAAS,CAACE,CAAC,CAACG,SAAS,CAAC;EACzC,IAAMC,UAAU,GAAGN,SAAS,CAACG,CAAC,CAACE,SAAS,CAAC;EAEzC,IAAID,UAAU,IAAI,CAACE,UAAU,EAAE;IAC7B,OAAO,CAAC;GACT,MAAM,IAAI,CAACF,UAAU,IAAIE,UAAU,EAAE;IACpC,OAAO,CAAC,CAAC;;EAEX;EACA,IAAIJ,CAAC,CAACK,WAAW,IAAI,CAACJ,CAAC,CAACI,WAAW,EAAE;IACnC,OAAO,CAAC,CAAC;GACV,MAAM,IAAI,CAACL,CAAC,CAACK,WAAW,IAAIJ,CAAC,CAACI,WAAW,EAAE;IAC1C,OAAO,CAAC;;EAGV,OAAO,CAAC;AACV;AAEA;;;AAGA,gBAAsBC,SAASA,CAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAE9B,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAFM,SAAAC,QAAA;IAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,OAAAF,QAAA,CAAAG,MAAA,WACEC,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAL,QAAA,CAAAM,IAAA;MAAA;IAAA,GAAAT,OAAA;EAAA,CAClC;EAAA,OAAAN,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}