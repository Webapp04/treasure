{"ast":null,"code":"import _toConsumableArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { logger } from '@libp2p/logger';\nimport errCode from 'err-code';\nimport merge from 'it-merge';\nimport { queryErrorEvent } from './query/events.js';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport { Components } from '@libp2p/components';\nimport { symbol } from '@libp2p/interface-peer-discovery';\nvar log = logger('libp2p:kad-dht');\n/**\n * A DHT implementation modelled after Kademlia with S/Kademlia modifications.\n * Original implementation in go: https://github.com/libp2p/go-libp2p-kad-dht.\n */\nexport var DualKadDHT = /*#__PURE__*/function (_EventEmitter, _Symbol$toStringTag) {\n  _inherits(DualKadDHT, _EventEmitter);\n  var _super = _createSuper(DualKadDHT);\n  function DualKadDHT(wan, lan) {\n    var _this7;\n    _classCallCheck(this, DualKadDHT);\n    _this7 = _super.call(this);\n    _this7.components = new Components();\n    _this7.wan = wan;\n    _this7.lan = lan;\n    // handle peers being discovered during processing of DHT messages\n    _this7.wan.addEventListener('peer', function (evt) {\n      _this7.dispatchEvent(new CustomEvent('peer', {\n        detail: evt.detail\n      }));\n    });\n    _this7.lan.addEventListener('peer', function (evt) {\n      _this7.dispatchEvent(new CustomEvent('peer', {\n        detail: evt.detail\n      }));\n    });\n    return _this7;\n  }\n  _createClass(DualKadDHT, [{\n    key: symbol,\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return '@libp2p/dual-kad-dht';\n    }\n  }, {\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n      this.wan.init(components);\n      this.lan.init(components);\n    }\n    /**\n     * Is this DHT running.\n     */\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.wan.isStarted() && this.lan.isStarted();\n    }\n    /**\n     * If 'server' this node will respond to DHT queries, if 'client' this node will not\n     */\n  }, {\n    key: \"getMode\",\n    value: function () {\n      var _getMode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.wan.getMode();\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getMode() {\n        return _getMode.apply(this, arguments);\n      }\n      return getMode;\n    }()\n    /**\n     * If 'server' this node will respond to DHT queries, if 'client' this node will not\n     */\n  }, {\n    key: \"setMode\",\n    value: function () {\n      var _setMode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(mode) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.wan.setMode(mode);\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function setMode(_x) {\n        return _setMode.apply(this, arguments);\n      }\n      return setMode;\n    }()\n    /**\n     * Start listening to incoming connections.\n     */\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Promise.all([this.lan.start(), this.wan.start()]);\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n    /**\n     * Stop accepting incoming connections and sending outgoing\n     * messages.\n     */\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return Promise.all([this.lan.stop(), this.wan.stop()]);\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n      return stop;\n    }()\n    /**\n     * Store the given key/value pair in the DHT\n     */\n  }, {\n    key: \"put\",\n    value: function put(key, value) {\n      var _this = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, event;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context5.prev = 2;\n              _iterator = _asyncIterator(merge(_this.lan.put(key, value, options), _this.wan.put(key, value, options)));\n            case 4:\n              _context5.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context5.sent).done)) {\n                _context5.next = 13;\n                break;\n              }\n              event = _step.value;\n              _context5.next = 10;\n              return event;\n            case 10:\n              _iteratorAbruptCompletion = false;\n              _context5.next = 4;\n              break;\n            case 13:\n              _context5.next = 19;\n              break;\n            case 15:\n              _context5.prev = 15;\n              _context5.t0 = _context5[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context5.t0;\n            case 19:\n              _context5.prev = 19;\n              _context5.prev = 20;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context5.next = 24;\n                break;\n              }\n              _context5.next = 24;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 24:\n              _context5.prev = 24;\n              if (!_didIteratorError) {\n                _context5.next = 27;\n                break;\n              }\n              throw _iteratorError;\n            case 27:\n              return _context5.finish(24);\n            case 28:\n              return _context5.finish(19);\n            case 29:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[2, 15, 19, 29], [20,, 24, 28]]);\n      }))();\n    }\n    /**\n     * Get the value that corresponds to the passed key\n     */\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var _this2 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var queriedPeers, foundValue, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, event;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              queriedPeers = false;\n              foundValue = false;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context6.prev = 4;\n              _iterator2 = _asyncIterator(merge(_this2.lan.get(key, options), _this2.wan.get(key, options)));\n            case 6:\n              _context6.next = 8;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 8:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context6.sent).done)) {\n                _context6.next = 18;\n                break;\n              }\n              event = _step2.value;\n              _context6.next = 12;\n              return event;\n            case 12:\n              if (event.name === 'DIALING_PEER') {\n                queriedPeers = true;\n              }\n              if (event.name === 'VALUE') {\n                queriedPeers = true;\n                if (event.value != null) {\n                  foundValue = true;\n                }\n              }\n              if (event.name === 'SENDING_QUERY') {\n                queriedPeers = true;\n              }\n            case 15:\n              _iteratorAbruptCompletion2 = false;\n              _context6.next = 6;\n              break;\n            case 18:\n              _context6.next = 24;\n              break;\n            case 20:\n              _context6.prev = 20;\n              _context6.t0 = _context6[\"catch\"](4);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context6.t0;\n            case 24:\n              _context6.prev = 24;\n              _context6.prev = 25;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context6.next = 29;\n                break;\n              }\n              _context6.next = 29;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 29:\n              _context6.prev = 29;\n              if (!_didIteratorError2) {\n                _context6.next = 32;\n                break;\n              }\n              throw _iteratorError2;\n            case 32:\n              return _context6.finish(29);\n            case 33:\n              return _context6.finish(24);\n            case 34:\n              if (queriedPeers) {\n                _context6.next = 36;\n                break;\n              }\n              throw errCode(new Error('No peers found in routing table!'), 'ERR_NO_PEERS_IN_ROUTING_TABLE');\n            case 36:\n              if (foundValue) {\n                _context6.next = 39;\n                break;\n              }\n              _context6.next = 39;\n              return queryErrorEvent({\n                from: _this2.components.getPeerId(),\n                error: errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n              });\n            case 39:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[4, 20, 24, 34], [25,, 29, 33]]);\n      }))();\n    }\n    // ----------- Content Routing\n    /**\n     * Announce to the network that we can provide given key's value\n     */\n  }, {\n    key: \"provide\",\n    value: function provide(key) {\n      var _this3 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var sent, success, errors, dhts, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, event;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              sent = 0;\n              success = 0;\n              errors = [];\n              dhts = [_this3.lan]; // only run provide on the wan if we are in server mode\n              _context7.next = 6;\n              return _awaitAsyncGenerator(_this3.wan.getMode());\n            case 6:\n              _context7.t0 = _context7.sent;\n              if (!(_context7.t0 === 'server')) {\n                _context7.next = 9;\n                break;\n              }\n              dhts.push(_this3.wan);\n            case 9:\n              _iteratorAbruptCompletion3 = false;\n              _didIteratorError3 = false;\n              _context7.prev = 11;\n              _iterator3 = _asyncIterator(merge.apply(void 0, _toConsumableArray(dhts.map(function (dht) {\n                return dht.provide(key, options);\n              }))));\n            case 13:\n              _context7.next = 15;\n              return _awaitAsyncGenerator(_iterator3.next());\n            case 15:\n              if (!(_iteratorAbruptCompletion3 = !(_step3 = _context7.sent).done)) {\n                _context7.next = 25;\n                break;\n              }\n              event = _step3.value;\n              _context7.next = 19;\n              return event;\n            case 19:\n              if (event.name === 'SENDING_QUERY') {\n                sent++;\n              }\n              if (event.name === 'QUERY_ERROR') {\n                errors.push(event.error);\n              }\n              if (event.name === 'PEER_RESPONSE' && event.messageName === 'ADD_PROVIDER') {\n                log('sent provider record for %s to %p', key, event.from);\n                success++;\n              }\n            case 22:\n              _iteratorAbruptCompletion3 = false;\n              _context7.next = 13;\n              break;\n            case 25:\n              _context7.next = 31;\n              break;\n            case 27:\n              _context7.prev = 27;\n              _context7.t1 = _context7[\"catch\"](11);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context7.t1;\n            case 31:\n              _context7.prev = 31;\n              _context7.prev = 32;\n              if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {\n                _context7.next = 36;\n                break;\n              }\n              _context7.next = 36;\n              return _awaitAsyncGenerator(_iterator3.return());\n            case 36:\n              _context7.prev = 36;\n              if (!_didIteratorError3) {\n                _context7.next = 39;\n                break;\n              }\n              throw _iteratorError3;\n            case 39:\n              return _context7.finish(36);\n            case 40:\n              return _context7.finish(31);\n            case 41:\n              if (!(success === 0)) {\n                _context7.next = 45;\n                break;\n              }\n              if (!(errors.length > 0)) {\n                _context7.next = 44;\n                break;\n              }\n              throw errCode(new Error(\"Failed to provide to \".concat(errors.length, \" of \").concat(sent, \" peers\")), 'ERR_PROVIDES_FAILED', {\n                errors: errors\n              });\n            case 44:\n              throw errCode(new Error('Failed to provide - no peers found'), 'ERR_PROVIDES_FAILED');\n            case 45:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[11, 27, 31, 41], [32,, 36, 40]]);\n      }))();\n    }\n    /**\n     * Search the dht for up to `K` providers of the given CID\n     */\n  }, {\n    key: \"findProviders\",\n    value: function findProviders(key) {\n      var _this4 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.delegateYield(_asyncGeneratorDelegate(_asyncIterator(merge(_this4.lan.findProviders(key, options), _this4.wan.findProviders(key, options))), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n    // ----------- Peer Routing -----------\n    /**\n     * Search for a peer with the given ID\n     */\n  }, {\n    key: \"findPeer\",\n    value: function findPeer(id) {\n      var _this5 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var queriedPeers, _iteratorAbruptCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, event;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              queriedPeers = false;\n              _iteratorAbruptCompletion4 = false;\n              _didIteratorError4 = false;\n              _context9.prev = 3;\n              _iterator4 = _asyncIterator(merge(_this5.lan.findPeer(id, options), _this5.wan.findPeer(id, options)));\n            case 5:\n              _context9.next = 7;\n              return _awaitAsyncGenerator(_iterator4.next());\n            case 7:\n              if (!(_iteratorAbruptCompletion4 = !(_step4 = _context9.sent).done)) {\n                _context9.next = 15;\n                break;\n              }\n              event = _step4.value;\n              _context9.next = 11;\n              return event;\n            case 11:\n              if (event.name === 'SENDING_QUERY' || event.name === 'FINAL_PEER') {\n                queriedPeers = true;\n              }\n            case 12:\n              _iteratorAbruptCompletion4 = false;\n              _context9.next = 5;\n              break;\n            case 15:\n              _context9.next = 21;\n              break;\n            case 17:\n              _context9.prev = 17;\n              _context9.t0 = _context9[\"catch\"](3);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context9.t0;\n            case 21:\n              _context9.prev = 21;\n              _context9.prev = 22;\n              if (!(_iteratorAbruptCompletion4 && _iterator4.return != null)) {\n                _context9.next = 26;\n                break;\n              }\n              _context9.next = 26;\n              return _awaitAsyncGenerator(_iterator4.return());\n            case 26:\n              _context9.prev = 26;\n              if (!_didIteratorError4) {\n                _context9.next = 29;\n                break;\n              }\n              throw _iteratorError4;\n            case 29:\n              return _context9.finish(26);\n            case 30:\n              return _context9.finish(21);\n            case 31:\n              if (queriedPeers) {\n                _context9.next = 33;\n                break;\n              }\n              throw errCode(new Error('Peer lookup failed'), 'ERR_LOOKUP_FAILED');\n            case 33:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[3, 17, 21, 31], [22,, 26, 30]]);\n      }))();\n    }\n    /**\n     * Kademlia 'node lookup' operation\n     */\n  }, {\n    key: \"getClosestPeers\",\n    value: function getClosestPeers(key) {\n      var _this6 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.delegateYield(_asyncGeneratorDelegate(_asyncIterator(merge(_this6.lan.getClosestPeers(key, options), _this6.wan.getClosestPeers(key, options))), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }))();\n    }\n  }, {\n    key: \"refreshRoutingTable\",\n    value: function () {\n      var _refreshRoutingTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return Promise.all([this.lan.refreshRoutingTable(), this.wan.refreshRoutingTable()]);\n            case 2:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function refreshRoutingTable() {\n        return _refreshRoutingTable.apply(this, arguments);\n      }\n      return refreshRoutingTable;\n    }()\n  }]);\n  return DualKadDHT;\n}(EventEmitter, Symbol.toStringTag);","map":{"version":3,"names":["logger","errCode","merge","queryErrorEvent","EventEmitter","CustomEvent","Components","symbol","log","DualKadDHT","_EventEmitter","_Symbol$toStringTag","_inherits","_super","_createSuper","wan","lan","_this7","_classCallCheck","call","components","addEventListener","evt","dispatchEvent","detail","_createClass","key","get","value","init","isStarted","_getMode","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getMode","abrupt","sent","stop","apply","arguments","_setMode","_callee2","mode","_callee2$","_context2","setMode","_x","_start","_callee3","_callee3$","_context3","Promise","all","start","_stop","_callee4","_callee4$","_context4","put","_this","options","length","undefined","_wrapAsyncGenerator","_callee5","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","event","_callee5$","_context5","_asyncIterator","_awaitAsyncGenerator","done","t0","return","finish","_this2","_callee6","queriedPeers","foundValue","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee6$","_context6","name","Error","from","getPeerId","error","provide","_this3","_callee7","success","errors","dhts","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_callee7$","_context7","push","_toConsumableArray","map","dht","messageName","t1","concat","findProviders","_this4","_callee8","_callee8$","_context8","delegateYield","_asyncGeneratorDelegate","findPeer","id","_this5","_callee9","_iteratorAbruptCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_callee9$","_context9","getClosestPeers","_this6","_callee10","_callee10$","_context10","_refreshRoutingTable","_callee11","_callee11$","_context11","refreshRoutingTable","Symbol","toStringTag"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/dual-kad-dht.ts"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport merge from 'it-merge'\nimport { queryErrorEvent } from './query/events.js'\nimport type { KadDHT } from './kad-dht.js'\nimport type { DualDHT, QueryOptions } from '@libp2p/interface-dht'\nimport type { AbortOptions } from '@libp2p/interfaces'\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events'\nimport type { CID } from 'multiformats'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { PeerDiscoveryEvents } from '@libp2p/interface-peer-discovery'\nimport { Components, Initializable } from '@libp2p/components'\nimport { symbol } from '@libp2p/interface-peer-discovery'\n\nconst log = logger('libp2p:kad-dht')\n\n/**\n * A DHT implementation modelled after Kademlia with S/Kademlia modifications.\n * Original implementation in go: https://github.com/libp2p/go-libp2p-kad-dht.\n */\nexport class DualKadDHT extends EventEmitter<PeerDiscoveryEvents> implements DualDHT, Initializable {\n  public wan: KadDHT\n  public lan: KadDHT\n  public components: Components = new Components()\n\n  constructor (wan: KadDHT, lan: KadDHT) {\n    super()\n\n    this.wan = wan\n    this.lan = lan\n\n    // handle peers being discovered during processing of DHT messages\n    this.wan.addEventListener('peer', (evt) => {\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: evt.detail\n      }))\n    })\n    this.lan.addEventListener('peer', (evt) => {\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: evt.detail\n      }))\n    })\n  }\n\n  get [symbol] (): true {\n    return true\n  }\n\n  get [Symbol.toStringTag] () {\n    return '@libp2p/dual-kad-dht'\n  }\n\n  init (components: Components): void {\n    this.components = components\n    this.wan.init(components)\n    this.lan.init(components)\n  }\n\n  /**\n   * Is this DHT running.\n   */\n  isStarted () {\n    return this.wan.isStarted() && this.lan.isStarted()\n  }\n\n  /**\n   * If 'server' this node will respond to DHT queries, if 'client' this node will not\n   */\n  async getMode () {\n    return await this.wan.getMode()\n  }\n\n  /**\n   * If 'server' this node will respond to DHT queries, if 'client' this node will not\n   */\n  async setMode (mode: 'client' | 'server') {\n    await this.wan.setMode(mode)\n  }\n\n  /**\n   * Start listening to incoming connections.\n   */\n  async start () {\n    await Promise.all([\n      this.lan.start(),\n      this.wan.start()\n    ])\n  }\n\n  /**\n   * Stop accepting incoming connections and sending outgoing\n   * messages.\n   */\n  async stop () {\n    await Promise.all([\n      this.lan.stop(),\n      this.wan.stop()\n    ])\n  }\n\n  /**\n   * Store the given key/value pair in the DHT\n   */\n  async * put (key: Uint8Array, value: Uint8Array, options: QueryOptions = {}) {\n    for await (const event of merge(\n      this.lan.put(key, value, options),\n      this.wan.put(key, value, options)\n    )) {\n      yield event\n    }\n  }\n\n  /**\n   * Get the value that corresponds to the passed key\n   */\n  async * get (key: Uint8Array, options: QueryOptions = {}) { // eslint-disable-line require-await\n    let queriedPeers = false\n    let foundValue = false\n\n    for await (const event of merge(\n      this.lan.get(key, options),\n      this.wan.get(key, options)\n    )) {\n      yield event\n\n      if (event.name === 'DIALING_PEER') {\n        queriedPeers = true\n      }\n\n      if (event.name === 'VALUE') {\n        queriedPeers = true\n\n        if (event.value != null) {\n          foundValue = true\n        }\n      }\n\n      if (event.name === 'SENDING_QUERY') {\n        queriedPeers = true\n      }\n    }\n\n    if (!queriedPeers) {\n      throw errCode(new Error('No peers found in routing table!'), 'ERR_NO_PEERS_IN_ROUTING_TABLE')\n    }\n\n    if (!foundValue) {\n      yield queryErrorEvent({\n        from: this.components.getPeerId(),\n        error: errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n      })\n    }\n  }\n\n  // ----------- Content Routing\n\n  /**\n   * Announce to the network that we can provide given key's value\n   */\n  async * provide (key: CID, options: AbortOptions = {}) { // eslint-disable-line require-await\n    let sent = 0\n    let success = 0\n    const errors = []\n\n    const dhts = [this.lan]\n\n    // only run provide on the wan if we are in server mode\n    if ((await this.wan.getMode()) === 'server') {\n      dhts.push(this.wan)\n    }\n\n    for await (const event of merge(...dhts.map(dht => dht.provide(key, options)))) {\n      yield event\n\n      if (event.name === 'SENDING_QUERY') {\n        sent++\n      }\n\n      if (event.name === 'QUERY_ERROR') {\n        errors.push(event.error)\n      }\n\n      if (event.name === 'PEER_RESPONSE' && event.messageName === 'ADD_PROVIDER') {\n        log('sent provider record for %s to %p', key, event.from)\n        success++\n      }\n    }\n\n    if (success === 0) {\n      if (errors.length > 0) {\n        // if all sends failed, throw an error to inform the caller\n        throw errCode(new Error(`Failed to provide to ${errors.length} of ${sent} peers`), 'ERR_PROVIDES_FAILED', { errors })\n      }\n\n      throw errCode(new Error('Failed to provide - no peers found'), 'ERR_PROVIDES_FAILED')\n    }\n  }\n\n  /**\n   * Search the dht for up to `K` providers of the given CID\n   */\n  async * findProviders (key: CID, options: QueryOptions = {}) {\n    yield * merge(\n      this.lan.findProviders(key, options),\n      this.wan.findProviders(key, options)\n    )\n  }\n\n  // ----------- Peer Routing -----------\n\n  /**\n   * Search for a peer with the given ID\n   */\n  async * findPeer (id: PeerId, options: QueryOptions = {}) {\n    let queriedPeers = false\n\n    for await (const event of merge(\n      this.lan.findPeer(id, options),\n      this.wan.findPeer(id, options)\n    )) {\n      yield event\n\n      if (event.name === 'SENDING_QUERY' || event.name === 'FINAL_PEER') {\n        queriedPeers = true\n      }\n    }\n\n    if (!queriedPeers) {\n      throw errCode(new Error('Peer lookup failed'), 'ERR_LOOKUP_FAILED')\n    }\n  }\n\n  /**\n   * Kademlia 'node lookup' operation\n   */\n  async * getClosestPeers (key: Uint8Array, options: QueryOptions = {}) {\n    yield * merge(\n      this.lan.getClosestPeers(key, options),\n      this.wan.getClosestPeers(key, options)\n    )\n  }\n\n  async refreshRoutingTable () {\n    await Promise.all([\n      this.lan.refreshRoutingTable(),\n      this.wan.refreshRoutingTable()\n    ])\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}