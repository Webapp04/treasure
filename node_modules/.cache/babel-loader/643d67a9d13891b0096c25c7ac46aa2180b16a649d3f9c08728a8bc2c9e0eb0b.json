{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useContractTresrStakingCoinWithSigner}from\"hooks/blockchain/useHandleContracts\";import{hexToNumber}from\"utils/blockchain\";export default function useGetRewardDashboardInfo(){var handleContractTresrStakingCoinWithSigner=useContractTresrStakingCoinWithSigner();var getRewardDashboardInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(address){var contractTresrStakingCoinWithSigner;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return handleContractTresrStakingCoinWithSigner;case 2:contractTresrStakingCoinWithSigner=_context.sent;return _context.abrupt(\"return\",Promise.all([contractTresrStakingCoinWithSigner.getRewardPerSecond(address).then(function(tx){return hexToNumber(tx===null||tx===void 0?void 0:tx._hex)/Math.pow(10,18);}),contractTresrStakingCoinWithSigner.pendingVeTresr(address),contractTresrStakingCoinWithSigner.getStaked(address).then(function(tx){return hexToNumber(tx===null||tx===void 0?void 0:tx._hex)/Math.pow(10,18);}),contractTresrStakingCoinWithSigner.totalStaked().then(function(tx){return hexToNumber(tx===null||tx===void 0?void 0:tx._hex)/Math.pow(10,18);}),contractTresrStakingCoinWithSigner.veTresrPerHour(address).then(function(tx){return hexToNumber(tx===null||tx===void 0?void 0:tx._hex)/Math.pow(10,18);}),contractTresrStakingCoinWithSigner.maxVeTresr(address).then(function(tx){return hexToNumber(tx===null||tx===void 0?void 0:tx._hex)/Math.pow(10,18);}),contractTresrStakingCoinWithSigner.daysToMax(address).then(function(tx){return hexToNumber(tx===null||tx===void 0?void 0:tx._hex)/Math.pow(10,18);})]));case 4:case\"end\":return _context.stop();}},_callee);}));return function getRewardDashboardInfo(_x){return _ref.apply(this,arguments);};}();return{getRewardDashboardInfo:getRewardDashboardInfo};}","map":{"version":3,"names":["useContractTresrStakingCoinWithSigner","hexToNumber","useGetRewardDashboardInfo","handleContractTresrStakingCoinWithSigner","getRewardDashboardInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","address","contractTresrStakingCoinWithSigner","wrap","_callee$","_context","prev","next","sent","abrupt","Promise","all","getRewardPerSecond","then","tx","_hex","Math","pow","pendingVeTresr","getStaked","totalStaked","veTresrPerHour","maxVeTresr","daysToMax","stop","_x","apply","arguments"],"sources":["/Users/apple/Documents/treasure/src/hooks/rewards/useGetRewardDashboardInfo.js"],"sourcesContent":["import { useContractTresrStakingCoinWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useGetRewardDashboardInfo() {\n  const handleContractTresrStakingCoinWithSigner =\n    useContractTresrStakingCoinWithSigner();\n\n  const getRewardDashboardInfo = async (address) => {\n    const contractTresrStakingCoinWithSigner =\n      await handleContractTresrStakingCoinWithSigner;\n    return Promise.all([\n      contractTresrStakingCoinWithSigner\n        .getRewardPerSecond(address)\n        .then((tx) => hexToNumber(tx?._hex) / 10 ** 18),\n      contractTresrStakingCoinWithSigner.pendingVeTresr(address),\n      contractTresrStakingCoinWithSigner\n        .getStaked(address)\n        .then((tx) => hexToNumber(tx?._hex) / 10 ** 18),\n      contractTresrStakingCoinWithSigner\n        .totalStaked()\n        .then((tx) => hexToNumber(tx?._hex) / 10 ** 18),\n      contractTresrStakingCoinWithSigner\n        .veTresrPerHour(address)\n        .then((tx) => hexToNumber(tx?._hex) / 10 ** 18),\n      contractTresrStakingCoinWithSigner\n        .maxVeTresr(address)\n        .then((tx) => hexToNumber(tx?._hex) / 10 ** 18),\n      contractTresrStakingCoinWithSigner\n        .daysToMax(address)\n        .then((tx) => hexToNumber(tx?._hex) / 10 ** 18),\n    ]);\n  };\n  return { getRewardDashboardInfo };\n}\n"],"mappings":"0PAAA,OAASA,qCAAqC,KAAQ,qCAAqC,CAC3F,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,cAAe,SAAS,CAAAC,yBAAyBA,CAAA,CAAG,CAClD,GAAM,CAAAC,wCAAwC,CAC5CH,qCAAqC,CAAC,CAAC,CAEzC,GAAM,CAAAI,sBAAsB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,OAAO,MAAAC,kCAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAEnC,CAAAb,wCAAwC,QAD1CQ,kCAAkC,CAAAG,QAAA,CAAAG,IAAA,QAAAH,QAAA,CAAAI,MAAA,UAEjCC,OAAO,CAACC,GAAG,CAAC,CACjBT,kCAAkC,CAC/BU,kBAAkB,CAACX,OAAO,CAAC,CAC3BY,IAAI,CAAC,SAACC,EAAE,QAAK,CAAAtB,WAAW,CAACsB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEC,IAAI,CAAC,CAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,CAAI,EAAE,IAAC,CACjDf,kCAAkC,CAACgB,cAAc,CAACjB,OAAO,CAAC,CAC1DC,kCAAkC,CAC/BiB,SAAS,CAAClB,OAAO,CAAC,CAClBY,IAAI,CAAC,SAACC,EAAE,QAAK,CAAAtB,WAAW,CAACsB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEC,IAAI,CAAC,CAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,CAAI,EAAE,IAAC,CACjDf,kCAAkC,CAC/BkB,WAAW,CAAC,CAAC,CACbP,IAAI,CAAC,SAACC,EAAE,QAAK,CAAAtB,WAAW,CAACsB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEC,IAAI,CAAC,CAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,CAAI,EAAE,IAAC,CACjDf,kCAAkC,CAC/BmB,cAAc,CAACpB,OAAO,CAAC,CACvBY,IAAI,CAAC,SAACC,EAAE,QAAK,CAAAtB,WAAW,CAACsB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEC,IAAI,CAAC,CAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,CAAI,EAAE,IAAC,CACjDf,kCAAkC,CAC/BoB,UAAU,CAACrB,OAAO,CAAC,CACnBY,IAAI,CAAC,SAACC,EAAE,QAAK,CAAAtB,WAAW,CAACsB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEC,IAAI,CAAC,CAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,CAAI,EAAE,IAAC,CACjDf,kCAAkC,CAC/BqB,SAAS,CAACtB,OAAO,CAAC,CAClBY,IAAI,CAAC,SAACC,EAAE,QAAK,CAAAtB,WAAW,CAACsB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEC,IAAI,CAAC,CAAAC,IAAA,CAAAC,GAAA,CAAG,EAAE,CAAI,EAAE,IAAC,CAClD,CAAC,0BAAAZ,QAAA,CAAAmB,IAAA,MAAAxB,OAAA,GACH,kBAxBK,CAAAL,sBAAsBA,CAAA8B,EAAA,SAAA7B,IAAA,CAAA8B,KAAA,MAAAC,SAAA,OAwB3B,CACD,MAAO,CAAEhC,sBAAsB,CAAtBA,sBAAuB,CAAC,CACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}