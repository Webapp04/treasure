{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useContractWhitelistWithSigner}from\"hooks/blockchain/useHandleContracts\";export default function useGetAccountZone(){var handleContractWhitelistWithSigner=useContractWhitelistWithSigner();var getAccountZone=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(address,zone,proof,wl){var count,contractWhitelistWithSigner,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:count=_args.length>4&&_args[4]!==undefined?_args[4]:3;_context.next=3;return handleContractWhitelistWithSigner;case 3:contractWhitelistWithSigner=_context.sent;return _context.abrupt(\"return\",contractWhitelistWithSigner.getWhitelistZone(address,zone,wl,proof).catch(function(){return count?getAccountZone(address,zone,count-1,wl,proof):null;}));case 5:case\"end\":return _context.stop();}},_callee);}));return function getAccountZone(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();return{getAccountZone:getAccountZone};}","map":{"version":3,"names":["useContractWhitelistWithSigner","useGetAccountZone","handleContractWhitelistWithSigner","getAccountZone","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","address","zone","proof","wl","count","contractWhitelistWithSigner","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","sent","abrupt","getWhitelistZone","catch","stop","_x","_x2","_x3","_x4","apply"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useGetAccountZone.js"],"sourcesContent":["import { useContractWhitelistWithSigner } from \"hooks/blockchain/useHandleContracts\";\n\nexport default function useGetAccountZone() {\n  const handleContractWhitelistWithSigner = useContractWhitelistWithSigner();\n  const getAccountZone = async (address, zone, proof, wl, count = 3) => {\n    const contractWhitelistWithSigner = await handleContractWhitelistWithSigner;\n    return contractWhitelistWithSigner\n      .getWhitelistZone(address, zone, wl, proof)\n      .catch(() =>\n        count ? getAccountZone(address, zone, count - 1, wl, proof) : null\n      );\n  };\n  return { getAccountZone };\n}\n"],"mappings":"0PAAA,OAASA,8BAA8B,KAAQ,qCAAqC,CAEpF,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC1C,GAAM,CAAAC,iCAAiC,CAAGF,8BAA8B,CAAC,CAAC,CAC1E,GAAM,CAAAG,cAAc,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,OAAO,CAAEC,IAAI,CAAEC,KAAK,CAAEC,EAAE,MAAAC,KAAA,CAAAC,2BAAA,CAAAC,KAAA,CAAAC,SAAA,QAAAV,mBAAA,GAAAW,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAER,KAAK,CAAAE,KAAA,CAAAO,MAAA,IAAAP,KAAA,MAAAQ,SAAA,CAAAR,KAAA,IAAG,CAAC,CAAAI,QAAA,CAAAE,IAAA,SACrB,CAAAnB,iCAAiC,QAArEY,2BAA2B,CAAAK,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAM,MAAA,UAC1BX,2BAA2B,CAC/BY,gBAAgB,CAACjB,OAAO,CAAEC,IAAI,CAAEE,EAAE,CAAED,KAAK,CAAC,CAC1CgB,KAAK,CAAC,iBACL,CAAAd,KAAK,CAAGV,cAAc,CAACM,OAAO,CAAEC,IAAI,CAAEG,KAAK,CAAG,CAAC,CAAED,EAAE,CAAED,KAAK,CAAC,CAAG,IAAI,EACpE,CAAC,0BAAAQ,QAAA,CAAAS,IAAA,MAAApB,OAAA,GACJ,kBAPK,CAAAL,cAAcA,CAAA0B,EAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,SAAA5B,IAAA,CAAA6B,KAAA,MAAAjB,SAAA,OAOnB,CACD,MAAO,CAAEb,cAAc,CAAdA,cAAe,CAAC,CAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}