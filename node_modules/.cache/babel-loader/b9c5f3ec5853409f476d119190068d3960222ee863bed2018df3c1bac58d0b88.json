{"ast":null,"code":"import _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// @ts-check\n\nimport * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport { CID, hasher, digest, varint, bytes } from './index.js';\nvar bases = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, identityBase), base2), base8), base10), base16), base32), base36), base58), base64), base256emoji);\nvar hashes = _objectSpread(_objectSpread({}, sha2), identity);\nvar codecs = {\n  raw: raw,\n  json: json\n};\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs };","map":{"version":3,"names":["identityBase","base2","base8","base10","base16","base32","base36","base58","base64","base256emoji","sha2","identity","raw","json","CID","hasher","digest","varint","bytes","bases","_objectSpread","hashes","codecs"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/record/node_modules/uint8arrays/node_modules/multiformats/src/basics.js"],"sourcesContent":["// @ts-check\n\nimport * as identityBase from './bases/identity.js'\nimport * as base2 from './bases/base2.js'\nimport * as base8 from './bases/base8.js'\nimport * as base10 from './bases/base10.js'\nimport * as base16 from './bases/base16.js'\nimport * as base32 from './bases/base32.js'\nimport * as base36 from './bases/base36.js'\nimport * as base58 from './bases/base58.js'\nimport * as base64 from './bases/base64.js'\nimport * as base256emoji from './bases/base256emoji.js'\nimport * as sha2 from './hashes/sha2.js'\nimport * as identity from './hashes/identity.js'\n\nimport * as raw from './codecs/raw.js'\nimport * as json from './codecs/json.js'\n\nimport { CID, hasher, digest, varint, bytes } from './index.js'\n\nconst bases = { ...identityBase, ...base2, ...base8, ...base10, ...base16, ...base32, ...base36, ...base58, ...base64, ...base256emoji }\nconst hashes = { ...sha2, ...identity }\nconst codecs = { raw, json }\n\nexport { CID, hasher, digest, varint, bytes, hashes, bases, codecs }\n"],"mappings":";AAAA;;AAEA,OAAO,KAAKA,YAAY,MAAM,qBAAqB;AACnD,OAAO,KAAKC,KAAK,MAAM,kBAAkB;AACzC,OAAO,KAAKC,KAAK,MAAM,kBAAkB;AACzC,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,MAAM,MAAM,mBAAmB;AAC3C,OAAO,KAAKC,YAAY,MAAM,yBAAyB;AACvD,OAAO,KAAKC,IAAI,MAAM,kBAAkB;AACxC,OAAO,KAAKC,QAAQ,MAAM,sBAAsB;AAEhD,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,OAAO,KAAKC,IAAI,MAAM,kBAAkB;AAExC,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,YAAY;AAE/D,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAQpB,YAAY,GAAKC,KAAK,GAAKC,KAAK,GAAKC,MAAM,GAAKC,MAAM,GAAKC,MAAM,GAAKC,MAAM,GAAKC,MAAM,GAAKC,MAAM,GAAKC,YAAY,CAAE;AACxI,IAAMY,MAAM,GAAAD,aAAA,CAAAA,aAAA,KAAQV,IAAI,GAAKC,QAAQ,CAAE;AACvC,IAAMW,MAAM,GAAG;EAAEV,GAAG,EAAHA,GAAG;EAAEC,IAAI,EAAJA;AAAK,CAAC;AAE5B,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEG,MAAM,EAAEF,KAAK,EAAEG,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}