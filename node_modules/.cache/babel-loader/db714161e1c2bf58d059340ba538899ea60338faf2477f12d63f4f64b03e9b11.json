{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { repoVersion } from 'ipfs-repo/constants';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion(_ref) {\n  var repo = _ref.repo;\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"version\"]}\n   */\n  function version() {\n    return _version.apply(this, arguments);\n  }\n  function _version() {\n    _version = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        match,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.prev = 1;\n            _context.next = 4;\n            return repo._checkInitialized(options);\n          case 4:\n            _context.next = 12;\n            break;\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            // TODO: (dryajov) This is really hacky, there must be a better way\n            match = [/Key not found in database \\[\\/version\\]/, /ENOENT/, /repo is not initialized yet/].some(function (m) {\n              return m.test(_context.t0.message);\n            });\n            if (!match) {\n              _context.next = 11;\n              break;\n            }\n            return _context.abrupt(\"return\", repoVersion);\n          case 11:\n            throw _context.t0;\n          case 12:\n            return _context.abrupt(\"return\", repo.version.get());\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 6]]);\n    }));\n    return _version.apply(this, arguments);\n  }\n  return withTimeoutOption(version);\n}","map":{"version":3,"names":["withTimeoutOption","repoVersion","createVersion","_ref","repo","version","_version","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","match","_args","wrap","_callee$","_context","prev","next","length","undefined","_checkInitialized","t0","some","m","test","message","abrupt","get","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/repo/version.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { repoVersion } from 'ipfs-repo/constants'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"version\"]}\n   */\n  async function version (options = {}) {\n    try {\n      // @ts-expect-error - not a public API\n      await repo._checkInitialized(options)\n    } catch (/** @type {any} */ err) {\n      // TODO: (dryajov) This is really hacky, there must be a better way\n      const match = [\n        /Key not found in database \\[\\/version\\]/,\n        /ENOENT/,\n        /repo is not initialized yet/\n      ].some((m) => {\n        return m.test(err.message)\n      })\n      if (match) {\n        // this repo has not been initialized\n        return repoVersion\n      }\n      throw err\n    }\n\n    return repo.version.get()\n  }\n\n  return withTimeoutOption(version)\n}\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,WAAW,QAAQ,qBAAqB;;AAEjD;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAAY;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACnC;AACF;AACA;EAFE,SAGeC,OAAOA,CAAA;IAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,SAAA;IAAAA,QAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtB,SAAAC,QAAA;MAAA,IAAAC,OAAA;QAAAC,KAAA;QAAAC,KAAA,GAAAP,SAAA;MAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAwBP,OAAO,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAG1BhB,IAAI,CAACmB,iBAAiB,CAACV,OAAO,CAAC;UAAA;YAAAK,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAM,EAAA,GAAAN,QAAA;YAErC;YACMJ,KAAK,GAAG,CACZ,yCAAyC,EACzC,QAAQ,EACR,6BAA6B,CAC9B,CAACW,IAAI,CAAC,UAACC,CAAC,EAAK;cACZ,OAAOA,CAAC,CAACC,IAAI,CAACT,QAAA,CAAAM,EAAA,CAAII,OAAO,CAAC;YAC5B,CAAC,CAAC;YAAA,KACEd,KAAK;cAAAI,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAW,MAAA,WAEA5B,WAAW;UAAA;YAAA,MAAAiB,QAAA,CAAAM,EAAA;UAAA;YAAA,OAAAN,QAAA,CAAAW,MAAA,WAKfzB,IAAI,CAACC,OAAO,CAACyB,GAAG,CAAC,CAAC;UAAA;UAAA;YAAA,OAAAZ,QAAA,CAAAa,IAAA;QAAA;MAAA,GAAAnB,OAAA;IAAA,CAC1B;IAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOR,iBAAiB,CAACK,OAAO,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}