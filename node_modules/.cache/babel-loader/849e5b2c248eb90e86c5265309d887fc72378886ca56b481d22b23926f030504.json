{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/* eslint-env browser */\n\nimport { isMultiaddr } from '@multiformats/multiaddr';\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js';\nimport parseDuration from 'parse-duration';\nimport { logger } from '@libp2p/logger';\nimport HTTP from 'ipfs-utils/src/http.js';\nimport mergeOpts from 'merge-options';\nimport { toUrlString } from 'ipfs-core-utils/to-url-string';\nimport getAgent from 'ipfs-core-utils/agent';\nvar log = logger('ipfs-http-client:lib:error-handler');\nvar merge = mergeOpts.bind({\n  ignoreUndefined: true\n});\nvar DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http';\nvar DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost';\nvar DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001';\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nvar normalizeOptions = function normalizeOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var url;\n  /** @type {Options} */\n  var opts = {};\n  var agent;\n  if (typeof options === 'string' || isMultiaddr(options)) {\n    url = new URL(toUrlString(options));\n  } else if (options instanceof URL) {\n    url = options;\n  } else if (typeof options.url === 'string' || isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url));\n    opts = options;\n  } else if (options.url instanceof URL) {\n    url = options.url;\n    opts = options;\n  } else {\n    opts = options || {};\n    var protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');\n    var host = (opts.host || DEFAULT_HOST).split(':')[0];\n    var port = opts.port || DEFAULT_PORT;\n    url = new URL(\"\".concat(protocol, \"://\").concat(host, \":\").concat(port));\n  }\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath;\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0';\n  }\n  if (isNode) {\n    var Agent = getAgent(url);\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    });\n  }\n  return _objectSpread(_objectSpread({}, opts), {}, {\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url: url,\n    agent: agent\n  });\n};\n\n/**\n * @param {Response} response\n */\nexport var errorHandler = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n    var msg, data, error;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          if (!(response.headers.get('Content-Type') || '').startsWith('application/json')) {\n            _context.next = 9;\n            break;\n          }\n          _context.next = 4;\n          return response.json();\n        case 4:\n          data = _context.sent;\n          log(data);\n          msg = data.Message || data.message;\n          _context.next = 12;\n          break;\n        case 9:\n          _context.next = 11;\n          return response.text();\n        case 11:\n          msg = _context.sent;\n        case 12:\n          _context.next = 18;\n          break;\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          log('Failed to parse error response', _context.t0);\n          // Failed to extract/parse error message from response\n          msg = _context.t0.message;\n        case 18:\n          /** @type {Error} */\n          error = new HTTP.HTTPError(response);\n          if (msg) {\n            // This is what rs-ipfs returns where there's a timeout\n            if (msg.includes('deadline has elapsed')) {\n              error = new HTTP.TimeoutError();\n            }\n\n            // This is what go-ipfs returns where there's a timeout\n            if (msg && msg.includes('context deadline exceeded')) {\n              error = new HTTP.TimeoutError();\n            }\n          }\n\n          // This also gets returned\n          if (msg && msg.includes('request timed out')) {\n            error = new HTTP.TimeoutError();\n          }\n\n          // If we managed to extract a message from the response, use it\n          if (msg) {\n            error.message = msg;\n          }\n          throw error;\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n  return function errorHandler(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\n\n/**\n * @param {string} str\n */\nvar kebabCase = function kebabCase(str) {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase();\n  });\n};\n\n/**\n * @param {string | number} value\n */\nvar parseTimeout = function parseTimeout(value) {\n  return typeof value === 'string' ? parseDuration(value) : value;\n};\nexport var Client = /*#__PURE__*/function (_HTTP) {\n  _inherits(Client, _HTTP);\n  var _super = _createSuper(Client);\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  function Client() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Client);\n    var opts = normalizeOptions(options);\n    _this = _super.call(this, {\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: \"\".concat(opts.url),\n      handleError: errorHandler,\n      transformSearchParams: function transformSearchParams(search) {\n        var out = new URLSearchParams();\n        var _iterator = _createForOfIteratorHelper(search),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n            if (value !== 'undefined' && value !== 'null' && key !== 'signal') {\n              out.append(kebabCase(key), value);\n            }\n\n            // @ts-expect-error server timeouts are strings\n            if (key === 'timeout' && !isNaN(value)) {\n              out.append(kebabCase(key), value);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return out;\n      },\n      // @ts-expect-error this can be a https agent or a http agent\n      agent: opts.agent\n    });\n\n    // @ts-expect-error - cannot delete no-optional fields\n    delete _this.get;\n    // @ts-expect-error - cannot delete no-optional fields\n    delete _this.put;\n    // @ts-expect-error - cannot delete no-optional fields\n    delete _this.delete;\n    // @ts-expect-error - cannot delete no-optional fields\n    delete _this.options;\n    var fetch = _this.fetch;\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    _this.fetch = function (resource) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = \"\".concat(opts.url, \"/\").concat(resource);\n      }\n      return fetch.call(_assertThisInitialized(_this), resource, merge(options, {\n        method: 'POST'\n      }));\n    };\n    return _this;\n  }\n  return _createClass(Client);\n}(HTTP);\nexport var HTTPError = HTTP.HTTPError;","map":{"version":3,"names":["isMultiaddr","isBrowser","isWebWorker","isNode","parseDuration","logger","HTTP","mergeOpts","toUrlString","getAgent","log","merge","bind","ignoreUndefined","DEFAULT_PROTOCOL","location","protocol","DEFAULT_HOST","hostname","DEFAULT_PORT","port","normalizeOptions","options","arguments","length","undefined","url","opts","agent","URL","replace","host","split","concat","apiPath","pathname","Agent","keepAlive","maxSockets","_objectSpread","Number","errorHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","msg","data","error","wrap","_callee$","_context","prev","next","headers","get","startsWith","json","sent","Message","message","text","t0","HTTPError","includes","TimeoutError","stop","_x","apply","KEBAB_REGEX","kebabCase","str","match","toLowerCase","parseTimeout","value","Client","_HTTP","_inherits","_super","_createSuper","_this","_classCallCheck","call","timeout","base","handleError","transformSearchParams","search","out","URLSearchParams","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","key","append","isNaN","err","e","f","put","delete","fetch","resource","_assertThisInitialized","method","_createClass"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/lib/core.js"],"sourcesContent":["\n/* eslint-env browser */\n\nimport { isMultiaddr } from '@multiformats/multiaddr'\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js'\nimport parseDuration from 'parse-duration'\nimport { logger } from '@libp2p/logger'\nimport HTTP from 'ipfs-utils/src/http.js'\nimport mergeOpts from 'merge-options'\nimport { toUrlString } from 'ipfs-core-utils/to-url-string'\nimport getAgent from 'ipfs-core-utils/agent'\n\nconst log = logger('ipfs-http-client:lib:error-handler')\nconst merge = mergeOpts.bind({ ignoreUndefined: true })\n\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nconst normalizeOptions = (options = {}) => {\n  let url\n  /** @type {Options} */\n  let opts = {}\n  let agent\n\n  if (typeof options === 'string' || isMultiaddr(options)) {\n    url = new URL(toUrlString(options))\n  } else if (options instanceof URL) {\n    url = options\n  } else if (typeof options.url === 'string' || isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url))\n    opts = options\n  } else if (options.url instanceof URL) {\n    url = options.url\n    opts = options\n  } else {\n    opts = options || {}\n\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\n    const port = (opts.port || DEFAULT_PORT)\n\n    url = new URL(`${protocol}://${host}:${port}`)\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0'\n  }\n\n  if (isNode) {\n    const Agent = getAgent(url)\n\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    })\n  }\n\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  }\n}\n\n/**\n * @param {Response} response\n */\nexport const errorHandler = async (response) => {\n  let msg\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json()\n      log(data)\n      msg = data.Message || data.message\n    } else {\n      msg = await response.text()\n    }\n  } catch (/** @type {any} */ err) {\n    log('Failed to parse error response', err)\n    // Failed to extract/parse error message from response\n    msg = err.message\n  }\n\n  /** @type {Error} */\n  let error = new HTTP.HTTPError(response)\n\n  if (msg) {\n    // This is what rs-ipfs returns where there's a timeout\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError()\n    }\n\n    // This is what go-ipfs returns where there's a timeout\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError()\n    }\n  }\n\n  // This also gets returned\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError()\n  }\n\n  // If we managed to extract a message from the response, use it\n  if (msg) {\n    error.message = msg\n  }\n\n  throw error\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\n/**\n * @param {string} str\n */\nconst kebabCase = (str) => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase()\n  })\n}\n\n/**\n * @param {string | number} value\n */\nconst parseTimeout = (value) => {\n  return typeof value === 'string' ? parseDuration(value) : value\n}\n\nexport class Client extends HTTP {\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  constructor (options = {}) {\n    const opts = normalizeOptions(options)\n\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: (search) => {\n        const out = new URLSearchParams()\n\n        for (const [key, value] of search) {\n          if (\n            value !== 'undefined' &&\n            value !== 'null' &&\n            key !== 'signal'\n          ) {\n            out.append(kebabCase(key), value)\n          }\n\n          // @ts-expect-error server timeouts are strings\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value)\n          }\n        }\n\n        return out\n      },\n      // @ts-expect-error this can be a https agent or a http agent\n      agent: opts.agent\n    })\n\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.get\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.put\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.delete\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.options\n\n    const fetch = this.fetch\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`\n      }\n\n      return fetch.call(this, resource, merge(options, {\n        method: 'POST'\n      }))\n    }\n  }\n}\n\nexport const HTTPError = HTTP.HTTPError\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}