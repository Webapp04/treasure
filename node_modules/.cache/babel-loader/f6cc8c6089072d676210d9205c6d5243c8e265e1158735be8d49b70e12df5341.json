{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Key } from 'interface-datastore/key';\nimport { notFoundError } from 'datastore-core/errors';\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nexport var CONFIG_KEY = new Key('/config');\nexport var VERSION_KEY = new Key('/version');\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nexport function findLevelJs(store) {\n  var db = store;\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child;\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db;\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport function hasWithFallback(_x, _x2, _x3) {\n  return _hasWithFallback.apply(this, arguments);\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nfunction _hasWithFallback() {\n  _hasWithFallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key, has, store) {\n    var result, levelJs;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return has(key);\n        case 2:\n          result = _context.sent;\n          if (!result) {\n            _context.next = 5;\n            break;\n          }\n          return _context.abrupt(\"return\", result);\n        case 5:\n          // Newer versions of level.js changed the key type from Uint8Array|string\n          // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n          // and the string version of the key did not work\n          levelJs = findLevelJs(store);\n          if (levelJs) {\n            _context.next = 8;\n            break;\n          }\n          return _context.abrupt(\"return\", false);\n        case 8:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n            // @ts-ignore\n            var req = levelJs.store('readonly').get(key.toString());\n            req.transaction.onabort = function () {\n              reject(req.transaction.error);\n            };\n            req.transaction.oncomplete = function () {\n              resolve(Boolean(req.result));\n            };\n          }));\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _hasWithFallback.apply(this, arguments);\n}\nfunction getWithFallback(_x4, _x5, _x6, _x7) {\n  return _getWithFallback.apply(this, arguments);\n}\n/**\n * @param {Datastore} store\n */\nfunction _getWithFallback() {\n  _getWithFallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key, get, has, store) {\n    var levelJs;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return has(key);\n        case 2:\n          if (!_context2.sent) {\n            _context2.next = 4;\n            break;\n          }\n          return _context2.abrupt(\"return\", get(key));\n        case 4:\n          // Newer versions of level.js changed the key type from Uint8Array|string\n          // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n          // and the string version of the key did not work\n          levelJs = findLevelJs(store);\n          if (levelJs) {\n            _context2.next = 7;\n            break;\n          }\n          throw notFoundError();\n        case 7:\n          return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n            // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n            // @ts-ignore\n            var req = levelJs.store('readonly').get(key.toString());\n            req.transaction.onabort = function () {\n              reject(req.transaction.error);\n            };\n            req.transaction.oncomplete = function () {\n              if (req.result) {\n                return resolve(req.result);\n              }\n              reject(notFoundError());\n            };\n          }));\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getWithFallback.apply(this, arguments);\n}\nfunction wrapStore(store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  var originalGet = store.get.bind(store);\n  var originalHas = store.has.bind(store);\n  /**\n   * @param {Key} key\n   */\n  store.get = function (key) {\n    return getWithFallback(key, originalGet, originalHas, store);\n  };\n  /**\n   * @param {Key} key\n   */\n  store.has = function (key) {\n    return hasWithFallback(key, originalHas, store);\n  };\n  return store;\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nexport function wrapBackends(backends) {\n  return _objectSpread(_objectSpread({}, backends), {}, {\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  });\n}","map":{"version":3,"names":["Key","notFoundError","CONFIG_KEY","VERSION_KEY","findLevelJs","store","db","child","type","constructor","name","hasWithFallback","_x","_x2","_x3","_hasWithFallback","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","key","has","result","levelJs","wrap","_callee$","_context","prev","next","sent","abrupt","Promise","resolve","reject","req","get","toString","transaction","onabort","error","oncomplete","Boolean","stop","getWithFallback","_x4","_x5","_x6","_x7","_getWithFallback","_callee2","_callee2$","_context2","wrapStore","originalGet","bind","originalHas","wrapBackends","backends","_objectSpread","root","datastore","pins","keys"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo-migrations/src/utils.js"],"sourcesContent":["\nimport { Key } from 'interface-datastore/key'\nimport { notFoundError } from 'datastore-core/errors'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nexport const CONFIG_KEY = new Key('/config')\nexport const VERSION_KEY = new Key('/version')\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nexport function findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nasync function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw notFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(notFoundError())\n    }\n  })\n}\n\n/**\n * @param {Datastore} store\n */\nfunction wrapStore (store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  const originalGet = store.get.bind(store)\n  const originalHas = store.has.bind(store)\n  /**\n   * @param {Key} key\n   */\n  store.get = (key) => getWithFallback(key, originalGet, originalHas, store)\n  /**\n   * @param {Key} key\n   */\n  store.has = (key) => hasWithFallback(key, originalHas, store)\n\n  return store\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nexport function wrapBackends (backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}