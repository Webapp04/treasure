{"ast":null,"code":"import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { base64url } from 'multiformats/bases/base64';\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nvar rpcArrayToTextArray = function rpcArrayToTextArray(strings) {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText);\n  }\n  return strings;\n};\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nvar rpcToText = function rpcToText(mb) {\n  return uint8ArrayToString(rpcToBytes(mb));\n};\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nvar rpcToBytes = function rpcToBytes(mb) {\n  return base64url.decode(mb);\n};\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nvar rpcToBigInt = function rpcToBigInt(mb) {\n  return BigInt(\"0x\".concat(uint8ArrayToString(base64url.decode(mb), 'base16')));\n};\n\n/**\n * @param {string} text\n * @returns {string}\n */\nvar textToUrlSafeRpc = function textToUrlSafeRpc(text) {\n  return base64url.encode(uint8ArrayFromString(text));\n};\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc };","map":{"version":3,"names":["fromString","uint8ArrayFromString","toString","uint8ArrayToString","base64url","rpcArrayToTextArray","strings","Array","isArray","map","rpcToText","mb","rpcToBytes","decode","rpcToBigInt","BigInt","concat","textToUrlSafeRpc","text","encode"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js"],"sourcesContent":["import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { base64url } from 'multiformats/bases/base64'\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText)\n  }\n  return strings\n}\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb))\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb)\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`)\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text))\n\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc }\n"],"mappings":"AAAA,SAASA,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAC5E,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AACtE,SAASC,SAAS,QAAQ,2BAA2B;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAGC,OAAO,EAAI;EACrC,IAAIC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;IAC1B,OAAOA,OAAO,CAACG,GAAG,CAACC,SAAS,CAAC;EAC/B;EACA,OAAOJ,OAAO;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAGC,EAAE;EAAA,OAAIR,kBAAkB,CAACS,UAAU,CAACD,EAAE,CAAC,CAAC;AAAA;;AAE1D;AACA;AACA;AACA;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAGD,EAAE;EAAA,OAAIP,SAAS,CAACS,MAAM,CAACF,EAAE,CAAC;AAAA;;AAE7C;AACA;AACA;AACA;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAGH,EAAE;EAAA,OAAII,MAAM,MAAAC,MAAA,CAAMb,kBAAkB,CAACC,SAAS,CAACS,MAAM,CAACF,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAE,CAAC;AAAA;;AAE3F;AACA;AACA;AACA;AACA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAGC,IAAI;EAAA,OAAId,SAAS,CAACe,MAAM,CAAClB,oBAAoB,CAACiB,IAAI,CAAC,CAAC;AAAA;AAE7E,SAASb,mBAAmB,EAAEK,SAAS,EAAEE,UAAU,EAAEE,WAAW,EAAEG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}