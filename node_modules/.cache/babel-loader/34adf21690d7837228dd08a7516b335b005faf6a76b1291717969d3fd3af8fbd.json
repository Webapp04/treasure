{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import AirdropApi from\"api/AirdropApi\";import{ACTIVATE_KEY_ALERT,ALERT_STATUS_FAILURE,ALERT_STATUS_SUCCESS}from\"constant/alert\";import useHandleToken from\"hooks/token/useHandleToken\";import{useDispatch,useSelector}from\"react-redux\";import ACTIONS from\"redux/action\";import{selectNftSelected}from\"redux/slice/nftSlice\";import{selectUser}from\"redux/slice/userSlice\";import useLoadNFTBalance from\"./useLoadNFTBalance\";import{useContractNFKeyStakingWithSigner}from\"hooks/blockchain/useHandleContracts\";export default function useBulkStake(){var dispatch=useDispatch();var user=useSelector(selectUser);var nftSelected=useSelector(selectNftSelected);var handleToken=useHandleToken();var handleLoadNFTBalance=useLoadNFTBalance();var handleContractNFKeyStakingWithSigner=useContractNFKeyStakingWithSigner();var bulkStake=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tokenList){var contractNFKeyStakingWithSigner;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return handleContractNFKeyStakingWithSigner;case 2:contractNFKeyStakingWithSigner=_context2.sent;contractNFKeyStakingWithSigner.bulkStake(tokenList).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(tx){var _iterator,_step,tokenItem;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return new AirdropApi().logger({wallet_id:user===null||user===void 0?void 0:user.wallet_id,type:\"PENDING\",action:\"bulkStakeNFT\",description:\"tokenIds: \".concat(tokenList===null||tokenList===void 0?void 0:tokenList.join(\",\")),tx:JSON.stringify(tx)});case 2:_context.next=4;return tx.wait();case 4:_context.next=6;return handleToken.getcheckTxEvent(tx===null||tx===void 0?void 0:tx.hash,\"BulkStaked\");case 6:ACTIONS.SET_TRANSANCTION_HASH(dispatch,tx===null||tx===void 0?void 0:tx.hash);_context.next=9;return handleLoadNFTBalance.loadNFTBalance(user===null||user===void 0?void 0:user.wallet_id);case 9:_iterator=_createForOfIteratorHelper(tokenList);try{for(_iterator.s();!(_step=_iterator.n()).done;){tokenItem=_step.value;ACTIONS.SET_ALERT(dispatch,true,ALERT_STATUS_SUCCESS,ACTIVATE_KEY_ALERT(tokenItem,true));}}catch(err){_iterator.e(err);}finally{_iterator.f();}case 11:case\"end\":return _context.stop();}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}()).catch(function(err){new AirdropApi().logger({wallet_id:user===null||user===void 0?void 0:user.wallet_id,type:\"ERROR\",action:\"bulkStakeNFT\",description:\"tokenIds: \".concat(tokenList===null||tokenList===void 0?void 0:tokenList.join(\",\")),error:JSON.stringify(err)});ACTIONS.SET_ALERT(dispatch,true,ALERT_STATUS_FAILURE,ACTIVATE_KEY_ALERT(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId,false));return null;});case 4:case\"end\":return _context2.stop();}},_callee2);}));return function bulkStake(_x){return _ref.apply(this,arguments);};}();return{bulkStake:bulkStake};}","map":{"version":3,"names":["AirdropApi","ACTIVATE_KEY_ALERT","ALERT_STATUS_FAILURE","ALERT_STATUS_SUCCESS","useHandleToken","useDispatch","useSelector","ACTIONS","selectNftSelected","selectUser","useLoadNFTBalance","useContractNFKeyStakingWithSigner","useBulkStake","dispatch","user","nftSelected","handleToken","handleLoadNFTBalance","handleContractNFKeyStakingWithSigner","bulkStake","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","tokenList","contractNFKeyStakingWithSigner","wrap","_callee2$","_context2","prev","next","sent","then","_ref2","_callee","tx","_iterator","_step","tokenItem","_callee$","_context","logger","wallet_id","type","action","description","concat","join","JSON","stringify","wait","getcheckTxEvent","hash","SET_TRANSANCTION_HASH","loadNFTBalance","_createForOfIteratorHelper","s","n","done","value","SET_ALERT","err","e","f","stop","_x2","apply","arguments","catch","error","tokenId","_x"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useBulkStake.js"],"sourcesContent":["import AirdropApi from \"api/AirdropApi\";\nimport {\n  ACTIVATE_KEY_ALERT,\n  ALERT_STATUS_FAILURE,\n  ALERT_STATUS_SUCCESS,\n} from \"constant/alert\";\nimport useHandleToken from \"hooks/token/useHandleToken\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport useLoadNFTBalance from \"./useLoadNFTBalance\";\nimport { useContractNFKeyStakingWithSigner } from \"hooks/blockchain/useHandleContracts\";\n\nexport default function useBulkStake() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const nftSelected = useSelector(selectNftSelected);\n  const handleToken = useHandleToken();\n  const handleLoadNFTBalance = useLoadNFTBalance();\n  const handleContractNFKeyStakingWithSigner =\n    useContractNFKeyStakingWithSigner();\n\n  const bulkStake = async (tokenList) => {\n    const contractNFKeyStakingWithSigner =\n      await handleContractNFKeyStakingWithSigner;\n    contractNFKeyStakingWithSigner\n      .bulkStake(tokenList)\n      .then(async (tx) => {\n        await new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"PENDING\",\n          action: \"bulkStakeNFT\",\n          description: `tokenIds: ${tokenList?.join(\",\")}`,\n          tx: JSON.stringify(tx),\n        });\n        await tx.wait();\n        await handleToken.getcheckTxEvent(tx?.hash, \"BulkStaked\");\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n        await handleLoadNFTBalance.loadNFTBalance(user?.wallet_id);\n        for (const tokenItem of tokenList) {\n          ACTIONS.SET_ALERT(\n            dispatch,\n            true,\n            ALERT_STATUS_SUCCESS,\n            ACTIVATE_KEY_ALERT(tokenItem, true)\n          );\n        }\n      })\n      .catch((err) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"ERROR\",\n          action: \"bulkStakeNFT\",\n          description: `tokenIds: ${tokenList?.join(\",\")}`,\n          error: JSON.stringify(err),\n        });\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          ACTIVATE_KEY_ALERT(nftSelected?.tokenId, false)\n        );\n        return null;\n      });\n  };\n  return { bulkStake };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}