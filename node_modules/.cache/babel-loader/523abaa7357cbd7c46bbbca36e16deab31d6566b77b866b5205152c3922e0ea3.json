{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useContractERC20WithSigner}from\"hooks/blockchain/useHandleContracts\";import{hexToNumber}from\"utils/blockchain\";export default function useBalanceOfERC20(){var handleContractERC20WithSigner=useContractERC20WithSigner();var balanceOfERC20=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(walletAddress,contractAddress){var count,ContractERC20WithSigner,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:count=_args.length>2&&_args[2]!==undefined?_args[2]:3;_context.next=3;return handleContractERC20WithSigner;case 3:ContractERC20WithSigner=_context.sent;return _context.abrupt(\"return\",ContractERC20WithSigner.contractERC20WithSigner(contractAddress).balanceOf(walletAddress).then(function(tx){return String(hexToNumber(tx._hex)/Math.pow(10,18));}).catch(function(){return count?balanceOfERC20(walletAddress,contractAddress,count-1):null;}));case 5:case\"end\":return _context.stop();}},_callee);}));return function balanceOfERC20(_x,_x2){return _ref.apply(this,arguments);};}();return{balanceOfERC20:balanceOfERC20};}","map":{"version":3,"names":["useContractERC20WithSigner","hexToNumber","useBalanceOfERC20","handleContractERC20WithSigner","balanceOfERC20","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","walletAddress","contractAddress","count","ContractERC20WithSigner","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","sent","abrupt","contractERC20WithSigner","balanceOf","then","tx","String","_hex","Math","pow","catch","stop","_x","_x2","apply"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useBalanceOfERC20.js"],"sourcesContent":["import { useContractERC20WithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useBalanceOfERC20() {\n  const handleContractERC20WithSigner = useContractERC20WithSigner();\n  const balanceOfERC20 = async (walletAddress, contractAddress, count = 3) => {\n    const ContractERC20WithSigner = await handleContractERC20WithSigner;\n    return ContractERC20WithSigner.contractERC20WithSigner(contractAddress)\n      .balanceOf(walletAddress)\n      .then((tx) => String(hexToNumber(tx._hex) / Math.pow(10, 18)))\n      .catch(() =>\n        count ? balanceOfERC20(walletAddress, contractAddress, count - 1) : null\n      );\n  };\n  return { balanceOfERC20 };\n}\n"],"mappings":"0PAAA,OAASA,0BAA0B,KAAQ,qCAAqC,CAChF,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC1C,GAAM,CAAAC,6BAA6B,CAAGH,0BAA0B,CAAC,CAAC,CAClE,GAAM,CAAAI,cAAc,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,aAAa,CAAEC,eAAe,MAAAC,KAAA,CAAAC,uBAAA,CAAAC,KAAA,CAAAC,SAAA,QAAAR,mBAAA,GAAAS,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAER,KAAK,CAAAE,KAAA,CAAAO,MAAA,IAAAP,KAAA,MAAAQ,SAAA,CAAAR,KAAA,IAAG,CAAC,CAAAI,QAAA,CAAAE,IAAA,SAC/B,CAAAjB,6BAA6B,QAA7DU,uBAAuB,CAAAK,QAAA,CAAAK,IAAA,QAAAL,QAAA,CAAAM,MAAA,UACtBX,uBAAuB,CAACY,uBAAuB,CAACd,eAAe,CAAC,CACpEe,SAAS,CAAChB,aAAa,CAAC,CACxBiB,IAAI,CAAC,SAACC,EAAE,QAAK,CAAAC,MAAM,CAAC5B,WAAW,CAAC2B,EAAE,CAACE,IAAI,CAAC,CAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,CAAE,EAAE,CAAC,CAAC,GAAC,CAC7DC,KAAK,CAAC,iBACL,CAAArB,KAAK,CAAGR,cAAc,CAACM,aAAa,CAAEC,eAAe,CAAEC,KAAK,CAAG,CAAC,CAAC,CAAG,IAAI,EAC1E,CAAC,0BAAAM,QAAA,CAAAgB,IAAA,MAAAzB,OAAA,GACJ,kBARK,CAAAL,cAAcA,CAAA+B,EAAA,CAAAC,GAAA,SAAA/B,IAAA,CAAAgC,KAAA,MAAAtB,SAAA,OAQnB,CACD,MAAO,CAAEX,cAAc,CAAdA,cAAe,CAAC,CAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}