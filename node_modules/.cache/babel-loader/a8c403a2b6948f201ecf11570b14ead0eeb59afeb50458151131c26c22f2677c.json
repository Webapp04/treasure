{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createImport(_ref) {\n  var keychain = _ref.keychain;\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"import\"]}\n   */\n  var importKey = function importKey(name, pem, password) {\n    return keychain.importKey(name, pem, password);\n  };\n  return withTimeoutOption(importKey);\n}","map":{"version":3,"names":["withTimeoutOption","createImport","_ref","keychain","importKey","name","pem","password"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/key/import.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createImport ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"import\"]}\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password)\n  }\n\n  return withTimeoutOption(importKey)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAAC,IAAA,EAAgB;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtC;AACF;AACA;EACE,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,EAAK;IACzC,OAAOJ,QAAQ,CAACC,SAAS,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,CAAC;EAChD,CAAC;EAED,OAAOP,iBAAiB,CAACI,SAAS,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}