{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport var createVersion = configure(function (api) {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  function version() {\n    return _version.apply(this, arguments);\n  }\n  function _version() {\n    _version = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return api.post('repo/version', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(options),\n              headers: options.headers\n            });\n          case 3:\n            _context.next = 5;\n            return _context.sent.json();\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.Version);\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _version.apply(this, arguments);\n  }\n  return version;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createVersion","api","version","_version","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","res","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","headers","sent","json","abrupt","Version","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/repo/version.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,aAAa,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EAC5C;AACF;AACA;EAFE,SAGeC,OAAOA,CAAA;IAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,SAAA;IAAAA,QAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtB,SAAAC,QAAA;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,KAAA,GAAAP,SAAA;MAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAwBP,OAAO,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACThB,GAAG,CAACmB,IAAI,CAAC,cAAc,EAAE;cAChDC,MAAM,EAAEX,OAAO,CAACW,MAAM;cACtBC,YAAY,EAAEvB,iBAAiB,CAACW,OAAO,CAAC;cACxCa,OAAO,EAAEb,OAAO,CAACa;YACnB,CAAC,CAAC;UAAA;YAAAR,QAAA,CAAAE,IAAA;YAAA,OAAAF,QAAA,CAAAS,IAAA,CAAEC,IAAI;UAAA;YAJFd,GAAG,GAAAI,QAAA,CAAAS,IAAA;YAAA,OAAAT,QAAA,CAAAW,MAAA,WAMFf,GAAG,CAACgB,OAAO;UAAA;UAAA;YAAA,OAAAZ,QAAA,CAAAa,IAAA;QAAA;MAAA,GAAAnB,OAAA;IAAA,CACnB;IAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOH,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}