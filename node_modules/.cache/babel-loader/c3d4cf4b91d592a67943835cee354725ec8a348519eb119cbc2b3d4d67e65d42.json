{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { MessageTypeNames, MessageTypes } from './message-types.js';\nimport { Uint8ArrayList } from 'uint8arraylist';\nvar Decoder = /*#__PURE__*/function () {\n  function Decoder() {\n    _classCallCheck(this, Decoder);\n    this._buffer = new Uint8ArrayList();\n    this._headerInfo = null;\n  }\n  _createClass(Decoder, [{\n    key: \"write\",\n    value: function write(chunk) {\n      if (chunk == null || chunk.length === 0) {\n        return [];\n      }\n      this._buffer.append(chunk);\n      var msgs = [];\n      while (this._buffer.length !== 0) {\n        if (this._headerInfo == null) {\n          try {\n            this._headerInfo = this._decodeHeader(this._buffer);\n          } catch (_) {\n            break; // We haven't received enough data yet\n          }\n        }\n\n        var _this$_headerInfo = this._headerInfo,\n          id = _this$_headerInfo.id,\n          type = _this$_headerInfo.type,\n          length = _this$_headerInfo.length,\n          offset = _this$_headerInfo.offset;\n        var bufferedDataLength = this._buffer.length - offset;\n        if (bufferedDataLength < length) {\n          break; // not enough data yet\n        }\n\n        var msg = {\n          id: id,\n          type: type\n        };\n        if (type === MessageTypes.NEW_STREAM || type === MessageTypes.MESSAGE_INITIATOR || type === MessageTypes.MESSAGE_RECEIVER) {\n          msg.data = this._buffer.sublist(offset, offset + length);\n        }\n        msgs.push(msg);\n        this._buffer.consume(offset + length);\n        this._headerInfo = null;\n      }\n      return msgs;\n    }\n    /**\n     * Attempts to decode the message header from the buffer\n     */\n  }, {\n    key: \"_decodeHeader\",\n    value: function _decodeHeader(data) {\n      var _readVarInt = readVarInt(data),\n        h = _readVarInt.value,\n        offset = _readVarInt.offset;\n      var _readVarInt2 = readVarInt(data, offset),\n        length = _readVarInt2.value,\n        end = _readVarInt2.offset;\n      var type = h & 7;\n      // @ts-expect-error h is a number not a CODE\n      if (MessageTypeNames[type] == null) {\n        throw new Error(\"Invalid type received: \".concat(type));\n      }\n      // @ts-expect-error h is a number not a CODE\n      return {\n        id: h >> 3,\n        type: type,\n        offset: offset + end,\n        length: length\n      };\n    }\n  }]);\n  return Decoder;\n}();\nvar MSB = 0x80;\nvar REST = 0x7F;\nfunction readVarInt(buf) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var res = 0;\n  var shift = 0;\n  var counter = offset;\n  var b;\n  var l = buf.length;\n  do {\n    if (counter >= l || shift > 49) {\n      offset = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf.get(counter++);\n    res += shift < 28 ? (b & REST) << shift : (b & REST) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB);\n  offset = counter - offset;\n  return {\n    value: res,\n    offset: offset\n  };\n}\n/**\n * Decode a chunk and yield an _array_ of decoded messages\n */\nexport function decode(_x) {\n  return _decode.apply(this, arguments);\n}\nfunction _decode() {\n  _decode = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n    var decoder, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk, msgs;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          decoder = new Decoder();\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 3;\n          _iterator = _asyncIterator(source);\n        case 5:\n          _context.next = 7;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 7:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 16;\n            break;\n          }\n          chunk = _step.value;\n          msgs = decoder.write(chunk);\n          if (!(msgs.length > 0)) {\n            _context.next = 13;\n            break;\n          }\n          _context.next = 13;\n          return msgs;\n        case 13:\n          _iteratorAbruptCompletion = false;\n          _context.next = 5;\n          break;\n        case 16:\n          _context.next = 22;\n          break;\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](3);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 22:\n          _context.prev = 22;\n          _context.prev = 23;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 27;\n            break;\n          }\n          _context.next = 27;\n          return _awaitAsyncGenerator(_iterator.return());\n        case 27:\n          _context.prev = 27;\n          if (!_didIteratorError) {\n            _context.next = 30;\n            break;\n          }\n          throw _iteratorError;\n        case 30:\n          return _context.finish(27);\n        case 31:\n          return _context.finish(22);\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[3, 18, 22, 32], [23,, 27, 31]]);\n  }));\n  return _decode.apply(this, arguments);\n}","map":{"version":3,"names":["MessageTypeNames","MessageTypes","Uint8ArrayList","Decoder","_classCallCheck","_buffer","_headerInfo","_createClass","key","value","write","chunk","length","append","msgs","_decodeHeader","_","_this$_headerInfo","id","type","offset","bufferedDataLength","msg","NEW_STREAM","MESSAGE_INITIATOR","MESSAGE_RECEIVER","data","sublist","push","consume","_readVarInt","readVarInt","h","_readVarInt2","end","Error","concat","MSB","REST","buf","arguments","undefined","res","shift","counter","b","l","RangeError","get","Math","pow","decode","_x","_decode","apply","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","source","decoder","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","wrap","_callee$","_context","prev","next","_asyncIterator","_awaitAsyncGenerator","sent","done","t0","return","finish","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/mplex/src/decode.ts"],"sourcesContent":["import { MessageTypeNames, MessageTypes } from './message-types.js'\nimport { Uint8ArrayList } from 'uint8arraylist'\nimport type { Source } from 'it-stream-types'\nimport type { Message } from './message-types.js'\n\ninterface MessageHeader {\n  id: number\n  type: keyof typeof MessageTypeNames\n  offset: number\n  length: number\n}\n\nclass Decoder {\n  private readonly _buffer: Uint8ArrayList\n  private _headerInfo: MessageHeader | null\n\n  constructor () {\n    this._buffer = new Uint8ArrayList()\n    this._headerInfo = null\n  }\n\n  write (chunk: Uint8Array) {\n    if (chunk == null || chunk.length === 0) {\n      return []\n    }\n\n    this._buffer.append(chunk)\n    const msgs: Message[] = []\n\n    while (this._buffer.length !== 0) {\n      if (this._headerInfo == null) {\n        try {\n          this._headerInfo = this._decodeHeader(this._buffer)\n        } catch (_) {\n          break // We haven't received enough data yet\n        }\n      }\n\n      const { id, type, length, offset } = this._headerInfo\n      const bufferedDataLength = this._buffer.length - offset\n\n      if (bufferedDataLength < length) {\n        break // not enough data yet\n      }\n\n      const msg: any = {\n        id,\n        type\n      }\n\n      if (type === MessageTypes.NEW_STREAM || type === MessageTypes.MESSAGE_INITIATOR || type === MessageTypes.MESSAGE_RECEIVER) {\n        msg.data = this._buffer.sublist(offset, offset + length)\n      }\n\n      msgs.push(msg)\n\n      this._buffer.consume(offset + length)\n      this._headerInfo = null\n    }\n\n    return msgs\n  }\n\n  /**\n   * Attempts to decode the message header from the buffer\n   */\n  _decodeHeader (data: Uint8ArrayList): MessageHeader {\n    const {\n      value: h,\n      offset\n    } = readVarInt(data)\n    const {\n      value: length,\n      offset: end\n    } = readVarInt(data, offset)\n\n    const type = h & 7\n\n    // @ts-expect-error h is a number not a CODE\n    if (MessageTypeNames[type] == null) {\n      throw new Error(`Invalid type received: ${type}`)\n    }\n\n    // @ts-expect-error h is a number not a CODE\n    return { id: h >> 3, type, offset: offset + end, length }\n  }\n}\n\nconst MSB = 0x80\nconst REST = 0x7F\n\nfunction readVarInt (buf: Uint8ArrayList, offset: number = 0) {\n  let res = 0\n  let shift = 0\n  let counter = offset\n  let b: number\n  const l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      offset = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf.get(counter++)\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  offset = counter - offset\n\n  return {\n    value: res,\n    offset\n  }\n}\n\n/**\n * Decode a chunk and yield an _array_ of decoded messages\n */\nexport async function * decode (source: Source<Uint8Array>) {\n  const decoder = new Decoder()\n\n  for await (const chunk of source) {\n    const msgs = decoder.write(chunk)\n\n    if (msgs.length > 0) {\n      yield msgs\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}