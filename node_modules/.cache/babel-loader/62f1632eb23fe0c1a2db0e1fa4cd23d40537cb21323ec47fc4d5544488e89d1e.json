{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _get from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { WebRTCPeer } from './peer.js';\nimport { WebRTCHandshake } from './handshake.js';\nimport { CustomEvent } from '@libp2p/interfaces/events';\nimport { logger } from '@libp2p/logger';\nvar log = logger('libp2p:webrtc-peer:receiver');\nexport var WebRTCReceiver = /*#__PURE__*/function (_WebRTCPeer) {\n  _inherits(WebRTCReceiver, _WebRTCPeer);\n  var _super = _createSuper(WebRTCReceiver);\n  function WebRTCReceiver() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, WebRTCReceiver);\n    _this = _super.call(this, _objectSpread(_objectSpread({}, opts), {}, {\n      logPrefix: 'receiver'\n    }));\n    _this.handshake = new WebRTCReceiverHandshake({\n      log: _this.log,\n      peerConnection: _this.peerConnection,\n      wrtc: _this.wrtc,\n      answerOptions: opts.answerOptions\n    });\n    _this.handshake.addEventListener('signal', function (event) {\n      return _this.dispatchEvent(new CustomEvent('signal', {\n        detail: event.detail\n      }));\n    });\n    _this.peerConnection.addEventListener('datachannel', function (event) {\n      _this.handleDataChannelEvent(event);\n    });\n    return _this;\n  }\n  _createClass(WebRTCReceiver, [{\n    key: \"handleSignal\",\n    value: function handleSignal(signal) {\n      var _this2 = this;\n      this.handshake.handleSignal(signal).catch(function (err) {\n        _this2.log('error handling signal %o %o', signal, err);\n      });\n    }\n  }]);\n  return WebRTCReceiver;\n}(WebRTCPeer);\nvar WebRTCReceiverHandshake = /*#__PURE__*/function (_WebRTCHandshake) {\n  _inherits(WebRTCReceiverHandshake, _WebRTCHandshake);\n  var _super2 = _createSuper(WebRTCReceiverHandshake);\n  function WebRTCReceiverHandshake(options) {\n    var _this3;\n    _classCallCheck(this, WebRTCReceiverHandshake);\n    _this3 = _super2.call(this, options);\n    _this3.options = options;\n    _this3.status = 'idle';\n    _this3.iceCandidates = [];\n    return _this3;\n  }\n  _createClass(WebRTCReceiverHandshake, [{\n    key: \"handleRenegotiate\",\n    value: function () {\n      var _handleRenegotiate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              log.trace('renegotiate');\n              this.dispatchEvent(new CustomEvent('signal', {\n                detail: {\n                  type: 'renegotiate'\n                }\n              }));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function handleRenegotiate() {\n        return _handleRenegotiate.apply(this, arguments);\n      }\n      return handleRenegotiate;\n    }()\n  }, {\n    key: \"handleOffer\",\n    value: function () {\n      var _handleOffer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(signal) {\n        var _this$peerConnection$;\n        var _iterator, _step, candidate, answer;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.peerConnection.setRemoteDescription(new this.wrtc.RTCSessionDescription(signal));\n            case 2:\n              // add any candidates we were sent before the offer arrived\n              _iterator = _createForOfIteratorHelper(this.iceCandidates);\n              _context2.prev = 3;\n              _iterator.s();\n            case 5:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 11;\n                break;\n              }\n              candidate = _step.value;\n              _context2.next = 9;\n              return this.handleCandidate(candidate);\n            case 9:\n              _context2.next = 5;\n              break;\n            case 11:\n              _context2.next = 16;\n              break;\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](3);\n              _iterator.e(_context2.t0);\n            case 16:\n              _context2.prev = 16;\n              _iterator.f();\n              return _context2.finish(16);\n            case 19:\n              this.iceCandidates = [];\n              _context2.next = 22;\n              return this.peerConnection.createAnswer(this.options.answerOptions);\n            case 22:\n              answer = _context2.sent;\n              _context2.next = 25;\n              return this.peerConnection.setLocalDescription(answer);\n            case 25:\n              log.trace('handle offer', this.peerConnection.localDescription);\n              this.dispatchEvent(new CustomEvent('signal', {\n                detail: (_this$peerConnection$ = this.peerConnection.localDescription) !== null && _this$peerConnection$ !== void 0 ? _this$peerConnection$ : answer\n              }));\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[3, 13, 16, 19]]);\n      }));\n      function handleOffer(_x) {\n        return _handleOffer.apply(this, arguments);\n      }\n      return handleOffer;\n    }()\n  }, {\n    key: \"handleCandidate\",\n    value: function () {\n      var _handleCandidate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(signal) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this.peerConnection.remoteDescription == null || this.peerConnection.remoteDescription.type == null)) {\n                _context3.next = 3;\n                break;\n              }\n              // we haven't been sent an offer yet, cache the remote ICE candidates\n              this.iceCandidates.push(signal);\n              return _context3.abrupt(\"return\");\n            case 3:\n              _context3.next = 5;\n              return _get(_getPrototypeOf(WebRTCReceiverHandshake.prototype), \"handleCandidate\", this).call(this, signal);\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function handleCandidate(_x2) {\n        return _handleCandidate.apply(this, arguments);\n      }\n      return handleCandidate;\n    }()\n  }]);\n  return WebRTCReceiverHandshake;\n}(WebRTCHandshake);","map":{"version":3,"names":["WebRTCPeer","WebRTCHandshake","CustomEvent","logger","log","WebRTCReceiver","_WebRTCPeer","_inherits","_super","_createSuper","_this","opts","arguments","length","undefined","_classCallCheck","call","_objectSpread","logPrefix","handshake","WebRTCReceiverHandshake","peerConnection","wrtc","answerOptions","addEventListener","event","dispatchEvent","detail","handleDataChannelEvent","_createClass","key","value","handleSignal","signal","_this2","catch","err","_WebRTCHandshake","_super2","options","_this3","status","iceCandidates","_handleRenegotiate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","trace","type","stop","handleRenegotiate","apply","_handleOffer","_callee2","_this$peerConnection$","_iterator","_step","candidate","answer","_callee2$","_context2","setRemoteDescription","RTCSessionDescription","_createForOfIteratorHelper","s","n","done","handleCandidate","t0","e","f","finish","createAnswer","sent","setLocalDescription","localDescription","handleOffer","_x","_handleCandidate","_callee3","_callee3$","_context3","remoteDescription","push","abrupt","_get","_getPrototypeOf","prototype","_x2"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/webrtc-peer/src/receiver.ts"],"sourcesContent":["import { WebRTCPeer } from './peer.js'\nimport { WebRTCHandshake } from './handshake.js'\nimport { CustomEvent } from '@libp2p/interfaces/events'\nimport { logger } from '@libp2p/logger'\nimport type { WebRTCHandshakeOptions } from './handshake.js'\nimport type { WebRTCReceiverInit, OfferSignal, Signal, CandidateSignal } from './index.js'\n\nconst log = logger('libp2p:webrtc-peer:receiver')\n\nexport class WebRTCReceiver extends WebRTCPeer {\n  private readonly handshake: WebRTCReceiverHandshake\n\n  constructor (opts: WebRTCReceiverInit = {}) {\n    super({\n      ...opts,\n      logPrefix: 'receiver'\n    })\n\n    this.handshake = new WebRTCReceiverHandshake({\n      log: this.log,\n      peerConnection: this.peerConnection,\n      wrtc: this.wrtc,\n      answerOptions: opts.answerOptions\n    })\n\n    this.handshake.addEventListener('signal', event => this.dispatchEvent(new CustomEvent('signal', {\n      detail: event.detail\n    })))\n    this.peerConnection.addEventListener('datachannel', (event) => {\n      this.handleDataChannelEvent(event)\n    })\n  }\n\n  handleSignal (signal: Signal) {\n    this.handshake.handleSignal(signal).catch(err => {\n      this.log('error handling signal %o %o', signal, err)\n    })\n  }\n}\n\ninterface WebRTCReceiverHandshakeOptions extends WebRTCHandshakeOptions {\n  answerOptions?: RTCAnswerOptions\n}\n\nclass WebRTCReceiverHandshake extends WebRTCHandshake {\n  private readonly options: WebRTCReceiverHandshakeOptions\n  private iceCandidates: CandidateSignal[]\n\n  constructor (options: WebRTCReceiverHandshakeOptions) {\n    super(options)\n\n    this.options = options\n    this.status = 'idle'\n    this.iceCandidates = []\n  }\n\n  async handleRenegotiate () {\n    log.trace('renegotiate')\n\n    this.dispatchEvent(new CustomEvent<Signal>('signal', {\n      detail: {\n        type: 'renegotiate'\n      }\n    }))\n  }\n\n  async handleOffer (signal: OfferSignal) {\n    await this.peerConnection.setRemoteDescription(new this.wrtc.RTCSessionDescription(signal))\n\n    // add any candidates we were sent before the offer arrived\n    for (const candidate of this.iceCandidates) {\n      await this.handleCandidate(candidate)\n    }\n    this.iceCandidates = []\n\n    const answer = await this.peerConnection.createAnswer(this.options.answerOptions)\n\n    await this.peerConnection.setLocalDescription(answer)\n\n    log.trace('handle offer', this.peerConnection.localDescription)\n\n    this.dispatchEvent(new CustomEvent('signal', {\n      detail: this.peerConnection.localDescription ?? answer\n    }))\n  }\n\n  async handleCandidate (signal: CandidateSignal) {\n    if (this.peerConnection.remoteDescription == null || this.peerConnection.remoteDescription.type == null) {\n      // we haven't been sent an offer yet, cache the remote ICE candidates\n      this.iceCandidates.push(signal)\n\n      return\n    }\n\n    await super.handleCandidate(signal)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}