{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ipfsCore, interfaceIpfsCore, commit } from '../version.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion(_ref) {\n  var repo = _ref.repo;\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"version\"]}\n   */\n  function version() {\n    return _version.apply(this, arguments);\n  }\n  function _version() {\n    _version = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _options,\n        repoVersion,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            _context.next = 3;\n            return repo.version.get();\n          case 3:\n            repoVersion = _context.sent;\n            return _context.abrupt(\"return\", {\n              version: ipfsCore,\n              commit: commit,\n              repo: \"\".concat(repoVersion),\n              'ipfs-core': ipfsCore,\n              'interface-ipfs-core': interfaceIpfsCore\n            });\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _version.apply(this, arguments);\n  }\n  return withTimeoutOption(version);\n}","map":{"version":3,"names":["ipfsCore","interfaceIpfsCore","commit","withTimeoutOption","createVersion","_ref","repo","version","_version","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_options","repoVersion","_args","wrap","_callee$","_context","prev","next","length","undefined","get","sent","abrupt","concat","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/version.js"],"sourcesContent":["import { ipfsCore, interfaceIpfsCore, commit } from '../version.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"version\"]}\n   */\n  async function version (_options = {}) {\n    const repoVersion = await repo.version.get()\n\n    return {\n      version: ipfsCore,\n      commit,\n      repo: `${repoVersion}`,\n      'ipfs-core': ipfsCore,\n      'interface-ipfs-core': interfaceIpfsCore\n    }\n  }\n\n  return withTimeoutOption(version)\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,iBAAiB,EAAEC,MAAM,QAAQ,eAAe;AACnE,SAASC,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAAY;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACnC;AACF;AACA;EAFE,SAGeC,OAAOA,CAAA;IAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,SAAA;IAAAA,QAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtB,SAAAC,QAAA;MAAA,IAAAC,QAAA;QAAAC,WAAA;QAAAC,KAAA,GAAAP,SAAA;MAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAwBP,QAAQ,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACThB,IAAI,CAACC,OAAO,CAACkB,GAAG,CAAC,CAAC;UAAA;YAAtCT,WAAW,GAAAI,QAAA,CAAAM,IAAA;YAAA,OAAAN,QAAA,CAAAO,MAAA,WAEV;cACLpB,OAAO,EAAEP,QAAQ;cACjBE,MAAM,EAANA,MAAM;cACNI,IAAI,KAAAsB,MAAA,CAAKZ,WAAW,CAAE;cACtB,WAAW,EAAEhB,QAAQ;cACrB,qBAAqB,EAAEC;YACzB,CAAC;UAAA;UAAA;YAAA,OAAAmB,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAf,OAAA;IAAA,CACF;IAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOP,iBAAiB,CAACI,OAAO,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}