{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n *\n */\nexport function createPut(_ref) {\n  var codecs = _ref.codecs,\n    hashers = _ref.hashers,\n    repo = _ref.repo,\n    preload = _ref.preload;\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"put\"]}\n   */\n  function put(_x) {\n    return _put.apply(this, arguments);\n  }\n  function _put() {\n    _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(block) {\n      var options,\n        release,\n        cidVersion,\n        codecName,\n        hasher,\n        hash,\n        codec,\n        cid,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            if (!options.pin) {\n              _context.next = 7;\n              break;\n            }\n            _context.next = 4;\n            return repo.gcLock.readLock();\n          case 4:\n            _context.t0 = _context.sent;\n            _context.next = 8;\n            break;\n          case 7:\n            _context.t0 = null;\n          case 8:\n            release = _context.t0;\n            _context.prev = 9;\n            cidVersion = options.version != null ? options.version : 0;\n            codecName = options.format || (cidVersion === 0 ? 'dag-pb' : 'raw');\n            _context.next = 14;\n            return hashers.getHasher(options.mhtype || 'sha2-256');\n          case 14:\n            hasher = _context.sent;\n            _context.next = 17;\n            return hasher.digest(block);\n          case 17:\n            hash = _context.sent;\n            _context.next = 20;\n            return codecs.getCodec(codecName);\n          case 20:\n            codec = _context.sent;\n            cid = CID.create(cidVersion, codec.code, hash);\n            _context.next = 24;\n            return repo.blocks.put(cid, block, {\n              signal: options.signal\n            });\n          case 24:\n            if (options.preload !== false) {\n              preload(cid);\n            }\n            if (!(options.pin === true)) {\n              _context.next = 28;\n              break;\n            }\n            _context.next = 28;\n            return repo.pins.pinRecursively(cid, {\n              signal: options.signal\n            });\n          case 28:\n            return _context.abrupt(\"return\", cid);\n          case 29:\n            _context.prev = 29;\n            if (release) {\n              release();\n            }\n            return _context.finish(29);\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[9,, 29, 32]]);\n    }));\n    return _put.apply(this, arguments);\n  }\n  return withTimeoutOption(put);\n}","map":{"version":3,"names":["CID","withTimeoutOption","createPut","_ref","codecs","hashers","repo","preload","put","_x","_put","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","block","options","release","cidVersion","codecName","hasher","hash","codec","cid","_args","wrap","_callee$","_context","prev","next","length","undefined","pin","gcLock","readLock","t0","sent","version","format","getHasher","mhtype","digest","getCodec","create","code","blocks","signal","pins","pinRecursively","abrupt","finish","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/block/put.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n *\n */\nexport function createPut ({ codecs, hashers, repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"put\"]}\n   */\n  async function put (block, options = {}) {\n    const release = options.pin ? await repo.gcLock.readLock() : null\n\n    try {\n      const cidVersion = options.version != null ? options.version : 0\n      const codecName = options.format || (cidVersion === 0 ? 'dag-pb' : 'raw')\n\n      const hasher = await hashers.getHasher(options.mhtype || 'sha2-256')\n      const hash = await hasher.digest(block)\n      const codec = await codecs.getCodec(codecName)\n      const cid = CID.create(cidVersion, codec.code, hash)\n\n      await repo.blocks.put(cid, block, {\n        signal: options.signal\n      })\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      if (options.pin === true) {\n        await repo.pins.pinRecursively(cid, {\n          signal: options.signal\n        })\n      }\n\n      return cid\n    } finally {\n      if (release) {\n        release()\n      }\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}