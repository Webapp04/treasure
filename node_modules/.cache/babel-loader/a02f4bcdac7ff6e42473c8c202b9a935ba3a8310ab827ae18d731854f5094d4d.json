{"ast":null,"code":"import _toConsumableArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport filter from 'it-filter';\nimport take from 'it-take';\nimport merge from 'it-merge';\nimport { BaseDatastore } from './base.js';\nimport * as Errors from './errors.js';\nimport { sortAll } from './utils.js';\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('./types').KeyTransform} KeyTransform\n */\n\n/**\n * A datastore that can combine multiple stores inside various\n * key prefixes\n *\n * @implements {Datastore}\n */\nexport var MountDatastore = /*#__PURE__*/function (_BaseDatastore) {\n  _inherits(MountDatastore, _BaseDatastore);\n  var _super = _createSuper(MountDatastore);\n  /**\n   * @param {Array<{prefix: Key, datastore: Datastore}>} mounts\n   */\n  function MountDatastore(mounts) {\n    var _this;\n    _classCallCheck(this, MountDatastore);\n    _this = _super.call(this);\n    _this.mounts = mounts.slice();\n    return _this;\n  }\n  _createClass(MountDatastore, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Promise.all(this.mounts.map(function (m) {\n                return m.datastore.open();\n              }));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function open() {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n    /**\n     * Lookup the matching datastore for the given key\n     *\n     * @private\n     * @param {Key} key\n     * @returns {{datastore: Datastore, mountpoint: Key} | undefined}\n     */\n  }, {\n    key: \"_lookup\",\n    value: function _lookup(key) {\n      var _iterator = _createForOfIteratorHelper(this.mounts),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var mount = _step.value;\n          if (mount.prefix.toString() === key.toString() || mount.prefix.isAncestorOf(key)) {\n            return {\n              datastore: mount.datastore,\n              mountpoint: mount.prefix\n            };\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    /**\n     * @param {Key} key\n     * @param {Uint8Array} value\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"put\",\n    value: function put(key, value, options) {\n      var match = this._lookup(key);\n      if (match == null) {\n        throw Errors.dbWriteFailedError(new Error('No datastore mounted for this key'));\n      }\n      return match.datastore.put(key, value, options);\n    }\n\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"get\",\n    value: function get(key, options) {\n      var match = this._lookup(key);\n      if (match == null) {\n        throw Errors.notFoundError(new Error('No datastore mounted for this key'));\n      }\n      return match.datastore.get(key, options);\n    }\n\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"has\",\n    value: function has(key, options) {\n      var match = this._lookup(key);\n      if (match == null) {\n        return Promise.resolve(false);\n      }\n      return match.datastore.has(key, options);\n    }\n\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(key, options) {\n      var match = this._lookup(key);\n      if (match == null) {\n        throw Errors.dbDeleteFailedError(new Error('No datastore mounted for this key'));\n      }\n      return match.datastore.delete(key, options);\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Promise.all(this.mounts.map(function (m) {\n                return m.datastore.close();\n              }));\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n    /**\n     * @returns {Batch}\n     */\n  }, {\n    key: \"batch\",\n    value: function batch() {\n      var _this2 = this;\n      /** @type {Record<string, Batch>} */\n      var batchMounts = {};\n      /**\n       * @param {Key} key\n       */\n      var lookup = function lookup(key) {\n        var match = _this2._lookup(key);\n        if (match == null) {\n          throw new Error('No datastore mounted for this key');\n        }\n        var m = match.mountpoint.toString();\n        if (batchMounts[m] == null) {\n          batchMounts[m] = match.datastore.batch();\n        }\n        return {\n          batch: batchMounts[m]\n        };\n      };\n      return {\n        put: function put(key, value) {\n          var match = lookup(key);\n          match.batch.put(key, value);\n        },\n        delete: function _delete(key) {\n          var match = lookup(key);\n          match.batch.delete(key);\n        },\n        commit: function () {\n          var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options) {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return Promise.all(Object.keys(batchMounts).map(function (p) {\n                    return batchMounts[p].commit(options);\n                  }));\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }));\n          function commit(_x) {\n            return _commit.apply(this, arguments);\n          }\n          return commit;\n        }()\n      };\n    }\n\n    /**\n     * @param {Query} q\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"query\",\n    value: function query(q, options) {\n      var qs = this.mounts.map(function (m) {\n        return m.datastore.query({\n          prefix: q.prefix,\n          filters: q.filters\n        }, options);\n      });\n\n      /** @type AsyncIterable<Pair> */\n      var it = merge.apply(void 0, _toConsumableArray(qs));\n      if (q.filters) q.filters.forEach(function (f) {\n        it = filter(it, f);\n      });\n      if (q.orders) q.orders.forEach(function (o) {\n        it = sortAll(it, o);\n      });\n      if (q.offset != null) {\n        var i = 0;\n        it = filter(it, function () {\n          return i++ >= /** @type {number} */q.offset;\n        });\n      }\n      if (q.limit != null) it = take(it, q.limit);\n      return it;\n    }\n\n    /**\n     * @param {KeyQuery} q\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"queryKeys\",\n    value: function queryKeys(q, options) {\n      var qs = this.mounts.map(function (m) {\n        return m.datastore.queryKeys({\n          prefix: q.prefix,\n          filters: q.filters\n        }, options);\n      });\n\n      /** @type AsyncIterable<Key> */\n      var it = merge.apply(void 0, _toConsumableArray(qs));\n      if (q.filters) q.filters.forEach(function (f) {\n        it = filter(it, f);\n      });\n      if (q.orders) q.orders.forEach(function (o) {\n        it = sortAll(it, o);\n      });\n      if (q.offset != null) {\n        var i = 0;\n        it = filter(it, function () {\n          return i++ >= /** @type {number} */q.offset;\n        });\n      }\n      if (q.limit != null) it = take(it, q.limit);\n      return it;\n    }\n  }]);\n  return MountDatastore;\n}(BaseDatastore);","map":{"version":3,"names":["filter","take","merge","BaseDatastore","Errors","sortAll","MountDatastore","_BaseDatastore","_inherits","_super","_createSuper","mounts","_this","_classCallCheck","call","slice","_createClass","key","value","_open","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","Promise","all","map","m","datastore","open","stop","apply","arguments","_lookup","_iterator","_createForOfIteratorHelper","_step","s","n","done","mount","prefix","toString","isAncestorOf","mountpoint","err","e","f","put","options","match","dbWriteFailedError","Error","get","notFoundError","has","resolve","_delete","dbDeleteFailedError","delete","_close","_callee2","_callee2$","_context2","close","batch","_this2","batchMounts","lookup","commit","_commit","_callee3","_callee3$","_context3","Object","keys","p","_x","query","q","qs","filters","it","_toConsumableArray","forEach","orders","o","offset","i","limit","queryKeys"],"sources":["/Users/apple/Documents/treasure/node_modules/datastore-core/src/mount.js"],"sourcesContent":["import filter from 'it-filter'\nimport take from 'it-take'\nimport merge from 'it-merge'\nimport { BaseDatastore } from './base.js'\nimport * as Errors from './errors.js'\nimport {\n  sortAll\n} from './utils.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('./types').KeyTransform} KeyTransform\n */\n\n/**\n * A datastore that can combine multiple stores inside various\n * key prefixes\n *\n * @implements {Datastore}\n */\nexport class MountDatastore extends BaseDatastore {\n  /**\n   * @param {Array<{prefix: Key, datastore: Datastore}>} mounts\n   */\n  constructor (mounts) {\n    super()\n\n    this.mounts = mounts.slice()\n  }\n\n  async open () {\n    await Promise.all(this.mounts.map((m) => m.datastore.open()))\n  }\n\n  /**\n   * Lookup the matching datastore for the given key\n   *\n   * @private\n   * @param {Key} key\n   * @returns {{datastore: Datastore, mountpoint: Key} | undefined}\n   */\n  _lookup (key) {\n    for (const mount of this.mounts) {\n      if (mount.prefix.toString() === key.toString() || mount.prefix.isAncestorOf(key)) {\n        return {\n          datastore: mount.datastore,\n          mountpoint: mount.prefix\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   * @param {Options} [options]\n   */\n  put (key, value, options) {\n    const match = this._lookup(key)\n    if (match == null) {\n      throw Errors.dbWriteFailedError(new Error('No datastore mounted for this key'))\n    }\n\n    return match.datastore.put(key, value, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  get (key, options) {\n    const match = this._lookup(key)\n    if (match == null) {\n      throw Errors.notFoundError(new Error('No datastore mounted for this key'))\n    }\n    return match.datastore.get(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  has (key, options) {\n    const match = this._lookup(key)\n    if (match == null) {\n      return Promise.resolve(false)\n    }\n    return match.datastore.has(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  delete (key, options) {\n    const match = this._lookup(key)\n    if (match == null) {\n      throw Errors.dbDeleteFailedError(new Error('No datastore mounted for this key'))\n    }\n\n    return match.datastore.delete(key, options)\n  }\n\n  async close () {\n    await Promise.all(this.mounts.map((m) => {\n      return m.datastore.close()\n    }))\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Record<string, Batch>} */\n    const batchMounts = {}\n    /**\n     * @param {Key} key\n     */\n    const lookup = (key) => {\n      const match = this._lookup(key)\n      if (match == null) {\n        throw new Error('No datastore mounted for this key')\n      }\n\n      const m = match.mountpoint.toString()\n      if (batchMounts[m] == null) {\n        batchMounts[m] = match.datastore.batch()\n      }\n\n      return {\n        batch: batchMounts[m]\n      }\n    }\n\n    return {\n      put: (key, value) => {\n        const match = lookup(key)\n        match.batch.put(key, value)\n      },\n      delete: (key) => {\n        const match = lookup(key)\n        match.batch.delete(key)\n      },\n      commit: async (options) => {\n        await Promise.all(Object.keys(batchMounts).map(p => batchMounts[p].commit(options)))\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    const qs = this.mounts.map(m => {\n      return m.datastore.query({\n        prefix: q.prefix,\n        filters: q.filters\n      }, options)\n    })\n\n    /** @type AsyncIterable<Pair> */\n    let it = merge(...qs)\n    if (q.filters) q.filters.forEach(f => { it = filter(it, f) })\n    if (q.orders) q.orders.forEach(o => { it = sortAll(it, o) })\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n    if (q.limit != null) it = take(it, q.limit)\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    const qs = this.mounts.map(m => {\n      return m.datastore.queryKeys({\n        prefix: q.prefix,\n        filters: q.filters\n      }, options)\n    })\n\n    /** @type AsyncIterable<Key> */\n    let it = merge(...qs)\n    if (q.filters) q.filters.forEach(f => { it = filter(it, f) })\n    if (q.orders) q.orders.forEach(o => { it = sortAll(it, o) })\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n    if (q.limit != null) it = take(it, q.limit)\n\n    return it\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}