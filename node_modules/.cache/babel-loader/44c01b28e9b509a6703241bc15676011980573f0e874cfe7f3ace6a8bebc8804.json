{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport var createWantlistForPeer = configure(function (api) {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  function wantlistForPeer(_x) {\n    return _wantlistForPeer.apply(this, arguments);\n  }\n  function _wantlistForPeer() {\n    _wantlistForPeer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId) {\n      var options,\n        res,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return api.post('bitswap/wantlist', {\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                peer: peerId.toString()\n              })),\n              headers: options.headers\n            });\n          case 3:\n            _context.next = 5;\n            return _context.sent.json();\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", (res.Keys || []).map(function ( /** @type {{ '/': string }} */k) {\n              return CID.parse(k['/']);\n            }));\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _wantlistForPeer.apply(this, arguments);\n  }\n  return wantlistForPeer;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createWantlistForPeer","api","wantlistForPeer","_x","_wantlistForPeer","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peerId","options","res","_args","wrap","_callee$","_context","prev","next","length","undefined","post","signal","searchParams","_objectSpread","peer","toString","headers","sent","json","abrupt","Keys","map","k","parse","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlistForPeer = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlistForPeer\n})\n"],"mappings":";;;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,qBAAqB,GAAGF,SAAS,CAAC,UAAAG,GAAG,EAAI;EACpD;AACF;AACA;EAFE,SAGeC,eAAeA,CAAAC,EAAA;IAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,iBAAA;IAAAA,gBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA9B,SAAAC,QAAgCC,MAAM;MAAA,IAAAC,OAAA;QAAAC,GAAA;QAAAC,KAAA,GAAAR,SAAA;MAAA,OAAAE,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEP,OAAO,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACzBlB,GAAG,CAACqB,IAAI,CAAC,kBAAkB,EAAE;cACpDC,MAAM,EAAEX,OAAO,CAACW,MAAM;cACtBC,YAAY,EAAEzB,iBAAiB,CAAA0B,aAAA,CAAAA,aAAA,KAC1Bb,OAAO;gBACVc,IAAI,EAAEf,MAAM,CAACgB,QAAQ,CAAC;cAAC,EACxB,CAAC;cACFC,OAAO,EAAEhB,OAAO,CAACgB;YACnB,CAAC,CAAC;UAAA;YAAAX,QAAA,CAAAE,IAAA;YAAA,OAAAF,QAAA,CAAAY,IAAA,CAAEC,IAAI;UAAA;YAPFjB,GAAG,GAAAI,QAAA,CAAAY,IAAA;YAAA,OAAAZ,QAAA,CAAAc,MAAA,WASF,CAAClB,GAAG,CAACmB,IAAI,IAAI,EAAE,EAAEC,GAAG,CAAC,WAAC,8BAA+BC,CAAC;cAAA,OAAKrC,GAAG,CAACsC,KAAK,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;YAAA,EAAC;UAAA;UAAA;YAAA,OAAAjB,QAAA,CAAAmB,IAAA;QAAA;MAAA,GAAA1B,OAAA;IAAA,CACrF;IAAA,OAAAN,gBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOJ,eAAe;AACxB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}