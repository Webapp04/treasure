{"ast":null,"code":"import _toConsumableArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport default function arrayShuffle(array) {\n  if (!Array.isArray(array)) {\n    throw new TypeError(\"Expected an array, got \".concat(typeof array));\n  }\n  array = _toConsumableArray(array);\n  for (var index = array.length - 1; index > 0; index--) {\n    var newIndex = Math.floor(Math.random() * (index + 1));\n    var _ref = [array[newIndex], array[index]];\n    array[index] = _ref[0];\n    array[newIndex] = _ref[1];\n  }\n  return array;\n}","map":{"version":3,"names":["arrayShuffle","array","Array","isArray","TypeError","concat","_toConsumableArray","index","length","newIndex","Math","floor","random","_ref"],"sources":["/Users/apple/Documents/treasure/node_modules/array-shuffle/index.js"],"sourcesContent":["export default function arrayShuffle(array) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new TypeError(`Expected an array, got ${typeof array}`);\n\t}\n\n\tarray = [...array];\n\n\tfor (let index = array.length - 1; index > 0; index--) {\n\t\tconst newIndex = Math.floor(Math.random() * (index + 1));\n\t\t[array[index], array[newIndex]] = [array[newIndex], array[index]];\n\t}\n\n\treturn array;\n}\n"],"mappings":";AAAA,eAAe,SAASA,YAAYA,CAACC,KAAK,EAAE;EAC3C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IAC1B,MAAM,IAAIG,SAAS,2BAAAC,MAAA,CAA2B,OAAOJ,KAAK,CAAE,CAAC;EAC9D;EAEAA,KAAK,GAAAK,kBAAA,CAAOL,KAAK,CAAC;EAElB,KAAK,IAAIM,KAAK,GAAGN,KAAK,CAACO,MAAM,GAAG,CAAC,EAAED,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAE,EAAE;IACtD,IAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,KAAK,GAAG,CAAC,CAAC,CAAC;IAAC,IAAAM,IAAA,GACvB,CAACZ,KAAK,CAACQ,QAAQ,CAAC,EAAER,KAAK,CAACM,KAAK,CAAC,CAAC;IAAhEN,KAAK,CAACM,KAAK,CAAC,GAAAM,IAAA;IAAEZ,KAAK,CAACQ,QAAQ,CAAC,GAAAI,IAAA;EAC/B;EAEA,OAAOZ,KAAK;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}