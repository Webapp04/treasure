{"ast":null,"code":"import _toConsumableArray from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";export var initialStateToken={list:[],selected:null,isLoadedSelected:false};export var nftSlice=createSlice({name:\"nft\",initialState:initialStateToken,reducers:{setNftList:function setNftList(state,action){return _objectSpread(_objectSpread({},state),{},{list:action===null||action===void 0?void 0:action.payload});},setNftListItem:function setNftListItem(state,action){var _state$list;return _objectSpread(_objectSpread({},state),{},{list:[].concat(_toConsumableArray(state===null||state===void 0?void 0:(_state$list=state.list)===null||_state$list===void 0?void 0:_state$list.filter(function(item){var _action$payload;return(item===null||item===void 0?void 0:item.tokenId)!==(action===null||action===void 0?void 0:(_action$payload=action.payload)===null||_action$payload===void 0?void 0:_action$payload.tokenId);})),[action===null||action===void 0?void 0:action.payload])});},setNftSelected:function setNftSelected(state,action){return _objectSpread(_objectSpread({},state),{},{selected:action===null||action===void 0?void 0:action.payload,isLoadedSelected:true});}}});// this is for dispatch\nvar _nftSlice$actions=nftSlice.actions,setNftList=_nftSlice$actions.setNftList,setNftListItem=_nftSlice$actions.setNftListItem,setNftSelected=_nftSlice$actions.setNftSelected;// Export individual selector functions for each required state field\nexport{setNftList,setNftListItem,setNftSelected};export var selectNftList=function selectNftList(state){return state.nft.list;};export var selectNftSelected=function selectNftSelected(state){return state.nft.selected;};export var selectIsLoadedSelected=function selectIsLoadedSelected(state){return state.nft.isLoadedSelected;};// this is for configureStore\nexport default nftSlice.reducer;","map":{"version":3,"names":["createSlice","initialStateToken","list","selected","isLoadedSelected","nftSlice","name","initialState","reducers","setNftList","state","action","_objectSpread","payload","setNftListItem","_state$list","concat","_toConsumableArray","filter","item","_action$payload","tokenId","setNftSelected","_nftSlice$actions","actions","selectNftList","nft","selectNftSelected","selectIsLoadedSelected","reducer"],"sources":["/Users/apple/Documents/treasure/src/redux/slice/nftSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialStateToken = {\n  list: [],\n  selected: null,\n  isLoadedSelected: false,\n};\n\nexport const nftSlice = createSlice({\n  name: \"nft\",\n  initialState: initialStateToken,\n  reducers: {\n    setNftList: (state, action) => {\n      return {\n        ...state,\n        list: action?.payload,\n      };\n    },\n    setNftListItem: (state, action) => {\n      return {\n        ...state,\n        list: [\n          ...state?.list?.filter(\n            (item) => item?.tokenId !== action?.payload?.tokenId\n          ),\n          ...[action?.payload],\n        ],\n      };\n    },\n    setNftSelected: (state, action) => {\n      return {\n        ...state,\n        selected: action?.payload,\n        isLoadedSelected: true,\n      };\n    },\n  },\n});\n\n// this is for dispatch\nexport const { setNftList, setNftListItem, setNftSelected } = nftSlice.actions;\n\n// Export individual selector functions for each required state field\nexport const selectNftList = (state) => state.nft.list;\nexport const selectNftSelected = (state) => state.nft.selected;\nexport const selectIsLoadedSelected = (state) => state.nft.isLoadedSelected;\n\n// this is for configureStore\nexport default nftSlice.reducer;\n"],"mappings":"iPAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,MAAO,IAAM,CAAAC,iBAAiB,CAAG,CAC/BC,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,IAAI,CACdC,gBAAgB,CAAE,KACpB,CAAC,CAED,MAAO,IAAM,CAAAC,QAAQ,CAAGL,WAAW,CAAC,CAClCM,IAAI,CAAE,KAAK,CACXC,YAAY,CAAEN,iBAAiB,CAC/BO,QAAQ,CAAE,CACRC,UAAU,CAAE,SAAAA,WAACC,KAAK,CAAEC,MAAM,CAAK,CAC7B,OAAAC,aAAA,CAAAA,aAAA,IACKF,KAAK,MACRR,IAAI,CAAES,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEE,OAAO,GAEzB,CAAC,CACDC,cAAc,CAAE,SAAAA,eAACJ,KAAK,CAAEC,MAAM,CAAK,KAAAI,WAAA,CACjC,OAAAH,aAAA,CAAAA,aAAA,IACKF,KAAK,MACRR,IAAI,IAAAc,MAAA,CAAAC,kBAAA,CACCP,KAAK,SAALA,KAAK,kBAAAK,WAAA,CAALL,KAAK,CAAER,IAAI,UAAAa,WAAA,iBAAXA,WAAA,CAAaG,MAAM,CACpB,SAACC,IAAI,MAAAC,eAAA,OAAK,CAAAD,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEE,OAAO,KAAKV,MAAM,SAANA,MAAM,kBAAAS,eAAA,CAANT,MAAM,CAAEE,OAAO,UAAAO,eAAA,iBAAfA,eAAA,CAAiBC,OAAO,GACtD,CAAC,EACE,CAACV,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEE,OAAO,CAAC,CACrB,GAEL,CAAC,CACDS,cAAc,CAAE,SAAAA,eAACZ,KAAK,CAAEC,MAAM,CAAK,CACjC,OAAAC,aAAA,CAAAA,aAAA,IACKF,KAAK,MACRP,QAAQ,CAAEQ,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEE,OAAO,CACzBT,gBAAgB,CAAE,IAAI,GAE1B,CACF,CACF,CAAC,CAAC,CAEF;AACO,IAAAmB,iBAAA,CAAuDlB,QAAQ,CAACmB,OAAO,CAA/Df,UAAU,CAAAc,iBAAA,CAAVd,UAAU,CAAEK,cAAc,CAAAS,iBAAA,CAAdT,cAAc,CAAEQ,cAAc,CAAAC,iBAAA,CAAdD,cAAc,CAEzD;AAAA,OAAAb,UAAA,CAAAK,cAAA,CAAAQ,cAAA,EACA,MAAO,IAAM,CAAAG,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIf,KAAK,QAAK,CAAAA,KAAK,CAACgB,GAAG,CAACxB,IAAI,GACtD,MAAO,IAAM,CAAAyB,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIjB,KAAK,QAAK,CAAAA,KAAK,CAACgB,GAAG,CAACvB,QAAQ,GAC9D,MAAO,IAAM,CAAAyB,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAIlB,KAAK,QAAK,CAAAA,KAAK,CAACgB,GAAG,CAACtB,gBAAgB,GAE3E;AACA,cAAe,CAAAC,QAAQ,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}