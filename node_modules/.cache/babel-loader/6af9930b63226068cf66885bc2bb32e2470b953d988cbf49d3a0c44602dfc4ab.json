{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { logger } from '@libp2p/logger';\nvar log = logger('libp2p:kad-dht:rpc:handlers:ping');\nexport var PingHandler = /*#__PURE__*/function () {\n  function PingHandler() {\n    _classCallCheck(this, PingHandler);\n  }\n  _createClass(PingHandler, [{\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId, msg) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              log('ping from %p', peerId);\n              return _context.abrupt(\"return\", msg);\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function handle(_x, _x2) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }]);\n  return PingHandler;\n}();","map":{"version":3,"names":["logger","log","PingHandler","_classCallCheck","_createClass","key","value","_handle","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peerId","msg","wrap","_callee$","_context","prev","next","abrupt","stop","handle","_x","_x2","apply","arguments","init"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/rpc/handlers/ping.ts"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport type { Message } from '../../message/index.js'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { Initializable } from '@libp2p/components'\n\nconst log = logger('libp2p:kad-dht:rpc:handlers:ping')\n\nexport class PingHandler implements DHTMessageHandler, Initializable {\n  async handle (peerId: PeerId, msg: Message) {\n    log('ping from %p', peerId)\n    return msg\n  }\n\n  init (): void {\n\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,gBAAgB;AAMvC,IAAMC,GAAG,GAAGD,MAAM,CAAC,kCAAkC,CAAC;AAEtD,WAAaE,WAAW;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;EAAA;EAAAE,YAAA,CAAAF,WAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,OAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACtB,SAAAC,QAAcC,MAAc,EAAEC,GAAY;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACxCjB,GAAG,CAAC,cAAc,EAAEW,MAAM,CAAC;cAAA,OAAAI,QAAA,CAAAG,MAAA,WACpBN,GAAG;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA,CACX;MAAA,SAAAU,OAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAhB,OAAA,CAAAiB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,MAAA;IAAA;EAAA;IAAAhB,GAAA;IAAAC,KAAA,EAED,SAAAoB,KAAA,EAAI,CAEJ;EAAC;EAAA,OAAAxB,WAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}