{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createRename(_ref) {\n  var keychain = _ref.keychain;\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"rename\"]}\n   */\n  var rename = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(oldName, newName) {\n      var key;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return keychain.renameKey(oldName, newName);\n          case 2:\n            key = _context.sent;\n            return _context.abrupt(\"return\", {\n              was: oldName,\n              now: key.name,\n              id: key.id,\n              overwrite: false\n            });\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function rename(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return withTimeoutOption(rename);\n}","map":{"version":3,"names":["withTimeoutOption","createRename","_ref","keychain","rename","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","oldName","newName","key","wrap","_callee$","_context","prev","next","renameKey","sent","abrupt","was","now","name","id","overwrite","stop","_x","_x2","apply","arguments"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/key/rename.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createRename ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"rename\"]}\n   */\n  const rename = async (oldName, newName) => {\n    const key = await keychain.renameKey(oldName, newName)\n\n    return {\n      was: oldName,\n      now: key.name,\n      id: key.id,\n      overwrite: false\n    }\n  }\n\n  return withTimeoutOption(rename)\n}\n"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAAC,IAAA,EAAgB;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtC;AACF;AACA;EACE,IAAMC,MAAM;IAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,OAAO,EAAEC,OAAO;MAAA,IAAAC,GAAA;MAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAClBd,QAAQ,CAACe,SAAS,CAACR,OAAO,EAAEC,OAAO,CAAC;UAAA;YAAhDC,GAAG,GAAAG,QAAA,CAAAI,IAAA;YAAA,OAAAJ,QAAA,CAAAK,MAAA,WAEF;cACLC,GAAG,EAAEX,OAAO;cACZY,GAAG,EAAEV,GAAG,CAACW,IAAI;cACbC,EAAE,EAAEZ,GAAG,CAACY,EAAE;cACVC,SAAS,EAAE;YACb,CAAC;UAAA;UAAA;YAAA,OAAAV,QAAA,CAAAW,IAAA;QAAA;MAAA,GAAAjB,OAAA;IAAA,CACF;IAAA,gBATKL,MAAMA,CAAAuB,EAAA,EAAAC,GAAA;MAAA,OAAAvB,KAAA,CAAAwB,KAAA,OAAAC,SAAA;IAAA;EAAA,GASX;EAED,OAAO9B,iBAAiB,CAACI,MAAM,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}