{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport errCode from 'err-code';\nimport { updateTree } from './utils/update-tree.js';\nimport { updateMfsRoot } from './utils/update-mfs-root.js';\nimport { removeLink } from './utils/remove-link.js';\nimport { toMfsPath } from './utils/to-mfs-path.js';\nimport { toTrail } from './utils/to-trail.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport mergeOpts from 'merge-options';\nvar mergeOptions = mergeOpts.bind({\n  ignoreUndefined: true\n});\n\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} recursive\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {boolean} flush\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nvar defaultOptions = {\n  recursive: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  flush: true,\n  shardSplitThreshold: 1000\n};\n\n/**\n * @param {MfsContext} context\n */\nexport function createRm(context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"rm\"]}\n   */\n  function mfsRm(_x) {\n    return _mfsRm.apply(this, arguments);\n  }\n  function _mfsRm() {\n    _mfsRm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(paths) {\n      var opts,\n        options,\n        sources,\n        _iterator,\n        _step,\n        source,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            opts = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            /** @type {DefaultOptions} */\n            options = mergeOptions(defaultOptions, opts);\n            if (!Array.isArray(paths)) {\n              paths = [paths];\n            }\n            _context.next = 5;\n            return Promise.all(paths.map(function (path) {\n              return toMfsPath(context, path, options);\n            }));\n          case 5:\n            sources = _context.sent;\n            if (sources.length) {\n              _context.next = 8;\n              break;\n            }\n            throw errCode(new Error('Please supply at least one path to remove'), 'ERR_INVALID_PARAMS');\n          case 8:\n            sources.forEach(function (source) {\n              if (source.path === '/') {\n                throw errCode(new Error('Cannot delete root'), 'ERR_INVALID_PARAMS');\n              }\n            });\n            _iterator = _createForOfIteratorHelper(sources);\n            _context.prev = 10;\n            _iterator.s();\n          case 12:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 18;\n              break;\n            }\n            source = _step.value;\n            _context.next = 16;\n            return removePath(context, source.path, options);\n          case 16:\n            _context.next = 12;\n            break;\n          case 18:\n            _context.next = 23;\n            break;\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](10);\n            _iterator.e(_context.t0);\n          case 23:\n            _context.prev = 23;\n            _iterator.f();\n            return _context.finish(23);\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[10, 20, 23, 26]]);\n    }));\n    return _mfsRm.apply(this, arguments);\n  }\n  return withTimeoutOption(mfsRm);\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @param {DefaultOptions} options\n */\nvar removePath = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(context, path, options) {\n    var mfsPath, trail, child, parent, _yield$removeLink, cid, newRootCid;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return toMfsPath(context, path, options);\n        case 2:\n          mfsPath = _context2.sent;\n          _context2.next = 5;\n          return toTrail(context, mfsPath.mfsPath);\n        case 5:\n          trail = _context2.sent;\n          child = trail[trail.length - 1];\n          trail.pop();\n          parent = trail[trail.length - 1];\n          if (parent) {\n            _context2.next = 11;\n            break;\n          }\n          throw errCode(new Error(\"\".concat(path, \" does not exist\")), 'ERR_NOT_FOUND');\n        case 11:\n          if (!(child.type === 'directory' && !options.recursive)) {\n            _context2.next = 13;\n            break;\n          }\n          throw errCode(new Error(\"\".concat(path, \" is a directory, use -r to remove directories\")), 'ERR_WAS_DIR');\n        case 13:\n          _context2.next = 15;\n          return removeLink(context, {\n            parentCid: parent.cid,\n            name: child.name,\n            hashAlg: options.hashAlg,\n            cidVersion: options.cidVersion,\n            flush: options.flush,\n            shardSplitThreshold: options.shardSplitThreshold\n          });\n        case 15:\n          _yield$removeLink = _context2.sent;\n          cid = _yield$removeLink.cid;\n          parent.cid = cid;\n\n          // update the tree with the new child\n          _context2.next = 20;\n          return updateTree(context, trail, options);\n        case 20:\n          newRootCid = _context2.sent;\n          _context2.next = 23;\n          return updateMfsRoot(context, newRootCid, options);\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function removePath(_x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["errCode","updateTree","updateMfsRoot","removeLink","toMfsPath","toTrail","withTimeoutOption","mergeOpts","mergeOptions","bind","ignoreUndefined","defaultOptions","recursive","cidVersion","hashAlg","flush","shardSplitThreshold","createRm","context","mfsRm","_x","_mfsRm","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","paths","opts","options","sources","_iterator","_step","source","_args","wrap","_callee$","_context","prev","next","length","undefined","Array","isArray","Promise","all","map","path","sent","Error","forEach","_createForOfIteratorHelper","s","n","done","value","removePath","t0","e","f","finish","stop","_ref","_callee2","mfsPath","trail","child","parent","_yield$removeLink","cid","newRootCid","_callee2$","_context2","pop","concat","type","parentCid","name","_x2","_x3","_x4"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/files/rm.js"],"sourcesContent":["import errCode from 'err-code'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport { removeLink } from './utils/remove-link.js'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { toTrail } from './utils/to-trail.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').CIDVersion} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} recursive\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {boolean} flush\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  recursive: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  flush: true,\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createRm (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"rm\"]}\n   */\n  async function mfsRm (paths, opts = {}) {\n    /** @type {DefaultOptions} */\n    const options = mergeOptions(defaultOptions, opts)\n\n    if (!Array.isArray(paths)) {\n      paths = [paths]\n    }\n\n    const sources = await Promise.all(\n      paths.map(path => toMfsPath(context, path, options))\n    )\n\n    if (!sources.length) {\n      throw errCode(new Error('Please supply at least one path to remove'), 'ERR_INVALID_PARAMS')\n    }\n\n    sources.forEach(source => {\n      if (source.path === '/') {\n        throw errCode(new Error('Cannot delete root'), 'ERR_INVALID_PARAMS')\n      }\n    })\n\n    for (const source of sources) {\n      await removePath(context, source.path, options)\n    }\n  }\n\n  return withTimeoutOption(mfsRm)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @param {DefaultOptions} options\n */\nconst removePath = async (context, path, options) => {\n  const mfsPath = await toMfsPath(context, path, options)\n  const trail = await toTrail(context, mfsPath.mfsPath)\n  const child = trail[trail.length - 1]\n  trail.pop()\n  const parent = trail[trail.length - 1]\n\n  if (!parent) {\n    throw errCode(new Error(`${path} does not exist`), 'ERR_NOT_FOUND')\n  }\n\n  if (child.type === 'directory' && !options.recursive) {\n    throw errCode(new Error(`${path} is a directory, use -r to remove directories`), 'ERR_WAS_DIR')\n  }\n\n  const {\n    cid\n  } = await removeLink(context, {\n    parentCid: parent.cid,\n    name: child.name,\n    hashAlg: options.hashAlg,\n    cidVersion: options.cidVersion,\n    flush: options.flush,\n    shardSplitThreshold: options.shardSplitThreshold\n  })\n\n  parent.cid = cid\n\n  // update the tree with the new child\n  const newRootCid = await updateTree(context, trail, options)\n\n  // Update the MFS record with the new CID for the root of the tree\n  await updateMfsRoot(context, newRootCid, options)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}