{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { logger } from '@libp2p/logger';\nimport { codes } from '../errors.js';\nimport { setDelayedInterval, clearDelayedInterval\n// @ts-expect-error set-delayed-interval does not export types\n} from 'set-delayed-interval';\nimport { AutoRelay } from './auto-relay.js';\nimport { namespaceToCid } from './utils.js';\nimport { RELAY_RENDEZVOUS_NS } from './constants.js';\nvar log = logger('libp2p:relay');\nexport var Relay = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of Relay\n   */\n  function Relay(components, init) {\n    var _init$autoRelay;\n    _classCallCheck(this, Relay);\n    this.components = components;\n    // Create autoRelay if enabled\n    this.autoRelay = ((_init$autoRelay = init.autoRelay) === null || _init$autoRelay === void 0 ? void 0 : _init$autoRelay.enabled) !== false ? new AutoRelay(components, _objectSpread({\n      addressSorter: init.addressSorter\n    }, init.autoRelay)) : undefined;\n    this.started = false;\n    this.init = init;\n    this._advertiseService = this._advertiseService.bind(this);\n  }\n  _createClass(Relay, [{\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.started;\n    }\n    /**\n     * Start Relay service\n     */\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // Advertise service if HOP enabled\n              if (this.init.hop.enabled !== false && this.init.advertise.enabled !== false) {\n                this.timeout = setDelayedInterval(this._advertiseService, this.init.advertise.ttl, this.init.advertise.bootDelay);\n              }\n              this.started = true;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n    /**\n     * Stop Relay service\n     */\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.timeout != null) {\n                clearDelayedInterval(this.timeout);\n              }\n              this.started = false;\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n      return stop;\n    }()\n    /**\n     * Advertise hop relay service in the network.\n     */\n  }, {\n    key: \"_advertiseService\",\n    value: function () {\n      var _advertiseService2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var cid;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return namespaceToCid(RELAY_RENDEZVOUS_NS);\n            case 3:\n              cid = _context3.sent;\n              _context3.next = 6;\n              return this.components.getContentRouting().provide(cid);\n            case 6:\n              _context3.next = 17;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              if (!(_context3.t0.code === codes.ERR_NO_ROUTERS_AVAILABLE)) {\n                _context3.next = 16;\n                break;\n              }\n              log.error('a content router, such as a DHT, must be provided in order to advertise the relay service', _context3.t0);\n              // Stop the advertise\n              _context3.next = 14;\n              return this.stop();\n            case 14:\n              _context3.next = 17;\n              break;\n            case 16:\n              log.error(_context3.t0);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n      function _advertiseService() {\n        return _advertiseService2.apply(this, arguments);\n      }\n      return _advertiseService;\n    }()\n  }]);\n  return Relay;\n}();","map":{"version":3,"names":["logger","codes","setDelayedInterval","clearDelayedInterval","AutoRelay","namespaceToCid","RELAY_RENDEZVOUS_NS","log","Relay","components","init","_init$autoRelay","_classCallCheck","autoRelay","enabled","_objectSpread","addressSorter","undefined","started","_advertiseService","bind","_createClass","key","value","isStarted","_start","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","hop","advertise","timeout","ttl","bootDelay","stop","start","apply","arguments","_stop","_callee2","_callee2$","_context2","_advertiseService2","_callee3","cid","_callee3$","_context3","sent","getContentRouting","provide","t0","code","ERR_NO_ROUTERS_AVAILABLE","error"],"sources":["/Users/apple/Documents/treasure/node_modules/libp2p/src/circuit/index.ts"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport { codes } from '../errors.js'\nimport {\n  setDelayedInterval,\n  clearDelayedInterval\n// @ts-expect-error set-delayed-interval does not export types\n} from 'set-delayed-interval'\nimport { AutoRelay } from './auto-relay.js'\nimport { namespaceToCid } from './utils.js'\nimport {\n  RELAY_RENDEZVOUS_NS\n} from './constants.js'\nimport type { AddressSorter } from '@libp2p/interface-peer-store'\nimport type { Startable } from '@libp2p/interfaces/startable'\nimport type { Components } from '@libp2p/components'\nimport type { RelayConfig } from '../index.js'\n\nconst log = logger('libp2p:relay')\n\nexport interface RelayAdvertiseConfig {\n  bootDelay?: number\n  enabled?: boolean\n  ttl?: number\n}\n\nexport interface AutoRelayConfig {\n  enabled?: boolean\n\n  /**\n   * maximum number of relays to listen\n   */\n  maxListeners: number\n}\n\nexport interface RelayInit extends RelayConfig {\n  addressSorter?: AddressSorter\n}\n\nexport class Relay implements Startable {\n  private readonly components: Components\n  private readonly init: RelayInit\n  // @ts-expect-error this field isn't used anywhere?\n  private readonly autoRelay?: AutoRelay\n  private timeout?: any\n  private started: boolean\n\n  /**\n   * Creates an instance of Relay\n   */\n  constructor (components: Components, init: RelayInit) {\n    this.components = components\n    // Create autoRelay if enabled\n    this.autoRelay = init.autoRelay?.enabled !== false\n      ? new AutoRelay(components, {\n        addressSorter: init.addressSorter,\n        ...init.autoRelay\n      })\n      : undefined\n\n    this.started = false\n    this.init = init\n    this._advertiseService = this._advertiseService.bind(this)\n  }\n\n  isStarted () {\n    return this.started\n  }\n\n  /**\n   * Start Relay service\n   */\n  async start () {\n    // Advertise service if HOP enabled\n    if (this.init.hop.enabled !== false && this.init.advertise.enabled !== false) {\n      this.timeout = setDelayedInterval(\n        this._advertiseService, this.init.advertise.ttl, this.init.advertise.bootDelay\n      )\n    }\n\n    this.started = true\n  }\n\n  /**\n   * Stop Relay service\n   */\n  async stop () {\n    if (this.timeout != null) {\n      clearDelayedInterval(this.timeout)\n    }\n\n    this.started = false\n  }\n\n  /**\n   * Advertise hop relay service in the network.\n   */\n  async _advertiseService () {\n    try {\n      const cid = await namespaceToCid(RELAY_RENDEZVOUS_NS)\n      await this.components.getContentRouting().provide(cid)\n    } catch (err: any) {\n      if (err.code === codes.ERR_NO_ROUTERS_AVAILABLE) {\n        log.error('a content router, such as a DHT, must be provided in order to advertise the relay service', err)\n        // Stop the advertise\n        await this.stop()\n      } else {\n        log.error(err)\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}