{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport { createAdd } from './add.js';\nimport { createAddAll } from './add-all.js';\nimport { createLs } from './ls.js';\nimport { createRm } from './rm.js';\nimport { createRmAll } from './rm-all.js';\nexport var PinAPI = /*#__PURE__*/_createClass(\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nfunction PinAPI(_ref2) {\n  var codecs = _ref2.codecs,\n    repo = _ref2.repo;\n  _classCallCheck(this, PinAPI);\n  var addAll = createAddAll({\n    codecs: codecs,\n    repo: repo\n  });\n  this.addAll = addAll;\n  this.add = createAdd({\n    addAll: addAll\n  });\n  var rmAll = createRmAll({\n    codecs: codecs,\n    repo: repo\n  });\n  this.rmAll = rmAll;\n  this.rm = createRm({\n    rmAll: rmAll\n  });\n  this.ls = createLs({\n    codecs: codecs,\n    repo: repo\n  });\n\n  /** @type {import('ipfs-core-types/src/pin/remote').API} */\n  this.remote = {\n    add: function add(cid) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return Promise.reject(new Error('Not implemented'));\n    },\n    ls: function () {\n      var _ref = _wrapAsyncGenerator(function (query) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", Promise.reject(new Error('Not implemented')));\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        })();\n      });\n      return function ls(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    // eslint-disable-line require-yield\n    rm: function rm(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return Promise.reject(new Error('Not implemented'));\n    },\n    rmAll: function rmAll(query) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return Promise.reject(new Error('Not implemented'));\n    },\n    service: {\n      add: function add(name, credentials) {\n        return Promise.reject(new Error('Not implemented'));\n      },\n      rm: function rm(name) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return Promise.reject(new Error('Not implemented'));\n      },\n      // @ts-expect-error return types seem to be broken by a recent ts release. doesn't matter here because\n      // we are just throwing. Will be removed by https://github.com/protocol/web3-dev-team/pull/58\n      ls: function ls() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return Promise.reject(new Error('Not implemented'));\n      }\n    }\n  };\n});","map":{"version":3,"names":["createAdd","createAddAll","createLs","createRm","createRmAll","PinAPI","_createClass","_ref2","codecs","repo","_classCallCheck","addAll","add","rmAll","rm","ls","remote","cid","options","arguments","length","undefined","Promise","reject","Error","_ref","_wrapAsyncGenerator","query","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","_x","apply","service","name","credentials"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/pin/index.js"],"sourcesContent":["import { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\n\nexport class PinAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, repo }) {\n    const addAll = createAddAll({ codecs, repo })\n    this.addAll = addAll\n    this.add = createAdd({ addAll })\n    const rmAll = createRmAll({ codecs, repo })\n    this.rmAll = rmAll\n    this.rm = createRm({ rmAll })\n    this.ls = createLs({ codecs, repo })\n\n    /** @type {import('ipfs-core-types/src/pin/remote').API} */\n    this.remote = {\n      add: (cid, options = {}) => Promise.reject(new Error('Not implemented')),\n      ls: async function * (query, options = {}) { return Promise.reject(new Error('Not implemented')) }, // eslint-disable-line require-yield\n      rm: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      rmAll: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      service: {\n        add: (name, credentials) => Promise.reject(new Error('Not implemented')),\n        rm: (name, options = {}) => Promise.reject(new Error('Not implemented')),\n        // @ts-expect-error return types seem to be broken by a recent ts release. doesn't matter here because\n        // we are just throwing. Will be removed by https://github.com/protocol/web3-dev-team/pull/58\n        ls: (options = {}) => Promise.reject(new Error('Not implemented'))\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}