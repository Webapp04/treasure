{"ast":null,"code":"'use strict';\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nvar _regeneratorRuntime = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _awaitAsyncGenerator = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nvar _asyncIterator = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nfunction batch(_x) {\n  return _batch.apply(this, arguments);\n}\nfunction _batch() {\n  _batch = _wrapAsyncGenerator(function (source) {\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var things, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, thing;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            /** @type {T[]} */\n            things = [];\n            if (size < 1) {\n              size = 1;\n            }\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 4;\n            _iterator = _asyncIterator(source);\n          case 6:\n            _context.next = 8;\n            return _awaitAsyncGenerator(_iterator.next());\n          case 8:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 20;\n              break;\n            }\n            thing = _step.value;\n            things.push(thing);\n          case 11:\n            if (!(things.length >= size)) {\n              _context.next = 17;\n              break;\n            }\n            _context.next = 14;\n            return things.slice(0, size);\n          case 14:\n            things = things.slice(size);\n            _context.next = 11;\n            break;\n          case 17:\n            _iteratorAbruptCompletion = false;\n            _context.next = 6;\n            break;\n          case 20:\n            _context.next = 26;\n            break;\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](4);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n          case 26:\n            _context.prev = 26;\n            _context.prev = 27;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 31;\n              break;\n            }\n            _context.next = 31;\n            return _awaitAsyncGenerator(_iterator.return());\n          case 31:\n            _context.prev = 31;\n            if (!_didIteratorError) {\n              _context.next = 34;\n              break;\n            }\n            throw _iteratorError;\n          case 34:\n            return _context.finish(31);\n          case 35:\n            return _context.finish(26);\n          case 36:\n            if (!things.length) {\n              _context.next = 42;\n              break;\n            }\n            _context.next = 39;\n            return things.slice(0, size);\n          case 39:\n            things = things.slice(size);\n            _context.next = 36;\n            break;\n          case 42:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[4, 22, 26, 36], [27,, 31, 35]]);\n    })();\n  });\n  return _batch.apply(this, arguments);\n}\nmodule.exports = batch;","map":{"version":3,"names":["_regeneratorRuntime","require","default","_awaitAsyncGenerator","_wrapAsyncGenerator","_asyncIterator","batch","_x","_batch","apply","arguments","source","size","length","undefined","mark","_callee","things","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","thing","wrap","_callee$","_context","prev","next","sent","done","value","push","slice","t0","return","finish","stop","module","exports"],"sources":["/Users/apple/Documents/treasure/node_modules/it-batch/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}