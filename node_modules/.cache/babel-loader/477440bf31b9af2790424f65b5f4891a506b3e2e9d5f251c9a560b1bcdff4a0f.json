{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Record } from './record.js';\nimport * as utils from './utils.js';\nexport var Libp2pRecord = /*#__PURE__*/function () {\n  function Libp2pRecord(key, value, timeReceived) {\n    _classCallCheck(this, Libp2pRecord);\n    if (!(key instanceof Uint8Array)) {\n      throw new Error('key must be a Uint8Array');\n    }\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('value must be a Uint8Array');\n    }\n    this.key = key;\n    this.value = value;\n    this.timeReceived = timeReceived;\n  }\n  _createClass(Libp2pRecord, [{\n    key: \"serialize\",\n    value: function serialize() {\n      return Record.encode(this.prepareSerialize());\n    }\n    /**\n     * Return the object format ready to be given to the protobuf library.\n     */\n  }, {\n    key: \"prepareSerialize\",\n    value: function prepareSerialize() {\n      return {\n        key: this.key,\n        value: this.value,\n        timeReceived: utils.toRFC3339(this.timeReceived)\n      };\n    }\n    /**\n     * Decode a protobuf encoded record\n     */\n  }], [{\n    key: \"deserialize\",\n    value: function deserialize(raw) {\n      var rec = Record.decode(raw);\n      return new Libp2pRecord(rec.key, rec.value, new Date(rec.timeReceived));\n    }\n    /**\n     * Create a record from the raw object returned from the protobuf library\n     */\n  }, {\n    key: \"fromDeserialized\",\n    value: function fromDeserialized(obj) {\n      var recvtime = utils.parseRFC3339(obj.timeReceived);\n      if (obj.key == null) {\n        throw new Error('key missing from deserialized object');\n      }\n      if (obj.value == null) {\n        throw new Error('value missing from deserialized object');\n      }\n      var rec = new Libp2pRecord(obj.key, obj.value, recvtime);\n      return rec;\n    }\n  }]);\n  return Libp2pRecord;\n}();","map":{"version":3,"names":["Record","utils","Libp2pRecord","key","value","timeReceived","_classCallCheck","Uint8Array","Error","_createClass","serialize","encode","prepareSerialize","toRFC3339","deserialize","raw","rec","decode","Date","fromDeserialized","obj","recvtime","parseRFC3339"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/record/src/index.ts"],"sourcesContent":["import type { Uint8ArrayList } from 'uint8arraylist'\nimport {\n  Record\n} from './record.js'\nimport * as utils from './utils.js'\n\nexport class Libp2pRecord {\n  public key: Uint8Array\n  public value: Uint8Array\n  public timeReceived: Date\n\n  constructor (key: Uint8Array, value: Uint8Array, timeReceived: Date) {\n    if (!(key instanceof Uint8Array)) {\n      throw new Error('key must be a Uint8Array')\n    }\n\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('value must be a Uint8Array')\n    }\n\n    this.key = key\n    this.value = value\n    this.timeReceived = timeReceived\n  }\n\n  serialize () {\n    return Record.encode(this.prepareSerialize())\n  }\n\n  /**\n   * Return the object format ready to be given to the protobuf library.\n   */\n  prepareSerialize () {\n    return {\n      key: this.key,\n      value: this.value,\n      timeReceived: utils.toRFC3339(this.timeReceived)\n    }\n  }\n\n  /**\n   * Decode a protobuf encoded record\n   */\n  static deserialize (raw: Uint8Array | Uint8ArrayList) {\n    const rec = Record.decode(raw)\n\n    return new Libp2pRecord(rec.key, rec.value, new Date(rec.timeReceived))\n  }\n\n  /**\n   * Create a record from the raw object returned from the protobuf library\n   */\n  static fromDeserialized (obj: Record) {\n    const recvtime = utils.parseRFC3339(obj.timeReceived)\n\n    if (obj.key == null) {\n      throw new Error('key missing from deserialized object')\n    }\n\n    if (obj.value == null) {\n      throw new Error('value missing from deserialized object')\n    }\n\n    const rec = new Libp2pRecord(\n      obj.key, obj.value, recvtime\n    )\n\n    return rec\n  }\n}\n"],"mappings":";;AACA,SACEA,MAAM,QACD,aAAa;AACpB,OAAO,KAAKC,KAAK,MAAM,YAAY;AAEnC,WAAaC,YAAY;EAKvB,SAAAA,aAAaC,GAAe,EAAEC,KAAiB,EAAEC,YAAkB;IAAAC,eAAA,OAAAJ,YAAA;IACjE,IAAI,EAAEC,GAAG,YAAYI,UAAU,CAAC,EAAE;MAChC,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;;IAG7C,IAAI,EAAEJ,KAAK,YAAYG,UAAU,CAAC,EAAE;MAClC,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;IAG/C,IAAI,CAACL,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EAACI,YAAA,CAAAP,YAAA;IAAAC,GAAA;IAAAC,KAAA,EAED,SAAAM,UAAA,EAAS;MACP,OAAOV,MAAM,CAACW,MAAM,CAAC,IAAI,CAACC,gBAAgB,EAAE,CAAC;IAC/C;IAEA;;;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAGA,SAAAQ,iBAAA,EAAgB;MACd,OAAO;QACLT,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,YAAY,EAAEJ,KAAK,CAACY,SAAS,CAAC,IAAI,CAACR,YAAY;OAChD;IACH;IAEA;;;EAAA;IAAAF,GAAA;IAAAC,KAAA,EAGA,SAAAU,YAAoBC,GAAgC;MAClD,IAAMC,GAAG,GAAGhB,MAAM,CAACiB,MAAM,CAACF,GAAG,CAAC;MAE9B,OAAO,IAAIb,YAAY,CAACc,GAAG,CAACb,GAAG,EAAEa,GAAG,CAACZ,KAAK,EAAE,IAAIc,IAAI,CAACF,GAAG,CAACX,YAAY,CAAC,CAAC;IACzE;IAEA;;;EAAA;IAAAF,GAAA;IAAAC,KAAA,EAGA,SAAAe,iBAAyBC,GAAW;MAClC,IAAMC,QAAQ,GAAGpB,KAAK,CAACqB,YAAY,CAACF,GAAG,CAACf,YAAY,CAAC;MAErD,IAAIe,GAAG,CAACjB,GAAG,IAAI,IAAI,EAAE;QACnB,MAAM,IAAIK,KAAK,CAAC,sCAAsC,CAAC;;MAGzD,IAAIY,GAAG,CAAChB,KAAK,IAAI,IAAI,EAAE;QACrB,MAAM,IAAII,KAAK,CAAC,wCAAwC,CAAC;;MAG3D,IAAMQ,GAAG,GAAG,IAAId,YAAY,CAC1BkB,GAAG,CAACjB,GAAG,EAAEiB,GAAG,CAAChB,KAAK,EAAEiB,QAAQ,CAC7B;MAED,OAAOL,GAAG;IACZ;EAAC;EAAA,OAAAd,YAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}