{"ast":null,"code":"import{useEffect}from\"react\";import useHandleCustomer from\"./customer/useHandleCustomer\";import useHandleAuth from\"./auth/useHandleAuth\";import useWalletConnect from\"./blockchain/useWalletConnect\";import useHandleLoader from\"./loader/useHandleLoader\";import useHandleNFT from\"./blockchain/useHandleNFT\";import useHandleTheme from\"./theme/useHandleTheme\";import useHandleSocket from\"./socket/useHandleSocket\";import useHandleRewards from\"./blockchain/useHandleRewards\";import{useSelector}from\"react-redux\";import{selectUser}from\"redux/slice/userSlice\";import useHandleLpStaking from\"./blockchain/useHandleLpStaking\";export default function useEffectFirstLoad(){var user=useSelector(selectUser);var handleAdmin=useHandleCustomer();var handleAuth=useHandleAuth();var walletConnect=useWalletConnect();var handleLoader=useHandleLoader();var handleNFT=useHandleNFT();var handleTheme=useHandleTheme();var handleSocket=useHandleSocket();var handleRewards=useHandleRewards();var handleLpStaking=useHandleLpStaking();useEffect(function(){handleTheme===null||handleTheme===void 0?void 0:handleTheme.setDefaultTheme();if(!(user!==null&&user!==void 0&&user._id)){handleLoader.loaderWrapper(handleAdmin===null||handleAdmin===void 0?void 0:handleAdmin.fetchInfo,2).then(function(res){return!res&&(handleAuth===null||handleAuth===void 0?void 0:handleAuth.logout());});}},[]);// eslint-disable-line react-hooks/exhaustive-deps\nuseEffect(function(){if(user!==null&&user!==void 0&&user._id){handleLoader===null||handleLoader===void 0?void 0:handleLoader.loaderWrapper(function(){return walletConnect===null||walletConnect===void 0?void 0:walletConnect.connectWallet(user===null||user===void 0?void 0:user.wallet_id);},2);walletConnect.connectWallet(user===null||user===void 0?void 0:user.wallet_id);handleSocket.init();handleNFT===null||handleNFT===void 0?void 0:handleNFT.loadNFTBalance(user===null||user===void 0?void 0:user.wallet_id);walletConnect===null||walletConnect===void 0?void 0:walletConnect.ethereumListener(handleAuth===null||handleAuth===void 0?void 0:handleAuth.logout);/**\n       * TODO: remove update function in below hooks\n       * make aggregate async hook that fetch balance info\n       * make aggregate action that update all balance info\n       * do this in other code\n       */ // handleNFT.balanceOfSMRTR(user?.wallet_id);\n// handleNFT.balanceOfTRESR(user?.wallet_id);\n// handleNFT.getAVAXBalance(user?.wallet_id);\nhandleLpStaking.balanceOfLp(user===null||user===void 0?void 0:user.wallet_id);handleLpStaking.balanceOfStakedLp(user===null||user===void 0?void 0:user.wallet_id);handleNFT===null||handleNFT===void 0?void 0:handleNFT.updateProfileBalance(user===null||user===void 0?void 0:user.wallet_id);/**\n       * TODO: this is not used anymore\n       */ // handleNFT.getBurnedTresr();\n// handleNFT.getBurnedSmarter();\n// handleNFT.getBonusPoolAllocation();\n// handleNFT.getPoolAllocation();\n/**\n       * TODO: remove update function in below hooks\n       * make aggregate async hook that fetch below four functions\n       * make separate action that update 4 info\n       * do this in other code\n       */handleRewards===null||handleRewards===void 0?void 0:handleRewards.updateClaimableBonusRewardBalance();// handleRewards.getVeTresrBonusReward();\n// handleRewards.getJlpSmrtBonusReward();\n// handleRewards.getJlpTresrBonusReward();\n// handleRewards.getKeyLevelBonusReward();\n/**\n       * TODO: Promise.all(above backend apis)\n       * then update 4 actions\n       */}},[user]);// eslint-disable-line react-hooks/exhaustive-deps\n}","map":{"version":3,"names":["useEffect","useHandleCustomer","useHandleAuth","useWalletConnect","useHandleLoader","useHandleNFT","useHandleTheme","useHandleSocket","useHandleRewards","useSelector","selectUser","useHandleLpStaking","useEffectFirstLoad","user","handleAdmin","handleAuth","walletConnect","handleLoader","handleNFT","handleTheme","handleSocket","handleRewards","handleLpStaking","setDefaultTheme","_id","loaderWrapper","fetchInfo","then","res","logout","connectWallet","wallet_id","init","loadNFTBalance","ethereumListener","balanceOfLp","balanceOfStakedLp","updateProfileBalance","updateClaimableBonusRewardBalance"],"sources":["/Users/apple/Documents/treasure/src/hooks/useFirstLoad.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport useHandleCustomer from \"./customer/useHandleCustomer\";\nimport useHandleAuth from \"./auth/useHandleAuth\";\nimport useWalletConnect from \"./blockchain/useWalletConnect\";\nimport useHandleLoader from \"./loader/useHandleLoader\";\nimport useHandleNFT from \"./blockchain/useHandleNFT\";\nimport useHandleTheme from \"./theme/useHandleTheme\";\nimport useHandleSocket from \"./socket/useHandleSocket\";\nimport useHandleRewards from \"./blockchain/useHandleRewards\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport useHandleLpStaking from \"./blockchain/useHandleLpStaking\";\n\nexport default function useEffectFirstLoad() {\n  const user = useSelector(selectUser);\n  const handleAdmin = useHandleCustomer();\n  const handleAuth = useHandleAuth();\n  const walletConnect = useWalletConnect();\n  const handleLoader = useHandleLoader();\n  const handleNFT = useHandleNFT();\n  const handleTheme = useHandleTheme();\n  const handleSocket = useHandleSocket();\n  const handleRewards = useHandleRewards();\n  const handleLpStaking = useHandleLpStaking();\n\n  useEffect(() => {\n    handleTheme?.setDefaultTheme();\n    if (!user?._id) {\n      handleLoader\n        .loaderWrapper(handleAdmin?.fetchInfo, 2)\n        .then((res) => !res && handleAuth?.logout());\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (user?._id) {\n      handleLoader?.loaderWrapper(\n        () => walletConnect?.connectWallet(user?.wallet_id),\n        2\n      );\n      walletConnect.connectWallet(user?.wallet_id);\n      handleSocket.init();\n      handleNFT?.loadNFTBalance(user?.wallet_id);\n      walletConnect?.ethereumListener(handleAuth?.logout);\n      /**\n       * TODO: remove update function in below hooks\n       * make aggregate async hook that fetch balance info\n       * make aggregate action that update all balance info\n       * do this in other code\n       */\n\n      // handleNFT.balanceOfSMRTR(user?.wallet_id);\n      // handleNFT.balanceOfTRESR(user?.wallet_id);\n      // handleNFT.getAVAXBalance(user?.wallet_id);\n\n      handleLpStaking.balanceOfLp(user?.wallet_id);\n      handleLpStaking.balanceOfStakedLp(user?.wallet_id);\n      handleNFT?.updateProfileBalance(user?.wallet_id);\n      /**\n       * TODO: this is not used anymore\n       */\n      // handleNFT.getBurnedTresr();\n      // handleNFT.getBurnedSmarter();\n      // handleNFT.getBonusPoolAllocation();\n      // handleNFT.getPoolAllocation();\n\n      /**\n       * TODO: remove update function in below hooks\n       * make aggregate async hook that fetch below four functions\n       * make separate action that update 4 info\n       * do this in other code\n       */\n      handleRewards?.updateClaimableBonusRewardBalance();\n      // handleRewards.getVeTresrBonusReward();\n      // handleRewards.getJlpSmrtBonusReward();\n      // handleRewards.getJlpTresrBonusReward();\n      // handleRewards.getKeyLevelBonusReward();\n\n      /**\n       * TODO: Promise.all(above backend apis)\n       * then update 4 actions\n       */\n    }\n  }, [user]); // eslint-disable-line react-hooks/exhaustive-deps\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}