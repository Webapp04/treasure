{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { findLevelJs } from '../../src/utils.js';\nimport { fromString } from 'uint8arrays/from-string';\nimport { toString } from 'uint8arrays/to-string';\n\n/**\n * @typedef {import('../../src/types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../src/types').MigrationProgressCallback} MigrationProgressCallback\n *\n * @typedef {{ type: 'del', key: string | Uint8Array } | { type: 'put', key: string | Uint8Array, value: Uint8Array }} Operation\n * @typedef {function (string, Uint8Array): Operation[]} UpgradeFunction\n * @typedef {function (Uint8Array, Uint8Array): Operation[]} DowngradeFunction\n */\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nfunction keysToBinary(_x, _x2) {\n  return _keysToBinary.apply(this, arguments);\n}\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nfunction _keysToBinary() {\n  _keysToBinary = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, store) {\n    var onProgress,\n      db,\n      upgrade,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          onProgress = _args.length > 2 && _args[2] !== undefined ? _args[2] : function () {};\n          db = findLevelJs(store); // only interested in level-js\n          if (db) {\n            _context.next = 5;\n            break;\n          }\n          onProgress(\"\".concat(name, \" did not need an upgrade\"));\n          return _context.abrupt(\"return\");\n        case 5:\n          onProgress(\"Upgrading \".concat(name));\n\n          /**\n           * @type {UpgradeFunction}\n           */\n          upgrade = function upgrade(key, value) {\n            return [{\n              type: 'del',\n              key: key\n            }, {\n              type: 'put',\n              key: fromString(key),\n              value: value\n            }];\n          };\n          _context.next = 9;\n          return withEach(db, upgrade);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _keysToBinary.apply(this, arguments);\n}\nfunction keysToStrings(_x3, _x4) {\n  return _keysToStrings.apply(this, arguments);\n}\n/**\n * @param {any} store\n * @returns {Datastore}\n */\nfunction _keysToStrings() {\n  _keysToStrings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name, store) {\n    var onProgress,\n      db,\n      downgrade,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          onProgress = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : function () {};\n          db = findLevelJs(store); // only interested in level-js\n          if (db) {\n            _context2.next = 5;\n            break;\n          }\n          onProgress(\"\".concat(name, \" did not need a downgrade\"));\n          return _context2.abrupt(\"return\");\n        case 5:\n          onProgress(\"Downgrading \".concat(name));\n\n          /**\n           * @type {DowngradeFunction}\n           */\n          downgrade = function downgrade(key, value) {\n            return [{\n              type: 'del',\n              key: key\n            }, {\n              type: 'put',\n              key: toString(key),\n              value: value\n            }];\n          };\n          _context2.next = 9;\n          return withEach(db, downgrade);\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _keysToStrings.apply(this, arguments);\n}\nfunction unwrap(store) {\n  if (store.child) {\n    return unwrap(store.child);\n  }\n  return store;\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nfunction process(_x5, _x6, _x7) {\n  return _process.apply(this, arguments);\n}\n/** @type {Migration} */\nfunction _process() {\n  _process = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(backends, onProgress, fn) {\n    var datastores, migrated, progress, _iterator, _step, _step$value, name, store;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          /**\n           * @type {{ name: string, store: Datastore }[]}\n           */\n          datastores = Object.entries(backends).map(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              backend = _ref2[1];\n            return {\n              key: key,\n              backend: unwrap(backend)\n            };\n          }).filter(function (_ref3) {\n            var key = _ref3.key,\n              backend = _ref3.backend;\n            return backend.constructor.name === 'LevelDatastore';\n          }).map(function (_ref4) {\n            var key = _ref4.key,\n              backend = _ref4.backend;\n            return {\n              name: key,\n              store: backend\n            };\n          });\n          onProgress(0, \"Migrating \".concat(datastores.length, \" dbs\"));\n          migrated = 0;\n          /**\n           * @param {string} message\n           */\n          progress = function progress(message) {\n            onProgress(Math.round(migrated / datastores.length * 100), message);\n          };\n          _iterator = _createForOfIteratorHelper(datastores);\n          _context3.prev = 5;\n          _iterator.s();\n        case 7:\n          if ((_step = _iterator.n()).done) {\n            _context3.next = 21;\n            break;\n          }\n          _step$value = _step.value, name = _step$value.name, store = _step$value.store;\n          _context3.next = 11;\n          return store.open();\n        case 11:\n          _context3.prev = 11;\n          _context3.next = 14;\n          return fn(name, store, progress);\n        case 14:\n          _context3.prev = 14;\n          migrated++;\n          _context3.next = 18;\n          return store.close();\n        case 18:\n          return _context3.finish(14);\n        case 19:\n          _context3.next = 7;\n          break;\n        case 21:\n          _context3.next = 26;\n          break;\n        case 23:\n          _context3.prev = 23;\n          _context3.t0 = _context3[\"catch\"](5);\n          _iterator.e(_context3.t0);\n        case 26:\n          _context3.prev = 26;\n          _iterator.f();\n          return _context3.finish(26);\n        case 29:\n          onProgress(100, \"Migrated \".concat(datastores.length, \" dbs\"));\n        case 30:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[5, 23, 26, 29], [11,, 14, 19]]);\n  }));\n  return _process.apply(this, arguments);\n}\nexport var migration = {\n  version: 10,\n  description: 'Migrates datastore-level keys to binary',\n  migrate: function migrate(backends) {\n    var onProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    return process(backends, onProgress, keysToBinary);\n  },\n  revert: function revert(backends) {\n    var onProgress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    return process(backends, onProgress, keysToStrings);\n  }\n};\n\n/**\n * Uses the upgrade strategy from level-js@5.x.x - note we can't call the `.upgrade` command\n * directly because it will be removed in level-js@6.x.x and we can't guarantee users will\n * have migrated by then - e.g. they may jump from level-js@4.x.x straight to level-js@6.x.x\n * so we have to duplicate the code here.\n *\n * @param {any} db\n * @param {UpgradeFunction | DowngradeFunction} fn\n * @returns {Promise<void>}\n */\nfunction withEach(db, fn) {\n  /**\n   * @param {Operation[]} operations\n   * @param {(error?: Error) => void} next\n   */\n  function batch(operations, next) {\n    var store = db.store('readwrite');\n    var transaction = store.transaction;\n    var index = 0;\n    /** @type {Error | undefined} */\n    var error;\n    transaction.onabort = function () {\n      return next(error || transaction.error || new Error('aborted by user'));\n    };\n    transaction.oncomplete = function () {\n      return next();\n    };\n    function loop() {\n      var op = operations[index++];\n      var key = op.key;\n      var req;\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key);\n      } catch ( /** @type {any} */err) {\n        error = err;\n        transaction.abort();\n        return;\n      }\n      if (index < operations.length) {\n        req.onsuccess = loop;\n      }\n    }\n    loop();\n  }\n  return new Promise(function (resolve, reject) {\n    var it = db.iterator();\n    // raw keys and values only\n    /**\n     * @template T\n     * @param {T} data\n     */\n    var id = function id(data) {\n      return data;\n    };\n    it._deserializeKey = it._deserializeValue = id;\n    next();\n    function next() {\n      /**\n       * @param {Error | undefined} err\n       * @param {string | undefined} key\n       * @param {Uint8Array} value\n       */\n      var handleNext = function handleNext(err, key, value) {\n        if (err || key === undefined) {\n          /**\n           * @param {Error | undefined} err2\n           */\n          var handleEnd = function handleEnd(err2) {\n            if (err2) {\n              reject(err2);\n              return;\n            }\n            resolve();\n          };\n          it.end(handleEnd);\n          return;\n        }\n\n        // @ts-ignore\n        batch(fn(key, value), next);\n      };\n      it.next(handleNext);\n    }\n  });\n}","map":{"version":3,"names":["findLevelJs","fromString","toString","keysToBinary","_x","_x2","_keysToBinary","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","store","onProgress","db","upgrade","_args","wrap","_callee$","_context","prev","next","length","undefined","concat","abrupt","key","value","type","withEach","stop","keysToStrings","_x3","_x4","_keysToStrings","_callee2","downgrade","_args2","_callee2$","_context2","unwrap","child","process","_x5","_x6","_x7","_process","_callee3","backends","fn","datastores","migrated","progress","_iterator","_step","_step$value","_callee3$","_context3","Object","entries","map","_ref","_ref2","_slicedToArray","backend","filter","_ref3","constructor","_ref4","message","Math","round","_createForOfIteratorHelper","s","n","done","open","close","finish","t0","e","f","migration","version","description","migrate","revert","batch","operations","transaction","index","error","onabort","Error","oncomplete","loop","op","req","delete","put","err","abort","onsuccess","Promise","resolve","reject","it","iterator","id","data","_deserializeKey","_deserializeValue","handleNext","handleEnd","err2","end"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo-migrations/migrations/migration-10/index.js"],"sourcesContent":["\nimport { findLevelJs } from '../../src/utils.js'\nimport { fromString } from 'uint8arrays/from-string'\nimport { toString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../../src/types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../src/types').MigrationProgressCallback} MigrationProgressCallback\n *\n * @typedef {{ type: 'del', key: string | Uint8Array } | { type: 'put', key: string | Uint8Array, value: Uint8Array }} Operation\n * @typedef {function (string, Uint8Array): Operation[]} UpgradeFunction\n * @typedef {function (Uint8Array, Uint8Array): Operation[]} DowngradeFunction\n */\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToBinary (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need an upgrade`)\n\n    return\n  }\n\n  onProgress(`Upgrading ${name}`)\n\n  /**\n   * @type {UpgradeFunction}\n   */\n  const upgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: fromString(key), value: value }\n    ]\n  }\n\n  await withEach(db, upgrade)\n}\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToStrings (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need a downgrade`)\n\n    return\n  }\n\n  onProgress(`Downgrading ${name}`)\n\n  /**\n   * @type {DowngradeFunction}\n   */\n  const downgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: toString(key), value: value }\n    ]\n  }\n\n  await withEach(db, downgrade)\n}\n\n/**\n * @param {any} store\n * @returns {Datastore}\n */\nfunction unwrap (store) {\n  if (store.child) {\n    return unwrap(store.child)\n  }\n\n  return store\n}\n\n/**\n * @param {import('../../src/types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nasync function process (backends, onProgress, fn) {\n  /**\n   * @type {{ name: string, store: Datastore }[]}\n   */\n  const datastores = Object.entries(backends)\n    .map(([key, backend]) => ({ key, backend: unwrap(backend) }))\n    .filter(({ key, backend }) => backend.constructor.name === 'LevelDatastore')\n    .map(({ key, backend }) => ({\n      name: key,\n      store: backend\n    }))\n\n  onProgress(0, `Migrating ${datastores.length} dbs`)\n  let migrated = 0\n\n  /**\n   * @param {string} message\n   */\n  const progress = (message) => {\n    onProgress(Math.round((migrated / datastores.length) * 100), message)\n  }\n\n  for (const { name, store } of datastores) {\n    await store.open()\n\n    try {\n      await fn(name, store, progress)\n    } finally {\n      migrated++\n      await store.close()\n    }\n  }\n\n  onProgress(100, `Migrated ${datastores.length} dbs`)\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 10,\n  description: 'Migrates datastore-level keys to binary',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToBinary)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToStrings)\n  }\n}\n\n/**\n * Uses the upgrade strategy from level-js@5.x.x - note we can't call the `.upgrade` command\n * directly because it will be removed in level-js@6.x.x and we can't guarantee users will\n * have migrated by then - e.g. they may jump from level-js@4.x.x straight to level-js@6.x.x\n * so we have to duplicate the code here.\n *\n * @param {any} db\n * @param {UpgradeFunction | DowngradeFunction} fn\n * @returns {Promise<void>}\n */\nfunction withEach (db, fn) {\n  /**\n   * @param {Operation[]} operations\n   * @param {(error?: Error) => void} next\n   */\n  function batch (operations, next) {\n    const store = db.store('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    /** @type {Error | undefined} */\n    let error\n\n    transaction.onabort = () => next(error || transaction.error || new Error('aborted by user'))\n    transaction.oncomplete = () => next()\n\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (/** @type {any} */ err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      }\n    }\n\n    loop()\n  }\n\n  return new Promise((resolve, reject) => {\n    const it = db.iterator()\n    // raw keys and values only\n    /**\n     * @template T\n     * @param {T} data\n     */\n    const id = (data) => data\n    it._deserializeKey = it._deserializeValue = id\n    next()\n\n    function next () {\n      /**\n       * @param {Error | undefined} err\n       * @param {string | undefined} key\n       * @param {Uint8Array} value\n       */\n      const handleNext = (err, key, value) => {\n        if (err || key === undefined) {\n          /**\n           * @param {Error | undefined} err2\n           */\n          const handleEnd = (err2) => {\n            if (err2) {\n              reject(err2)\n              return\n            }\n\n            resolve()\n          }\n\n          it.end(handleEnd)\n\n          return\n        }\n\n        // @ts-ignore\n        batch(fn(key, value), next)\n      }\n      it.next(handleNext)\n    }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}