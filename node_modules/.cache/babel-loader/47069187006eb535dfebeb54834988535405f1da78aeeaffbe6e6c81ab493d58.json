{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\n// @ts-expect-error no types\nimport isoConstants from 'iso-constants';\nimport toBuffer from 'it-to-buffer';\nimport { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist';\nimport * as Headers from './pack-headers.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nvar S_IFMT = isoConstants.S_IFMT,\n  S_IFBLK = isoConstants.S_IFBLK,\n  S_IFCHR = isoConstants.S_IFCHR,\n  S_IFDIR = isoConstants.S_IFDIR,\n  S_IFIFO = isoConstants.S_IFIFO,\n  S_IFLNK = isoConstants.S_IFLNK;\nvar DMODE = parseInt('755', 8);\nvar FMODE = parseInt('644', 8);\nvar END_OF_TAR = new Uint8Array(1024);\nfunction modeToType() {\n  var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  switch (mode & S_IFMT) {\n    case S_IFBLK:\n      return 'block-device';\n    case S_IFCHR:\n      return 'character-device';\n    case S_IFDIR:\n      return 'directory';\n    case S_IFIFO:\n      return 'fifo';\n    case S_IFLNK:\n      return 'symlink';\n    default:\n      return 'file';\n  }\n}\nfunction getPadding(size) {\n  size &= 511;\n  if (size !== 0) {\n    return END_OF_TAR.subarray(0, 512 - size);\n  }\n  return new Uint8Array(0);\n}\nfunction encode(header) {\n  if (header.pax == null) {\n    var encoded = Headers.encode(header);\n    if (encoded != null) {\n      return encoded;\n    }\n  }\n  return encodePax(header);\n}\nfunction encodePax(header) {\n  var _Headers$encode, _Headers$encode2;\n  var paxHeader = Headers.encodePax(header);\n  var newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname,\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  };\n  return new Uint8ArrayList((_Headers$encode = Headers.encode(newHeader)) !== null && _Headers$encode !== void 0 ? _Headers$encode : new Uint8Array(0), paxHeader, getPadding(paxHeader.length), (_Headers$encode2 = Headers.encode(_objectSpread(_objectSpread({}, newHeader), {}, {\n    size: header.size,\n    type: header.type\n  }))) !== null && _Headers$encode2 !== void 0 ? _Headers$encode2 : new Uint8Array(0)).subarray();\n}\nexport function pack() {\n  return /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, partialHeader, body, _partialHeader$size, _partialHeader$type, _partialHeader$mode, _partialHeader$uid, _partialHeader$gid, _partialHeader$mtime, header, written, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _body, chunk;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(source);\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 72;\n              break;\n            }\n            _step$value = _step.value, partialHeader = _step$value.header, body = _step$value.body;\n            header = _objectSpread(_objectSpread({}, partialHeader), {}, {\n              size: partialHeader.type === 'symlink' ? 0 : (_partialHeader$size = partialHeader.size) !== null && _partialHeader$size !== void 0 ? _partialHeader$size : 0,\n              type: (_partialHeader$type = partialHeader.type) !== null && _partialHeader$type !== void 0 ? _partialHeader$type : modeToType(partialHeader.mode),\n              mode: (_partialHeader$mode = partialHeader.mode) !== null && _partialHeader$mode !== void 0 ? _partialHeader$mode : partialHeader.type === 'directory' ? DMODE : FMODE,\n              uid: (_partialHeader$uid = partialHeader.uid) !== null && _partialHeader$uid !== void 0 ? _partialHeader$uid : 0,\n              gid: (_partialHeader$gid = partialHeader.gid) !== null && _partialHeader$gid !== void 0 ? _partialHeader$gid : 0,\n              mtime: (_partialHeader$mtime = partialHeader.mtime) !== null && _partialHeader$mtime !== void 0 ? _partialHeader$mtime : new Date()\n            });\n            if (typeof body === 'string') {\n              body = uint8ArrayFromString(body);\n            }\n            if (!(body instanceof Uint8Array || isUint8ArrayList(body))) {\n              _context.next = 19;\n              break;\n            }\n            header.size = body.length;\n            _context.next = 14;\n            return encode(header);\n          case 14:\n            _context.next = 16;\n            return isUint8ArrayList(body) ? body.subarray() : body;\n          case 16:\n            _context.next = 18;\n            return getPadding(header.size);\n          case 18:\n            return _context.abrupt(\"continue\", 69);\n          case 19:\n            if (!(header.type === 'symlink' && header.linkname == null)) {\n              _context.next = 30;\n              break;\n            }\n            if (!(body == null)) {\n              _context.next = 22;\n              break;\n            }\n            throw new Error('type was symlink but no linkname or body specified');\n          case 22:\n            _context.t0 = uint8ArrayToString;\n            _context.next = 25;\n            return _awaitAsyncGenerator(toBuffer(body));\n          case 25:\n            _context.t1 = _context.sent;\n            header.linkname = (0, _context.t0)(_context.t1);\n            _context.next = 29;\n            return encode(header);\n          case 29:\n            return _context.abrupt(\"continue\", 69);\n          case 30:\n            _context.next = 32;\n            return encode(header);\n          case 32:\n            if (!(header.type !== 'file' && header.type !== 'contiguous-file')) {\n              _context.next = 34;\n              break;\n            }\n            return _context.abrupt(\"continue\", 69);\n          case 34:\n            written = 0;\n            _iteratorAbruptCompletion2 = false;\n            _didIteratorError2 = false;\n            _context.prev = 37;\n            _iterator2 = _asyncIterator((_body = body) !== null && _body !== void 0 ? _body : []);\n          case 39:\n            _context.next = 41;\n            return _awaitAsyncGenerator(_iterator2.next());\n          case 41:\n            if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n              _context.next = 49;\n              break;\n            }\n            chunk = _step2.value;\n            written += chunk.length; // eslint-disable-line @typescript-eslint/restrict-plus-operands\n            _context.next = 46;\n            return isUint8ArrayList(chunk) ? chunk.subarray() : chunk;\n          case 46:\n            _iteratorAbruptCompletion2 = false;\n            _context.next = 39;\n            break;\n          case 49:\n            _context.next = 55;\n            break;\n          case 51:\n            _context.prev = 51;\n            _context.t2 = _context[\"catch\"](37);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context.t2;\n          case 55:\n            _context.prev = 55;\n            _context.prev = 56;\n            if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n              _context.next = 60;\n              break;\n            }\n            _context.next = 60;\n            return _awaitAsyncGenerator(_iterator2.return());\n          case 60:\n            _context.prev = 60;\n            if (!_didIteratorError2) {\n              _context.next = 63;\n              break;\n            }\n            throw _iteratorError2;\n          case 63:\n            return _context.finish(60);\n          case 64:\n            return _context.finish(55);\n          case 65:\n            if (!(written !== header.size)) {\n              _context.next = 67;\n              break;\n            }\n            throw new Error(\"size mismatch, wrote \".concat(written, \" of \").concat(header.size, \" bytes\"));\n          case 67:\n            _context.next = 69;\n            return getPadding(header.size);\n          case 69:\n            _iteratorAbruptCompletion = false;\n            _context.next = 4;\n            break;\n          case 72:\n            _context.next = 78;\n            break;\n          case 74:\n            _context.prev = 74;\n            _context.t3 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t3;\n          case 78:\n            _context.prev = 78;\n            _context.prev = 79;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 83;\n              break;\n            }\n            _context.next = 83;\n            return _awaitAsyncGenerator(_iterator.return());\n          case 83:\n            _context.prev = 83;\n            if (!_didIteratorError) {\n              _context.next = 86;\n              break;\n            }\n            throw _iteratorError;\n          case 86:\n            return _context.finish(83);\n          case 87:\n            return _context.finish(78);\n          case 88:\n            _context.next = 90;\n            return END_OF_TAR;\n          case 90:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 74, 78, 88], [37, 51, 55, 65], [56,, 60, 64], [79,, 83, 87]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}","map":{"version":3,"names":["isoConstants","toBuffer","isUint8ArrayList","Uint8ArrayList","Headers","fromString","uint8ArrayFromString","toString","uint8ArrayToString","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","DMODE","parseInt","FMODE","END_OF_TAR","Uint8Array","modeToType","mode","arguments","length","undefined","getPadding","size","subarray","encode","header","pax","encoded","encodePax","_Headers$encode","_Headers$encode2","paxHeader","newHeader","name","uid","gid","mtime","type","linkname","uname","gname","devmajor","devminor","_objectSpread","pack","_ref","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","source","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_step$value","partialHeader","body","_partialHeader$size","_partialHeader$type","_partialHeader$mode","_partialHeader$uid","_partialHeader$gid","_partialHeader$mtime","written","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_body","chunk","wrap","_callee$","_context","prev","next","_asyncIterator","_awaitAsyncGenerator","sent","done","value","Date","abrupt","Error","t0","t1","t2","return","finish","concat","t3","stop","_x","apply"],"sources":["/Users/apple/Documents/treasure/node_modules/it-tar/src/pack.ts"],"sourcesContent":["// @ts-expect-error no types\nimport isoConstants from 'iso-constants'\nimport toBuffer from 'it-to-buffer'\nimport { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist'\nimport type { TarEntryHeader, TarImportCandidate } from './index.js'\nimport * as Headers from './pack-headers.js'\nimport type { Source, Transform } from 'it-stream-types'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nconst { S_IFMT, S_IFBLK, S_IFCHR, S_IFDIR, S_IFIFO, S_IFLNK } = isoConstants\nconst DMODE = parseInt('755', 8)\nconst FMODE = parseInt('644', 8)\nconst END_OF_TAR = new Uint8Array(1024)\n\nfunction modeToType (mode: number = 0) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK: return 'block-device'\n    case S_IFCHR: return 'character-device'\n    case S_IFDIR: return 'directory'\n    case S_IFIFO: return 'fifo'\n    case S_IFLNK: return 'symlink'\n    default: return 'file'\n  }\n}\n\nfunction getPadding (size: number) {\n  size &= 511\n\n  if (size !== 0) {\n    return END_OF_TAR.subarray(0, 512 - size)\n  }\n\n  return new Uint8Array(0)\n}\n\nfunction encode (header: TarEntryHeader) {\n  if (header.pax == null) {\n    const encoded = Headers.encode(header)\n\n    if (encoded != null) {\n      return encoded\n    }\n  }\n  return encodePax(header)\n}\n\nfunction encodePax (header: TarEntryHeader) {\n  const paxHeader = Headers.encodePax(header)\n\n  const newHeader: TarEntryHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname,\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  }\n\n  return new Uint8ArrayList(\n    Headers.encode(newHeader) ?? new Uint8Array(0),\n    paxHeader,\n    getPadding(paxHeader.length),\n    Headers.encode({ ...newHeader, size: header.size, type: header.type }) ?? new Uint8Array(0)\n  ).subarray()\n}\n\nexport function pack (): Transform<TarImportCandidate, Uint8Array> {\n  return async function * (source: Source<TarImportCandidate>) { // eslint-disable-line complexity\n    for await (let { header: partialHeader, body } of source) {\n      const header: TarEntryHeader = {\n        ...partialHeader,\n        size: partialHeader.type === 'symlink' ? 0 : partialHeader.size ?? 0,\n        type: partialHeader.type ?? modeToType(partialHeader.mode),\n        mode: partialHeader.mode ?? (partialHeader.type === 'directory' ? DMODE : FMODE),\n        uid: partialHeader.uid ?? 0,\n        gid: partialHeader.gid ?? 0,\n        mtime: partialHeader.mtime ?? new Date()\n      }\n\n      if (typeof body === 'string') {\n        body = uint8ArrayFromString(body)\n      }\n\n      if (body instanceof Uint8Array || isUint8ArrayList(body)) {\n        header.size = body.length\n\n        yield encode(header)\n        yield isUint8ArrayList(body) ? body.subarray() : body\n        yield getPadding(header.size)\n\n        continue\n      }\n\n      if (header.type === 'symlink' && header.linkname == null) {\n        if (body == null) {\n          throw new Error('type was symlink but no linkname or body specified')\n        }\n\n        header.linkname = uint8ArrayToString(await toBuffer(body))\n        yield encode(header)\n        continue\n      }\n\n      yield encode(header)\n\n      if (header.type !== 'file' && header.type !== 'contiguous-file') {\n        continue\n      }\n\n      let written = 0\n      for await (const chunk of (body ?? [])) {\n        written += chunk.length // eslint-disable-line @typescript-eslint/restrict-plus-operands\n        yield isUint8ArrayList(chunk) ? chunk.subarray() : chunk\n      }\n\n      if (written !== header.size) { // corrupting tar\n        throw new Error(`size mismatch, wrote ${written} of ${header.size} bytes`)\n      }\n\n      yield getPadding(header.size)\n    }\n\n    yield END_OF_TAR\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}