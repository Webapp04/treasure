{"ast":null,"code":"import _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nimport * as mh from 'multiformats/hashes/digest';\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @param {Uint8Array} node\n */\nvar rawContent = function rawContent(node) {\n  /**\n   * @param {ExporterOptions} options\n   */\n  function contentGenerator() {\n    return _contentGenerator.apply(this, arguments);\n  }\n  function _contentGenerator() {\n    _contentGenerator = _wrapAsyncGenerator(function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _validateOffsetAndLen, offset, length;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _validateOffsetAndLen = validateOffsetAndLength(node.length, options.offset, options.length), offset = _validateOffsetAndLen.offset, length = _validateOffsetAndLen.length;\n              _context.next = 3;\n              return extractDataFromBlock(node, 0, offset, offset + length);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })();\n    });\n    return _contentGenerator.apply(this, arguments);\n  }\n  return contentGenerator;\n};\n\n/**\n * @type {Resolver}\n */\nvar resolve = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(cid, name, path, toResolve, _resolve, depth, blockstore, options) {\n    var buf;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!toResolve.length) {\n            _context2.next = 2;\n            break;\n          }\n          throw errCode(new Error(\"No link named \".concat(path, \" found in raw node \").concat(cid)), 'ERR_NOT_FOUND');\n        case 2:\n          _context2.next = 4;\n          return mh.decode(cid.multihash.bytes);\n        case 4:\n          buf = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            entry: {\n              type: 'identity',\n              name: name,\n              path: path,\n              cid: cid,\n              content: rawContent(buf.digest),\n              depth: depth,\n              size: buf.digest.length,\n              node: buf.digest\n            }\n          });\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function resolve(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default resolve;","map":{"version":3,"names":["errCode","extractDataFromBlock","validateOffsetAndLength","mh","rawContent","node","contentGenerator","_contentGenerator","apply","arguments","_wrapAsyncGenerator","options","length","undefined","_regeneratorRuntime","mark","_callee","_validateOffsetAndLen","offset","wrap","_callee$","_context","prev","next","stop","resolve","_ref","_asyncToGenerator","_callee2","cid","name","path","toResolve","depth","blockstore","buf","_callee2$","_context2","Error","concat","decode","multihash","bytes","sent","abrupt","entry","type","content","digest","size","_x","_x2","_x3","_x4","_x5","_x6","_x7","_x8"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-exporter/src/resolvers/identity.js"],"sourcesContent":["import errCode from 'err-code'\nimport extractDataFromBlock from '../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js'\nimport * as mh from 'multiformats/hashes/digest'\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @param {Uint8Array} node\n */\nconst rawContent = (node) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * contentGenerator (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    yield extractDataFromBlock(node, 0, offset, offset + length)\n  }\n\n  return contentGenerator\n}\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n  const buf = await mh.decode(cid.multihash.bytes)\n\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  }\n}\n\nexport default resolve\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}