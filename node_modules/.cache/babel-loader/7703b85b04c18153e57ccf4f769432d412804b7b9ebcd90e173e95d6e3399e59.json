{"ast":null,"code":"import _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Key } from 'interface-datastore';\nimport { KeyTransformDatastore } from './keytransform.js';\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('./types').KeyTransform} KeyTransform\n */\n\n/**\n * Wraps a given datastore into a keytransform which\n * makes a given prefix transparent.\n *\n * For example, if the prefix is `new Key(/hello)` a call\n * to `store.put(new Key('/world'), mydata)` would store the data under\n * `/hello/world`.\n */\nexport var NamespaceDatastore = /*#__PURE__*/function (_KeyTransformDatastor) {\n  _inherits(NamespaceDatastore, _KeyTransformDatastor);\n  var _super = _createSuper(NamespaceDatastore);\n  /**\n   * @param {Datastore} child\n   * @param {Key} prefix\n   */\n  function NamespaceDatastore(child, prefix) {\n    _classCallCheck(this, NamespaceDatastore);\n    return _super.call(this, child, {\n      convert: function convert(key) {\n        return prefix.child(key);\n      },\n      invert: function invert(key) {\n        if (prefix.toString() === '/') {\n          return key;\n        }\n        if (!prefix.isAncestorOf(key)) {\n          throw new Error(\"Expected prefix: (\".concat(prefix.toString(), \") in key: \").concat(key.toString()));\n        }\n        return new Key(key.toString().slice(prefix.toString().length), false);\n      }\n    });\n  }\n  return _createClass(NamespaceDatastore);\n}(KeyTransformDatastore);","map":{"version":3,"names":["Key","KeyTransformDatastore","NamespaceDatastore","_KeyTransformDatastor","_inherits","_super","_createSuper","child","prefix","_classCallCheck","call","convert","key","invert","toString","isAncestorOf","Error","concat","slice","length","_createClass"],"sources":["/Users/apple/Documents/treasure/node_modules/datastore-core/src/namespace.js"],"sourcesContent":["import { Key } from 'interface-datastore'\nimport { KeyTransformDatastore } from './keytransform.js'\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('./types').KeyTransform} KeyTransform\n */\n\n/**\n * Wraps a given datastore into a keytransform which\n * makes a given prefix transparent.\n *\n * For example, if the prefix is `new Key(/hello)` a call\n * to `store.put(new Key('/world'), mydata)` would store the data under\n * `/hello/world`.\n */\nexport class NamespaceDatastore extends KeyTransformDatastore {\n  /**\n   * @param {Datastore} child\n   * @param {Key} prefix\n   */\n  constructor (child, prefix) {\n    super(child, {\n      convert (key) {\n        return prefix.child(key)\n      },\n      invert (key) {\n        if (prefix.toString() === '/') {\n          return key\n        }\n\n        if (!prefix.isAncestorOf(key)) {\n          throw new Error(`Expected prefix: (${prefix.toString()}) in key: ${key.toString()}`)\n        }\n\n        return new Key(key.toString().slice(prefix.toString().length), false)\n      }\n    })\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,GAAG,QAAQ,qBAAqB;AACzC,SAASC,qBAAqB,QAAQ,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAaC,kBAAkB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,kBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,kBAAA;EAC7B;AACF;AACA;AACA;EACE,SAAAA,mBAAaK,KAAK,EAAEC,MAAM,EAAE;IAAAC,eAAA,OAAAP,kBAAA;IAAA,OAAAG,MAAA,CAAAK,IAAA,OACpBH,KAAK,EAAE;MACXI,OAAO,WAAAA,QAAEC,GAAG,EAAE;QACZ,OAAOJ,MAAM,CAACD,KAAK,CAACK,GAAG,CAAC;MAC1B,CAAC;MACDC,MAAM,WAAAA,OAAED,GAAG,EAAE;QACX,IAAIJ,MAAM,CAACM,QAAQ,CAAC,CAAC,KAAK,GAAG,EAAE;UAC7B,OAAOF,GAAG;QACZ;QAEA,IAAI,CAACJ,MAAM,CAACO,YAAY,CAACH,GAAG,CAAC,EAAE;UAC7B,MAAM,IAAII,KAAK,sBAAAC,MAAA,CAAsBT,MAAM,CAACM,QAAQ,CAAC,CAAC,gBAAAG,MAAA,CAAaL,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAE,CAAC;QACtF;QAEA,OAAO,IAAId,GAAG,CAACY,GAAG,CAACE,QAAQ,CAAC,CAAC,CAACI,KAAK,CAACV,MAAM,CAACM,QAAQ,CAAC,CAAC,CAACK,MAAM,CAAC,EAAE,KAAK,CAAC;MACvE;IACF,CAAC;EACH;EAAC,OAAAC,YAAA,CAAAlB,kBAAA;AAAA,EAtBqCD,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}