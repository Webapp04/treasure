{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { logger } from '@libp2p/logger';\nimport { CID } from 'multiformats/cid';\nimport PQueue from 'p-queue';\nimport defer from 'p-defer';\nimport errCode from 'err-code';\nimport anySignal from 'any-signal';\nimport { peerIdFromBytes } from '@libp2p/peer-id';\nvar log = logger('libp2p-delegated-peer-routing');\nvar DEFAULT_TIMEOUT = 30e3; // 30 second default\nvar CONCURRENT_HTTP_REQUESTS = 4;\nexport var DelegatedPeerRouting = /*#__PURE__*/function () {\n  /**\n   * Create a new DelegatedPeerRouting instance\n   */\n  function DelegatedPeerRouting(client) {\n    _classCallCheck(this, DelegatedPeerRouting);\n    if (client == null) {\n      throw new Error('missing ipfs http client');\n    }\n    this.client = client;\n    this.started = false;\n    this.abortController = new AbortController();\n    // limit concurrency to avoid request flood in web browser\n    // https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12\n    this.httpQueue = new PQueue({\n      concurrency: CONCURRENT_HTTP_REQUESTS\n    });\n    var _client$getEndpointCo = client.getEndpointConfig(),\n      protocol = _client$getEndpointCo.protocol,\n      host = _client$getEndpointCo.host,\n      port = _client$getEndpointCo.port;\n    log(\"enabled DelegatedPeerRouting via \".concat(protocol, \"://\").concat(host, \":\").concat(port));\n  }\n  _createClass(DelegatedPeerRouting, [{\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.started;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.started = true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.httpQueue.clear();\n      this.abortController.abort();\n      this.abortController = new AbortController();\n      this.started = false;\n    }\n    /**\n     * Attempts to find the given peer\n     */\n  }, {\n    key: \"findPeer\",\n    value: function () {\n      var _findPeer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {\n        var _options$timeout;\n        var options,\n          onStart,\n          onFinish,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          event,\n          peerInfo,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              log('findPeer starts: %p', id);\n              options.timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : DEFAULT_TIMEOUT;\n              options.signal = anySignal([this.abortController.signal].concat(options.signal != null ? [options.signal] : []));\n              onStart = defer();\n              onFinish = defer();\n              void this.httpQueue.add( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      onStart.resolve();\n                      _context.next = 3;\n                      return onFinish.promise;\n                    case 3:\n                      return _context.abrupt(\"return\", _context.sent);\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              })));\n              _context2.prev = 7;\n              _context2.next = 10;\n              return onStart.promise;\n            case 10:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context2.prev = 12;\n              _iterator = _asyncIterator(this.client.dht.findPeer(id, options));\n            case 14:\n              _context2.next = 16;\n              return _iterator.next();\n            case 16:\n              if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                _context2.next = 24;\n                break;\n              }\n              event = _step.value;\n              if (!(event.name === 'FINAL_PEER')) {\n                _context2.next = 21;\n                break;\n              }\n              peerInfo = {\n                id: event.peer.id,\n                multiaddrs: event.peer.multiaddrs,\n                protocols: []\n              };\n              return _context2.abrupt(\"return\", peerInfo);\n            case 21:\n              _iteratorAbruptCompletion = false;\n              _context2.next = 14;\n              break;\n            case 24:\n              _context2.next = 30;\n              break;\n            case 26:\n              _context2.prev = 26;\n              _context2.t0 = _context2[\"catch\"](12);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n            case 30:\n              _context2.prev = 30;\n              _context2.prev = 31;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context2.next = 35;\n                break;\n              }\n              _context2.next = 35;\n              return _iterator.return();\n            case 35:\n              _context2.prev = 35;\n              if (!_didIteratorError) {\n                _context2.next = 38;\n                break;\n              }\n              throw _iteratorError;\n            case 38:\n              return _context2.finish(35);\n            case 39:\n              return _context2.finish(30);\n            case 40:\n              _context2.next = 46;\n              break;\n            case 42:\n              _context2.prev = 42;\n              _context2.t1 = _context2[\"catch\"](7);\n              log.error('findPeer errored: %o', _context2.t1);\n              throw _context2.t1;\n            case 46:\n              _context2.prev = 46;\n              onFinish.resolve();\n              log('findPeer finished: %p', id);\n              return _context2.finish(46);\n            case 50:\n              throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n            case 51:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[7, 42, 46, 50], [12, 26, 30, 40], [31,, 35, 39]]);\n      }));\n      function findPeer(_x) {\n        return _findPeer.apply(this, arguments);\n      }\n      return findPeer;\n    }()\n    /**\n     * Attempt to find the closest peers on the network to the given key\n     */\n  }, {\n    key: \"getClosestPeers\",\n    value: function getClosestPeers(key) {\n      var _this = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _options$timeout2;\n        var cidOrPeerId, cid, onStart, onFinish, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, event;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              cid = CID.asCID(key);\n              if (cid != null) {\n                cidOrPeerId = cid;\n              } else {\n                cidOrPeerId = peerIdFromBytes(key);\n              }\n              log('getClosestPeers starts: %s', cidOrPeerId);\n              options.timeout = (_options$timeout2 = options.timeout) !== null && _options$timeout2 !== void 0 ? _options$timeout2 : DEFAULT_TIMEOUT;\n              options.signal = anySignal([_this.abortController.signal].concat(options.signal != null ? [options.signal] : []));\n              onStart = defer();\n              onFinish = defer();\n              void _this.httpQueue.add( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      onStart.resolve();\n                      _context3.next = 3;\n                      return onFinish.promise;\n                    case 3:\n                      return _context3.abrupt(\"return\", _context3.sent);\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _callee3);\n              })));\n              _context4.prev = 8;\n              _context4.next = 11;\n              return _awaitAsyncGenerator(onStart.promise);\n            case 11:\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context4.prev = 13;\n              _iterator2 = _asyncIterator(_this.client.dht.query(cidOrPeerId, options));\n            case 15:\n              _context4.next = 17;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 17:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context4.sent).done)) {\n                _context4.next = 24;\n                break;\n              }\n              event = _step2.value;\n              if (!(event.name === 'PEER_RESPONSE')) {\n                _context4.next = 21;\n                break;\n              }\n              return _context4.delegateYield(_asyncGeneratorDelegate(_asyncIterator(event.closer.map(function (closer) {\n                return {\n                  id: closer.id,\n                  multiaddrs: closer.multiaddrs,\n                  protocols: []\n                };\n              })), _awaitAsyncGenerator), \"t0\", 21);\n            case 21:\n              _iteratorAbruptCompletion2 = false;\n              _context4.next = 15;\n              break;\n            case 24:\n              _context4.next = 30;\n              break;\n            case 26:\n              _context4.prev = 26;\n              _context4.t1 = _context4[\"catch\"](13);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context4.t1;\n            case 30:\n              _context4.prev = 30;\n              _context4.prev = 31;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context4.next = 35;\n                break;\n              }\n              _context4.next = 35;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 35:\n              _context4.prev = 35;\n              if (!_didIteratorError2) {\n                _context4.next = 38;\n                break;\n              }\n              throw _iteratorError2;\n            case 38:\n              return _context4.finish(35);\n            case 39:\n              return _context4.finish(30);\n            case 40:\n              _context4.next = 46;\n              break;\n            case 42:\n              _context4.prev = 42;\n              _context4.t2 = _context4[\"catch\"](8);\n              log.error('getClosestPeers errored:', _context4.t2);\n              throw _context4.t2;\n            case 46:\n              _context4.prev = 46;\n              onFinish.resolve();\n              log('getClosestPeers finished: %b', key);\n              return _context4.finish(46);\n            case 50:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[8, 42, 46, 50], [13, 26, 30, 40], [31,, 35, 39]]);\n      }))();\n    }\n  }]);\n  return DelegatedPeerRouting;\n}();","map":{"version":3,"names":["logger","CID","PQueue","defer","errCode","anySignal","peerIdFromBytes","log","DEFAULT_TIMEOUT","CONCURRENT_HTTP_REQUESTS","DelegatedPeerRouting","client","_classCallCheck","Error","started","abortController","AbortController","httpQueue","concurrency","_client$getEndpointCo","getEndpointConfig","protocol","host","port","concat","_createClass","key","value","isStarted","start","stop","clear","abort","_findPeer","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","id","_options$timeout","options","onStart","onFinish","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","event","peerInfo","_args2","arguments","wrap","_callee2$","_context2","prev","next","length","undefined","timeout","signal","add","_callee","_callee$","_context","resolve","promise","abrupt","sent","_asyncIterator","dht","findPeer","done","name","peer","multiaddrs","protocols","t0","return","finish","t1","error","_x","apply","getClosestPeers","_this","_wrapAsyncGenerator","_callee4","_options$timeout2","cidOrPeerId","cid","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee4$","_context4","asCID","_callee3","_callee3$","_context3","_awaitAsyncGenerator","query","delegateYield","_asyncGeneratorDelegate","closer","map","t2"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/delegated-peer-routing/src/index.ts"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport { CID } from 'multiformats/cid'\nimport PQueue from 'p-queue'\nimport defer from 'p-defer'\nimport errCode from 'err-code'\nimport anySignal from 'any-signal'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { IPFSHTTPClient, HTTPClientExtraOptions } from 'ipfs-http-client'\nimport type { AbortOptions } from 'ipfs-core-types/src/utils'\nimport type { PeerRouting } from '@libp2p/interface-peer-routing'\nimport type { PeerInfo } from '@libp2p/interface-peer-info'\nimport type { Startable } from '@libp2p/interfaces/startable'\nimport { peerIdFromBytes } from '@libp2p/peer-id'\n\nconst log = logger('libp2p-delegated-peer-routing')\n\nconst DEFAULT_TIMEOUT = 30e3 // 30 second default\nconst CONCURRENT_HTTP_REQUESTS = 4\n\nexport class DelegatedPeerRouting implements PeerRouting, Startable {\n  private readonly client: IPFSHTTPClient\n  private readonly httpQueue: PQueue\n  private started: boolean\n  private abortController: AbortController\n\n  /**\n   * Create a new DelegatedPeerRouting instance\n   */\n  constructor (client: IPFSHTTPClient) {\n    if (client == null) {\n      throw new Error('missing ipfs http client')\n    }\n\n    this.client = client\n    this.started = false\n    this.abortController = new AbortController()\n\n    // limit concurrency to avoid request flood in web browser\n    // https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12\n    this.httpQueue = new PQueue({\n      concurrency: CONCURRENT_HTTP_REQUESTS\n    })\n\n    const {\n      protocol,\n      host,\n      port\n    } = client.getEndpointConfig()\n\n    log(`enabled DelegatedPeerRouting via ${protocol}://${host}:${port}`)\n  }\n\n  isStarted () {\n    return this.started\n  }\n\n  start () {\n    this.started = true\n  }\n\n  stop () {\n    this.httpQueue.clear()\n    this.abortController.abort()\n    this.abortController = new AbortController()\n    this.started = false\n  }\n\n  /**\n   * Attempts to find the given peer\n   */\n  async findPeer (id: PeerId, options: HTTPClientExtraOptions & AbortOptions = {}) {\n    log('findPeer starts: %p', id)\n    options.timeout = options.timeout ?? DEFAULT_TIMEOUT\n    options.signal = anySignal([this.abortController.signal].concat((options.signal != null) ? [options.signal] : []))\n\n    const onStart = defer()\n    const onFinish = defer()\n\n    void this.httpQueue.add(async () => {\n      onStart.resolve()\n      return await onFinish.promise\n    })\n\n    try {\n      await onStart.promise\n\n      for await (const event of this.client.dht.findPeer(id, options)) {\n        if (event.name === 'FINAL_PEER') {\n          const peerInfo: PeerInfo = {\n            id: event.peer.id,\n            multiaddrs: event.peer.multiaddrs,\n            protocols: []\n          }\n\n          return peerInfo\n        }\n      }\n    } catch (err: any) {\n      log.error('findPeer errored: %o', err)\n\n      throw err\n    } finally {\n      onFinish.resolve()\n      log('findPeer finished: %p', id)\n    }\n\n    throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n  }\n\n  /**\n   * Attempt to find the closest peers on the network to the given key\n   */\n  async * getClosestPeers (key: Uint8Array, options: HTTPClientExtraOptions & AbortOptions = {}) {\n    let cidOrPeerId: CID | PeerId\n    const cid = CID.asCID(key)\n\n    if (cid != null) {\n      cidOrPeerId = cid\n    } else {\n      cidOrPeerId = peerIdFromBytes(key)\n    }\n\n    log('getClosestPeers starts: %s', cidOrPeerId)\n    options.timeout = options.timeout ?? DEFAULT_TIMEOUT\n    options.signal = anySignal([this.abortController.signal].concat((options.signal != null) ? [options.signal] : []))\n\n    const onStart = defer()\n    const onFinish = defer()\n\n    void this.httpQueue.add(async () => {\n      onStart.resolve()\n      return await onFinish.promise\n    })\n\n    try {\n      await onStart.promise\n\n      for await (const event of this.client.dht.query(cidOrPeerId, options)) {\n        if (event.name === 'PEER_RESPONSE') {\n          yield * event.closer.map(closer => ({\n            id: closer.id,\n            multiaddrs: closer.multiaddrs,\n            protocols: []\n          }))\n        }\n      }\n    } catch (err) {\n      log.error('getClosestPeers errored:', err)\n      throw err\n    } finally {\n      onFinish.resolve()\n      log('getClosestPeers finished: %b', key)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}