{"ast":null,"code":"/* eslint-disable import/export */\n/* eslint-disable @typescript-eslint/no-namespace */\nimport { encodeMessage, decodeMessage, message, enumeration } from 'protons-runtime';\nexport var FetchRequest;\n(function (FetchRequest) {\n  var _codec;\n  FetchRequest.codec = function () {\n    if (_codec == null) {\n      _codec = message(function (obj, writer) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (opts.lengthDelimited !== false) {\n          writer.fork();\n        }\n        if (obj.identifier != null) {\n          writer.uint32(10);\n          writer.string(obj.identifier);\n        } else {\n          throw new Error('Protocol error: required field \"identifier\" was not found in object');\n        }\n        if (opts.lengthDelimited !== false) {\n          writer.ldelim();\n        }\n      }, function (reader, length) {\n        var obj = {};\n        var end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.identifier = reader.string();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        if (obj.identifier == null) {\n          throw new Error('Protocol error: value for required field \"identifier\" was not found in protobuf');\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  FetchRequest.encode = function (obj) {\n    return encodeMessage(obj, FetchRequest.codec());\n  };\n  FetchRequest.decode = function (buf) {\n    return decodeMessage(buf, FetchRequest.codec());\n  };\n})(FetchRequest || (FetchRequest = {}));\nexport var FetchResponse;\n(function (FetchResponse) {\n  var StatusCode;\n  (function (StatusCode) {\n    StatusCode[\"OK\"] = \"OK\";\n    StatusCode[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    StatusCode[\"ERROR\"] = \"ERROR\";\n  })(StatusCode = FetchResponse.StatusCode || (FetchResponse.StatusCode = {}));\n  var __StatusCodeValues;\n  (function (__StatusCodeValues) {\n    __StatusCodeValues[__StatusCodeValues[\"OK\"] = 0] = \"OK\";\n    __StatusCodeValues[__StatusCodeValues[\"NOT_FOUND\"] = 1] = \"NOT_FOUND\";\n    __StatusCodeValues[__StatusCodeValues[\"ERROR\"] = 2] = \"ERROR\";\n  })(__StatusCodeValues || (__StatusCodeValues = {}));\n  (function (StatusCode) {\n    StatusCode.codec = function () {\n      return enumeration(__StatusCodeValues);\n    };\n  })(StatusCode = FetchResponse.StatusCode || (FetchResponse.StatusCode = {}));\n  var _codec;\n  FetchResponse.codec = function () {\n    if (_codec == null) {\n      _codec = message(function (obj, writer) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (opts.lengthDelimited !== false) {\n          writer.fork();\n        }\n        if (obj.status != null) {\n          writer.uint32(8);\n          FetchResponse.StatusCode.codec().encode(obj.status, writer);\n        } else {\n          throw new Error('Protocol error: required field \"status\" was not found in object');\n        }\n        if (obj.data != null) {\n          writer.uint32(18);\n          writer.bytes(obj.data);\n        } else {\n          throw new Error('Protocol error: required field \"data\" was not found in object');\n        }\n        if (opts.lengthDelimited !== false) {\n          writer.ldelim();\n        }\n      }, function (reader, length) {\n        var obj = {};\n        var end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.status = FetchResponse.StatusCode.codec().decode(reader);\n              break;\n            case 2:\n              obj.data = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        if (obj.status == null) {\n          throw new Error('Protocol error: value for required field \"status\" was not found in protobuf');\n        }\n        if (obj.data == null) {\n          throw new Error('Protocol error: value for required field \"data\" was not found in protobuf');\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  FetchResponse.encode = function (obj) {\n    return encodeMessage(obj, FetchResponse.codec());\n  };\n  FetchResponse.decode = function (buf) {\n    return decodeMessage(buf, FetchResponse.codec());\n  };\n})(FetchResponse || (FetchResponse = {}));","map":{"version":3,"names":["encodeMessage","decodeMessage","message","enumeration","FetchRequest","_codec","codec","obj","writer","opts","arguments","length","undefined","lengthDelimited","fork","identifier","uint32","string","Error","ldelim","reader","end","len","pos","tag","skipType","encode","decode","buf","FetchResponse","StatusCode","__StatusCodeValues","status","data","bytes"],"sources":["/Users/apple/Documents/treasure/node_modules/libp2p/src/fetch/pb/proto.ts"],"sourcesContent":["/* eslint-disable import/export */\n/* eslint-disable @typescript-eslint/no-namespace */\n\nimport { encodeMessage, decodeMessage, message, enumeration } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\nimport type { Codec } from 'protons-runtime'\n\nexport interface FetchRequest {\n  identifier: string\n}\n\nexport namespace FetchRequest {\n  let _codec: Codec<FetchRequest>\n\n  export const codec = (): Codec<FetchRequest> => {\n    if (_codec == null) {\n      _codec = message<FetchRequest>((obj, writer, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          writer.fork()\n        }\n\n        if (obj.identifier != null) {\n          writer.uint32(10)\n          writer.string(obj.identifier)\n        } else {\n          throw new Error('Protocol error: required field \"identifier\" was not found in object')\n        }\n\n        if (opts.lengthDelimited !== false) {\n          writer.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.identifier = reader.string()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        if (obj.identifier == null) {\n          throw new Error('Protocol error: value for required field \"identifier\" was not found in protobuf')\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: FetchRequest): Uint8Array => {\n    return encodeMessage(obj, FetchRequest.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): FetchRequest => {\n    return decodeMessage(buf, FetchRequest.codec())\n  }\n}\n\nexport interface FetchResponse {\n  status: FetchResponse.StatusCode\n  data: Uint8Array\n}\n\nexport namespace FetchResponse {\n  export enum StatusCode {\n    OK = 'OK',\n    NOT_FOUND = 'NOT_FOUND',\n    ERROR = 'ERROR'\n  }\n\n  enum __StatusCodeValues {\n    OK = 0,\n    NOT_FOUND = 1,\n    ERROR = 2\n  }\n\n  export namespace StatusCode {\n    export const codec = () => {\n      return enumeration<StatusCode>(__StatusCodeValues)\n    }\n  }\n\n  let _codec: Codec<FetchResponse>\n\n  export const codec = (): Codec<FetchResponse> => {\n    if (_codec == null) {\n      _codec = message<FetchResponse>((obj, writer, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          writer.fork()\n        }\n\n        if (obj.status != null) {\n          writer.uint32(8)\n          FetchResponse.StatusCode.codec().encode(obj.status, writer)\n        } else {\n          throw new Error('Protocol error: required field \"status\" was not found in object')\n        }\n\n        if (obj.data != null) {\n          writer.uint32(18)\n          writer.bytes(obj.data)\n        } else {\n          throw new Error('Protocol error: required field \"data\" was not found in object')\n        }\n\n        if (opts.lengthDelimited !== false) {\n          writer.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.status = FetchResponse.StatusCode.codec().decode(reader)\n              break\n            case 2:\n              obj.data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        if (obj.status == null) {\n          throw new Error('Protocol error: value for required field \"status\" was not found in protobuf')\n        }\n\n        if (obj.data == null) {\n          throw new Error('Protocol error: value for required field \"data\" was not found in protobuf')\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: FetchResponse): Uint8Array => {\n    return encodeMessage(obj, FetchResponse.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): FetchResponse => {\n    return decodeMessage(buf, FetchResponse.codec())\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}