{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\n/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nvar directoryContent = function directoryContent(cid, node, unixfs, path, resolve, depth, blockstore) {\n  /**\n   * @param {ExporterOptions} [options]\n   * @returns {UnixfsV1DirectoryContent}\n   */\n  function yieldDirectoryContent() {\n    return _yieldDirectoryContent.apply(this, arguments);\n  }\n  function _yieldDirectoryContent() {\n    _yieldDirectoryContent = _wrapAsyncGenerator(function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var offset, length, links, _iterator, _step, link, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              offset = options.offset || 0;\n              length = options.length || node.Links.length;\n              links = node.Links.slice(offset, length);\n              _iterator = _createForOfIteratorHelper(links);\n              _context.prev = 4;\n              _iterator.s();\n            case 6:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 16;\n                break;\n              }\n              link = _step.value;\n              _context.next = 10;\n              return _awaitAsyncGenerator(resolve(link.Hash, link.Name || '', \"\".concat(path, \"/\").concat(link.Name || ''), [], depth + 1, blockstore, options));\n            case 10:\n              result = _context.sent;\n              if (!result.entry) {\n                _context.next = 14;\n                break;\n              }\n              _context.next = 14;\n              return result.entry;\n            case 14:\n              _context.next = 6;\n              break;\n            case 16:\n              _context.next = 21;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](4);\n              _iterator.e(_context.t0);\n            case 21:\n              _context.prev = 21;\n              _iterator.f();\n              return _context.finish(21);\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 18, 21, 24]]);\n      })();\n    });\n    return _yieldDirectoryContent.apply(this, arguments);\n  }\n  return yieldDirectoryContent;\n};\nexport default directoryContent;","map":{"version":3,"names":["directoryContent","cid","node","unixfs","path","resolve","depth","blockstore","yieldDirectoryContent","_yieldDirectoryContent","apply","arguments","_wrapAsyncGenerator","options","length","undefined","_regeneratorRuntime","mark","_callee","offset","links","_iterator","_step","link","result","wrap","_callee$","_context","prev","next","Links","slice","_createForOfIteratorHelper","s","n","done","value","_awaitAsyncGenerator","Hash","Name","concat","sent","entry","t0","e","f","finish","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.js"],"sourcesContent":["/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} [options]\n   * @returns {UnixfsV1DirectoryContent}\n   */\n  async function * yieldDirectoryContent (options = {}) {\n    const offset = options.offset || 0\n    const length = options.length || node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${path}/${link.Name || ''}`, [], depth + 1, blockstore, options)\n\n      if (result.entry) {\n        yield result.entry\n      }\n    }\n  }\n\n  return yieldDirectoryContent\n}\n\nexport default directoryContent\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAK;EAChF;AACF;AACA;AACA;EAHE,SAIiBC,qBAAqBA,CAAA;IAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,uBAAA;IAAAA,sBAAA,GAAAG,mBAAA,CAAtC;MAAA,IAAwCC,OAAO,GAAAF,SAAA,CAAAG,MAAA,QAAAH,SAAA,QAAAI,SAAA,GAAAJ,SAAA,MAAG,CAAC,CAAC;MAAA,oBAAAK,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAL,MAAA,EAAAM,KAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,MAAA;QAAA,OAAAR,mBAAA,GAAAS,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAC5CV,MAAM,GAAGN,OAAO,CAACM,MAAM,IAAI,CAAC;cAC5BL,MAAM,GAAGD,OAAO,CAACC,MAAM,IAAIZ,IAAI,CAAC4B,KAAK,CAAChB,MAAM;cAC5CM,KAAK,GAAGlB,IAAI,CAAC4B,KAAK,CAACC,KAAK,CAACZ,MAAM,EAAEL,MAAM,CAAC;cAAAO,SAAA,GAAAW,0BAAA,CAE3BZ,KAAK;cAAAO,QAAA,CAAAC,IAAA;cAAAP,SAAA,CAAAY,CAAA;YAAA;cAAA,KAAAX,KAAA,GAAAD,SAAA,CAAAa,CAAA,IAAAC,IAAA;gBAAAR,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAbN,IAAI,GAAAD,KAAA,CAAAc,KAAA;cAAAT,QAAA,CAAAE,IAAA;cAAA,OAAAQ,oBAAA,CACQhC,OAAO,CAACkB,IAAI,CAACe,IAAI,EAAEf,IAAI,CAACgB,IAAI,IAAI,EAAE,KAAAC,MAAA,CAAKpC,IAAI,OAAAoC,MAAA,CAAIjB,IAAI,CAACgB,IAAI,IAAI,EAAE,GAAI,EAAE,EAAEjC,KAAK,GAAG,CAAC,EAAEC,UAAU,EAAEM,OAAO,CAAC;YAAA;cAApHW,MAAM,GAAAG,QAAA,CAAAc,IAAA;cAAA,KAERjB,MAAM,CAACkB,KAAK;gBAAAf,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cACd,OAAML,MAAM,CAACkB,KAAK;YAAA;cAAAf,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAgB,EAAA,GAAAhB,QAAA;cAAAN,SAAA,CAAAuB,CAAA,CAAAjB,QAAA,CAAAgB,EAAA;YAAA;cAAAhB,QAAA,CAAAC,IAAA;cAAAP,SAAA,CAAAwB,CAAA;cAAA,OAAAlB,QAAA,CAAAmB,MAAA;YAAA;YAAA;cAAA,OAAAnB,QAAA,CAAAoB,IAAA;UAAA;QAAA,GAAA7B,OAAA;MAAA;IAAA,CAGvB;IAAA,OAAAT,sBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOH,qBAAqB;AAC9B,CAAC;AAED,eAAeR,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}