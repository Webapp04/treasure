{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { setMaxListeners } from 'events';\nimport take from 'it-take';\nimport length from 'it-length';\nimport { QUERY_SELF_INTERVAL, QUERY_SELF_TIMEOUT, K } from './constants.js';\nimport { TimeoutController } from 'timeout-abort-controller';\nimport { anySignal } from 'any-signal';\nimport { logger } from '@libp2p/logger';\nimport { pipe } from 'it-pipe';\nimport { Components } from '@libp2p/components';\n/**\n * Receives notifications of new peers joining the network that support the DHT protocol\n */\nexport var QuerySelf = /*#__PURE__*/function () {\n  function QuerySelf(init) {\n    _classCallCheck(this, QuerySelf);\n    this.components = new Components();\n    var peerRouting = init.peerRouting,\n      lan = init.lan,\n      count = init.count,\n      interval = init.interval,\n      queryTimeout = init.queryTimeout;\n    this.log = logger(\"libp2p:kad-dht:\".concat(lan ? 'lan' : 'wan', \":query-self\"));\n    this.running = false;\n    this.peerRouting = peerRouting;\n    this.count = count !== null && count !== void 0 ? count : K;\n    this.interval = interval !== null && interval !== void 0 ? interval : QUERY_SELF_INTERVAL;\n    this.queryTimeout = queryTimeout !== null && queryTimeout !== void 0 ? queryTimeout : QUERY_SELF_TIMEOUT;\n  }\n  _createClass(QuerySelf, [{\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n    }\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.running;\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.running) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              this.running = true;\n              this._querySelf();\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.running = false;\n              if (this.timeoutId != null) {\n                clearTimeout(this.timeoutId);\n              }\n              if (this.controller != null) {\n                this.controller.abort();\n              }\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n      return stop;\n    }()\n  }, {\n    key: \"_querySelf\",\n    value: function _querySelf() {\n      var _this = this;\n      Promise.resolve().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var timeoutController, signal, found;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              timeoutController = new TimeoutController(_this.queryTimeout);\n              _context4.prev = 1;\n              _this.controller = new AbortController();\n              signal = anySignal([_this.controller.signal, timeoutController.signal]); // this controller will get used for lots of dial attempts so make sure we don't cause warnings to be logged\n              try {\n                if (setMaxListeners != null) {\n                  setMaxListeners(Infinity, signal);\n                }\n              } catch (_unused) {} // fails on node < 15.4\n              _context4.next = 7;\n              return pipe(_this.peerRouting.getClosestPeers(_this.components.getPeerId().toBytes(), {\n                signal: signal\n              }), function (source) {\n                return take(source, _this.count);\n              }, /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(source) {\n                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                    while (1) switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return length(source);\n                      case 2:\n                        return _context3.abrupt(\"return\", _context3.sent);\n                      case 3:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }, _callee3);\n                }));\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            case 7:\n              found = _context4.sent;\n              _this.log('query ran successfully - found %d peers', found);\n              _context4.next = 14;\n              break;\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](1);\n              _this.log('query error', _context4.t0);\n            case 14:\n              _context4.prev = 14;\n              _this.timeoutId = setTimeout(_this._querySelf.bind(_this), _this.interval);\n              timeoutController.clear();\n              return _context4.finish(14);\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[1, 11, 14, 18]]);\n      }))).catch(function (err) {\n        _this.log('query error', err);\n      });\n    }\n  }]);\n  return QuerySelf;\n}();","map":{"version":3,"names":["setMaxListeners","take","length","QUERY_SELF_INTERVAL","QUERY_SELF_TIMEOUT","K","TimeoutController","anySignal","logger","pipe","Components","QuerySelf","init","_classCallCheck","components","peerRouting","lan","count","interval","queryTimeout","log","concat","running","_createClass","key","value","isStarted","_start","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","_querySelf","stop","start","apply","arguments","_stop","_callee2","_callee2$","_context2","timeoutId","clearTimeout","controller","abort","_this","Promise","resolve","then","_callee4","timeoutController","signal","found","_callee4$","_context4","AbortController","Infinity","_unused","getClosestPeers","getPeerId","toBytes","source","_ref2","_callee3","_callee3$","_context3","sent","_x","t0","setTimeout","bind","clear","finish","catch","err"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/query-self.ts"],"sourcesContent":["import { setMaxListeners } from 'events'\nimport take from 'it-take'\nimport length from 'it-length'\nimport { QUERY_SELF_INTERVAL, QUERY_SELF_TIMEOUT, K } from './constants.js'\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { anySignal } from 'any-signal'\nimport { logger, Logger } from '@libp2p/logger'\nimport type { PeerRouting } from './peer-routing/index.js'\nimport type { Startable } from '@libp2p/interfaces/startable'\nimport { pipe } from 'it-pipe'\nimport { Components, Initializable } from '@libp2p/components'\n\nexport interface QuerySelfInit {\n  lan: boolean\n  peerRouting: PeerRouting\n  count?: number\n  interval?: number\n  queryTimeout?: number\n}\n\n/**\n * Receives notifications of new peers joining the network that support the DHT protocol\n */\nexport class QuerySelf implements Startable, Initializable {\n  private readonly log: Logger\n  private components: Components = new Components()\n  private readonly peerRouting: PeerRouting\n  private readonly count: number\n  private readonly interval: number\n  private readonly queryTimeout: number\n  private running: boolean\n  private timeoutId?: NodeJS.Timer\n  private controller?: AbortController\n\n  constructor (init: QuerySelfInit) {\n    const { peerRouting, lan, count, interval, queryTimeout } = init\n\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:query-self`)\n    this.running = false\n    this.peerRouting = peerRouting\n    this.count = count ?? K\n    this.interval = interval ?? QUERY_SELF_INTERVAL\n    this.queryTimeout = queryTimeout ?? QUERY_SELF_TIMEOUT\n  }\n\n  init (components: Components): void {\n    this.components = components\n  }\n\n  isStarted () {\n    return this.running\n  }\n\n  async start () {\n    if (this.running) {\n      return\n    }\n\n    this.running = true\n    this._querySelf()\n  }\n\n  async stop () {\n    this.running = false\n\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId)\n    }\n\n    if (this.controller != null) {\n      this.controller.abort()\n    }\n  }\n\n  _querySelf () {\n    Promise.resolve().then(async () => {\n      const timeoutController = new TimeoutController(this.queryTimeout)\n\n      try {\n        this.controller = new AbortController()\n        const signal = anySignal([this.controller.signal, timeoutController.signal])\n        // this controller will get used for lots of dial attempts so make sure we don't cause warnings to be logged\n        try {\n          if (setMaxListeners != null) {\n            setMaxListeners(Infinity, signal)\n          }\n        } catch {} // fails on node < 15.4\n        const found = await pipe(\n          this.peerRouting.getClosestPeers(this.components.getPeerId().toBytes(), {\n            signal\n          }),\n          (source) => take(source, this.count),\n          async (source) => await length(source)\n        )\n\n        this.log('query ran successfully - found %d peers', found)\n      } catch (err: any) {\n        this.log('query error', err)\n      } finally {\n        this.timeoutId = setTimeout(this._querySelf.bind(this), this.interval)\n        timeoutController.clear()\n      }\n    }).catch(err => {\n      this.log('query error', err)\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}