{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar intervals = new Map();\nvar _generateId = function _generateId() {\n  return \"\".concat(Date.now(), \":\").concat(Math.floor(Math.random() * 1000000));\n};\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nfunction _runPeriodically(_x, _x2, _x3) {\n  return _runPeriodically2.apply(this, arguments);\n}\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction _runPeriodically2() {\n  _runPeriodically2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(task, interval, id) {\n    var _loop, _ret;\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n            return _regeneratorRuntime().wrap(function _loop$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return task();\n                case 3:\n                  _context.next = 9;\n                  break;\n                case 5:\n                  _context.prev = 5;\n                  _context.t0 = _context[\"catch\"](0);\n                  // Throw global context error if handler throws\n                  setTimeout(function () {\n                    throw _context.t0;\n                  }, 1);\n                  return _context.abrupt(\"return\", 0);\n                case 9:\n                  if (intervals.get(id)) {\n                    _context.next = 11;\n                    break;\n                  }\n                  return _context.abrupt(\"return\", 0);\n                case 11:\n                  _context.next = 13;\n                  return new Promise(function (resolve) {\n                    var _timeout = setTimeout(resolve, interval);\n                    intervals.set(id, _timeout);\n                  });\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _loop, null, [[0, 5]]);\n          });\n        case 1:\n          if (!intervals.get(id)) {\n            _context2.next = 8;\n            break;\n          }\n          return _context2.delegateYield(_loop(), \"t0\", 3);\n        case 3:\n          _ret = _context2.t0;\n          if (!(_ret === 0)) {\n            _context2.next = 6;\n            break;\n          }\n          return _context2.abrupt(\"break\", 8);\n        case 6:\n          _context2.next = 1;\n          break;\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee);\n  }));\n  return _runPeriodically2.apply(this, arguments);\n}\nfunction setDelayedInterval(task, interval, delay) {\n  delay = delay || interval;\n  var id = _generateId();\n  var _timeout = setTimeout(function () {\n    _runPeriodically(task, interval, id);\n  }, delay);\n  intervals.set(id, _timeout);\n  return id;\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval(id) {\n  var _timeout = intervals.get(id);\n  if (_timeout) {\n    clearTimeout(_timeout);\n    intervals.delete(id);\n  }\n}\nmodule.exports = {\n  setDelayedInterval: setDelayedInterval,\n  clearDelayedInterval: clearDelayedInterval\n};","map":{"version":3,"names":["_regeneratorRuntime","require","default","_asyncToGenerator","intervals","Map","_generateId","concat","Date","now","Math","floor","random","_runPeriodically","_x","_x2","_x3","_runPeriodically2","apply","arguments","mark","_callee","task","interval","id","_loop","_ret","wrap","_callee$","_context2","prev","next","_loop$","_context","t0","setTimeout","abrupt","get","Promise","resolve","_timeout","set","stop","delegateYield","setDelayedInterval","delay","clearDelayedInterval","clearTimeout","delete","module","exports"],"sources":["/Users/apple/Documents/treasure/node_modules/set-delayed-interval/src/index.js"],"sourcesContent":["'use strict'\n\nconst intervals = new Map()\n\nconst _generateId = () => `${Date.now()}:${Math.floor(Math.random() * 1000000)}`\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nasync function _runPeriodically (task, interval, id) {\n  while (intervals.get(id)) {\n    try {\n      await task()\n    } catch (err) {\n      // Throw global context error if handler throws\n      setTimeout(() => { throw err }, 1)\n      break\n    }\n\n    if (!intervals.get(id)) {\n      break\n    }\n\n    await new Promise(resolve => {\n      const _timeout = setTimeout(resolve, interval)\n\n      intervals.set(id, _timeout)\n    })\n  }\n}\n\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction setDelayedInterval (task, interval, delay) {\n  delay = delay || interval\n\n  const id = _generateId()\n  const _timeout = setTimeout(() => {\n    _runPeriodically(task, interval, id)\n  }, delay)\n\n  intervals.set(id, _timeout)\n\n  return id\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval (id) {\n  const _timeout = intervals.get(id)\n\n  if (_timeout) {\n    clearTimeout(_timeout)\n    intervals.delete(id)\n  }\n}\n\nmodule.exports = {\n  setDelayedInterval,\n  clearDelayedInterval\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}