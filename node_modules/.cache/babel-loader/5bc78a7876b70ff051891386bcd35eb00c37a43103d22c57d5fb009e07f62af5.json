{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { unsigned } from 'uint8-varint';\nimport { allocUnsafe } from './alloc.js';\nvar defaultEncoder = function defaultEncoder(length) {\n  var lengthLength = unsigned.encodingLength(length);\n  var lengthBuf = allocUnsafe(lengthLength);\n  unsigned.encode(length, lengthBuf);\n  defaultEncoder.bytes = lengthLength;\n  return lengthBuf;\n};\ndefaultEncoder.bytes = 0;\nexport function encode(options) {\n  var _options, _options$lengthEncode;\n  options = (_options = options) !== null && _options !== void 0 ? _options : {};\n  var encodeLength = (_options$lengthEncode = options.lengthEncoder) !== null && _options$lengthEncode !== void 0 ? _options$lengthEncode : defaultEncoder;\n  var encoder = /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n      var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk, length;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(source);\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n          case 6:\n            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n              _context.next = 24;\n              break;\n            }\n            chunk = _step.value;\n            // length + data\n            length = encodeLength(chunk.byteLength); // yield only Uint8Arrays\n            if (!(length instanceof Uint8Array)) {\n              _context.next = 14;\n              break;\n            }\n            _context.next = 12;\n            return length;\n          case 12:\n            _context.next = 15;\n            break;\n          case 14:\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(length), _awaitAsyncGenerator), \"t0\", 15);\n          case 15:\n            if (!(chunk instanceof Uint8Array)) {\n              _context.next = 20;\n              break;\n            }\n            _context.next = 18;\n            return chunk;\n          case 18:\n            _context.next = 21;\n            break;\n          case 20:\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(chunk), _awaitAsyncGenerator), \"t1\", 21);\n          case 21:\n            _iteratorAbruptCompletion = false;\n            _context.next = 4;\n            break;\n          case 24:\n            _context.next = 30;\n            break;\n          case 26:\n            _context.prev = 26;\n            _context.t2 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t2;\n          case 30:\n            _context.prev = 30;\n            _context.prev = 31;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context.next = 35;\n              break;\n            }\n            _context.next = 35;\n            return _awaitAsyncGenerator(_iterator.return());\n          case 35:\n            _context.prev = 35;\n            if (!_didIteratorError) {\n              _context.next = 38;\n              break;\n            }\n            throw _iteratorError;\n          case 38:\n            return _context.finish(35);\n          case 39:\n            return _context.finish(30);\n          case 40:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 26, 30, 40], [31,, 35, 39]]);\n    }));\n    return function encoder(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return encoder;\n}\nencode.single = function (chunk, options) {\n  var _options2, _options$lengthEncode2;\n  options = (_options2 = options) !== null && _options2 !== void 0 ? _options2 : {};\n  var encodeLength = (_options$lengthEncode2 = options.lengthEncoder) !== null && _options$lengthEncode2 !== void 0 ? _options$lengthEncode2 : defaultEncoder;\n  return new Uint8ArrayList(encodeLength(chunk.byteLength), chunk);\n};","map":{"version":3,"names":["Uint8ArrayList","unsigned","allocUnsafe","defaultEncoder","length","lengthLength","encodingLength","lengthBuf","encode","bytes","options","_options","_options$lengthEncode","encodeLength","lengthEncoder","encoder","_ref","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","source","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","wrap","_callee$","_context","prev","next","_asyncIterator","_awaitAsyncGenerator","sent","done","value","byteLength","Uint8Array","delegateYield","_asyncGeneratorDelegate","t2","return","finish","stop","_x","apply","arguments","single","_options2","_options$lengthEncode2"],"sources":["/Users/apple/Documents/treasure/node_modules/it-length-prefixed/src/encode.ts"],"sourcesContent":["import { Uint8ArrayList } from 'uint8arraylist'\nimport { unsigned } from 'uint8-varint'\nimport type { LengthEncoderFunction } from './index.js'\nimport type { Source, Transform } from 'it-stream-types'\nimport { allocUnsafe } from './alloc.js'\n\ninterface EncoderOptions {\n  lengthEncoder?: LengthEncoderFunction\n}\n\nconst defaultEncoder: LengthEncoderFunction = (length) => {\n  const lengthLength = unsigned.encodingLength(length)\n  const lengthBuf = allocUnsafe(lengthLength)\n\n  unsigned.encode(length, lengthBuf)\n\n  defaultEncoder.bytes = lengthLength\n\n  return lengthBuf\n}\ndefaultEncoder.bytes = 0\n\nexport function encode (options?: EncoderOptions): Transform<Uint8ArrayList | Uint8Array, Uint8Array> {\n  options = options ?? {}\n\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n\n  const encoder = async function * (source: Source<Uint8ArrayList | Uint8Array>): Source<Uint8Array> {\n    for await (const chunk of source) {\n      // length + data\n      const length = encodeLength(chunk.byteLength)\n\n      // yield only Uint8Arrays\n      if (length instanceof Uint8Array) {\n        yield length\n      } else {\n        yield * length\n      }\n\n      // yield only Uint8Arrays\n      if (chunk instanceof Uint8Array) {\n        yield chunk\n      } else {\n        yield * chunk\n      }\n    }\n  }\n\n  return encoder\n}\n\nencode.single = (chunk: Uint8ArrayList | Uint8Array, options?: EncoderOptions) => {\n  options = options ?? {}\n  const encodeLength = options.lengthEncoder ?? defaultEncoder\n\n  return new Uint8ArrayList(\n    encodeLength(chunk.byteLength),\n    chunk\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}