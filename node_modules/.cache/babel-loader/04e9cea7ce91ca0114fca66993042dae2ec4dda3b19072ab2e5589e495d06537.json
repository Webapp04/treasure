{"ast":null,"code":"// @ts-check\n\nimport { coerce } from '../bytes.js';\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport var name = 'raw';\nexport var code = 0x55;\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport var encode = function encode(node) {\n  return coerce(node);\n};\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport var decode = function decode(data) {\n  return coerce(data);\n};","map":{"version":3,"names":["coerce","name","code","encode","node","decode","data"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/peer-id-factory/node_modules/uint8arrays/node_modules/multiformats/src/codecs/raw.js"],"sourcesContent":["// @ts-check\n\nimport { coerce } from '../bytes.js'\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nexport const name = 'raw'\nexport const code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nexport const encode = (node) => coerce(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nexport const decode = (data) => coerce(data)\n"],"mappings":"AAAA;;AAEA,SAASA,MAAM,QAAQ,aAAa;;AAEpC;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,IAAI,GAAG,KAAK;AACzB,OAAO,IAAMC,IAAI,GAAG,IAAI;;AAExB;AACA;AACA;AACA;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,IAAI;EAAA,OAAKJ,MAAM,CAACI,IAAI,CAAC;AAAA;;AAE5C;AACA;AACA;AACA;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,IAAI;EAAA,OAAKN,MAAM,CAACM,IAAI,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}