{"ast":null,"code":"import _defineProperty from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { exporter } from 'ipfs-unixfs-exporter';\nimport mergeOpts from 'merge-options';\nimport { toMfsPath } from './utils/to-mfs-path.js';\nimport errCode from 'err-code';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nvar mergeOptions = mergeOpts.bind({\n  ignoreUndefined: true\n});\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nvar defaultOptions = {\n  offset: 0,\n  length: Infinity\n};\n\n/**\n * @param {MfsContext} context\n */\nexport function createRead(context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"read\"]}\n   */\n  function mfsRead(path) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options);\n    return _defineProperty({}, Symbol.asyncIterator, function () {\n      var _read = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var mfsPath, result, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, buf;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _awaitAsyncGenerator(toMfsPath(context, path, options));\n            case 2:\n              mfsPath = _context.sent;\n              _context.next = 5;\n              return _awaitAsyncGenerator(exporter(mfsPath.mfsPath, context.repo.blocks));\n            case 5:\n              result = _context.sent;\n              if (!(result.type !== 'file')) {\n                _context.next = 8;\n                break;\n              }\n              throw errCode(new Error(\"\".concat(path, \" was not a file\")), 'ERR_NOT_FILE');\n            case 8:\n              if (result.content) {\n                _context.next = 10;\n                break;\n              }\n              throw errCode(new Error(\"Could not load content stream from \".concat(path)), 'ERR_NO_CONTENT');\n            case 10:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 12;\n              _iterator = _asyncIterator(result.content({\n                offset: options.offset,\n                length: options.length\n              }));\n            case 14:\n              _context.next = 16;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 16:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 23;\n                break;\n              }\n              buf = _step.value;\n              _context.next = 20;\n              return buf;\n            case 20:\n              _iteratorAbruptCompletion = false;\n              _context.next = 14;\n              break;\n            case 23:\n              _context.next = 29;\n              break;\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](12);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 29:\n              _context.prev = 29;\n              _context.prev = 30;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 34;\n                break;\n              }\n              _context.next = 34;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 34:\n              _context.prev = 34;\n              if (!_didIteratorError) {\n                _context.next = 37;\n                break;\n              }\n              throw _iteratorError;\n            case 37:\n              return _context.finish(34);\n            case 38:\n              return _context.finish(29);\n            case 39:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[12, 25, 29, 39], [30,, 34, 38]]);\n      }));\n      function read() {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }());\n  }\n  return withTimeoutOption(mfsRead);\n}","map":{"version":3,"names":["exporter","mergeOpts","toMfsPath","errCode","withTimeoutOption","mergeOptions","bind","ignoreUndefined","defaultOptions","offset","length","Infinity","createRead","context","mfsRead","path","options","arguments","undefined","_defineProperty","Symbol","asyncIterator","_read","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","mfsPath","result","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","buf","wrap","_callee$","_context","prev","next","_awaitAsyncGenerator","sent","repo","blocks","type","Error","concat","content","_asyncIterator","done","value","t0","return","finish","stop","read","apply"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/files/read.js"],"sourcesContent":["import { exporter } from 'ipfs-unixfs-exporter'\nimport mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  offset: 0,\n  length: Infinity\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createRead (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"read\"]}\n   */\n  function mfsRead (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    return {\n      [Symbol.asyncIterator]: async function * read () {\n        const mfsPath = await toMfsPath(context, path, options)\n        const result = await exporter(mfsPath.mfsPath, context.repo.blocks)\n\n        if (result.type !== 'file') {\n          throw errCode(new Error(`${path} was not a file`), 'ERR_NOT_FILE')\n        }\n\n        if (!result.content) {\n          throw errCode(new Error(`Could not load content stream from ${path}`), 'ERR_NO_CONTENT')\n        }\n\n        for await (const buf of result.content({\n          offset: options.offset,\n          length: options.length\n        })) {\n          yield buf\n        }\n      }\n    }\n  }\n\n  return withTimeoutOption(mfsRead)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}