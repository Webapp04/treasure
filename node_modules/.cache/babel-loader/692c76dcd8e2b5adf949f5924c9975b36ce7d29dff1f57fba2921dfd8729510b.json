{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import useHandleModal from\"../../../hooks/dom/useHandleModal\";import useHandleTresrStaking from\"../../../hooks/blockchain/useHandleTresrStaking\";import OnStakeTRESRModal from\"../DashboardModals/OnStakeTRESRModal\";import OnUnstakeTRESRModal from\"../DashboardModals/OnUnstakeTRESRModal\";import{formatterUS}from\"../../../utils\";import{APPROVE_STAKING_TRESR}from\"../../../constant/approveLoadingModal\";import ApproveLoadingModal from\"../../common/Modals/ApproveLoadingModal\";import useHandleRewards from\"hooks/blockchain/useHandleRewards\";import{useDispatch,useSelector}from\"react-redux\";import ACTIONS from\"redux/action\";import{selectTotalEarnedBalance,selectTresrBalance,selectTresrStakedBalance,selectTresrStakedAllBalance}from\"redux/slice/balanceSlice\";import{selectTheme}from\"redux/slice/themeSlice\";import{selectUser}from\"redux/slice/userSlice\";import{selectTresrRewardsPerSec}from\"redux/slice/rewardSlice\";import VotingCard from\"storybook/molecule/VotingCard/votingCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DashboardVotingEscrow(_ref){var onUnstakeTresr=_ref.onUnstakeTresr,onConnectWallet=_ref.onConnectWallet,onclaimVeTresr=_ref.onclaimVeTresr;var theme=useSelector(selectTheme);var user=useSelector(selectUser);var totalEarnedBalance=useSelector(selectTotalEarnedBalance);var tresrStakedBalance=useSelector(selectTresrStakedBalance);var claimableTresrRewardsPerSec=useSelector(selectTresrRewardsPerSec);var tresrBalance=useSelector(selectTresrBalance);var tresrStakedAllBalance=useSelector(selectTresrStakedAllBalance);var dispatch=useDispatch();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),stake=_useState2[0],setStake=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),unstake=_useState4[0],setUnstake=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),stakedAll=_useState6[0],setStakedAll=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),timerID=_useState8[0],setTimerID=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),veTresrBalance=_useState10[0],setVeTresrBalance=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),veClaimedTresr=_useState12[0],setVeClaimedTresr=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isApproved=_useState14[0],setIsApproved=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),balanceVeTresrPerHour=_useState16[0],setbalanceVeTresrPerHour=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),balanceMaxAvailable=_useState18[0],setbalanceMaxAvailable=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),balanceEstDaysToMax=_useState20[0],setbalanceEstDaysToMax=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),flag=_useState22[0],setFlag=_useState22[1];var isDark=theme===\"dark\";var handleStakeModal=useHandleModal();var handleUnstakeModal=useHandleModal();var handleTresrStaking=useHandleTresrStaking();var handleRewards=useHandleRewards();var handleApproveStakingTresrModal=useHandleModal();var balanceTotalEarned=formatterUS(+totalEarnedBalance);var balanceTresrStaked=formatterUS(tresrStakedBalance);var balanceEstDailyVeTRESR=formatterUS(claimableTresrRewardsPerSec*60*60*24);var onChangeStake=function onChangeStake(event){var _event$target,_event$target2;return!isNaN(event===null||event===void 0?void 0:(_event$target=event.target)===null||_event$target===void 0?void 0:_event$target.value)&&setStake(event===null||event===void 0?void 0:(_event$target2=event.target)===null||_event$target2===void 0?void 0:_event$target2.value);};var onChangeUnstake=function onChangeUnstake(event){var _event$target3,_event$target4;return!isNaN(event===null||event===void 0?void 0:(_event$target3=event.target)===null||_event$target3===void 0?void 0:_event$target3.value)&&setUnstake(event===null||event===void 0?void 0:(_event$target4=event.target)===null||_event$target4===void 0?void 0:_event$target4.value);};var onApproveTresr=function onApproveTresr(){handleStakeModal.close();handleApproveStakingTresrModal.open();handleTresrStaking.approveTRESR(stake).then(function(){return setIsApproved(true);}).catch(function(){setIsApproved(false);handleApproveStakingTresrModal.close();return null;});};var onStakeClose=function onStakeClose(){handleStakeModal.close();setStake(\"\");};var onUnstakeClose=function onUnstakeClose(){handleUnstakeModal.close();setUnstake(\"\");};var onStake=function onStake(){onStakeClose();handleTresrStaking.stakeTresr(stake).finally(function(){handleTresrStaking.getTresrStaked().then(function(res){return setStakedAll(formatterUS(res));});handleTresrStaking.getTresrTotalStaked();handleApproveStakingTresrModal.close();setIsApproved(false);});};var onUnstake=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:onUnstakeClose();_context.next=3;return onUnstakeTresr(unstake);case 3:handleTresrStaking.getTresrStaked().then(function(res){return setStakedAll(formatterUS(res));});handleTresrStaking.getTresrTotalStaked();case 5:case\"end\":return _context.stop();}},_callee);}));return function onUnstake(){return _ref2.apply(this,arguments);};}();var onClickStake=function onClickStake(){if(!(user!==null&&user!==void 0&&user.wallet_id))return onConnectWallet();handleStakeModal.open();};var onClickUnStake=function onClickUnStake(){if(!(user!==null&&user!==void 0&&user.wallet_id))return onConnectWallet();handleUnstakeModal.open();};var onCloseApproveStakingTresrModal=function onCloseApproveStakingTresrModal(){handleApproveStakingTresrModal.close();setIsApproved(false);};useEffect(function(){if(!(user!==null&&user!==void 0&&user.wallet_id))return;handleRewards.getRewardDashboardInfo(user===null||user===void 0?void 0:user.wallet_id).then(function(res){ACTIONS.SET_TRESR_REWARDS_PER_SEC(dispatch,res[0]);ACTIONS.SET_BALANCE_TOTAL_EARNED(dispatch,res[1]);// pendingVeTresr\nACTIONS.SET_BALANCE_TRESR_STAKED(dispatch,res[2]);setbalanceVeTresrPerHour(res[3]);setbalanceMaxAvailable(res[4]);setbalanceEstDaysToMax(res[5]);});handleTresrStaking.getTresrRewardsPerSec();// handleTresrStaking.getTotalEarned();\nhandleTresrStaking.getTresrStaked().then(function(res){return setStakedAll(formatterUS(res));});handleTresrStaking.getTresrTotalStaked();handleRewards.getVeTresrPerHour().then(function(res){setbalanceVeTresrPerHour(res);});handleRewards.getMaxVeTresr().then(function(res){return setbalanceMaxAvailable(res);});handleRewards.getDaysToMax().then(function(res){return setbalanceEstDaysToMax(res);});},[]);// eslint-disable-line react-hooks/exhaustive-deps\nuseEffect(function(){setVeTresrBalance(+totalEarnedBalance);clearInterval(timerID);setFlag(true);Promise.all([handleRewards.getPendingVeTresr(),handleRewards.getClaimedVeTresr()]).then(function(res){setVeTresrBalance(res[0]);setVeClaimedTresr(res[1]);setFlag(false);});// const timer = setInterval(() => {\n//   handleRewards.getPendingVeTresr().then((res) => setVeTresrBalance(res));\n//   handleRewards.getClaimedVeTresr().then((res) => setVeClaimedTresr(res));\n//   setFlag(false);\n// }, 1000);\n// setTimerID(timer);\nreturn function(){return clearInterval(timerID);};},[totalEarnedBalance,claimableTresrRewardsPerSec]);// eslint-disable-line react-hooks/exhaustive-deps\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(VotingCard,{flag:flag,isDark:isDark,onClickStake:onClickStake,onClickUnStake:onClickUnStake,stakedAll:stakedAll,tresrBalance:tresrBalance,tresrStakedAllBalance:tresrStakedAllBalance,balanceEstDailyVeTRESR:balanceEstDailyVeTRESR,onclaimVeTresr:onclaimVeTresr,veTresrBalance:veTresrBalance,veClaimedTresr:veClaimedTresr,balanceVeTresrPerHour:balanceVeTresrPerHour,balanceMaxAvailable:balanceMaxAvailable,balanceEstDaysToMax:balanceEstDaysToMax}),handleStakeModal.isActive&&/*#__PURE__*/_jsx(OnStakeTRESRModal,{isOpen:handleStakeModal.isActive,onClose:onStakeClose,onChangeStake:onChangeStake,onStake:onApproveTresr,onStakeClose:onStakeClose,stake:stake,setStake:setStake,balance:tresrBalance,title:\"Stake $TRESR\",description:\"Are you sure to stake this token? This action cannot be undone.\",placeholder:\"0.000 TRESR\"}),handleUnstakeModal.isActive&&/*#__PURE__*/_jsx(OnUnstakeTRESRModal,{onClose:onUnstakeClose,isOpen:handleUnstakeModal.isActive,onChangeUnstake:onChangeUnstake,onUnstake:onUnstake,onUnstakeClose:onUnstakeClose,unstake:unstake,setUnstake:setUnstake,balance:tresrStakedBalance,title:\"Unstake $TRESR\",description:\"By confirming this tx, your veTRESR will go to zero\",placeholder:\"0.000 TRESR\",marginTop:60}),handleApproveStakingTresrModal.isActive&&/*#__PURE__*/_jsx(ApproveLoadingModal,{isOpen:handleApproveStakingTresrModal.isActive,status:APPROVE_STAKING_TRESR,isApproved:isApproved,onClose:onCloseApproveStakingTresrModal,onNextStep:onStake})]});}","map":{"version":3,"names":["React","useEffect","useState","useHandleModal","useHandleTresrStaking","OnStakeTRESRModal","OnUnstakeTRESRModal","formatterUS","APPROVE_STAKING_TRESR","ApproveLoadingModal","useHandleRewards","useDispatch","useSelector","ACTIONS","selectTotalEarnedBalance","selectTresrBalance","selectTresrStakedBalance","selectTresrStakedAllBalance","selectTheme","selectUser","selectTresrRewardsPerSec","VotingCard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DashboardVotingEscrow","_ref","onUnstakeTresr","onConnectWallet","onclaimVeTresr","theme","user","totalEarnedBalance","tresrStakedBalance","claimableTresrRewardsPerSec","tresrBalance","tresrStakedAllBalance","dispatch","_useState","_useState2","_slicedToArray","stake","setStake","_useState3","_useState4","unstake","setUnstake","_useState5","_useState6","stakedAll","setStakedAll","_useState7","_useState8","timerID","setTimerID","_useState9","_useState10","veTresrBalance","setVeTresrBalance","_useState11","_useState12","veClaimedTresr","setVeClaimedTresr","_useState13","_useState14","isApproved","setIsApproved","_useState15","_useState16","balanceVeTresrPerHour","setbalanceVeTresrPerHour","_useState17","_useState18","balanceMaxAvailable","setbalanceMaxAvailable","_useState19","_useState20","balanceEstDaysToMax","setbalanceEstDaysToMax","_useState21","_useState22","flag","setFlag","isDark","handleStakeModal","handleUnstakeModal","handleTresrStaking","handleRewards","handleApproveStakingTresrModal","balanceTotalEarned","balanceTresrStaked","balanceEstDailyVeTRESR","onChangeStake","event","_event$target","_event$target2","isNaN","target","value","onChangeUnstake","_event$target3","_event$target4","onApproveTresr","close","open","approveTRESR","then","catch","onStakeClose","onUnstakeClose","onStake","stakeTresr","finally","getTresrStaked","res","getTresrTotalStaked","onUnstake","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","apply","arguments","onClickStake","wallet_id","onClickUnStake","onCloseApproveStakingTresrModal","getRewardDashboardInfo","SET_TRESR_REWARDS_PER_SEC","SET_BALANCE_TOTAL_EARNED","SET_BALANCE_TRESR_STAKED","getTresrRewardsPerSec","getVeTresrPerHour","getMaxVeTresr","getDaysToMax","clearInterval","Promise","all","getPendingVeTresr","getClaimedVeTresr","children","isActive","isOpen","onClose","balance","title","description","placeholder","marginTop","status","onNextStep"],"sources":["/Users/apple/Documents/treasure/src/components/Dashboard/DashboardVotingEscrow/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useHandleModal from \"../../../hooks/dom/useHandleModal\";\nimport useHandleTresrStaking from \"../../../hooks/blockchain/useHandleTresrStaking\";\nimport OnStakeTRESRModal from \"../DashboardModals/OnStakeTRESRModal\";\nimport OnUnstakeTRESRModal from \"../DashboardModals/OnUnstakeTRESRModal\";\nimport { formatterUS } from \"../../../utils\";\nimport { APPROVE_STAKING_TRESR } from \"../../../constant/approveLoadingModal\";\nimport ApproveLoadingModal from \"../../common/Modals/ApproveLoadingModal\";\nimport useHandleRewards from \"hooks/blockchain/useHandleRewards\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport {\n  selectTotalEarnedBalance,\n  selectTresrBalance,\n  selectTresrStakedBalance,\n  selectTresrStakedAllBalance,\n} from \"redux/slice/balanceSlice\";\nimport { selectTheme } from \"redux/slice/themeSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\nimport { selectTresrRewardsPerSec } from \"redux/slice/rewardSlice\";\nimport VotingCard from \"storybook/molecule/VotingCard/votingCard\";\n\nexport default function DashboardVotingEscrow({\n  onUnstakeTresr,\n  onConnectWallet,\n  onclaimVeTresr,\n}) {\n  const theme = useSelector(selectTheme);\n  const user = useSelector(selectUser);\n  const totalEarnedBalance = useSelector(selectTotalEarnedBalance);\n  const tresrStakedBalance = useSelector(selectTresrStakedBalance);\n  const claimableTresrRewardsPerSec = useSelector(selectTresrRewardsPerSec);\n  const tresrBalance = useSelector(selectTresrBalance);\n  const tresrStakedAllBalance = useSelector(selectTresrStakedAllBalance);\n  const dispatch = useDispatch();\n\n  const [stake, setStake] = useState(\"\");\n  const [unstake, setUnstake] = useState(\"\");\n  const [stakedAll, setStakedAll] = useState(0);\n  const [timerID, setTimerID] = useState(0);\n  const [veTresrBalance, setVeTresrBalance] = useState(0);\n  const [veClaimedTresr, setVeClaimedTresr] = useState(0);\n  const [isApproved, setIsApproved] = useState(false);\n  const [balanceVeTresrPerHour, setbalanceVeTresrPerHour] = useState(0);\n  const [balanceMaxAvailable, setbalanceMaxAvailable] = useState(0);\n  const [balanceEstDaysToMax, setbalanceEstDaysToMax] = useState(0);\n  const [flag, setFlag] = useState(false);\n\n  const isDark = theme === \"dark\";\n\n  const handleStakeModal = useHandleModal();\n  const handleUnstakeModal = useHandleModal();\n  const handleTresrStaking = useHandleTresrStaking();\n  const handleRewards = useHandleRewards();\n  const handleApproveStakingTresrModal = useHandleModal();\n\n  const balanceTotalEarned = formatterUS(+totalEarnedBalance);\n  const balanceTresrStaked = formatterUS(tresrStakedBalance);\n  const balanceEstDailyVeTRESR = formatterUS(\n    claimableTresrRewardsPerSec * 60 * 60 * 24\n  );\n\n  const onChangeStake = (event) =>\n    !isNaN(event?.target?.value) && setStake(event?.target?.value);\n  const onChangeUnstake = (event) =>\n    !isNaN(event?.target?.value) && setUnstake(event?.target?.value);\n\n  const onApproveTresr = () => {\n    handleStakeModal.close();\n    handleApproveStakingTresrModal.open();\n\n    handleTresrStaking\n      .approveTRESR(stake)\n      .then(() => setIsApproved(true))\n      .catch(() => {\n        setIsApproved(false);\n        handleApproveStakingTresrModal.close();\n        return null;\n      });\n  };\n\n  const onStakeClose = () => {\n    handleStakeModal.close();\n    setStake(\"\");\n  };\n  const onUnstakeClose = () => {\n    handleUnstakeModal.close();\n    setUnstake(\"\");\n  };\n  const onStake = () => {\n    onStakeClose();\n    handleTresrStaking.stakeTresr(stake).finally(() => {\n      handleTresrStaking\n        .getTresrStaked()\n        .then((res) => setStakedAll(formatterUS(res)));\n      handleTresrStaking.getTresrTotalStaked();\n      handleApproveStakingTresrModal.close();\n      setIsApproved(false);\n    });\n  };\n  const onUnstake = async () => {\n    onUnstakeClose();\n    await onUnstakeTresr(unstake);\n    handleTresrStaking\n      .getTresrStaked()\n      .then((res) => setStakedAll(formatterUS(res)));\n    handleTresrStaking.getTresrTotalStaked();\n  };\n\n  const onClickStake = () => {\n    if (!user?.wallet_id) return onConnectWallet();\n\n    handleStakeModal.open();\n  };\n\n  const onClickUnStake = () => {\n    if (!user?.wallet_id) return onConnectWallet();\n\n    handleUnstakeModal.open();\n  };\n\n  const onCloseApproveStakingTresrModal = () => {\n    handleApproveStakingTresrModal.close();\n    setIsApproved(false);\n  };\n\n  useEffect(() => {\n    if (!user?.wallet_id) return;\n    handleRewards.getRewardDashboardInfo(user?.wallet_id).then((res) => {\n      ACTIONS.SET_TRESR_REWARDS_PER_SEC(dispatch, res[0]);\n      ACTIONS.SET_BALANCE_TOTAL_EARNED(dispatch, res[1]); // pendingVeTresr\n      ACTIONS.SET_BALANCE_TRESR_STAKED(dispatch, res[2]);\n      setbalanceVeTresrPerHour(res[3]);\n      setbalanceMaxAvailable(res[4]);\n      setbalanceEstDaysToMax(res[5]);\n    });\n\n    handleTresrStaking.getTresrRewardsPerSec();\n    // handleTresrStaking.getTotalEarned();\n    handleTresrStaking\n      .getTresrStaked()\n      .then((res) => setStakedAll(formatterUS(res)));\n    handleTresrStaking.getTresrTotalStaked();\n    handleRewards.getVeTresrPerHour().then((res) => {\n      setbalanceVeTresrPerHour(res);\n    });\n    handleRewards.getMaxVeTresr().then((res) => setbalanceMaxAvailable(res));\n    handleRewards.getDaysToMax().then((res) => setbalanceEstDaysToMax(res));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setVeTresrBalance(+totalEarnedBalance);\n    clearInterval(timerID);\n    setFlag(true);\n    Promise.all([\n      handleRewards.getPendingVeTresr(),\n      handleRewards.getClaimedVeTresr(),\n    ]).then((res) => {\n      setVeTresrBalance(res[0]);\n      setVeClaimedTresr(res[1]);\n      setFlag(false);\n    });\n    // const timer = setInterval(() => {\n    //   handleRewards.getPendingVeTresr().then((res) => setVeTresrBalance(res));\n    //   handleRewards.getClaimedVeTresr().then((res) => setVeClaimedTresr(res));\n    //   setFlag(false);\n    // }, 1000);\n    // setTimerID(timer);\n\n    return () => clearInterval(timerID);\n  }, [totalEarnedBalance, claimableTresrRewardsPerSec]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <VotingCard\n        flag={flag}\n        isDark={isDark}\n        onClickStake={onClickStake}\n        onClickUnStake={onClickUnStake}\n        stakedAll={stakedAll}\n        tresrBalance={tresrBalance}\n        tresrStakedAllBalance={tresrStakedAllBalance}\n        balanceEstDailyVeTRESR={balanceEstDailyVeTRESR}\n        onclaimVeTresr={onclaimVeTresr}\n        veTresrBalance={veTresrBalance}\n        veClaimedTresr={veClaimedTresr}\n        balanceVeTresrPerHour={balanceVeTresrPerHour}\n        balanceMaxAvailable={balanceMaxAvailable}\n        balanceEstDaysToMax={balanceEstDaysToMax}\n      />\n      {handleStakeModal.isActive && (\n        <OnStakeTRESRModal\n          isOpen={handleStakeModal.isActive}\n          onClose={onStakeClose}\n          onChangeStake={onChangeStake}\n          onStake={onApproveTresr}\n          onStakeClose={onStakeClose}\n          stake={stake}\n          setStake={setStake}\n          balance={tresrBalance}\n          title=\"Stake $TRESR\"\n          description=\"Are you sure to stake this token? This action cannot be undone.\"\n          placeholder=\"0.000 TRESR\"\n        />\n      )}\n      {handleUnstakeModal.isActive && (\n        <OnUnstakeTRESRModal\n          onClose={onUnstakeClose}\n          isOpen={handleUnstakeModal.isActive}\n          onChangeUnstake={onChangeUnstake}\n          onUnstake={onUnstake}\n          onUnstakeClose={onUnstakeClose}\n          unstake={unstake}\n          setUnstake={setUnstake}\n          balance={tresrStakedBalance}\n          title=\"Unstake $TRESR\"\n          description=\"By confirming this tx, your veTRESR will go to zero\"\n          placeholder=\"0.000 TRESR\"\n          marginTop={60}\n        />\n      )}\n      {handleApproveStakingTresrModal.isActive && (\n        <ApproveLoadingModal\n          isOpen={handleApproveStakingTresrModal.isActive}\n          status={APPROVE_STAKING_TRESR}\n          isApproved={isApproved}\n          onClose={onCloseApproveStakingTresrModal}\n          onNextStep={onStake}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}