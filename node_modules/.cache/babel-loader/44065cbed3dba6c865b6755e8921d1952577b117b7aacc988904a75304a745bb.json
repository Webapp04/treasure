{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { nanoid } from 'nanoid';\nimport { WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK } from './constants.js';\nimport observer from 'observable-webworkers';\nvar handleWorkerLockRequest = function handleWorkerLockRequest(emitter, masterEvent, requestType, releaseType, grantType) {\n  return function (worker, event) {\n    if (event.data.type !== requestType) {\n      return;\n    }\n    var requestEvent = {\n      type: event.data.type,\n      name: event.data.name,\n      identifier: event.data.identifier\n    };\n    emitter.dispatchEvent(new MessageEvent(masterEvent, {\n      data: {\n        name: requestEvent.name,\n        handler: function () {\n          var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  // grant lock to worker\n                  worker.postMessage({\n                    type: grantType,\n                    name: requestEvent.name,\n                    identifier: requestEvent.identifier\n                  });\n                  // wait for worker to finish\n                  _context.next = 3;\n                  return new Promise(function (resolve) {\n                    var releaseEventListener = function releaseEventListener(event) {\n                      if (event == null || event.data == null) {\n                        return;\n                      }\n                      var releaseEvent = {\n                        type: event.data.type,\n                        name: event.data.name,\n                        identifier: event.data.identifier\n                      };\n                      if (releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n                        worker.removeEventListener('message', releaseEventListener);\n                        resolve();\n                      }\n                    };\n                    worker.addEventListener('message', releaseEventListener);\n                  });\n                case 3:\n                  return _context.abrupt(\"return\", _context.sent);\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          function handler() {\n            return _handler.apply(this, arguments);\n          }\n          return handler;\n        }()\n      }\n    }));\n  };\n};\nvar makeWorkerLockRequest = function makeWorkerLockRequest(name, requestType, grantType, releaseType) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var id;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          id = nanoid();\n          globalThis.postMessage({\n            type: requestType,\n            identifier: id,\n            name: name\n          });\n          _context2.next = 4;\n          return new Promise(function (resolve) {\n            var listener = function listener(event) {\n              if (event == null || event.data == null) {\n                return;\n              }\n              var responseEvent = {\n                type: event.data.type,\n                identifier: event.data.identifier\n              };\n              if (responseEvent.type === grantType && responseEvent.identifier === id) {\n                globalThis.removeEventListener('message', listener);\n                // grant lock\n                resolve(function () {\n                  // release lock\n                  globalThis.postMessage({\n                    type: releaseType,\n                    identifier: id,\n                    name: name\n                  });\n                });\n              }\n            };\n            globalThis.addEventListener('message', listener);\n          });\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n};\nvar defaultOptions = {\n  singleProcess: false\n};\nexport default (function (options) {\n  options = Object.assign({}, defaultOptions, options);\n  var isPrimary = Boolean(globalThis.document) || options.singleProcess;\n  if (isPrimary) {\n    var emitter = new EventTarget();\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK));\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK));\n    return emitter;\n  }\n  return {\n    isWorker: true,\n    readLock: function readLock(name) {\n      return makeWorkerLockRequest(name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK);\n    },\n    writeLock: function writeLock(name) {\n      return makeWorkerLockRequest(name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK);\n    }\n  };\n});","map":{"version":3,"names":["nanoid","WORKER_REQUEST_READ_LOCK","WORKER_RELEASE_READ_LOCK","MASTER_GRANT_READ_LOCK","WORKER_REQUEST_WRITE_LOCK","WORKER_RELEASE_WRITE_LOCK","MASTER_GRANT_WRITE_LOCK","observer","handleWorkerLockRequest","emitter","masterEvent","requestType","releaseType","grantType","worker","event","data","type","requestEvent","name","identifier","dispatchEvent","MessageEvent","handler","_handler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","postMessage","Promise","resolve","releaseEventListener","releaseEvent","removeEventListener","addEventListener","abrupt","sent","stop","apply","arguments","makeWorkerLockRequest","_callee2","id","_callee2$","_context2","globalThis","listener","responseEvent","defaultOptions","singleProcess","options","Object","assign","isPrimary","Boolean","document","EventTarget","isWorker","readLock","writeLock"],"sources":["/Users/apple/Documents/treasure/node_modules/mortice/src/browser.ts"],"sourcesContent":["import { nanoid } from 'nanoid'\nimport {\n  WORKER_REQUEST_READ_LOCK,\n  WORKER_RELEASE_READ_LOCK,\n  MASTER_GRANT_READ_LOCK,\n  WORKER_REQUEST_WRITE_LOCK,\n  WORKER_RELEASE_WRITE_LOCK,\n  MASTER_GRANT_WRITE_LOCK\n} from './constants.js'\nimport observer from 'observable-webworkers'\nimport type { MorticeImplementation, MorticeOptions, Release } from './index.js'\n\nconst handleWorkerLockRequest = (emitter: EventTarget, masterEvent: string, requestType: string, releaseType: string, grantType: string) => {\n  return (worker: Worker, event: MessageEvent) => {\n    if (event.data.type !== requestType) {\n      return\n    }\n\n    const requestEvent = {\n      type: event.data.type,\n      name: event.data.name,\n      identifier: event.data.identifier\n    }\n\n    emitter.dispatchEvent(new MessageEvent(masterEvent, {\n      data: {\n        name: requestEvent.name,\n        handler: async (): Promise<void> => {\n          // grant lock to worker\n          worker.postMessage({\n            type: grantType,\n            name: requestEvent.name,\n            identifier: requestEvent.identifier\n          })\n\n          // wait for worker to finish\n          return await new Promise<void>((resolve) => {\n            const releaseEventListener = (event: MessageEvent) => {\n              if (event == null || event.data == null) {\n                return\n              }\n\n              const releaseEvent = {\n                type: event.data.type,\n                name: event.data.name,\n                identifier: event.data.identifier\n              }\n\n              if (releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n                worker.removeEventListener('message', releaseEventListener)\n                resolve()\n              }\n            }\n\n            worker.addEventListener('message', releaseEventListener)\n          })\n        }\n      }\n    }))\n  }\n}\n\nconst makeWorkerLockRequest = (name: string, requestType: string, grantType: string, releaseType: string) => {\n  return async () => {\n    const id = nanoid()\n\n    globalThis.postMessage({\n      type: requestType,\n      identifier: id,\n      name\n    })\n\n    return await new Promise<Release>((resolve) => {\n      const listener = (event: MessageEvent) => {\n        if (event == null || event.data == null) {\n          return\n        }\n\n        const responseEvent = {\n          type: event.data.type,\n          identifier: event.data.identifier\n        }\n\n        if (responseEvent.type === grantType && responseEvent.identifier === id) {\n          globalThis.removeEventListener('message', listener)\n\n          // grant lock\n          resolve(() => {\n            // release lock\n            globalThis.postMessage({\n              type: releaseType,\n              identifier: id,\n              name\n            })\n          })\n        }\n      }\n\n      globalThis.addEventListener('message', listener)\n    })\n  }\n}\n\nconst defaultOptions = {\n  singleProcess: false\n}\n\nexport default (options: Required<MorticeOptions>): MorticeImplementation | EventTarget => {\n  options = Object.assign({}, defaultOptions, options)\n  const isPrimary = Boolean(globalThis.document) || options.singleProcess\n\n  if (isPrimary) {\n    const emitter = new EventTarget()\n\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK))\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK))\n\n    return emitter\n  }\n\n  return {\n    isWorker: true,\n    readLock: (name) => makeWorkerLockRequest(name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n    writeLock: (name) => makeWorkerLockRequest(name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}