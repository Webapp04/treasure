{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { unmarshalPrivateKey } from '@libp2p/crypto/keys';\nimport { StrictSign, StrictNoSign } from '@libp2p/interface-pubsub';\nimport { PublishConfigType } from '../types.js';\n/**\n * Prepare a PublishConfig object from a PeerId.\n */\nexport function getPublishConfigFromPeerId(_x, _x2) {\n  return _getPublishConfigFromPeerId.apply(this, arguments);\n}\nfunction _getPublishConfigFromPeerId() {\n  _getPublishConfigFromPeerId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(signaturePolicy, peerId) {\n    var privateKey;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = signaturePolicy;\n          _context.next = _context.t0 === StrictSign ? 3 : _context.t0 === StrictNoSign ? 13 : 14;\n          break;\n        case 3:\n          if (peerId) {\n            _context.next = 5;\n            break;\n          }\n          throw Error('Must provide PeerId');\n        case 5:\n          if (!(peerId.privateKey == null)) {\n            _context.next = 7;\n            break;\n          }\n          throw Error('Cannot sign message, no private key present');\n        case 7:\n          if (!(peerId.publicKey == null)) {\n            _context.next = 9;\n            break;\n          }\n          throw Error('Cannot sign message, no public key present');\n        case 9:\n          _context.next = 11;\n          return unmarshalPrivateKey(peerId.privateKey);\n        case 11:\n          privateKey = _context.sent;\n          return _context.abrupt(\"return\", {\n            type: PublishConfigType.Signing,\n            author: peerId,\n            key: peerId.publicKey,\n            privateKey: privateKey\n          });\n        case 13:\n          return _context.abrupt(\"return\", {\n            type: PublishConfigType.Anonymous\n          });\n        case 14:\n          throw new Error(\"Unknown signature policy \\\"\".concat(signaturePolicy, \"\\\"\"));\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getPublishConfigFromPeerId.apply(this, arguments);\n}","map":{"version":3,"names":["unmarshalPrivateKey","StrictSign","StrictNoSign","PublishConfigType","getPublishConfigFromPeerId","_x","_x2","_getPublishConfigFromPeerId","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","signaturePolicy","peerId","privateKey","wrap","_callee$","_context","prev","next","t0","Error","publicKey","sent","abrupt","type","Signing","author","key","Anonymous","concat","stop"],"sources":["../../../src/utils/publishConfig.ts"],"sourcesContent":[null],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,UAAU,EAAEC,YAAY,QAAQ,0BAA0B;AAEnE,SAAwBC,iBAAiB,QAAQ,aAAa;AAE9D;;;AAGA,gBAAsBC,0BAA0BA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,2BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAqC/C,SAAAF,4BAAA;EAAAA,2BAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CArCM,SAAAC,QACLC,eAAwD,EACxDC,MAAe;IAAA,IAAAC,UAAA;IAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAG,EAAA,GAEPR,eAAe;UAAAK,QAAA,CAAAE,IAAA,GAAAF,QAAA,CAAAG,EAAA,KAChBrB,UAAU,OAAAkB,QAAA,CAAAG,EAAA,KAwBVpB,YAAY;UAAA;QAAA;UAAA,IAvBVa,MAAM;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACHE,KAAK,CAAC,qBAAqB,CAAC;QAAA;UAAA,MAGhCR,MAAM,CAACC,UAAU,IAAI,IAAI;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACrBE,KAAK,CAAC,6CAA6C,CAAC;QAAA;UAAA,MAGxDR,MAAM,CAACS,SAAS,IAAI,IAAI;YAAAL,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACpBE,KAAK,CAAC,4CAA4C,CAAC;QAAA;UAAAJ,QAAA,CAAAE,IAAA;UAAA,OAIlCrB,mBAAmB,CAACe,MAAM,CAACC,UAAU,CAAC;QAAA;UAAzDA,UAAU,GAAAG,QAAA,CAAAM,IAAA;UAAA,OAAAN,QAAA,CAAAO,MAAA,WAET;YACLC,IAAI,EAAExB,iBAAiB,CAACyB,OAAO;YAC/BC,MAAM,EAAEd,MAAM;YACde,GAAG,EAAEf,MAAM,CAACS,SAAS;YACrBR,UAAU,EAAVA;WACD;QAAA;UAAA,OAAAG,QAAA,CAAAO,MAAA,WAIM;YACLC,IAAI,EAAExB,iBAAiB,CAAC4B;WACzB;QAAA;UAAA,MAGK,IAAIR,KAAK,+BAAAS,MAAA,CAA8BlB,eAAe,OAAG,CAAC;QAAA;QAAA;UAAA,OAAAK,QAAA,CAAAc,IAAA;MAAA;IAAA,GAAApB,OAAA;EAAA,CAErE;EAAA,OAAAN,2BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}