{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _ref = require('buffer') || {},\n  Buffer = _ref.Buffer;\nvar _require = require('./encoding'),\n  Encoding = _require.Encoding;\nvar textEndec = require('./text-endec');\n\n/**\n * @template TIn, TOut\n * @extends {Encoding<TIn,Buffer,TOut>}\n */\nvar BufferFormat = /*#__PURE__*/function (_Encoding) {\n  _inherits(BufferFormat, _Encoding);\n  var _super = _createSuper(BufferFormat);\n  /**\n   * @param {Omit<IEncoding<TIn, Buffer, TOut>, 'format'>} options\n   */\n  function BufferFormat(options) {\n    _classCallCheck(this, BufferFormat);\n    return _super.call(this, _objectSpread(_objectSpread({}, options), {}, {\n      format: 'buffer'\n    }));\n  }\n\n  /** @override */\n  _createClass(BufferFormat, [{\n    key: \"createViewTranscoder\",\n    value: function createViewTranscoder() {\n      var _this = this;\n      return new ViewFormat({\n        encode: this.encode,\n        // Buffer is a view (UInt8Array)\n        decode: function decode(data) {\n          return _this.decode(Buffer.from(data.buffer, data.byteOffset, data.byteLength));\n        },\n        name: \"\".concat(this.name, \"+view\")\n      });\n    }\n\n    /** @override */\n  }, {\n    key: \"createBufferTranscoder\",\n    value: function createBufferTranscoder() {\n      return this;\n    }\n  }]);\n  return BufferFormat;\n}(Encoding);\n/**\n * @extends {Encoding<TIn,Uint8Array,TOut>}\n * @template TIn, TOut\n */\nvar ViewFormat = /*#__PURE__*/function (_Encoding2) {\n  _inherits(ViewFormat, _Encoding2);\n  var _super2 = _createSuper(ViewFormat);\n  /**\n   * @param {Omit<IEncoding<TIn, Uint8Array, TOut>, 'format'>} options\n   */\n  function ViewFormat(options) {\n    _classCallCheck(this, ViewFormat);\n    return _super2.call(this, _objectSpread(_objectSpread({}, options), {}, {\n      format: 'view'\n    }));\n  }\n\n  /** @override */\n  _createClass(ViewFormat, [{\n    key: \"createBufferTranscoder\",\n    value: function createBufferTranscoder() {\n      var _this2 = this;\n      return new BufferFormat({\n        encode: function encode(data) {\n          var view = _this2.encode(data);\n          return Buffer.from(view.buffer, view.byteOffset, view.byteLength);\n        },\n        decode: this.decode,\n        // Buffer is a view (UInt8Array)\n        name: \"\".concat(this.name, \"+buffer\")\n      });\n    }\n\n    /** @override */\n  }, {\n    key: \"createViewTranscoder\",\n    value: function createViewTranscoder() {\n      return this;\n    }\n  }]);\n  return ViewFormat;\n}(Encoding);\n/**\n * @extends {Encoding<TIn,string,TOut>}\n * @template TIn, TOut\n */\nvar UTF8Format = /*#__PURE__*/function (_Encoding3) {\n  _inherits(UTF8Format, _Encoding3);\n  var _super3 = _createSuper(UTF8Format);\n  /**\n   * @param {Omit<IEncoding<TIn, string, TOut>, 'format'>} options\n   */\n  function UTF8Format(options) {\n    _classCallCheck(this, UTF8Format);\n    return _super3.call(this, _objectSpread(_objectSpread({}, options), {}, {\n      format: 'utf8'\n    }));\n  }\n\n  /** @override */\n  _createClass(UTF8Format, [{\n    key: \"createBufferTranscoder\",\n    value: function createBufferTranscoder() {\n      var _this3 = this;\n      return new BufferFormat({\n        encode: function encode(data) {\n          return Buffer.from(_this3.encode(data), 'utf8');\n        },\n        decode: function decode(data) {\n          return _this3.decode(data.toString('utf8'));\n        },\n        name: \"\".concat(this.name, \"+buffer\")\n      });\n    }\n\n    /** @override */\n  }, {\n    key: \"createViewTranscoder\",\n    value: function createViewTranscoder() {\n      var _this4 = this;\n      var _textEndec = textEndec(),\n        textEncoder = _textEndec.textEncoder,\n        textDecoder = _textEndec.textDecoder;\n      return new ViewFormat({\n        encode: function encode(data) {\n          return textEncoder.encode(_this4.encode(data));\n        },\n        decode: function decode(data) {\n          return _this4.decode(textDecoder.decode(data));\n        },\n        name: \"\".concat(this.name, \"+view\")\n      });\n    }\n\n    /** @override */\n  }, {\n    key: \"createUTF8Transcoder\",\n    value: function createUTF8Transcoder() {\n      return this;\n    }\n  }]);\n  return UTF8Format;\n}(Encoding);\nexports.BufferFormat = BufferFormat;\nexports.ViewFormat = ViewFormat;\nexports.UTF8Format = UTF8Format;\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */","map":{"version":3,"names":["_objectSpread","require","default","_classCallCheck","_createClass","_inherits","_createSuper","_ref","Buffer","_require","Encoding","textEndec","BufferFormat","_Encoding","_super","options","call","format","key","value","createViewTranscoder","_this","ViewFormat","encode","decode","data","from","buffer","byteOffset","byteLength","name","concat","createBufferTranscoder","_Encoding2","_super2","_this2","view","UTF8Format","_Encoding3","_super3","_this3","toString","_this4","_textEndec","textEncoder","textDecoder","createUTF8Transcoder","exports"],"sources":["/Users/apple/Documents/treasure/node_modules/level-transcoder/lib/formats.js"],"sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer') || {}\nconst { Encoding } = require('./encoding')\nconst textEndec = require('./text-endec')\n\n/**\n * @template TIn, TOut\n * @extends {Encoding<TIn,Buffer,TOut>}\n */\nclass BufferFormat extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, Buffer, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'buffer' })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: this.encode, // Buffer is a view (UInt8Array)\n      decode: (data) => this.decode(\n        Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n      ),\n      name: `${this.name}+view`\n    })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return this\n  }\n}\n\n/**\n * @extends {Encoding<TIn,Uint8Array,TOut>}\n * @template TIn, TOut\n */\nclass ViewFormat extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, Uint8Array, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'view' })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: (data) => {\n        const view = this.encode(data)\n        return Buffer.from(view.buffer, view.byteOffset, view.byteLength)\n      },\n      decode: this.decode, // Buffer is a view (UInt8Array)\n      name: `${this.name}+buffer`\n    })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    return this\n  }\n}\n\n/**\n * @extends {Encoding<TIn,string,TOut>}\n * @template TIn, TOut\n */\nclass UTF8Format extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, string, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'utf8' })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: (data) => Buffer.from(this.encode(data), 'utf8'),\n      decode: (data) => this.decode(data.toString('utf8')),\n      name: `${this.name}+buffer`\n    })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    const { textEncoder, textDecoder } = textEndec()\n\n    return new ViewFormat({\n      encode: (data) => textEncoder.encode(this.encode(data)),\n      decode: (data) => this.decode(textDecoder.decode(data)),\n      name: `${this.name}+view`\n    })\n  }\n\n  /** @override */\n  createUTF8Transcoder () {\n    return this\n  }\n}\n\nexports.BufferFormat = BufferFormat\nexports.ViewFormat = ViewFormat\nexports.UTF8Format = UTF8Format\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}