{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nimport { CarHeader as headerValidator } from './header-validator.js';\nvar CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nvar V2_HEADER_LENGTH = 16 + 8 + 8 + 8;\nfunction readVarint(_x) {\n  return _readVarint.apply(this, arguments);\n}\nfunction _readVarint() {\n  _readVarint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(reader) {\n    var bytes, i;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return reader.upTo(8);\n        case 2:\n          bytes = _context12.sent;\n          if (bytes.length) {\n            _context12.next = 5;\n            break;\n          }\n          throw new Error('Unexpected end of data');\n        case 5:\n          i = varint.decode(bytes);\n          reader.seek(varint.decode.bytes);\n          return _context12.abrupt(\"return\", i);\n        case 8:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12);\n  }));\n  return _readVarint.apply(this, arguments);\n}\nfunction readV2Header(_x2) {\n  return _readV2Header.apply(this, arguments);\n}\nfunction _readV2Header() {\n  _readV2Header = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(reader) {\n    var bytes, dv, offset, header;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return reader.exactly(V2_HEADER_LENGTH);\n        case 2:\n          bytes = _context13.sent;\n          dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n          offset = 0;\n          header = {\n            version: 2,\n            characteristics: [dv.getBigUint64(offset, true), dv.getBigUint64(offset += 8, true)],\n            dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n            dataSize: Number(dv.getBigUint64(offset += 8, true)),\n            indexOffset: Number(dv.getBigUint64(offset += 8, true))\n          };\n          reader.seek(V2_HEADER_LENGTH);\n          return _context13.abrupt(\"return\", header);\n        case 8:\n        case \"end\":\n          return _context13.stop();\n      }\n    }, _callee13);\n  }));\n  return _readV2Header.apply(this, arguments);\n}\nexport function readHeader(_x3, _x4) {\n  return _readHeader.apply(this, arguments);\n}\nfunction _readHeader() {\n  _readHeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(reader, strictVersion) {\n    var length, header, block, hasRoots, v2Header, v1Header;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return readVarint(reader);\n        case 2:\n          length = _context14.sent;\n          if (!(length === 0)) {\n            _context14.next = 5;\n            break;\n          }\n          throw new Error('Invalid CAR header (zero length)');\n        case 5:\n          _context14.next = 7;\n          return reader.exactly(length);\n        case 7:\n          header = _context14.sent;\n          reader.seek(length);\n          block = decodeDagCbor(header);\n          if (headerValidator(block)) {\n            _context14.next = 12;\n            break;\n          }\n          throw new Error('Invalid CAR header format');\n        case 12:\n          if (!(block.version !== 1 && block.version !== 2 || strictVersion !== undefined && block.version !== strictVersion)) {\n            _context14.next = 14;\n            break;\n          }\n          throw new Error(\"Invalid CAR version: \".concat(block.version).concat(strictVersion !== undefined ? \" (expected \".concat(strictVersion, \")\") : ''));\n        case 14:\n          hasRoots = Array.isArray(block.roots);\n          if (!(block.version === 1 && !hasRoots || block.version === 2 && hasRoots)) {\n            _context14.next = 17;\n            break;\n          }\n          throw new Error('Invalid CAR header format');\n        case 17:\n          if (!(block.version === 1)) {\n            _context14.next = 19;\n            break;\n          }\n          return _context14.abrupt(\"return\", block);\n        case 19:\n          _context14.next = 21;\n          return readV2Header(reader);\n        case 21:\n          v2Header = _context14.sent;\n          reader.seek(v2Header.dataOffset - reader.pos);\n          _context14.next = 25;\n          return readHeader(reader, 1);\n        case 25:\n          v1Header = _context14.sent;\n          return _context14.abrupt(\"return\", Object.assign(v1Header, v2Header));\n        case 27:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee14);\n  }));\n  return _readHeader.apply(this, arguments);\n}\nfunction readMultihash(_x5) {\n  return _readMultihash.apply(this, arguments);\n}\nfunction _readMultihash() {\n  _readMultihash = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(reader) {\n    var bytes, codeLength, length, lengthLength, mhLength, multihash;\n    return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return reader.upTo(8);\n        case 2:\n          bytes = _context15.sent;\n          varint.decode(bytes);\n          codeLength = varint.decode.bytes;\n          length = varint.decode(bytes.subarray(varint.decode.bytes));\n          lengthLength = varint.decode.bytes;\n          mhLength = codeLength + lengthLength + length;\n          _context15.next = 10;\n          return reader.exactly(mhLength);\n        case 10:\n          multihash = _context15.sent;\n          reader.seek(mhLength);\n          return _context15.abrupt(\"return\", multihash);\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }, _callee15);\n  }));\n  return _readMultihash.apply(this, arguments);\n}\nfunction readCid(_x6) {\n  return _readCid.apply(this, arguments);\n}\nfunction _readCid() {\n  _readCid = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(reader) {\n    var first, _bytes, _multihash, version, codec, bytes, multihash;\n    return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return reader.exactly(2);\n        case 2:\n          first = _context16.sent;\n          if (!(first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH)) {\n            _context16.next = 10;\n            break;\n          }\n          _context16.next = 6;\n          return reader.exactly(34);\n        case 6:\n          _bytes = _context16.sent;\n          reader.seek(34);\n          _multihash = Digest.decode(_bytes);\n          return _context16.abrupt(\"return\", CID.create(0, CIDV0_BYTES.DAG_PB, _multihash));\n        case 10:\n          _context16.next = 12;\n          return readVarint(reader);\n        case 12:\n          version = _context16.sent;\n          if (!(version !== 1)) {\n            _context16.next = 15;\n            break;\n          }\n          throw new Error(\"Unexpected CID version (\".concat(version, \")\"));\n        case 15:\n          _context16.next = 17;\n          return readVarint(reader);\n        case 17:\n          codec = _context16.sent;\n          _context16.next = 20;\n          return readMultihash(reader);\n        case 20:\n          bytes = _context16.sent;\n          multihash = Digest.decode(bytes);\n          return _context16.abrupt(\"return\", CID.create(version, codec, multihash));\n        case 23:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee16);\n  }));\n  return _readCid.apply(this, arguments);\n}\nexport function readBlockHead(_x7) {\n  return _readBlockHead.apply(this, arguments);\n}\nfunction _readBlockHead() {\n  _readBlockHead = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(reader) {\n    var start, length, cid, blockLength;\n    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          start = reader.pos;\n          _context17.next = 3;\n          return readVarint(reader);\n        case 3:\n          length = _context17.sent;\n          if (!(length === 0)) {\n            _context17.next = 6;\n            break;\n          }\n          throw new Error('Invalid CAR section (zero length)');\n        case 6:\n          length += reader.pos - start;\n          _context17.next = 9;\n          return readCid(reader);\n        case 9:\n          cid = _context17.sent;\n          blockLength = length - Number(reader.pos - start);\n          return _context17.abrupt(\"return\", {\n            cid: cid,\n            length: length,\n            blockLength: blockLength\n          });\n        case 12:\n        case \"end\":\n          return _context17.stop();\n      }\n    }, _callee17);\n  }));\n  return _readBlockHead.apply(this, arguments);\n}\nfunction readBlock(_x8) {\n  return _readBlock.apply(this, arguments);\n}\nfunction _readBlock() {\n  _readBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(reader) {\n    var _yield$readBlockHead, cid, blockLength, bytes;\n    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return readBlockHead(reader);\n        case 2:\n          _yield$readBlockHead = _context18.sent;\n          cid = _yield$readBlockHead.cid;\n          blockLength = _yield$readBlockHead.blockLength;\n          _context18.next = 7;\n          return reader.exactly(blockLength);\n        case 7:\n          bytes = _context18.sent;\n          reader.seek(blockLength);\n          return _context18.abrupt(\"return\", {\n            bytes: bytes,\n            cid: cid\n          });\n        case 10:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee18);\n  }));\n  return _readBlock.apply(this, arguments);\n}\nfunction readBlockIndex(_x9) {\n  return _readBlockIndex.apply(this, arguments);\n}\nfunction _readBlockIndex() {\n  _readBlockIndex = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(reader) {\n    var offset, _yield$readBlockHead2, cid, length, blockLength, index;\n    return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          offset = reader.pos;\n          _context19.next = 3;\n          return readBlockHead(reader);\n        case 3:\n          _yield$readBlockHead2 = _context19.sent;\n          cid = _yield$readBlockHead2.cid;\n          length = _yield$readBlockHead2.length;\n          blockLength = _yield$readBlockHead2.blockLength;\n          index = {\n            cid: cid,\n            length: length,\n            blockLength: blockLength,\n            offset: offset,\n            blockOffset: reader.pos\n          };\n          reader.seek(index.blockLength);\n          return _context19.abrupt(\"return\", index);\n        case 10:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee19);\n  }));\n  return _readBlockIndex.apply(this, arguments);\n}\nexport function createDecoder(reader) {\n  var headerPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var header, v1length;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return readHeader(reader);\n        case 2:\n          header = _context.sent;\n          if (header.version === 2) {\n            v1length = reader.pos - header.dataOffset;\n            reader = limitReader(reader, header.dataSize - v1length);\n          }\n          return _context.abrupt(\"return\", header);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }))();\n  return {\n    header: function header() {\n      return headerPromise;\n    },\n    blocks: function blocks() {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _awaitAsyncGenerator(headerPromise);\n            case 2:\n              _context2.next = 4;\n              return _awaitAsyncGenerator(reader.upTo(8));\n            case 4:\n              _context2.t0 = _context2.sent.length;\n              if (!(_context2.t0 > 0)) {\n                _context2.next = 12;\n                break;\n              }\n              _context2.next = 8;\n              return _awaitAsyncGenerator(readBlock(reader));\n            case 8:\n              _context2.next = 10;\n              return _context2.sent;\n            case 10:\n              _context2.next = 2;\n              break;\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    blocksIndex: function blocksIndex() {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _awaitAsyncGenerator(headerPromise);\n            case 2:\n              _context3.next = 4;\n              return _awaitAsyncGenerator(reader.upTo(8));\n            case 4:\n              _context3.t0 = _context3.sent.length;\n              if (!(_context3.t0 > 0)) {\n                _context3.next = 12;\n                break;\n              }\n              _context3.next = 8;\n              return _awaitAsyncGenerator(readBlockIndex(reader));\n            case 8:\n              _context3.next = 10;\n              return _context3.sent;\n            case 10:\n              _context3.next = 2;\n              break;\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  var pos = 0;\n  return {\n    upTo: function upTo(length) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", bytes.subarray(pos, pos + Math.min(length, bytes.length - pos)));\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    exactly: function exactly(length) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(length > bytes.length - pos)) {\n                _context5.next = 2;\n                break;\n              }\n              throw new Error('Unexpected end of data');\n            case 2:\n              return _context5.abrupt(\"return\", bytes.subarray(pos, pos + length));\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    },\n    seek: function seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  var pos = 0;\n  var have = 0;\n  var offset = 0;\n  var currentChunk = new Uint8Array(0);\n  var read = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(length) {\n      var bufa, chunk, off, _i, _bufa, b;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            have = currentChunk.length - offset;\n            bufa = [currentChunk.subarray(offset)];\n          case 2:\n            if (!(have < length)) {\n              _context6.next = 12;\n              break;\n            }\n            _context6.next = 5;\n            return readChunk();\n          case 5:\n            chunk = _context6.sent;\n            if (!(chunk == null)) {\n              _context6.next = 8;\n              break;\n            }\n            return _context6.abrupt(\"break\", 12);\n          case 8:\n            if (have < 0) {\n              if (chunk.length > have) {\n                bufa.push(chunk.subarray(-have));\n              }\n            } else {\n              bufa.push(chunk);\n            }\n            have += chunk.length;\n            _context6.next = 2;\n            break;\n          case 12:\n            currentChunk = new Uint8Array(bufa.reduce(function (p, c) {\n              return p + c.length;\n            }, 0));\n            off = 0;\n            for (_i = 0, _bufa = bufa; _i < _bufa.length; _i++) {\n              b = _bufa[_i];\n              currentChunk.set(b, off);\n              off += b.length;\n            }\n            offset = 0;\n          case 16:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return function read(_x10) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return {\n    upTo: function upTo(length) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(currentChunk.length - offset < length)) {\n                _context7.next = 3;\n                break;\n              }\n              _context7.next = 3;\n              return read(length);\n            case 3:\n              return _context7.abrupt(\"return\", currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length)));\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    },\n    exactly: function exactly(length) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(currentChunk.length - offset < length)) {\n                _context8.next = 3;\n                break;\n              }\n              _context8.next = 3;\n              return read(length);\n            case 3:\n              if (!(currentChunk.length - offset < length)) {\n                _context8.next = 5;\n                break;\n              }\n              throw new Error('Unexpected end of data');\n            case 5:\n              return _context8.abrupt(\"return\", currentChunk.subarray(offset, offset + length));\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    },\n    seek: function seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  var iterator = asyncIterable[Symbol.asyncIterator]();\n  function readChunk() {\n    return _readChunk.apply(this, arguments);\n  }\n  function _readChunk() {\n    _readChunk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var next;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return iterator.next();\n          case 2:\n            next = _context9.sent;\n            if (!next.done) {\n              _context9.next = 5;\n              break;\n            }\n            return _context9.abrupt(\"return\", null);\n          case 5:\n            return _context9.abrupt(\"return\", next.value);\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    }));\n    return _readChunk.apply(this, arguments);\n  }\n  return chunkReader(readChunk);\n}\nexport function limitReader(reader, byteLimit) {\n  var bytesRead = 0;\n  return {\n    upTo: function upTo(length) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var bytes;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return reader.upTo(length);\n            case 2:\n              bytes = _context10.sent;\n              if (bytes.length + bytesRead > byteLimit) {\n                bytes = bytes.subarray(0, byteLimit - bytesRead);\n              }\n              return _context10.abrupt(\"return\", bytes);\n            case 5:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }))();\n    },\n    exactly: function exactly(length) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var bytes;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return reader.exactly(length);\n            case 2:\n              bytes = _context11.sent;\n              if (!(bytes.length + bytesRead > byteLimit)) {\n                _context11.next = 5;\n                break;\n              }\n              throw new Error('Unexpected end of data');\n            case 5:\n              return _context11.abrupt(\"return\", bytes);\n            case 6:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11);\n      }))();\n    },\n    seek: function seek(length) {\n      bytesRead += length;\n      reader.seek(length);\n    },\n    get pos() {\n      return reader.pos;\n    }\n  };\n}","map":{"version":3,"names":["varint","CID","Digest","decode","decodeDagCbor","CarHeader","headerValidator","CIDV0_BYTES","SHA2_256","LENGTH","DAG_PB","V2_HEADER_LENGTH","readVarint","_x","_readVarint","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee12","reader","bytes","i","wrap","_callee12$","_context12","prev","next","upTo","sent","length","Error","seek","abrupt","stop","readV2Header","_x2","_readV2Header","_callee13","dv","offset","header","_callee13$","_context13","exactly","DataView","buffer","byteOffset","byteLength","version","characteristics","getBigUint64","dataOffset","Number","dataSize","indexOffset","readHeader","_x3","_x4","_readHeader","_callee14","strictVersion","block","hasRoots","v2Header","v1Header","_callee14$","_context14","undefined","concat","Array","isArray","roots","pos","Object","assign","readMultihash","_x5","_readMultihash","_callee15","codeLength","lengthLength","mhLength","multihash","_callee15$","_context15","subarray","readCid","_x6","_readCid","_callee16","first","_bytes","_multihash","codec","_callee16$","_context16","create","readBlockHead","_x7","_readBlockHead","_callee17","start","cid","blockLength","_callee17$","_context17","readBlock","_x8","_readBlock","_callee18","_yield$readBlockHead","_callee18$","_context18","readBlockIndex","_x9","_readBlockIndex","_callee19","_yield$readBlockHead2","index","_callee19$","_context19","blockOffset","createDecoder","headerPromise","_callee","v1length","_callee$","_context","limitReader","blocks","_wrapAsyncGenerator","_callee2","_callee2$","_context2","_awaitAsyncGenerator","t0","blocksIndex","_callee3","_callee3$","_context3","bytesReader","_callee4","_callee4$","_context4","Math","min","_callee5","_callee5$","_context5","chunkReader","readChunk","have","currentChunk","Uint8Array","read","_ref2","_callee6","bufa","chunk","off","_i","_bufa","b","_callee6$","_context6","push","reduce","p","c","set","_x10","_callee7","_callee7$","_context7","_callee8","_callee8$","_context8","asyncIterableReader","asyncIterable","iterator","Symbol","asyncIterator","_readChunk","_callee9","_callee9$","_context9","done","value","byteLimit","bytesRead","_callee10","_callee10$","_context10","_callee11","_callee11$","_context11"],"sources":["/Users/apple/Documents/treasure/node_modules/@ipld/car/esm/lib/decoder.js"],"sourcesContent":["import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nimport { CarHeader as headerValidator } from './header-validator.js';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nconst V2_HEADER_LENGTH = 16 + 8 + 8 + 8;\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data');\n  }\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nasync function readV2Header(reader) {\n  const bytes = await reader.exactly(V2_HEADER_LENGTH);\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  let offset = 0;\n  const header = {\n    version: 2,\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  };\n  reader.seek(V2_HEADER_LENGTH);\n  return header;\n}\nexport async function readHeader(reader, strictVersion) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (!headerValidator(block)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1 && block.version !== 2 || strictVersion !== undefined && block.version !== strictVersion) {\n    throw new Error(`Invalid CAR version: ${ block.version }${ strictVersion !== undefined ? ` (expected ${ strictVersion })` : '' }`);\n  }\n  const hasRoots = Array.isArray(block.roots);\n  if (block.version === 1 && !hasRoots || block.version === 2 && hasRoots) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version === 1) {\n    return block;\n  }\n  const v2Header = await readV2Header(reader);\n  reader.seek(v2Header.dataOffset - reader.pos);\n  const v1Header = await readHeader(reader, 1);\n  return Object.assign(v1Header, v2Header);\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nexport async function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - Number(reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = (async () => {\n    const header = await readHeader(reader);\n    if (header.version === 2) {\n      const v1length = reader.pos - header.dataOffset;\n      reader = limitReader(reader, header.dataSize - v1length);\n    }\n    return header;\n  })();\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}\nexport function limitReader(reader, byteLimit) {\n  let bytesRead = 0;\n  return {\n    async upTo(length) {\n      let bytes = await reader.upTo(length);\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead);\n      }\n      return bytes;\n    },\n    async exactly(length) {\n      const bytes = await reader.exactly(length);\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes;\n    },\n    seek(length) {\n      bytesRead += length;\n      reader.seek(length);\n    },\n    get pos() {\n      return reader.pos;\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}