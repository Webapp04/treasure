{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport DirSharded from './dir-sharded.js';\nimport DirFlat from './dir-flat.js';\n\n/**\n * @typedef {import('./dir').default} Dir\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @param {Dir | null} child\n * @param {Dir} dir\n * @param {number} threshold\n * @param {ImporterOptions} options\n * @returns {Promise<DirSharded>}\n */\nfunction flatToShard(_x, _x2, _x3, _x4) {\n  return _flatToShard.apply(this, arguments);\n}\n/**\n * @param {DirFlat} oldDir\n * @param {ImporterOptions} options\n */\nfunction _flatToShard() {\n  _flatToShard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(child, dir, threshold, options) {\n    var newDir, parent;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          newDir = dir;\n          if (!(dir instanceof DirFlat && dir.directChildrenCount() >= threshold)) {\n            _context.next = 5;\n            break;\n          }\n          _context.next = 4;\n          return convertToShard(dir, options);\n        case 4:\n          newDir = _context.sent;\n        case 5:\n          parent = newDir.parent;\n          if (!parent) {\n            _context.next = 14;\n            break;\n          }\n          if (!(newDir !== dir)) {\n            _context.next = 13;\n            break;\n          }\n          if (child) {\n            child.parent = newDir;\n          }\n          if (newDir.parentKey) {\n            _context.next = 11;\n            break;\n          }\n          throw new Error('No parent key found');\n        case 11:\n          _context.next = 13;\n          return parent.put(newDir.parentKey, newDir);\n        case 13:\n          return _context.abrupt(\"return\", flatToShard(newDir, parent, threshold, options));\n        case 14:\n          return _context.abrupt(\"return\", newDir);\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _flatToShard.apply(this, arguments);\n}\nfunction convertToShard(_x5, _x6) {\n  return _convertToShard.apply(this, arguments);\n}\nfunction _convertToShard() {\n  _convertToShard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(oldDir, options) {\n    var newDir, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, key, child;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          newDir = new DirSharded({\n            root: oldDir.root,\n            dir: true,\n            parent: oldDir.parent,\n            parentKey: oldDir.parentKey,\n            path: oldDir.path,\n            dirty: oldDir.dirty,\n            flat: false,\n            mtime: oldDir.mtime,\n            mode: oldDir.mode\n          }, options);\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context2.prev = 3;\n          _iterator = _asyncIterator(oldDir.eachChildSeries());\n        case 5:\n          _context2.next = 7;\n          return _iterator.next();\n        case 7:\n          if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n            _context2.next = 14;\n            break;\n          }\n          _step$value = _step.value, key = _step$value.key, child = _step$value.child;\n          _context2.next = 11;\n          return newDir.put(key, child);\n        case 11:\n          _iteratorAbruptCompletion = false;\n          _context2.next = 5;\n          break;\n        case 14:\n          _context2.next = 20;\n          break;\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](3);\n          _didIteratorError = true;\n          _iteratorError = _context2.t0;\n        case 20:\n          _context2.prev = 20;\n          _context2.prev = 21;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context2.next = 25;\n            break;\n          }\n          _context2.next = 25;\n          return _iterator.return();\n        case 25:\n          _context2.prev = 25;\n          if (!_didIteratorError) {\n            _context2.next = 28;\n            break;\n          }\n          throw _iteratorError;\n        case 28:\n          return _context2.finish(25);\n        case 29:\n          return _context2.finish(20);\n        case 30:\n          return _context2.abrupt(\"return\", newDir);\n        case 31:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[3, 16, 20, 30], [21,, 25, 29]]);\n  }));\n  return _convertToShard.apply(this, arguments);\n}\nexport default flatToShard;","map":{"version":3,"names":["DirSharded","DirFlat","flatToShard","_x","_x2","_x3","_x4","_flatToShard","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","child","dir","threshold","options","newDir","parent","wrap","_callee$","_context","prev","next","directChildrenCount","convertToShard","sent","parentKey","Error","put","abrupt","stop","_x5","_x6","_convertToShard","_callee2","oldDir","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_step$value","key","_callee2$","_context2","root","path","dirty","flat","mtime","mode","_asyncIterator","eachChildSeries","done","value","t0","return","finish"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-importer/src/flat-to-shard.js"],"sourcesContent":["import DirSharded from './dir-sharded.js'\nimport DirFlat from './dir-flat.js'\n\n/**\n * @typedef {import('./dir').default} Dir\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @param {Dir | null} child\n * @param {Dir} dir\n * @param {number} threshold\n * @param {ImporterOptions} options\n * @returns {Promise<DirSharded>}\n */\nasync function flatToShard (child, dir, threshold, options) {\n  let newDir = dir\n\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options)\n  }\n\n  const parent = newDir.parent\n\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir\n      }\n\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found')\n      }\n\n      await parent.put(newDir.parentKey, newDir)\n    }\n\n    return flatToShard(newDir, parent, threshold, options)\n  }\n\n  // @ts-ignore\n  return newDir\n}\n\n/**\n * @param {DirFlat} oldDir\n * @param {ImporterOptions} options\n */\nasync function convertToShard (oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options)\n\n  for await (const { key, child } of oldDir.eachChildSeries()) {\n    await newDir.put(key, child)\n  }\n\n  return newDir\n}\n\nexport default flatToShard\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}