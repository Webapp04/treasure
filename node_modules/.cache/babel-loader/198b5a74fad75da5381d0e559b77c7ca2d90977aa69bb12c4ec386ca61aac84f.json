{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport var createRmAll = configure(function (api) {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  function rmAll(_x) {\n    return _rmAll.apply(this, arguments);\n  }\n  function _rmAll() {\n    _rmAll = _wrapAsyncGenerator(function (source) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, path, recursive, searchParams, res, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, pin;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(normaliseInput(source));\n            case 4:\n              _context.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 49;\n                break;\n              }\n              _step$value = _step.value, path = _step$value.path, recursive = _step$value.recursive;\n              searchParams = new URLSearchParams(options.searchParams);\n              searchParams.append('arg', \"\".concat(path));\n              if (recursive != null) searchParams.set('recursive', String(recursive));\n              _context.next = 13;\n              return _awaitAsyncGenerator(api.post('pin/rm', {\n                signal: options.signal,\n                headers: options.headers,\n                searchParams: toUrlSearchParams(_objectSpread(_objectSpread({}, options), {}, {\n                  arg: \"\".concat(path),\n                  recursive: recursive\n                }))\n              }));\n            case 13:\n              res = _context.sent;\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context.prev = 16;\n              _iterator2 = _asyncIterator(res.ndjson());\n            case 18:\n              _context.next = 20;\n              return _awaitAsyncGenerator(_iterator2.next());\n            case 20:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {\n                _context.next = 30;\n                break;\n              }\n              pin = _step2.value;\n              if (!pin.Pins) {\n                _context.next = 25;\n                break;\n              }\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(pin.Pins.map(function ( /** @type {string} */cid) {\n                return CID.parse(cid);\n              })), _awaitAsyncGenerator), \"t0\", 24);\n            case 24:\n              return _context.abrupt(\"continue\", 27);\n            case 25:\n              _context.next = 27;\n              return CID.parse(pin);\n            case 27:\n              _iteratorAbruptCompletion2 = false;\n              _context.next = 18;\n              break;\n            case 30:\n              _context.next = 36;\n              break;\n            case 32:\n              _context.prev = 32;\n              _context.t1 = _context[\"catch\"](16);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t1;\n            case 36:\n              _context.prev = 36;\n              _context.prev = 37;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context.next = 41;\n                break;\n              }\n              _context.next = 41;\n              return _awaitAsyncGenerator(_iterator2.return());\n            case 41:\n              _context.prev = 41;\n              if (!_didIteratorError2) {\n                _context.next = 44;\n                break;\n              }\n              throw _iteratorError2;\n            case 44:\n              return _context.finish(41);\n            case 45:\n              return _context.finish(36);\n            case 46:\n              _iteratorAbruptCompletion = false;\n              _context.next = 4;\n              break;\n            case 49:\n              _context.next = 55;\n              break;\n            case 51:\n              _context.prev = 51;\n              _context.t2 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t2;\n            case 55:\n              _context.prev = 55;\n              _context.prev = 56;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 60;\n                break;\n              }\n              _context.next = 60;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 60:\n              _context.prev = 60;\n              if (!_didIteratorError) {\n                _context.next = 63;\n                break;\n              }\n              throw _iteratorError;\n            case 63:\n              return _context.finish(60);\n            case 64:\n              return _context.finish(55);\n            case 65:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 51, 55, 65], [16, 32, 36, 46], [37,, 41, 45], [56,, 60, 64]]);\n      })();\n    });\n    return _rmAll.apply(this, arguments);\n  }\n  return rmAll;\n});","map":{"version":3,"names":["CID","configure","normaliseInput","toUrlSearchParams","createRmAll","api","rmAll","_x","_rmAll","apply","arguments","_wrapAsyncGenerator","source","options","length","undefined","_regeneratorRuntime","mark","_callee","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_step$value","path","recursive","searchParams","res","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","pin","wrap","_callee$","_context","prev","next","_asyncIterator","_awaitAsyncGenerator","sent","done","value","URLSearchParams","append","concat","set","String","post","signal","headers","_objectSpread","arg","ndjson","Pins","delegateYield","_asyncGeneratorDelegate","map","cid","parse","abrupt","t1","return","finish","t2","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-http-client/src/pin/rm-all.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createRmAll = configure(api => {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  async function * rmAll (source, options = {}) {\n    for await (const { path, recursive } of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams)\n      searchParams.append('arg', `${path}`)\n\n      if (recursive != null) searchParams.set('recursive', String(recursive))\n\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${path}`,\n          recursive\n        })\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          yield * pin.Pins.map((/** @type {string} */ cid) => CID.parse(cid))\n          continue\n        }\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return rmAll\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}