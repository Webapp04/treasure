{"ast":null,"code":"import _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport { isBytes, isBlob, isReadableStream, isFileObject } from './utils.js';\nimport { parseMtime, parseMode } from 'ipfs-unixfs';\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport function normaliseCandidateSingle(_x, _x2) {\n  return _normaliseCandidateSingle.apply(this, arguments);\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nfunction _normaliseCandidateSingle() {\n  _normaliseCandidateSingle = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input, normaliseContent) {\n    var peekable, _yield$_awaitAsyncGen, value, done;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(input === null || input === undefined)) {\n            _context.next = 2;\n            break;\n          }\n          throw errCode(new Error(\"Unexpected input: \".concat(input)), 'ERR_UNEXPECTED_INPUT');\n        case 2:\n          if (!(typeof input === 'string' || input instanceof String)) {\n            _context.next = 6;\n            break;\n          }\n          _context.next = 5;\n          return toFileObject(input.toString(), normaliseContent);\n        case 5:\n          return _context.abrupt(\"return\");\n        case 6:\n          if (!(isBytes(input) || isBlob(input))) {\n            _context.next = 10;\n            break;\n          }\n          _context.next = 9;\n          return toFileObject(input, normaliseContent);\n        case 9:\n          return _context.abrupt(\"return\");\n        case 10:\n          // Browser ReadableStream\n          if (isReadableStream(input)) {\n            input = browserStreamToIt(input);\n          }\n\n          // Iterable<?>\n          if (!(Symbol.iterator in input || Symbol.asyncIterator in input)) {\n            _context.next = 28;\n            break;\n          }\n          // @ts-expect-error it's (async)iterable\n          peekable = itPeekable(input);\n          /** @type {any} value **/\n          _context.next = 15;\n          return _awaitAsyncGenerator(peekable.peek());\n        case 15:\n          _yield$_awaitAsyncGen = _context.sent;\n          value = _yield$_awaitAsyncGen.value;\n          done = _yield$_awaitAsyncGen.done;\n          if (!done) {\n            _context.next = 22;\n            break;\n          }\n          _context.next = 21;\n          return {\n            content: []\n          };\n        case 21:\n          return _context.abrupt(\"return\");\n        case 22:\n          peekable.push(value);\n\n          // (Async)Iterable<Number>\n          // (Async)Iterable<Bytes>\n          // (Async)Iterable<String>\n          if (!(Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String)) {\n            _context.next = 27;\n            break;\n          }\n          _context.next = 26;\n          return toFileObject(peekable, normaliseContent);\n        case 26:\n          return _context.abrupt(\"return\");\n        case 27:\n          throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n        case 28:\n          if (!isFileObject(input)) {\n            _context.next = 32;\n            break;\n          }\n          _context.next = 31;\n          return toFileObject(input, normaliseContent);\n        case 31:\n          return _context.abrupt(\"return\");\n        case 32:\n          throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n        case 33:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _normaliseCandidateSingle.apply(this, arguments);\n}\nfunction toFileObject(_x3, _x4) {\n  return _toFileObject.apply(this, arguments);\n}\nfunction _toFileObject() {\n  _toFileObject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input, normaliseContent) {\n    var path, mode, mtime, content, file;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          // @ts-expect-error - Those properties don't exist on most input types\n          path = input.path, mode = input.mode, mtime = input.mtime, content = input.content;\n          /** @type {ImporterImportCandidate} */\n          file = {\n            path: path || '',\n            mode: parseMode(mode),\n            mtime: parseMtime(mtime)\n          };\n          if (!content) {\n            _context2.next = 8;\n            break;\n          }\n          _context2.next = 5;\n          return normaliseContent(content);\n        case 5:\n          file.content = _context2.sent;\n          _context2.next = 12;\n          break;\n        case 8:\n          if (path) {\n            _context2.next = 12;\n            break;\n          }\n          _context2.next = 11;\n          return normaliseContent(input);\n        case 11:\n          file.content = _context2.sent;\n        case 12:\n          return _context2.abrupt(\"return\", file);\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _toFileObject.apply(this, arguments);\n}","map":{"version":3,"names":["errCode","browserStreamToIt","itPeekable","isBytes","isBlob","isReadableStream","isFileObject","parseMtime","parseMode","normaliseCandidateSingle","_x","_x2","_normaliseCandidateSingle","apply","arguments","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","input","normaliseContent","peekable","_yield$_awaitAsyncGen","value","done","wrap","_callee$","_context","prev","next","undefined","Error","concat","String","toFileObject","toString","abrupt","Symbol","iterator","asyncIterator","_awaitAsyncGenerator","peek","sent","content","push","Number","isInteger","stop","_x3","_x4","_toFileObject","_asyncToGenerator","_callee2","path","mode","mtime","file","_callee2$","_context2"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js"],"sourcesContent":["import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    // @ts-expect-error it's (async)iterable\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}