{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { bufferToRecordKey } from '../../utils.js';\nimport errcode from 'err-code';\nimport { verifyRecord } from '@libp2p/record/validators';\nimport { logger } from '@libp2p/logger';\nimport { Components } from '@libp2p/components';\nexport var PutValueHandler = /*#__PURE__*/function () {\n  function PutValueHandler(init) {\n    _classCallCheck(this, PutValueHandler);\n    this.components = new Components();\n    var validators = init.validators;\n    this.log = logger('libp2p:kad-dht:rpc:handlers:put-value');\n    this.validators = validators;\n  }\n  _createClass(PutValueHandler, [{\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n    }\n  }, {\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId, msg) {\n        var key, record, errMsg, recordKey;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              key = msg.key;\n              this.log('%p asked us to store value for key %b', peerId, key);\n              record = msg.record;\n              if (!(record == null)) {\n                _context.next = 7;\n                break;\n              }\n              errMsg = \"Empty record from: \".concat(peerId.toString());\n              this.log.error(errMsg);\n              throw errcode(new Error(errMsg), 'ERR_EMPTY_RECORD');\n            case 7:\n              _context.prev = 7;\n              _context.next = 10;\n              return verifyRecord(this.validators, record);\n            case 10:\n              record.timeReceived = new Date();\n              recordKey = bufferToRecordKey(record.key);\n              _context.next = 14;\n              return this.components.getDatastore().put(recordKey, record.serialize().subarray());\n            case 14:\n              this.log('put record for %b into datastore under key %k', key, recordKey);\n              _context.next = 20;\n              break;\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](7);\n              this.log('did not put record for key %b into datastore %o', key, _context.t0);\n            case 20:\n              return _context.abrupt(\"return\", msg);\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[7, 17]]);\n      }));\n      function handle(_x, _x2) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }]);\n  return PutValueHandler;\n}();","map":{"version":3,"names":["bufferToRecordKey","errcode","verifyRecord","logger","Components","PutValueHandler","init","_classCallCheck","components","validators","log","_createClass","key","value","_handle","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peerId","msg","record","errMsg","recordKey","wrap","_callee$","_context","prev","next","concat","toString","error","Error","timeReceived","Date","getDatastore","put","serialize","subarray","t0","abrupt","stop","handle","_x","_x2","apply","arguments"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/rpc/handlers/put-value.ts"],"sourcesContent":["import { bufferToRecordKey } from '../../utils.js'\nimport errcode from 'err-code'\nimport { verifyRecord } from '@libp2p/record/validators'\nimport { Logger, logger } from '@libp2p/logger'\nimport type { DHTMessageHandler } from '../index.js'\nimport type { Validators } from '@libp2p/interface-dht'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { Message } from '../../message/index.js'\nimport { Components, Initializable } from '@libp2p/components'\n\nexport interface PutValueHandlerInit {\n  validators: Validators\n}\n\nexport class PutValueHandler implements DHTMessageHandler, Initializable {\n  private readonly log: Logger\n  private components: Components = new Components()\n  private readonly validators: Validators\n\n  constructor (init: PutValueHandlerInit) {\n    const { validators } = init\n\n    this.log = logger('libp2p:kad-dht:rpc:handlers:put-value')\n    this.validators = validators\n  }\n\n  init (components: Components): void {\n    this.components = components\n  }\n\n  async handle (peerId: PeerId, msg: Message) {\n    const key = msg.key\n    this.log('%p asked us to store value for key %b', peerId, key)\n\n    const record = msg.record\n\n    if (record == null) {\n      const errMsg = `Empty record from: ${peerId.toString()}`\n\n      this.log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_EMPTY_RECORD')\n    }\n\n    try {\n      await verifyRecord(this.validators, record)\n\n      record.timeReceived = new Date()\n      const recordKey = bufferToRecordKey(record.key)\n      await this.components.getDatastore().put(recordKey, record.serialize().subarray())\n      this.log('put record for %b into datastore under key %k', key, recordKey)\n    } catch (err: any) {\n      this.log('did not put record for key %b into datastore %o', key, err)\n    }\n\n    return msg\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,iBAAiB,QAAQ,gBAAgB;AAClD,OAAOC,OAAO,MAAM,UAAU;AAC9B,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAAiBC,MAAM,QAAQ,gBAAgB;AAK/C,SAASC,UAAU,QAAuB,oBAAoB;AAM9D,WAAaC,eAAe;EAK1B,SAAAA,gBAAaC,IAAyB;IAAAC,eAAA,OAAAF,eAAA;IAH9B,KAAAG,UAAU,GAAe,IAAIJ,UAAU,EAAE;IAI/C,IAAQK,UAAU,GAAKH,IAAI,CAAnBG,UAAU;IAElB,IAAI,CAACC,GAAG,GAAGP,MAAM,CAAC,uCAAuC,CAAC;IAC1D,IAAI,CAACM,UAAU,GAAGA,UAAU;EAC9B;EAACE,YAAA,CAAAN,eAAA;IAAAO,GAAA;IAAAC,KAAA,EAED,SAAAP,KAAME,UAAsB;MAC1B,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC9B;EAAC;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,OAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAED,SAAAC,QAAcC,MAAc,EAAEC,GAAY;QAAA,IAAAR,GAAA,EAAAS,MAAA,EAAAC,MAAA,EAAAC,SAAA;QAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAClChB,GAAG,GAAGQ,GAAG,CAACR,GAAG;cACnB,IAAI,CAACF,GAAG,CAAC,uCAAuC,EAAES,MAAM,EAAEP,GAAG,CAAC;cAExDS,MAAM,GAAGD,GAAG,CAACC,MAAM;cAAA,MAErBA,MAAM,IAAI,IAAI;gBAAAK,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACVN,MAAM,yBAAAO,MAAA,CAAyBV,MAAM,CAACW,QAAQ,EAAE;cAEtD,IAAI,CAACpB,GAAG,CAACqB,KAAK,CAACT,MAAM,CAAC;cAAA,MAChBrB,OAAO,CAAC,IAAI+B,KAAK,CAACV,MAAM,CAAC,EAAE,kBAAkB,CAAC;YAAA;cAAAI,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAI9C1B,YAAY,CAAC,IAAI,CAACO,UAAU,EAAEY,MAAM,CAAC;YAAA;cAE3CA,MAAM,CAACY,YAAY,GAAG,IAAIC,IAAI,EAAE;cAC1BX,SAAS,GAAGvB,iBAAiB,CAACqB,MAAM,CAACT,GAAG,CAAC;cAAAc,QAAA,CAAAE,IAAA;cAAA,OACzC,IAAI,CAACpB,UAAU,CAAC2B,YAAY,EAAE,CAACC,GAAG,CAACb,SAAS,EAAEF,MAAM,CAACgB,SAAS,EAAE,CAACC,QAAQ,EAAE,CAAC;YAAA;cAClF,IAAI,CAAC5B,GAAG,CAAC,+CAA+C,EAAEE,GAAG,EAAEW,SAAS,CAAC;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAEzE,IAAI,CAAChB,GAAG,CAAC,iDAAiD,EAAEE,GAAG,EAAAc,QAAA,CAAAa,EAAK,CAAC;YAAA;cAAA,OAAAb,QAAA,CAAAc,MAAA,WAGhEpB,GAAG;YAAA;YAAA;cAAA,OAAAM,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA,CACX;MAAA,SAAAwB,OAAAC,EAAA,EAAAC,GAAA;QAAA,OAAA9B,OAAA,CAAA+B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,MAAA;IAAA;EAAA;EAAA,OAAArC,eAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}