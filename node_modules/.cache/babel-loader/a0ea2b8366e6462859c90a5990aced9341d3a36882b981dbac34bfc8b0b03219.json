{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{ethers}from\"ethers\";import{useContractNFKeyStakingWithSigner}from\"hooks/blockchain/useHandleContracts\";import{hexToNumber}from\"utils/blockchain\";export default function useCalcRewardPerSecond(){var handleContractNFKeyStakingWithSigner=useContractNFKeyStakingWithSigner();var calcRewardsPerSecond=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(tokenID){var count,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:count=_args.length>1&&_args[1]!==undefined?_args[1]:3;return _context.abrupt(\"return\",handleContractNFKeyStakingWithSigner===null||handleContractNFKeyStakingWithSigner===void 0?void 0:handleContractNFKeyStakingWithSigner.calcRewardsPerSecond(tokenID).then(function(tx){var _hexToNumber;return+ethers.utils.formatEther((_hexToNumber=hexToNumber(tx===null||tx===void 0?void 0:tx._hex))===null||_hexToNumber===void 0?void 0:_hexToNumber.toString());}).catch(function(){return count?calcRewardsPerSecond(count-1):null;}));case 2:case\"end\":return _context.stop();}},_callee);}));return function calcRewardsPerSecond(_x){return _ref.apply(this,arguments);};}();return{calcRewardsPerSecond:calcRewardsPerSecond};}","map":{"version":3,"names":["ethers","useContractNFKeyStakingWithSigner","hexToNumber","useCalcRewardPerSecond","handleContractNFKeyStakingWithSigner","calcRewardsPerSecond","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tokenID","count","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","abrupt","then","tx","_hexToNumber","utils","formatEther","_hex","toString","catch","stop","_x","apply"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useCalcRewardPerSecond.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { useContractNFKeyStakingWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport { hexToNumber } from \"utils/blockchain\";\n\nexport default function useCalcRewardPerSecond() {\n  const handleContractNFKeyStakingWithSigner =\n    useContractNFKeyStakingWithSigner();\n  const calcRewardsPerSecond = async (tokenID, count = 3) => {\n    return handleContractNFKeyStakingWithSigner\n      ?.calcRewardsPerSecond(tokenID)\n      .then(\n        (tx) => +ethers.utils.formatEther(hexToNumber(tx?._hex)?.toString())\n      )\n      .catch(() => (count ? calcRewardsPerSecond(count - 1) : null));\n  };\n  return { calcRewardsPerSecond };\n}\n"],"mappings":"0PAAA,OAASA,MAAM,KAAQ,QAAQ,CAC/B,OAASC,iCAAiC,KAAQ,qCAAqC,CACvF,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,cAAe,SAAS,CAAAC,sBAAsBA,CAAA,CAAG,CAC/C,GAAM,CAAAC,oCAAoC,CACxCH,iCAAiC,CAAC,CAAC,CACrC,GAAM,CAAAI,oBAAoB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,OAAO,MAAAC,KAAA,CAAAC,KAAA,CAAAC,SAAA,QAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAEP,KAAK,CAAAC,KAAA,CAAAO,MAAA,IAAAP,KAAA,MAAAQ,SAAA,CAAAR,KAAA,IAAG,CAAC,QAAAI,QAAA,CAAAK,MAAA,UAC7ClB,oCAAoC,SAApCA,oCAAoC,iBAApCA,oCAAoC,CACvCC,oBAAoB,CAACM,OAAO,CAAC,CAC9BY,IAAI,CACH,SAACC,EAAE,MAAAC,YAAA,OAAK,CAACzB,MAAM,CAAC0B,KAAK,CAACC,WAAW,EAAAF,YAAA,CAACvB,WAAW,CAACsB,EAAE,SAAFA,EAAE,iBAAFA,EAAE,CAAEI,IAAI,CAAC,UAAAH,YAAA,iBAArBA,YAAA,CAAuBI,QAAQ,CAAC,CAAC,CAAC,EACtE,CAAC,CACAC,KAAK,CAAC,iBAAO,CAAAlB,KAAK,CAAGP,oBAAoB,CAACO,KAAK,CAAG,CAAC,CAAC,CAAG,IAAI,EAAC,CAAC,0BAAAK,QAAA,CAAAc,IAAA,MAAArB,OAAA,GACjE,kBAPK,CAAAL,oBAAoBA,CAAA2B,EAAA,SAAA1B,IAAA,CAAA2B,KAAA,MAAAnB,SAAA,OAOzB,CACD,MAAO,CAAET,oBAAoB,CAApBA,oBAAqB,CAAC,CACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}