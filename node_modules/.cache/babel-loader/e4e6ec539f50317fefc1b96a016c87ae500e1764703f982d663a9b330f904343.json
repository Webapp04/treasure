{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { fetch as nativeFetch, Headers } from 'native-fetch';\n/**\n * Build fetch resource for request\n */\nexport function buildResource(serverResolver, hostname, recordType) {\n  return \"\".concat(serverResolver, \"?name=\").concat(hostname, \"&type=\").concat(recordType);\n}\n/**\n * Use fetch to find the record\n */\nexport function request(_x, _x2) {\n  return _request.apply(this, arguments);\n}\n/**\n * Creates cache key composed by recordType and hostname\n *\n * @param {string} hostname\n * @param {string} recordType\n */\nfunction _request() {\n  _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resource, signal) {\n    var req, res;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return nativeFetch(resource, {\n            headers: new Headers({\n              accept: 'application/dns-json'\n            }),\n            signal: signal\n          });\n        case 2:\n          req = _context.sent;\n          _context.next = 5;\n          return req.json();\n        case 5:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _request.apply(this, arguments);\n}\nexport function getCacheKey(hostname, recordType) {\n  return \"\".concat(recordType, \"_\").concat(hostname);\n}","map":{"version":3,"names":["fetch","nativeFetch","Headers","buildResource","serverResolver","hostname","recordType","concat","request","_x","_x2","_request","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resource","signal","req","res","wrap","_callee$","_context","prev","next","headers","accept","sent","json","abrupt","stop","getCacheKey"],"sources":["/Users/apple/Documents/treasure/node_modules/dns-over-http-resolver/src/utils.ts"],"sourcesContent":["import { fetch as nativeFetch, Headers } from 'native-fetch'\n\n/**\n * Build fetch resource for request\n */\nexport function buildResource (serverResolver: string, hostname: string, recordType: string) {\n  return `${serverResolver}?name=${hostname}&type=${recordType}`\n}\n\nexport interface DNSJSON {\n  Question: Question[]\n  Answer: Answer[]\n}\n\ninterface Question {\n  name: string\n  type: number\n}\n\ninterface Answer {\n  name: string\n  type: number\n  data: string\n  TTL: number\n}\n\n/**\n * Use fetch to find the record\n */\nexport async function request (resource: string, signal: AbortSignal) {\n  const req = await nativeFetch(resource, {\n    headers: new Headers({\n      accept: 'application/dns-json'\n    }),\n    signal\n  })\n  const res = await req.json()\n\n  return res as DNSJSON\n}\n\n/**\n * Creates cache key composed by recordType and hostname\n *\n * @param {string} hostname\n * @param {string} recordType\n */\nexport function getCacheKey (hostname: string, recordType: string) {\n  return `${recordType}_${hostname}`\n}\n"],"mappings":";;AAAA,SAASA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,cAAc;AAE5D;;;AAGA,OAAM,SAAUC,aAAaA,CAAEC,cAAsB,EAAEC,QAAgB,EAAEC,UAAkB;EACzF,UAAAC,MAAA,CAAUH,cAAc,YAAAG,MAAA,CAASF,QAAQ,YAAAE,MAAA,CAASD,UAAU;AAC9D;AAmBA;;;AAGA,gBAAsBE,OAAOA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAY7B;;;;;;AAAA,SAAAF,SAAA;EAAAA,QAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAZO,SAAAC,QAAwBC,QAAgB,EAAEC,MAAmB;IAAA,IAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAChDzB,WAAW,CAACiB,QAAQ,EAAE;YACtCS,OAAO,EAAE,IAAIzB,OAAO,CAAC;cACnB0B,MAAM,EAAE;aACT,CAAC;YACFT,MAAM,EAANA;WACD,CAAC;QAAA;UALIC,GAAG,GAAAI,QAAA,CAAAK,IAAA;UAAAL,QAAA,CAAAE,IAAA;UAAA,OAMSN,GAAG,CAACU,IAAI,EAAE;QAAA;UAAtBT,GAAG,GAAAG,QAAA,CAAAK,IAAA;UAAA,OAAAL,QAAA,CAAAO,MAAA,WAEFV,GAAc;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAf,OAAA;EAAA,CACtB;EAAA,OAAAN,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAQD,OAAM,SAAUoB,WAAWA,CAAE5B,QAAgB,EAAEC,UAAkB;EAC/D,UAAAC,MAAA,CAAUD,UAAU,OAAAC,MAAA,CAAIF,QAAQ;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}