{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Wantlist } from '../wantlist/index.js';\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport var Ledger = /*#__PURE__*/function () {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  function Ledger(peerId) {\n    _classCallCheck(this, Ledger);\n    this.partner = peerId;\n    this.wantlist = new Wantlist();\n    this.exchangeCount = 0;\n    this.sentToPeer = new Map();\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    };\n  }\n\n  /**\n   * @param {number} n\n   */\n  _createClass(Ledger, [{\n    key: \"sentBytes\",\n    value: function sentBytes(n) {\n      this.exchangeCount++;\n      this.lastExchange = new Date().getTime();\n      this.accounting.bytesSent += n;\n    }\n\n    /**\n     * @param {number} n\n     */\n  }, {\n    key: \"receivedBytes\",\n    value: function receivedBytes(n) {\n      this.exchangeCount++;\n      this.lastExchange = new Date().getTime();\n      this.accounting.bytesRecv += n;\n    }\n\n    /**\n     *\n     * @param {CID} cid\n     * @param {number} priority\n     * @param {import('../message/message').Message.Wantlist.WantType} wantType\n     * @returns {void}\n     */\n  }, {\n    key: \"wants\",\n    value: function wants(cid, priority, wantType) {\n      this.wantlist.add(cid, priority, wantType);\n    }\n\n    /**\n     * @param {CID} cid\n     * @returns {void}\n     */\n  }, {\n    key: \"cancelWant\",\n    value: function cancelWant(cid) {\n      this.wantlist.remove(cid);\n    }\n\n    /**\n     * @param {CID} cid\n     */\n  }, {\n    key: \"wantlistContains\",\n    value: function wantlistContains(cid) {\n      return this.wantlist.get(cid);\n    }\n\n    /**\n     * @returns {number}\n     */\n  }, {\n    key: \"debtRatio\",\n    value: function debtRatio() {\n      return this.accounting.bytesSent / (this.accounting.bytesRecv + 1); // +1 is to prevent division by zero\n    }\n  }]);\n  return Ledger;\n}();","map":{"version":3,"names":["Wantlist","Ledger","peerId","_classCallCheck","partner","wantlist","exchangeCount","sentToPeer","Map","accounting","bytesSent","bytesRecv","_createClass","key","value","sentBytes","n","lastExchange","Date","getTime","receivedBytes","wants","cid","priority","wantType","add","cancelWant","remove","wantlistContains","get","debtRatio"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-bitswap/src/decision-engine/ledger.js"],"sourcesContent":["import { Wantlist } from '../wantlist/index.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Ledger {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor (peerId) {\n    this.partner = peerId\n    this.wantlist = new Wantlist()\n\n    this.exchangeCount = 0\n    this.sentToPeer = new Map()\n\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    }\n  }\n\n  /**\n   * @param {number} n\n   */\n  sentBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesSent += n\n  }\n\n  /**\n   * @param {number} n\n   */\n  receivedBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesRecv += n\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n  wants (cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType)\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n  cancelWant (cid) {\n    this.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  wantlistContains (cid) {\n    return this.wantlist.get(cid)\n  }\n\n  /**\n   * @returns {number}\n   */\n  debtRatio () {\n    return (this.accounting.bytesSent / (this.accounting.bytesRecv + 1)) // +1 is to prevent division by zero\n  }\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,sBAAsB;;AAE/C;AACA;AACA;;AAEA,WAAaC,MAAM;EACjB;AACF;AACA;EACE,SAAAA,OAAaC,MAAM,EAAE;IAAAC,eAAA,OAAAF,MAAA;IACnB,IAAI,CAACG,OAAO,GAAGF,MAAM;IACrB,IAAI,CAACG,QAAQ,GAAG,IAAIL,QAAQ,CAAC,CAAC;IAE9B,IAAI,CAACM,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE3B,IAAI,CAACC,UAAU,GAAG;MAChBC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE;IACb,CAAC;EACH;;EAEA;AACF;AACA;EAFEC,YAAA,CAAAX,MAAA;IAAAY,GAAA;IAAAC,KAAA,EAGA,SAAAC,UAAWC,CAAC,EAAE;MACZ,IAAI,CAACV,aAAa,EAAE;MACpB,IAAI,CAACW,YAAY,GAAI,IAAIC,IAAI,CAAC,CAAC,CAAEC,OAAO,CAAC,CAAC;MAC1C,IAAI,CAACV,UAAU,CAACC,SAAS,IAAIM,CAAC;IAChC;;IAEA;AACF;AACA;EAFE;IAAAH,GAAA;IAAAC,KAAA,EAGA,SAAAM,cAAeJ,CAAC,EAAE;MAChB,IAAI,CAACV,aAAa,EAAE;MACpB,IAAI,CAACW,YAAY,GAAI,IAAIC,IAAI,CAAC,CAAC,CAAEC,OAAO,CAAC,CAAC;MAC1C,IAAI,CAACV,UAAU,CAACE,SAAS,IAAIK,CAAC;IAChC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAH,GAAA;IAAAC,KAAA,EAOA,SAAAO,MAAOC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MAC9B,IAAI,CAACnB,QAAQ,CAACoB,GAAG,CAACH,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IAC5C;;IAEA;AACF;AACA;AACA;EAHE;IAAAX,GAAA;IAAAC,KAAA,EAKA,SAAAY,WAAYJ,GAAG,EAAE;MACf,IAAI,CAACjB,QAAQ,CAACsB,MAAM,CAACL,GAAG,CAAC;IAC3B;;IAEA;AACF;AACA;EAFE;IAAAT,GAAA;IAAAC,KAAA,EAGA,SAAAc,iBAAkBN,GAAG,EAAE;MACrB,OAAO,IAAI,CAACjB,QAAQ,CAACwB,GAAG,CAACP,GAAG,CAAC;IAC/B;;IAEA;AACF;AACA;EAFE;IAAAT,GAAA;IAAAC,KAAA,EAGA,SAAAgB,UAAA,EAAa;MACX,OAAQ,IAAI,CAACrB,UAAU,CAACC,SAAS,IAAI,IAAI,CAACD,UAAU,CAACE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IACvE;EAAC;EAAA,OAAAV,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}