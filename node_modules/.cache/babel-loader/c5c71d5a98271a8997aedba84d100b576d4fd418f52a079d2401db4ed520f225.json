{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { logger } from '@libp2p/logger';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport { isStartable } from '@libp2p/interfaces/startable';\nimport { MemoryDatastore } from 'datastore-core/memory';\nimport { DefaultPeerRouting } from './peer-routing.js';\nimport { CompoundContentRouting } from './content-routing/index.js';\nimport { getPeer } from './get-peer.js';\nimport { codes } from './errors.js';\nimport { DefaultAddressManager } from './address-manager/index.js';\nimport { DefaultConnectionManager } from './connection-manager/index.js';\nimport { AutoDialler } from './connection-manager/auto-dialler.js';\nimport { Circuit } from './circuit/transport.js';\nimport { Relay } from './circuit/index.js';\nimport { KeyChain } from './keychain/index.js';\nimport { DefaultMetrics } from './metrics/index.js';\nimport { DefaultTransportManager } from './transport-manager.js';\nimport { DefaultUpgrader } from './upgrader.js';\nimport { DefaultRegistrar } from './registrar.js';\nimport { IdentifyService } from './identify/index.js';\nimport { FetchService } from './fetch/index.js';\nimport { PingService } from './ping/index.js';\nimport { NatManager } from './nat-manager.js';\nimport { PeerRecordUpdater } from './peer-record-updater.js';\nimport { DHTPeerRouting } from './dht/dht-peer-routing.js';\nimport { PersistentPeerStore } from '@libp2p/peer-store';\nimport { DHTContentRouting } from './dht/dht-content-routing.js';\nimport { AutoDialer } from './connection-manager/dialer/auto-dialer.js';\nimport { Components, isInitializable } from '@libp2p/components';\nimport { validateConfig } from './config.js';\nimport { createEd25519PeerId } from '@libp2p/peer-id-factory';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport errCode from 'err-code';\nimport { unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { DummyDHT } from './dht/dummy-dht.js';\nimport { DummyPubSub } from './pubsub/dummy-pubsub.js';\nimport { PeerSet } from '@libp2p/peer-collections';\nimport { DefaultDialer } from './connection-manager/dialer/index.js';\nvar log = logger('libp2p');\nexport var Libp2pNode = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Libp2pNode, _EventEmitter);\n  var _super = _createSuper(Libp2pNode);\n  function Libp2pNode(init) {\n    var _init$datastore, _init$connectionEncry, _init$streamMuxers, _init$peerRouters, _init$contentRouters, _init$connectionManag, _init$peerDiscovery;\n    var _this;\n    _classCallCheck(this, Libp2pNode);\n    _this = _super.call(this);\n    _this.initializables = [];\n    _this.started = false;\n    _this.peerId = init.peerId;\n    _this.components = new Components({\n      peerId: init.peerId,\n      datastore: (_init$datastore = init.datastore) !== null && _init$datastore !== void 0 ? _init$datastore : new MemoryDatastore(),\n      connectionGater: _objectSpread({\n        denyDialPeer: function () {\n          var _denyDialPeer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context.abrupt(\"return\", _context.sent);\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          function denyDialPeer() {\n            return _denyDialPeer.apply(this, arguments);\n          }\n          return denyDialPeer;\n        }(),\n        denyDialMultiaddr: function () {\n          var _denyDialMultiaddr = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context2.abrupt(\"return\", _context2.sent);\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n          function denyDialMultiaddr() {\n            return _denyDialMultiaddr.apply(this, arguments);\n          }\n          return denyDialMultiaddr;\n        }(),\n        denyInboundConnection: function () {\n          var _denyInboundConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context3.abrupt(\"return\", _context3.sent);\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }));\n          function denyInboundConnection() {\n            return _denyInboundConnection.apply(this, arguments);\n          }\n          return denyInboundConnection;\n        }(),\n        denyOutboundConnection: function () {\n          var _denyOutboundConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context4.abrupt(\"return\", _context4.sent);\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }, _callee4);\n          }));\n          function denyOutboundConnection() {\n            return _denyOutboundConnection.apply(this, arguments);\n          }\n          return denyOutboundConnection;\n        }(),\n        denyInboundEncryptedConnection: function () {\n          var _denyInboundEncryptedConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n            return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context5.abrupt(\"return\", _context5.sent);\n                case 3:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, _callee5);\n          }));\n          function denyInboundEncryptedConnection() {\n            return _denyInboundEncryptedConnection.apply(this, arguments);\n          }\n          return denyInboundEncryptedConnection;\n        }(),\n        denyOutboundEncryptedConnection: function () {\n          var _denyOutboundEncryptedConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n            return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n              while (1) switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context6.abrupt(\"return\", _context6.sent);\n                case 3:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }, _callee6);\n          }));\n          function denyOutboundEncryptedConnection() {\n            return _denyOutboundEncryptedConnection.apply(this, arguments);\n          }\n          return denyOutboundEncryptedConnection;\n        }(),\n        denyInboundUpgradedConnection: function () {\n          var _denyInboundUpgradedConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n            return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context7.abrupt(\"return\", _context7.sent);\n                case 3:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, _callee7);\n          }));\n          function denyInboundUpgradedConnection() {\n            return _denyInboundUpgradedConnection.apply(this, arguments);\n          }\n          return denyInboundUpgradedConnection;\n        }(),\n        denyOutboundUpgradedConnection: function () {\n          var _denyOutboundUpgradedConnection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n            return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n              while (1) switch (_context8.prev = _context8.next) {\n                case 0:\n                  _context8.next = 2;\n                  return Promise.resolve(false);\n                case 2:\n                  return _context8.abrupt(\"return\", _context8.sent);\n                case 3:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }, _callee8);\n          }));\n          function denyOutboundUpgradedConnection() {\n            return _denyOutboundUpgradedConnection.apply(this, arguments);\n          }\n          return denyOutboundUpgradedConnection;\n        }(),\n        filterMultiaddrForPeer: function () {\n          var _filterMultiaddrForPeer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n            return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n              while (1) switch (_context9.prev = _context9.next) {\n                case 0:\n                  _context9.next = 2;\n                  return Promise.resolve(true);\n                case 2:\n                  return _context9.abrupt(\"return\", _context9.sent);\n                case 3:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }, _callee9);\n          }));\n          function filterMultiaddrForPeer() {\n            return _filterMultiaddrForPeer.apply(this, arguments);\n          }\n          return filterMultiaddrForPeer;\n        }()\n      }, init.connectionGater)\n    });\n    _this.components.setPeerStore(new PersistentPeerStore(_objectSpread({\n      addressFilter: _this.components.getConnectionGater().filterMultiaddrForPeer\n    }, init.peerStore)));\n    _this.services = [_this.components];\n    // Create Metrics\n    if (init.metrics.enabled) {\n      _this.metrics = _this.components.setMetrics(new DefaultMetrics(init.metrics));\n    }\n    _this.peerStore = _this.components.getPeerStore();\n    _this.peerStore.addEventListener('peer', function (evt) {\n      var peerData = evt.detail;\n      _this.dispatchEvent(new CustomEvent('peer:discovery', {\n        detail: peerData\n      }));\n    });\n    // Set up connection protector if configured\n    if (init.connectionProtector != null) {\n      _this.components.setConnectionProtector(init.connectionProtector);\n    }\n    // Set up the Upgrader\n    _this.components.setUpgrader(new DefaultUpgrader(_this.components, {\n      connectionEncryption: ((_init$connectionEncry = init.connectionEncryption) !== null && _init$connectionEncry !== void 0 ? _init$connectionEncry : []).map(function (component) {\n        return _this.configureComponent(component);\n      }),\n      muxers: ((_init$streamMuxers = init.streamMuxers) !== null && _init$streamMuxers !== void 0 ? _init$streamMuxers : []).map(function (component) {\n        return _this.configureComponent(component);\n      }),\n      inboundUpgradeTimeout: init.connectionManager.inboundUpgradeTimeout\n    }));\n    // Create the dialer\n    _this.components.setDialer(new DefaultDialer(_this.components, init.connectionManager));\n    // Create the Connection Manager\n    _this.connectionManager = _this.components.setConnectionManager(new DefaultConnectionManager(init.connectionManager));\n    // Create the Registrar\n    _this.registrar = _this.components.setRegistrar(new DefaultRegistrar(_this.components));\n    // Setup the transport manager\n    _this.components.setTransportManager(new DefaultTransportManager(_this.components, init.transportManager));\n    // Addresses {listen, announce, noAnnounce}\n    _this.components.setAddressManager(new DefaultAddressManager(_this.components, init.addresses));\n    // update our peer record when addresses change\n    _this.configureComponent(new PeerRecordUpdater(_this.components));\n    _this.configureComponent(new AutoDialler(_this.components, {\n      enabled: init.connectionManager.autoDial,\n      minConnections: init.connectionManager.minConnections,\n      autoDialInterval: init.connectionManager.autoDialInterval\n    }));\n    // Create keychain\n    var keychainOpts = KeyChain.generateOptions();\n    _this.keychain = _this.configureComponent(new KeyChain(_this.components, _objectSpread(_objectSpread({}, keychainOpts), init.keychain)));\n    // Create the Nat Manager\n    _this.services.push(new NatManager(_this.components, init.nat));\n    init.transports.forEach(function (transport) {\n      _this.components.getTransportManager().add(_this.configureComponent(transport));\n    });\n    // Attach stream multiplexers\n    if (init.streamMuxers != null && init.streamMuxers.length > 0) {\n      // Add the identify service since we can multiplex\n      _this.identifyService = new IdentifyService(_this.components, _objectSpread({}, init.identify));\n      _this.configureComponent(_this.identifyService);\n    }\n    // dht provided components (peerRouting, contentRouting, dht)\n    if (init.dht != null) {\n      _this.dht = _this.components.setDHT(init.dht);\n    } else {\n      _this.dht = new DummyDHT();\n    }\n    // Create pubsub if provided\n    if (init.pubsub != null) {\n      _this.pubsub = _this.components.setPubSub(init.pubsub);\n    } else {\n      _this.pubsub = new DummyPubSub();\n    }\n    // Attach remaining APIs\n    // peer and content routing will automatically get modules from _modules and _dht\n    var peerRouters = ((_init$peerRouters = init.peerRouters) !== null && _init$peerRouters !== void 0 ? _init$peerRouters : []).map(function (component) {\n      return _this.configureComponent(component);\n    });\n    if (init.dht != null) {\n      // add dht to routers\n      peerRouters.push(_this.configureComponent(new DHTPeerRouting(_this.dht)));\n      // use dht for peer discovery\n      _this.dht.addEventListener('peer', function (evt) {\n        _this.onDiscoveryPeer(evt);\n      });\n    }\n    _this.peerRouting = _this.components.setPeerRouting(_this.configureComponent(new DefaultPeerRouting(_this.components, _objectSpread(_objectSpread({}, init.peerRouting), {}, {\n      routers: peerRouters\n    }))));\n    var contentRouters = ((_init$contentRouters = init.contentRouters) !== null && _init$contentRouters !== void 0 ? _init$contentRouters : []).map(function (component) {\n      return _this.configureComponent(component);\n    });\n    if (init.dht != null) {\n      // add dht to routers\n      contentRouters.push(_this.configureComponent(new DHTContentRouting(_this.dht)));\n    }\n    _this.contentRouting = _this.components.setContentRouting(_this.configureComponent(new CompoundContentRouting(_this.components, {\n      routers: contentRouters\n    })));\n    if (init.relay.enabled) {\n      _this.components.getTransportManager().add(_this.configureComponent(new Circuit(init.relay)));\n      _this.configureComponent(new Relay(_this.components, _objectSpread({\n        addressSorter: init.connectionManager.addressSorter\n      }, init.relay)));\n    }\n    _this.fetchService = _this.configureComponent(new FetchService(_this.components, _objectSpread({}, init.fetch)));\n    _this.pingService = _this.configureComponent(new PingService(_this.components, _objectSpread({}, init.ping)));\n    var autoDialer = _this.configureComponent(new AutoDialer(_this.components, {\n      enabled: init.connectionManager.autoDial !== false,\n      minConnections: init.connectionManager.minConnections,\n      dialTimeout: (_init$connectionManag = init.connectionManager.dialTimeout) !== null && _init$connectionManag !== void 0 ? _init$connectionManag : 30000\n    }));\n    _this.addEventListener('peer:discovery', function (evt) {\n      if (!_this.isStarted()) {\n        return;\n      }\n      autoDialer.handle(evt);\n    });\n    // Discovery modules\n    var _iterator2 = _createForOfIteratorHelper((_init$peerDiscovery = init.peerDiscovery) !== null && _init$peerDiscovery !== void 0 ? _init$peerDiscovery : []),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var service = _step2.value;\n        _this.configureComponent(service);\n        service.addEventListener('peer', function (evt) {\n          _this.onDiscoveryPeer(evt);\n        });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return _this;\n  }\n  _createClass(Libp2pNode, [{\n    key: \"configureComponent\",\n    value: function configureComponent(component) {\n      if (isStartable(component)) {\n        this.services.push(component);\n      }\n      if (isInitializable(component)) {\n        this.initializables.push(component);\n      }\n      return component;\n    }\n    /**\n     * Starts the libp2p node and all its subsystems\n     */\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!this.started) {\n                _context12.next = 2;\n                break;\n              }\n              return _context12.abrupt(\"return\");\n            case 2:\n              this.started = true;\n              log('libp2p is starting');\n              _context12.prev = 4;\n              // Set available components on all modules interested in components\n              this.initializables.forEach(function (obj) {\n                obj.init(_this2.components);\n              });\n              _context12.next = 8;\n              return Promise.all(this.services.map( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(service) {\n                  return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                    while (1) switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (!(service.beforeStart != null)) {\n                          _context10.next = 3;\n                          break;\n                        }\n                        _context10.next = 3;\n                        return service.beforeStart();\n                      case 3:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }, _callee10);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }()));\n            case 8:\n              _context12.next = 10;\n              return Promise.all(this.services.map(function (service) {\n                return service.start();\n              }));\n            case 10:\n              _context12.next = 12;\n              return Promise.all(this.services.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(service) {\n                  return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                    while (1) switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(service.afterStart != null)) {\n                          _context11.next = 3;\n                          break;\n                        }\n                        _context11.next = 3;\n                        return service.afterStart();\n                      case 3:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }, _callee11);\n                }));\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()));\n            case 12:\n              log('libp2p has started');\n              _context12.next = 21;\n              break;\n            case 15:\n              _context12.prev = 15;\n              _context12.t0 = _context12[\"catch\"](4);\n              log.error('An error occurred starting libp2p', _context12.t0);\n              _context12.next = 20;\n              return this.stop();\n            case 20:\n              throw _context12.t0;\n            case 21:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[4, 15]]);\n      }));\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n    /**\n     * Stop the libp2p node by closing its listeners and open connections\n     */\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              if (this.started) {\n                _context15.next = 2;\n                break;\n              }\n              return _context15.abrupt(\"return\");\n            case 2:\n              log('libp2p is stopping');\n              this.started = false;\n              _context15.next = 6;\n              return Promise.all(this.services.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(service) {\n                  return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n                    while (1) switch (_context13.prev = _context13.next) {\n                      case 0:\n                        if (!(service.beforeStop != null)) {\n                          _context13.next = 3;\n                          break;\n                        }\n                        _context13.next = 3;\n                        return service.beforeStop();\n                      case 3:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }, _callee13);\n                }));\n                return function (_x3) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n            case 6:\n              _context15.next = 8;\n              return Promise.all(this.services.map(function (service) {\n                return service.stop();\n              }));\n            case 8:\n              _context15.next = 10;\n              return Promise.all(this.services.map( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(service) {\n                  return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n                    while (1) switch (_context14.prev = _context14.next) {\n                      case 0:\n                        if (!(service.afterStop != null)) {\n                          _context14.next = 3;\n                          break;\n                        }\n                        _context14.next = 3;\n                        return service.afterStop();\n                      case 3:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }, _callee14);\n                }));\n                return function (_x4) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()));\n            case 10:\n              log('libp2p has stopped');\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n      return stop;\n    }()\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.started;\n    }\n  }, {\n    key: \"getConnections\",\n    value: function getConnections(peerId) {\n      return this.components.getConnectionManager().getConnections(peerId);\n    }\n  }, {\n    key: \"getPeers\",\n    value: function getPeers() {\n      var peerSet = new PeerSet();\n      var _iterator3 = _createForOfIteratorHelper(this.components.getConnectionManager().getConnections()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var conn = _step3.value;\n          peerSet.add(conn.remotePeer);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return Array.from(peerSet);\n    }\n  }, {\n    key: \"dial\",\n    value: function () {\n      var _dial = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(peer) {\n        var options,\n          _getPeer,\n          id,\n          multiaddrs,\n          _args16 = arguments;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              options = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : {};\n              _getPeer = getPeer(peer), id = _getPeer.id, multiaddrs = _getPeer.multiaddrs;\n              _context16.next = 4;\n              return this.components.getPeerStore().addressBook.add(id, multiaddrs);\n            case 4:\n              _context16.next = 6;\n              return this.components.getConnectionManager().openConnection(id, options);\n            case 6:\n              return _context16.abrupt(\"return\", _context16.sent);\n            case 7:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function dial(_x5) {\n        return _dial.apply(this, arguments);\n      }\n      return dial;\n    }()\n  }, {\n    key: \"dialProtocol\",\n    value: function () {\n      var _dialProtocol = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(peer, protocols) {\n        var options,\n          connection,\n          _args17 = arguments;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              options = _args17.length > 2 && _args17[2] !== undefined ? _args17[2] : {};\n              if (!(protocols == null)) {\n                _context17.next = 3;\n                break;\n              }\n              throw errCode(new Error('no protocols were provided to open a stream'), codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);\n            case 3:\n              protocols = Array.isArray(protocols) ? protocols : [protocols];\n              if (!(protocols.length === 0)) {\n                _context17.next = 6;\n                break;\n              }\n              throw errCode(new Error('no protocols were provided to open a stream'), codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);\n            case 6:\n              _context17.next = 8;\n              return this.dial(peer, options);\n            case 8:\n              connection = _context17.sent;\n              _context17.next = 11;\n              return connection.newStream(protocols, options);\n            case 11:\n              return _context17.abrupt(\"return\", _context17.sent);\n            case 12:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n      function dialProtocol(_x6, _x7) {\n        return _dialProtocol.apply(this, arguments);\n      }\n      return dialProtocol;\n    }()\n  }, {\n    key: \"getMultiaddrs\",\n    value: function getMultiaddrs() {\n      return this.components.getAddressManager().getAddresses();\n    }\n  }, {\n    key: \"hangUp\",\n    value: function () {\n      var _hangUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(peer) {\n        var _getPeer2, id;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _getPeer2 = getPeer(peer), id = _getPeer2.id;\n              _context18.next = 3;\n              return this.components.getConnectionManager().closeConnections(id);\n            case 3:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function hangUp(_x8) {\n        return _hangUp.apply(this, arguments);\n      }\n      return hangUp;\n    }()\n    /**\n     * Get the public key for the given peer id\n     */\n  }, {\n    key: \"getPublicKey\",\n    value: function () {\n      var _getPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(peer) {\n        var options,\n          peerInfo,\n          peerKey,\n          _iteratorAbruptCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          event,\n          key,\n          _args19 = arguments;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              options = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : {};\n              log('getPublicKey %p', peer);\n              if (!(peer.publicKey != null)) {\n                _context19.next = 4;\n                break;\n              }\n              return _context19.abrupt(\"return\", peer.publicKey);\n            case 4:\n              _context19.next = 6;\n              return this.peerStore.get(peer);\n            case 6:\n              peerInfo = _context19.sent;\n              if (!(peerInfo.pubKey != null)) {\n                _context19.next = 9;\n                break;\n              }\n              return _context19.abrupt(\"return\", peerInfo.pubKey);\n            case 9:\n              if (!(this.dht == null)) {\n                _context19.next = 11;\n                break;\n              }\n              throw errCode(new Error('Public key was not in the peer store and the DHT is not enabled'), codes.ERR_NO_ROUTERS_AVAILABLE);\n            case 11:\n              peerKey = uint8ArrayConcat([uint8ArrayFromString('/pk/'), peer.multihash.digest]); // search the dht\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context19.prev = 14;\n              _iterator = _asyncIterator(this.dht.get(peerKey, options));\n            case 16:\n              _context19.next = 18;\n              return _iterator.next();\n            case 18:\n              if (!(_iteratorAbruptCompletion = !(_step = _context19.sent).done)) {\n                _context19.next = 28;\n                break;\n              }\n              event = _step.value;\n              if (!(event.name === 'VALUE')) {\n                _context19.next = 25;\n                break;\n              }\n              key = unmarshalPublicKey(event.value);\n              _context19.next = 24;\n              return this.peerStore.keyBook.set(peer, event.value);\n            case 24:\n              return _context19.abrupt(\"return\", key.bytes);\n            case 25:\n              _iteratorAbruptCompletion = false;\n              _context19.next = 16;\n              break;\n            case 28:\n              _context19.next = 34;\n              break;\n            case 30:\n              _context19.prev = 30;\n              _context19.t0 = _context19[\"catch\"](14);\n              _didIteratorError = true;\n              _iteratorError = _context19.t0;\n            case 34:\n              _context19.prev = 34;\n              _context19.prev = 35;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context19.next = 39;\n                break;\n              }\n              _context19.next = 39;\n              return _iterator.return();\n            case 39:\n              _context19.prev = 39;\n              if (!_didIteratorError) {\n                _context19.next = 42;\n                break;\n              }\n              throw _iteratorError;\n            case 42:\n              return _context19.finish(39);\n            case 43:\n              return _context19.finish(34);\n            case 44:\n              throw errCode(new Error(\"Node not responding with its public key: \".concat(peer.toString())), codes.ERR_INVALID_RECORD);\n            case 45:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this, [[14, 30, 34, 44], [35,, 39, 43]]);\n      }));\n      function getPublicKey(_x9) {\n        return _getPublicKey.apply(this, arguments);\n      }\n      return getPublicKey;\n    }()\n  }, {\n    key: \"fetch\",\n    value: function () {\n      var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(peer, key) {\n        var options,\n          _getPeer3,\n          id,\n          multiaddrs,\n          _args20 = arguments;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              options = _args20.length > 2 && _args20[2] !== undefined ? _args20[2] : {};\n              _getPeer3 = getPeer(peer), id = _getPeer3.id, multiaddrs = _getPeer3.multiaddrs;\n              if (!(multiaddrs != null)) {\n                _context20.next = 5;\n                break;\n              }\n              _context20.next = 5;\n              return this.components.getPeerStore().addressBook.add(id, multiaddrs);\n            case 5:\n              _context20.next = 7;\n              return this.fetchService.fetch(id, key, options);\n            case 7:\n              return _context20.abrupt(\"return\", _context20.sent);\n            case 8:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function fetch(_x10, _x11) {\n        return _fetch.apply(this, arguments);\n      }\n      return fetch;\n    }()\n  }, {\n    key: \"ping\",\n    value: function () {\n      var _ping = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(peer) {\n        var options,\n          _getPeer4,\n          id,\n          multiaddrs,\n          _args21 = arguments;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              options = _args21.length > 1 && _args21[1] !== undefined ? _args21[1] : {};\n              _getPeer4 = getPeer(peer), id = _getPeer4.id, multiaddrs = _getPeer4.multiaddrs;\n              if (!(multiaddrs.length > 0)) {\n                _context21.next = 5;\n                break;\n              }\n              _context21.next = 5;\n              return this.components.getPeerStore().addressBook.add(id, multiaddrs);\n            case 5:\n              _context21.next = 7;\n              return this.pingService.ping(id, options);\n            case 7:\n              return _context21.abrupt(\"return\", _context21.sent);\n            case 8:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function ping(_x12) {\n        return _ping.apply(this, arguments);\n      }\n      return ping;\n    }()\n  }, {\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(protocols, handler, options) {\n        var _this3 = this;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              if (!Array.isArray(protocols)) {\n                protocols = [protocols];\n              }\n              _context23.next = 3;\n              return Promise.all(protocols.map( /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(protocol) {\n                  return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n                    while (1) switch (_context22.prev = _context22.next) {\n                      case 0:\n                        _context22.next = 2;\n                        return _this3.components.getRegistrar().handle(protocol, handler, options);\n                      case 2:\n                      case \"end\":\n                        return _context22.stop();\n                    }\n                  }, _callee22);\n                }));\n                return function (_x16) {\n                  return _ref5.apply(this, arguments);\n                };\n              }()));\n            case 3:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23);\n      }));\n      function handle(_x13, _x14, _x15) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }, {\n    key: \"unhandle\",\n    value: function () {\n      var _unhandle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(protocols) {\n        var _this4 = this;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              if (!Array.isArray(protocols)) {\n                protocols = [protocols];\n              }\n              _context25.next = 3;\n              return Promise.all(protocols.map( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(protocol) {\n                  return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n                    while (1) switch (_context24.prev = _context24.next) {\n                      case 0:\n                        _context24.next = 2;\n                        return _this4.components.getRegistrar().unhandle(protocol);\n                      case 2:\n                      case \"end\":\n                        return _context24.stop();\n                    }\n                  }, _callee24);\n                }));\n                return function (_x18) {\n                  return _ref6.apply(this, arguments);\n                };\n              }()));\n            case 3:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25);\n      }));\n      function unhandle(_x17) {\n        return _unhandle.apply(this, arguments);\n      }\n      return unhandle;\n    }()\n    /**\n     * Called whenever peer discovery services emit `peer` events.\n     * Known peers may be emitted.\n     */\n  }, {\n    key: \"onDiscoveryPeer\",\n    value: function onDiscoveryPeer(evt) {\n      var peer = evt.detail;\n      if (peer.id.toString() === this.peerId.toString()) {\n        log.error(new Error(codes.ERR_DISCOVERED_SELF));\n        return;\n      }\n      if (peer.multiaddrs.length > 0) {\n        void this.components.getPeerStore().addressBook.add(peer.id, peer.multiaddrs).catch(function (err) {\n          return log.error(err);\n        });\n      }\n      if (peer.protocols.length > 0) {\n        void this.components.getPeerStore().protoBook.set(peer.id, peer.protocols).catch(function (err) {\n          return log.error(err);\n        });\n      }\n      this.dispatchEvent(new CustomEvent('peer:discovery', {\n        detail: peer\n      }));\n    }\n  }]);\n  return Libp2pNode;\n}(EventEmitter);\n/**\n * Returns a new Libp2pNode instance - this exposes more of the internals than the\n * libp2p interface and is useful for testing and debugging.\n */\nexport function createLibp2pNode(_x19) {\n  return _createLibp2pNode.apply(this, arguments);\n}\nfunction _createLibp2pNode() {\n  _createLibp2pNode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(options) {\n    return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n      while (1) switch (_context26.prev = _context26.next) {\n        case 0:\n          if (!(options.peerId == null)) {\n            _context26.next = 4;\n            break;\n          }\n          _context26.next = 3;\n          return createEd25519PeerId();\n        case 3:\n          options.peerId = _context26.sent;\n        case 4:\n          return _context26.abrupt(\"return\", new Libp2pNode(validateConfig(options)));\n        case 5:\n        case \"end\":\n          return _context26.stop();\n      }\n    }, _callee26);\n  }));\n  return _createLibp2pNode.apply(this, arguments);\n}","map":{"version":3,"names":["logger","EventEmitter","CustomEvent","isStartable","MemoryDatastore","DefaultPeerRouting","CompoundContentRouting","getPeer","codes","DefaultAddressManager","DefaultConnectionManager","AutoDialler","Circuit","Relay","KeyChain","DefaultMetrics","DefaultTransportManager","DefaultUpgrader","DefaultRegistrar","IdentifyService","FetchService","PingService","NatManager","PeerRecordUpdater","DHTPeerRouting","PersistentPeerStore","DHTContentRouting","AutoDialer","Components","isInitializable","validateConfig","createEd25519PeerId","concat","uint8ArrayConcat","fromString","uint8ArrayFromString","errCode","unmarshalPublicKey","DummyDHT","DummyPubSub","PeerSet","DefaultDialer","log","Libp2pNode","_EventEmitter","_inherits","_super","_createSuper","init","_init$datastore","_init$connectionEncry","_init$streamMuxers","_init$peerRouters","_init$contentRouters","_init$connectionManag","_init$peerDiscovery","_this","_classCallCheck","call","initializables","started","peerId","components","datastore","connectionGater","_objectSpread","denyDialPeer","_denyDialPeer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","Promise","resolve","abrupt","sent","stop","apply","arguments","denyDialMultiaddr","_denyDialMultiaddr","_callee2","_callee2$","_context2","denyInboundConnection","_denyInboundConnection","_callee3","_callee3$","_context3","denyOutboundConnection","_denyOutboundConnection","_callee4","_callee4$","_context4","denyInboundEncryptedConnection","_denyInboundEncryptedConnection","_callee5","_callee5$","_context5","denyOutboundEncryptedConnection","_denyOutboundEncryptedConnection","_callee6","_callee6$","_context6","denyInboundUpgradedConnection","_denyInboundUpgradedConnection","_callee7","_callee7$","_context7","denyOutboundUpgradedConnection","_denyOutboundUpgradedConnection","_callee8","_callee8$","_context8","filterMultiaddrForPeer","_filterMultiaddrForPeer","_callee9","_callee9$","_context9","setPeerStore","addressFilter","getConnectionGater","peerStore","services","metrics","enabled","setMetrics","getPeerStore","addEventListener","evt","peerData","detail","dispatchEvent","connectionProtector","setConnectionProtector","setUpgrader","connectionEncryption","map","component","configureComponent","muxers","streamMuxers","inboundUpgradeTimeout","connectionManager","setDialer","setConnectionManager","registrar","setRegistrar","setTransportManager","transportManager","setAddressManager","addresses","autoDial","minConnections","autoDialInterval","keychainOpts","generateOptions","keychain","push","nat","transports","forEach","transport","getTransportManager","add","length","identifyService","identify","dht","setDHT","pubsub","setPubSub","peerRouters","onDiscoveryPeer","peerRouting","setPeerRouting","routers","contentRouters","contentRouting","setContentRouting","relay","addressSorter","fetchService","fetch","pingService","ping","autoDialer","dialTimeout","isStarted","handle","_iterator2","_createForOfIteratorHelper","peerDiscovery","_step2","s","n","done","service","value","err","e","f","_createClass","key","_start","_callee12","_this2","_callee12$","_context12","obj","all","_ref","_callee10","_callee10$","_context10","beforeStart","_x","start","_ref2","_callee11","_callee11$","_context11","afterStart","_x2","t0","error","_stop","_callee15","_callee15$","_context15","_ref3","_callee13","_callee13$","_context13","beforeStop","_x3","_ref4","_callee14","_callee14$","_context14","afterStop","_x4","getConnections","getConnectionManager","getPeers","peerSet","_iterator3","_step3","conn","remotePeer","Array","from","_dial","_callee16","peer","options","_getPeer","id","multiaddrs","_args16","_callee16$","_context16","undefined","addressBook","openConnection","dial","_x5","_dialProtocol","_callee17","protocols","connection","_args17","_callee17$","_context17","Error","ERR_INVALID_PROTOCOLS_FOR_STREAM","isArray","newStream","dialProtocol","_x6","_x7","getMultiaddrs","getAddressManager","getAddresses","_hangUp","_callee18","_getPeer2","_callee18$","_context18","closeConnections","hangUp","_x8","_getPublicKey","_callee19","peerInfo","peerKey","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","event","_args19","_callee19$","_context19","publicKey","get","pubKey","ERR_NO_ROUTERS_AVAILABLE","multihash","digest","_asyncIterator","name","keyBook","set","bytes","return","finish","toString","ERR_INVALID_RECORD","getPublicKey","_x9","_fetch","_callee20","_getPeer3","_args20","_callee20$","_context20","_x10","_x11","_ping","_callee21","_getPeer4","_args21","_callee21$","_context21","_x12","_handle","_callee23","handler","_this3","_callee23$","_context23","_ref5","_callee22","protocol","_callee22$","_context22","getRegistrar","_x16","_x13","_x14","_x15","_unhandle","_callee25","_this4","_callee25$","_context25","_ref6","_callee24","_callee24$","_context24","unhandle","_x18","_x17","ERR_DISCOVERED_SELF","catch","protoBook","createLibp2pNode","_x19","_createLibp2pNode","_callee26","_callee26$","_context26"],"sources":["/Users/apple/Documents/treasure/node_modules/libp2p/src/libp2p.ts"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport type { AbortOptions } from '@libp2p/interfaces'\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events'\nimport { Startable, isStartable } from '@libp2p/interfaces/startable'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport { MemoryDatastore } from 'datastore-core/memory'\nimport { DefaultPeerRouting } from './peer-routing.js'\nimport { CompoundContentRouting } from './content-routing/index.js'\nimport { getPeer } from './get-peer.js'\nimport { codes } from './errors.js'\nimport { DefaultAddressManager } from './address-manager/index.js'\nimport { DefaultConnectionManager } from './connection-manager/index.js'\nimport { AutoDialler } from './connection-manager/auto-dialler.js'\nimport { Circuit } from './circuit/transport.js'\nimport { Relay } from './circuit/index.js'\nimport { KeyChain } from './keychain/index.js'\nimport { DefaultMetrics } from './metrics/index.js'\nimport { DefaultTransportManager } from './transport-manager.js'\nimport { DefaultUpgrader } from './upgrader.js'\nimport { DefaultRegistrar } from './registrar.js'\nimport { IdentifyService } from './identify/index.js'\nimport { FetchService } from './fetch/index.js'\nimport { PingService } from './ping/index.js'\nimport { NatManager } from './nat-manager.js'\nimport { PeerRecordUpdater } from './peer-record-updater.js'\nimport { DHTPeerRouting } from './dht/dht-peer-routing.js'\nimport { PersistentPeerStore } from '@libp2p/peer-store'\nimport { DHTContentRouting } from './dht/dht-content-routing.js'\nimport { AutoDialer } from './connection-manager/dialer/auto-dialer.js'\nimport { Initializable, Components, isInitializable } from '@libp2p/components'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { Connection } from '@libp2p/interface-connection'\nimport type { PeerRouting } from '@libp2p/interface-peer-routing'\nimport type { ContentRouting } from '@libp2p/interface-content-routing'\nimport type { PubSub } from '@libp2p/interface-pubsub'\nimport type { Registrar, StreamHandler, StreamHandlerOptions } from '@libp2p/interface-registrar'\nimport type { ConnectionManager } from '@libp2p/interface-connection-manager'\nimport type { PeerInfo } from '@libp2p/interface-peer-info'\nimport type { Libp2p, Libp2pEvents, Libp2pInit, Libp2pOptions } from './index.js'\nimport { validateConfig } from './config.js'\nimport { createEd25519PeerId } from '@libp2p/peer-id-factory'\nimport type { PeerStore } from '@libp2p/interface-peer-store'\nimport type { DualDHT } from '@libp2p/interface-dht'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport errCode from 'err-code'\nimport { unmarshalPublicKey } from '@libp2p/crypto/keys'\nimport type { Metrics } from '@libp2p/interface-metrics'\nimport { DummyDHT } from './dht/dummy-dht.js'\nimport { DummyPubSub } from './pubsub/dummy-pubsub.js'\nimport { PeerSet } from '@libp2p/peer-collections'\nimport { DefaultDialer } from './connection-manager/dialer/index.js'\n\nconst log = logger('libp2p')\n\nexport class Libp2pNode extends EventEmitter<Libp2pEvents> implements Libp2p {\n  public peerId: PeerId\n  public dht: DualDHT\n  public pubsub: PubSub\n  public identifyService?: IdentifyService\n  public fetchService: FetchService\n  public pingService: PingService\n  public components: Components\n  public peerStore: PeerStore\n  public contentRouting: ContentRouting\n  public peerRouting: PeerRouting\n  public keychain: KeyChain\n  public connectionManager: ConnectionManager\n  public registrar: Registrar\n  public metrics?: Metrics\n\n  private started: boolean\n  private readonly services: Startable[]\n  private readonly initializables: Initializable[]\n\n  constructor (init: Libp2pInit) {\n    super()\n\n    this.initializables = []\n    this.started = false\n    this.peerId = init.peerId\n    this.components = new Components({\n      peerId: init.peerId,\n      datastore: init.datastore ?? new MemoryDatastore(),\n      connectionGater: {\n        denyDialPeer: async () => await Promise.resolve(false),\n        denyDialMultiaddr: async () => await Promise.resolve(false),\n        denyInboundConnection: async () => await Promise.resolve(false),\n        denyOutboundConnection: async () => await Promise.resolve(false),\n        denyInboundEncryptedConnection: async () => await Promise.resolve(false),\n        denyOutboundEncryptedConnection: async () => await Promise.resolve(false),\n        denyInboundUpgradedConnection: async () => await Promise.resolve(false),\n        denyOutboundUpgradedConnection: async () => await Promise.resolve(false),\n        filterMultiaddrForPeer: async () => await Promise.resolve(true),\n        ...init.connectionGater\n      }\n    })\n    this.components.setPeerStore(new PersistentPeerStore({\n      addressFilter: this.components.getConnectionGater().filterMultiaddrForPeer,\n      ...init.peerStore\n    }))\n\n    this.services = [\n      this.components\n    ]\n\n    // Create Metrics\n    if (init.metrics.enabled) {\n      this.metrics = this.components.setMetrics(new DefaultMetrics(init.metrics))\n    }\n\n    this.peerStore = this.components.getPeerStore()\n\n    this.peerStore.addEventListener('peer', evt => {\n      const { detail: peerData } = evt\n\n      this.dispatchEvent(new CustomEvent<PeerInfo>('peer:discovery', { detail: peerData }))\n    })\n\n    // Set up connection protector if configured\n    if (init.connectionProtector != null) {\n      this.components.setConnectionProtector(init.connectionProtector)\n    }\n\n    // Set up the Upgrader\n    this.components.setUpgrader(new DefaultUpgrader(this.components, {\n      connectionEncryption: (init.connectionEncryption ?? []).map(component => this.configureComponent(component)),\n      muxers: (init.streamMuxers ?? []).map(component => this.configureComponent(component)),\n      inboundUpgradeTimeout: init.connectionManager.inboundUpgradeTimeout\n    }))\n\n    // Create the dialer\n    this.components.setDialer(new DefaultDialer(this.components, init.connectionManager))\n\n    // Create the Connection Manager\n    this.connectionManager = this.components.setConnectionManager(new DefaultConnectionManager(init.connectionManager))\n\n    // Create the Registrar\n    this.registrar = this.components.setRegistrar(new DefaultRegistrar(this.components))\n\n    // Setup the transport manager\n    this.components.setTransportManager(new DefaultTransportManager(this.components, init.transportManager))\n\n    // Addresses {listen, announce, noAnnounce}\n    this.components.setAddressManager(new DefaultAddressManager(this.components, init.addresses))\n\n    // update our peer record when addresses change\n    this.configureComponent(new PeerRecordUpdater(this.components))\n\n    this.configureComponent(new AutoDialler(this.components, {\n      enabled: init.connectionManager.autoDial,\n      minConnections: init.connectionManager.minConnections,\n      autoDialInterval: init.connectionManager.autoDialInterval\n    }))\n\n    // Create keychain\n    const keychainOpts = KeyChain.generateOptions()\n    this.keychain = this.configureComponent(new KeyChain(this.components, {\n      ...keychainOpts,\n      ...init.keychain\n    }))\n\n    // Create the Nat Manager\n    this.services.push(new NatManager(this.components, init.nat))\n\n    init.transports.forEach((transport) => {\n      this.components.getTransportManager().add(this.configureComponent(transport))\n    })\n\n    // Attach stream multiplexers\n    if (init.streamMuxers != null && init.streamMuxers.length > 0) {\n      // Add the identify service since we can multiplex\n      this.identifyService = new IdentifyService(this.components, {\n        ...init.identify\n      })\n      this.configureComponent(this.identifyService)\n    }\n\n    // dht provided components (peerRouting, contentRouting, dht)\n    if (init.dht != null) {\n      this.dht = this.components.setDHT(init.dht)\n    } else {\n      this.dht = new DummyDHT()\n    }\n\n    // Create pubsub if provided\n    if (init.pubsub != null) {\n      this.pubsub = this.components.setPubSub(init.pubsub)\n    } else {\n      this.pubsub = new DummyPubSub()\n    }\n\n    // Attach remaining APIs\n    // peer and content routing will automatically get modules from _modules and _dht\n\n    const peerRouters: PeerRouting[] = (init.peerRouters ?? []).map(component => this.configureComponent(component))\n\n    if (init.dht != null) {\n      // add dht to routers\n      peerRouters.push(this.configureComponent(new DHTPeerRouting(this.dht)))\n\n      // use dht for peer discovery\n      this.dht.addEventListener('peer', (evt) => {\n        this.onDiscoveryPeer(evt)\n      })\n    }\n\n    this.peerRouting = this.components.setPeerRouting(this.configureComponent(new DefaultPeerRouting(this.components, {\n      ...init.peerRouting,\n      routers: peerRouters\n    })))\n\n    const contentRouters: ContentRouting[] = (init.contentRouters ?? []).map(component => this.configureComponent(component))\n\n    if (init.dht != null) {\n      // add dht to routers\n      contentRouters.push(this.configureComponent(new DHTContentRouting(this.dht)))\n    }\n\n    this.contentRouting = this.components.setContentRouting(this.configureComponent(new CompoundContentRouting(this.components, {\n      routers: contentRouters\n    })))\n\n    if (init.relay.enabled) {\n      this.components.getTransportManager().add(this.configureComponent(new Circuit(init.relay)))\n\n      this.configureComponent(new Relay(this.components, {\n        addressSorter: init.connectionManager.addressSorter,\n        ...init.relay\n      }))\n    }\n\n    this.fetchService = this.configureComponent(new FetchService(this.components, {\n      ...init.fetch\n    }))\n\n    this.pingService = this.configureComponent(new PingService(this.components, {\n      ...init.ping\n    }))\n\n    const autoDialer = this.configureComponent(new AutoDialer(this.components, {\n      enabled: init.connectionManager.autoDial !== false,\n      minConnections: init.connectionManager.minConnections,\n      dialTimeout: init.connectionManager.dialTimeout ?? 30000\n    }))\n\n    this.addEventListener('peer:discovery', evt => {\n      if (!this.isStarted()) {\n        return\n      }\n\n      autoDialer.handle(evt)\n    })\n\n    // Discovery modules\n    for (const service of init.peerDiscovery ?? []) {\n      this.configureComponent(service)\n\n      service.addEventListener('peer', (evt) => {\n        this.onDiscoveryPeer(evt)\n      })\n    }\n  }\n\n  private configureComponent <T> (component: T): T {\n    if (isStartable(component)) {\n      this.services.push(component)\n    }\n\n    if (isInitializable(component)) {\n      this.initializables.push(component)\n    }\n\n    return component\n  }\n\n  /**\n   * Starts the libp2p node and all its subsystems\n   */\n  async start () {\n    if (this.started) {\n      return\n    }\n\n    this.started = true\n\n    log('libp2p is starting')\n\n    try {\n      // Set available components on all modules interested in components\n      this.initializables.forEach(obj => {\n        obj.init(this.components)\n      })\n\n      await Promise.all(\n        this.services.map(async service => {\n          if (service.beforeStart != null) {\n            await service.beforeStart()\n          }\n        })\n      )\n\n      // start any startables\n      await Promise.all(\n        this.services.map(service => service.start())\n      )\n\n      await Promise.all(\n        this.services.map(async service => {\n          if (service.afterStart != null) {\n            await service.afterStart()\n          }\n        })\n      )\n\n      log('libp2p has started')\n    } catch (err: any) {\n      log.error('An error occurred starting libp2p', err)\n      await this.stop()\n      throw err\n    }\n  }\n\n  /**\n   * Stop the libp2p node by closing its listeners and open connections\n   */\n  async stop () {\n    if (!this.started) {\n      return\n    }\n\n    log('libp2p is stopping')\n\n    this.started = false\n\n    await Promise.all(\n      this.services.map(async service => {\n        if (service.beforeStop != null) {\n          await service.beforeStop()\n        }\n      })\n    )\n\n    await Promise.all(\n      this.services.map(service => service.stop())\n    )\n\n    await Promise.all(\n      this.services.map(async service => {\n        if (service.afterStop != null) {\n          await service.afterStop()\n        }\n      })\n    )\n\n    log('libp2p has stopped')\n  }\n\n  isStarted () {\n    return this.started\n  }\n\n  getConnections (peerId?: PeerId): Connection[] {\n    return this.components.getConnectionManager().getConnections(peerId)\n  }\n\n  getPeers (): PeerId[] {\n    const peerSet = new PeerSet()\n\n    for (const conn of this.components.getConnectionManager().getConnections()) {\n      peerSet.add(conn.remotePeer)\n    }\n\n    return Array.from(peerSet)\n  }\n\n  async dial (peer: PeerId | Multiaddr, options: AbortOptions = {}): Promise<Connection> {\n    const { id, multiaddrs } = getPeer(peer)\n\n    await this.components.getPeerStore().addressBook.add(id, multiaddrs)\n\n    return await this.components.getConnectionManager().openConnection(id, options)\n  }\n\n  async dialProtocol (peer: PeerId | Multiaddr, protocols: string | string[], options: AbortOptions = {}) {\n    if (protocols == null) {\n      throw errCode(new Error('no protocols were provided to open a stream'), codes.ERR_INVALID_PROTOCOLS_FOR_STREAM)\n    }\n\n    protocols = Array.isArray(protocols) ? protocols : [protocols]\n\n    if (protocols.length === 0) {\n      throw errCode(new Error('no protocols were provided to open a stream'), codes.ERR_INVALID_PROTOCOLS_FOR_STREAM)\n    }\n\n    const connection = await this.dial(peer, options)\n\n    return await connection.newStream(protocols, options)\n  }\n\n  getMultiaddrs (): Multiaddr[] {\n    return this.components.getAddressManager().getAddresses()\n  }\n\n  async hangUp (peer: PeerId | Multiaddr | string): Promise<void> {\n    const { id } = getPeer(peer)\n\n    await this.components.getConnectionManager().closeConnections(id)\n  }\n\n  /**\n   * Get the public key for the given peer id\n   */\n  async getPublicKey (peer: PeerId, options: AbortOptions = {}): Promise<Uint8Array> {\n    log('getPublicKey %p', peer)\n\n    if (peer.publicKey != null) {\n      return peer.publicKey\n    }\n\n    const peerInfo = await this.peerStore.get(peer)\n\n    if (peerInfo.pubKey != null) {\n      return peerInfo.pubKey\n    }\n\n    if (this.dht == null) {\n      throw errCode(new Error('Public key was not in the peer store and the DHT is not enabled'), codes.ERR_NO_ROUTERS_AVAILABLE)\n    }\n\n    const peerKey = uint8ArrayConcat([\n      uint8ArrayFromString('/pk/'),\n      peer.multihash.digest\n    ])\n\n    // search the dht\n    for await (const event of this.dht.get(peerKey, options)) {\n      if (event.name === 'VALUE') {\n        const key = unmarshalPublicKey(event.value)\n\n        await this.peerStore.keyBook.set(peer, event.value)\n\n        return key.bytes\n      }\n    }\n\n    throw errCode(new Error(`Node not responding with its public key: ${peer.toString()}`), codes.ERR_INVALID_RECORD)\n  }\n\n  async fetch (peer: PeerId | Multiaddr | string, key: string, options: AbortOptions = {}): Promise<Uint8Array | null> {\n    const { id, multiaddrs } = getPeer(peer)\n\n    if (multiaddrs != null) {\n      await this.components.getPeerStore().addressBook.add(id, multiaddrs)\n    }\n\n    return await this.fetchService.fetch(id, key, options)\n  }\n\n  async ping (peer: PeerId | Multiaddr | string, options: AbortOptions = {}): Promise<number> {\n    const { id, multiaddrs } = getPeer(peer)\n\n    if (multiaddrs.length > 0) {\n      await this.components.getPeerStore().addressBook.add(id, multiaddrs)\n    }\n\n    return await this.pingService.ping(id, options)\n  }\n\n  async handle (protocols: string | string[], handler: StreamHandler, options?: StreamHandlerOptions): Promise<void> {\n    if (!Array.isArray(protocols)) {\n      protocols = [protocols]\n    }\n\n    await Promise.all(\n      protocols.map(async protocol => {\n        await this.components.getRegistrar().handle(protocol, handler, options)\n      })\n    )\n  }\n\n  async unhandle (protocols: string[] | string): Promise<void> {\n    if (!Array.isArray(protocols)) {\n      protocols = [protocols]\n    }\n\n    await Promise.all(\n      protocols.map(async protocol => {\n        await this.components.getRegistrar().unhandle(protocol)\n      })\n    )\n  }\n\n  /**\n   * Called whenever peer discovery services emit `peer` events.\n   * Known peers may be emitted.\n   */\n  onDiscoveryPeer (evt: CustomEvent<PeerInfo>) {\n    const { detail: peer } = evt\n\n    if (peer.id.toString() === this.peerId.toString()) {\n      log.error(new Error(codes.ERR_DISCOVERED_SELF))\n      return\n    }\n\n    if (peer.multiaddrs.length > 0) {\n      void this.components.getPeerStore().addressBook.add(peer.id, peer.multiaddrs).catch(err => log.error(err))\n    }\n\n    if (peer.protocols.length > 0) {\n      void this.components.getPeerStore().protoBook.set(peer.id, peer.protocols).catch(err => log.error(err))\n    }\n\n    this.dispatchEvent(new CustomEvent<PeerInfo>('peer:discovery', { detail: peer }))\n  }\n}\n\n/**\n * Returns a new Libp2pNode instance - this exposes more of the internals than the\n * libp2p interface and is useful for testing and debugging.\n */\nexport async function createLibp2pNode (options: Libp2pOptions): Promise<Libp2pNode> {\n  if (options.peerId == null) {\n    options.peerId = await createEd25519PeerId()\n  }\n\n  return new Libp2pNode(validateConfig(options))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}