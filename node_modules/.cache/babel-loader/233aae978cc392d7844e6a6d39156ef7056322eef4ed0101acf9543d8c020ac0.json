{"ast":null,"code":"/* eslint-disable import/export */\n/* eslint-disable @typescript-eslint/no-namespace */\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var IpnsEntry;\n(function (IpnsEntry) {\n  var ValidityType;\n  (function (ValidityType) {\n    ValidityType[\"EOL\"] = \"EOL\";\n  })(ValidityType = IpnsEntry.ValidityType || (IpnsEntry.ValidityType = {}));\n  var __ValidityTypeValues;\n  (function (__ValidityTypeValues) {\n    __ValidityTypeValues[__ValidityTypeValues[\"EOL\"] = 0] = \"EOL\";\n  })(__ValidityTypeValues || (__ValidityTypeValues = {}));\n  (function (ValidityType) {\n    ValidityType.codec = function () {\n      return enumeration(__ValidityTypeValues);\n    };\n  })(ValidityType = IpnsEntry.ValidityType || (IpnsEntry.ValidityType = {}));\n  var _codec;\n  IpnsEntry.codec = function () {\n    if (_codec == null) {\n      _codec = message(function (obj, writer) {\n        var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (opts.lengthDelimited !== false) {\n          writer.fork();\n        }\n        if (obj.value != null) {\n          writer.uint32(10);\n          writer.bytes(obj.value);\n        }\n        if (obj.signature != null) {\n          writer.uint32(18);\n          writer.bytes(obj.signature);\n        }\n        if (obj.validityType != null) {\n          writer.uint32(24);\n          IpnsEntry.ValidityType.codec().encode(obj.validityType, writer);\n        }\n        if (obj.validity != null) {\n          writer.uint32(34);\n          writer.bytes(obj.validity);\n        }\n        if (obj.sequence != null) {\n          writer.uint32(40);\n          writer.uint64(obj.sequence);\n        }\n        if (obj.ttl != null) {\n          writer.uint32(48);\n          writer.uint64(obj.ttl);\n        }\n        if (obj.pubKey != null) {\n          writer.uint32(58);\n          writer.bytes(obj.pubKey);\n        }\n        if (obj.signatureV2 != null) {\n          writer.uint32(66);\n          writer.bytes(obj.signatureV2);\n        }\n        if (obj.data != null) {\n          writer.uint32(74);\n          writer.bytes(obj.data);\n        }\n        if (opts.lengthDelimited !== false) {\n          writer.ldelim();\n        }\n      }, function (reader, length) {\n        var obj = {};\n        var end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.value = reader.bytes();\n              break;\n            case 2:\n              obj.signature = reader.bytes();\n              break;\n            case 3:\n              obj.validityType = IpnsEntry.ValidityType.codec().decode(reader);\n              break;\n            case 4:\n              obj.validity = reader.bytes();\n              break;\n            case 5:\n              obj.sequence = reader.uint64();\n              break;\n            case 6:\n              obj.ttl = reader.uint64();\n              break;\n            case 7:\n              obj.pubKey = reader.bytes();\n              break;\n            case 8:\n              obj.signatureV2 = reader.bytes();\n              break;\n            case 9:\n              obj.data = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  IpnsEntry.encode = function (obj) {\n    return encodeMessage(obj, IpnsEntry.codec());\n  };\n  IpnsEntry.decode = function (buf) {\n    return decodeMessage(buf, IpnsEntry.codec());\n  };\n})(IpnsEntry || (IpnsEntry = {}));","map":{"version":3,"names":["enumeration","encodeMessage","decodeMessage","message","IpnsEntry","ValidityType","__ValidityTypeValues","codec","_codec","obj","writer","opts","arguments","length","undefined","lengthDelimited","fork","value","uint32","bytes","signature","validityType","encode","validity","sequence","uint64","ttl","pubKey","signatureV2","data","ldelim","reader","end","len","pos","tag","decode","skipType","buf"],"sources":["/Users/apple/Documents/treasure/node_modules/ipns/src/pb/ipns.ts"],"sourcesContent":["/* eslint-disable import/export */\n/* eslint-disable @typescript-eslint/no-namespace */\n\nimport { enumeration, encodeMessage, decodeMessage, message } from 'protons-runtime'\nimport type { Uint8ArrayList } from 'uint8arraylist'\nimport type { Codec } from 'protons-runtime'\n\nexport interface IpnsEntry {\n  value?: Uint8Array\n  signature?: Uint8Array\n  validityType?: IpnsEntry.ValidityType\n  validity?: Uint8Array\n  sequence?: bigint\n  ttl?: bigint\n  pubKey?: Uint8Array\n  signatureV2?: Uint8Array\n  data?: Uint8Array\n}\n\nexport namespace IpnsEntry {\n  export enum ValidityType {\n    EOL = 'EOL'\n  }\n\n  enum __ValidityTypeValues {\n    EOL = 0\n  }\n\n  export namespace ValidityType {\n    export const codec = () => {\n      return enumeration<ValidityType>(__ValidityTypeValues)\n    }\n  }\n\n  let _codec: Codec<IpnsEntry>\n\n  export const codec = (): Codec<IpnsEntry> => {\n    if (_codec == null) {\n      _codec = message<IpnsEntry>((obj, writer, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          writer.fork()\n        }\n\n        if (obj.value != null) {\n          writer.uint32(10)\n          writer.bytes(obj.value)\n        }\n\n        if (obj.signature != null) {\n          writer.uint32(18)\n          writer.bytes(obj.signature)\n        }\n\n        if (obj.validityType != null) {\n          writer.uint32(24)\n          IpnsEntry.ValidityType.codec().encode(obj.validityType, writer)\n        }\n\n        if (obj.validity != null) {\n          writer.uint32(34)\n          writer.bytes(obj.validity)\n        }\n\n        if (obj.sequence != null) {\n          writer.uint32(40)\n          writer.uint64(obj.sequence)\n        }\n\n        if (obj.ttl != null) {\n          writer.uint32(48)\n          writer.uint64(obj.ttl)\n        }\n\n        if (obj.pubKey != null) {\n          writer.uint32(58)\n          writer.bytes(obj.pubKey)\n        }\n\n        if (obj.signatureV2 != null) {\n          writer.uint32(66)\n          writer.bytes(obj.signatureV2)\n        }\n\n        if (obj.data != null) {\n          writer.uint32(74)\n          writer.bytes(obj.data)\n        }\n\n        if (opts.lengthDelimited !== false) {\n          writer.ldelim()\n        }\n      }, (reader, length) => {\n        const obj: any = {}\n\n        const end = length == null ? reader.len : reader.pos + length\n\n        while (reader.pos < end) {\n          const tag = reader.uint32()\n\n          switch (tag >>> 3) {\n            case 1:\n              obj.value = reader.bytes()\n              break\n            case 2:\n              obj.signature = reader.bytes()\n              break\n            case 3:\n              obj.validityType = IpnsEntry.ValidityType.codec().decode(reader)\n              break\n            case 4:\n              obj.validity = reader.bytes()\n              break\n            case 5:\n              obj.sequence = reader.uint64()\n              break\n            case 6:\n              obj.ttl = reader.uint64()\n              break\n            case 7:\n              obj.pubKey = reader.bytes()\n              break\n            case 8:\n              obj.signatureV2 = reader.bytes()\n              break\n            case 9:\n              obj.data = reader.bytes()\n              break\n            default:\n              reader.skipType(tag & 7)\n              break\n          }\n        }\n\n        return obj\n      })\n    }\n\n    return _codec\n  }\n\n  export const encode = (obj: IpnsEntry): Uint8Array => {\n    return encodeMessage(obj, IpnsEntry.codec())\n  }\n\n  export const decode = (buf: Uint8Array | Uint8ArrayList): IpnsEntry => {\n    return decodeMessage(buf, IpnsEntry.codec())\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}