{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { logger } from '@libp2p/logger';\nimport errcode from 'err-code';\nimport { codes } from './errors.js';\nimport { peerIdFromPeerId } from '@libp2p/peer-id';\nimport { equals as uint8arrayEquals } from 'uint8arrays/equals';\nimport { CustomEvent } from '@libp2p/interfaces/events';\nvar log = logger('libp2p:peer-store:key-book');\nvar EVENT_NAME = 'change:pubkey';\nexport var PeerStoreKeyBook = /*#__PURE__*/function () {\n  /**\n   * The KeyBook is responsible for keeping the known public keys of a peer\n   */\n  function PeerStoreKeyBook(dispatchEvent, store) {\n    _classCallCheck(this, PeerStoreKeyBook);\n    this.dispatchEvent = dispatchEvent;\n    this.store = store;\n  }\n  /**\n   * Set the Peer public key\n   */\n  _createClass(PeerStoreKeyBook, [{\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(peerId, publicKey) {\n        var release, updatedKey, peer;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              if (publicKey instanceof Uint8Array) {\n                _context.next = 4;\n                break;\n              }\n              log.error('publicKey must be an instance of Uint8Array to store data');\n              throw errcode(new Error('publicKey must be an instance of PublicKey'), codes.ERR_INVALID_PARAMETERS);\n            case 4:\n              log.trace('set await write lock');\n              _context.next = 7;\n              return this.store.lock.writeLock();\n            case 7:\n              release = _context.sent;\n              log.trace('set got write lock');\n              updatedKey = false;\n              _context.prev = 10;\n              _context.prev = 11;\n              _context.next = 14;\n              return this.store.load(peerId);\n            case 14:\n              peer = _context.sent;\n              if (!(peer.pubKey != null && uint8arrayEquals(peer.pubKey, publicKey))) {\n                _context.next = 17;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 17:\n              _context.next = 23;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](11);\n              if (!(_context.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context.next = 23;\n                break;\n              }\n              throw _context.t0;\n            case 23:\n              _context.next = 25;\n              return this.store.patchOrCreate(peerId, {\n                pubKey: publicKey\n              });\n            case 25:\n              updatedKey = true;\n            case 26:\n              _context.prev = 26;\n              log.trace('set release write lock');\n              release();\n              return _context.finish(26);\n            case 30:\n              if (updatedKey) {\n                this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n                  detail: {\n                    peerId: peerId,\n                    publicKey: publicKey,\n                    oldPublicKey: peer == null ? undefined : peer.pubKey\n                  }\n                }));\n              }\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[10,, 26, 30], [11, 19]]);\n      }));\n      function set(_x, _x2) {\n        return _set.apply(this, arguments);\n      }\n      return set;\n    }()\n    /**\n     * Get Public key of the given PeerId, if stored\n     */\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(peerId) {\n        var release, peer;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              log.trace('get await write lock');\n              _context2.next = 4;\n              return this.store.lock.readLock();\n            case 4:\n              release = _context2.sent;\n              log.trace('get got write lock');\n              _context2.prev = 6;\n              _context2.next = 9;\n              return this.store.load(peerId);\n            case 9:\n              peer = _context2.sent;\n              return _context2.abrupt(\"return\", peer.pubKey);\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](6);\n              if (!(_context2.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context2.next = 17;\n                break;\n              }\n              throw _context2.t0;\n            case 17:\n              _context2.prev = 17;\n              log('get release write lock');\n              release();\n              return _context2.finish(17);\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[6, 13, 17, 21]]);\n      }));\n      function get(_x3) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(peerId) {\n        var release, peer;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              peerId = peerIdFromPeerId(peerId);\n              log.trace('delete await write lock');\n              _context3.next = 4;\n              return this.store.lock.writeLock();\n            case 4:\n              release = _context3.sent;\n              log.trace('delete got write lock');\n              _context3.prev = 6;\n              _context3.prev = 7;\n              _context3.next = 10;\n              return this.store.load(peerId);\n            case 10:\n              peer = _context3.sent;\n              _context3.next = 17;\n              break;\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](7);\n              if (!(_context3.t0.code !== codes.ERR_NOT_FOUND)) {\n                _context3.next = 17;\n                break;\n              }\n              throw _context3.t0;\n            case 17:\n              _context3.next = 19;\n              return this.store.patchOrCreate(peerId, {\n                pubKey: undefined\n              });\n            case 19:\n              _context3.next = 25;\n              break;\n            case 21:\n              _context3.prev = 21;\n              _context3.t1 = _context3[\"catch\"](6);\n              if (!(_context3.t1.code !== codes.ERR_NOT_FOUND)) {\n                _context3.next = 25;\n                break;\n              }\n              throw _context3.t1;\n            case 25:\n              _context3.prev = 25;\n              log.trace('delete release write lock');\n              release();\n              return _context3.finish(25);\n            case 29:\n              this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n                detail: {\n                  peerId: peerId,\n                  publicKey: undefined,\n                  oldPublicKey: peer == null ? undefined : peer.pubKey\n                }\n              }));\n            case 30:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[6, 21, 25, 29], [7, 13]]);\n      }));\n      function _delete(_x4) {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }()\n  }]);\n  return PeerStoreKeyBook;\n}();","map":{"version":3,"names":["logger","errcode","codes","peerIdFromPeerId","equals","uint8arrayEquals","CustomEvent","log","EVENT_NAME","PeerStoreKeyBook","dispatchEvent","store","_classCallCheck","_createClass","key","value","_set","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peerId","publicKey","release","updatedKey","peer","wrap","_callee$","_context","prev","next","Uint8Array","error","Error","ERR_INVALID_PARAMETERS","trace","lock","writeLock","sent","load","pubKey","abrupt","t0","code","ERR_NOT_FOUND","patchOrCreate","finish","detail","oldPublicKey","undefined","stop","set","_x","_x2","apply","arguments","_get","_callee2","_callee2$","_context2","readLock","get","_x3","_delete2","_callee3","_callee3$","_context3","t1","_delete","_x4"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/peer-store/src/key-book.ts"],"sourcesContent":["import { logger } from '@libp2p/logger'\nimport errcode from 'err-code'\nimport { codes } from './errors.js'\nimport { peerIdFromPeerId } from '@libp2p/peer-id'\nimport { equals as uint8arrayEquals } from 'uint8arrays/equals'\nimport { CustomEvent } from '@libp2p/interfaces/events'\nimport type { Store } from './store.js'\nimport type { PeerStore, KeyBook, PeerPublicKeyChangeData, Peer } from '@libp2p/interface-peer-store'\nimport type { PeerId } from '@libp2p/interface-peer-id'\n\nconst log = logger('libp2p:peer-store:key-book')\n\nconst EVENT_NAME = 'change:pubkey'\n\nexport class PeerStoreKeyBook implements KeyBook {\n  private readonly dispatchEvent: PeerStore['dispatchEvent']\n  private readonly store: Store\n\n  /**\n   * The KeyBook is responsible for keeping the known public keys of a peer\n   */\n  constructor (dispatchEvent: PeerStore['dispatchEvent'], store: Store) {\n    this.dispatchEvent = dispatchEvent\n    this.store = store\n  }\n\n  /**\n   * Set the Peer public key\n   */\n  async set (peerId: PeerId, publicKey: Uint8Array) {\n    peerId = peerIdFromPeerId(peerId)\n\n    if (!(publicKey instanceof Uint8Array)) {\n      log.error('publicKey must be an instance of Uint8Array to store data')\n      throw errcode(new Error('publicKey must be an instance of PublicKey'), codes.ERR_INVALID_PARAMETERS)\n    }\n\n    log.trace('set await write lock')\n    const release = await this.store.lock.writeLock()\n    log.trace('set got write lock')\n\n    let updatedKey = false\n    let peer: Peer | undefined\n\n    try {\n      try {\n        peer = await this.store.load(peerId)\n\n        if ((peer.pubKey != null) && uint8arrayEquals(peer.pubKey, publicKey)) {\n          return\n        }\n      } catch (err: any) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err\n        }\n      }\n\n      await this.store.patchOrCreate(peerId, {\n        pubKey: publicKey\n      })\n      updatedKey = true\n    } finally {\n      log.trace('set release write lock')\n      release()\n    }\n\n    if (updatedKey) {\n      this.dispatchEvent(new CustomEvent<PeerPublicKeyChangeData>(EVENT_NAME, {\n        detail: {\n          peerId,\n          publicKey: publicKey,\n          oldPublicKey: peer == null ? undefined : peer.pubKey\n        }\n      }))\n    }\n  }\n\n  /**\n   * Get Public key of the given PeerId, if stored\n   */\n  async get (peerId: PeerId) {\n    peerId = peerIdFromPeerId(peerId)\n\n    log.trace('get await write lock')\n    const release = await this.store.lock.readLock()\n    log.trace('get got write lock')\n\n    try {\n      const peer = await this.store.load(peerId)\n\n      return peer.pubKey\n    } catch (err: any) {\n      if (err.code !== codes.ERR_NOT_FOUND) {\n        throw err\n      }\n    } finally {\n      log('get release write lock')\n      release()\n    }\n  }\n\n  async delete (peerId: PeerId) {\n    peerId = peerIdFromPeerId(peerId)\n\n    log.trace('delete await write lock')\n    const release = await this.store.lock.writeLock()\n    log.trace('delete got write lock')\n\n    let peer: Peer | undefined\n\n    try {\n      try {\n        peer = await this.store.load(peerId)\n      } catch (err: any) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err\n        }\n      }\n\n      await this.store.patchOrCreate(peerId, {\n        pubKey: undefined\n      })\n    } catch (err: any) {\n      if (err.code !== codes.ERR_NOT_FOUND) {\n        throw err\n      }\n    } finally {\n      log.trace('delete release write lock')\n      release()\n    }\n\n    this.dispatchEvent(new CustomEvent<PeerPublicKeyChangeData>(EVENT_NAME, {\n      detail: {\n        peerId,\n        publicKey: undefined,\n        oldPublicKey: peer == null ? undefined : peer.pubKey\n      }\n    }))\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}