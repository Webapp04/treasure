{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport filter from 'it-filter';\nimport { pushable } from 'it-pushable';\nimport drain from 'it-drain';\nimport { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport { identity } from 'multiformats/hashes/identity';\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createIdStore(store) {\n  return {\n    open: function open() {\n      return store.open();\n    },\n    close: function close() {\n      return store.close();\n    },\n    query: function query(_query, options) {\n      return store.query(_query, options);\n    },\n    queryKeys: function queryKeys(query, options) {\n      return store.queryKeys(query, options);\n    },\n    get: function get(cid, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var extracted;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              extracted = extractContents(cid);\n              if (!extracted.isIdentity) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", Promise.resolve(extracted.digest));\n            case 3:\n              return _context.abrupt(\"return\", store.get(cid, options));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    getMany: function getMany(cids, options) {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, cid;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context2.prev = 2;\n              _iterator = _asyncIterator(cids);\n            case 4:\n              _context2.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context2.sent).done)) {\n                _context2.next = 13;\n                break;\n              }\n              cid = _step.value;\n              _context2.next = 10;\n              return _this.get(cid, options);\n            case 10:\n              _iteratorAbruptCompletion = false;\n              _context2.next = 4;\n              break;\n            case 13:\n              _context2.next = 19;\n              break;\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n            case 19:\n              _context2.prev = 19;\n              _context2.prev = 20;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context2.next = 24;\n                break;\n              }\n              _context2.next = 24;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 24:\n              _context2.prev = 24;\n              if (!_didIteratorError) {\n                _context2.next = 27;\n                break;\n              }\n              throw _iteratorError;\n            case 27:\n              return _context2.finish(24);\n            case 28:\n              return _context2.finish(19);\n            case 29:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[2, 15, 19, 29], [20,, 24, 28]]);\n      }))();\n    },\n    put: function put(cid, buf, options) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _extractContents, isIdentity;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _extractContents = extractContents(cid), isIdentity = _extractContents.isIdentity;\n              if (!isIdentity) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              _context3.next = 5;\n              return store.put(cid, buf, options);\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    putMany: function putMany(pairs, options) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var output, runner;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              // in order to return all blocks. we're going to assemble a seperate iterable\n              // return rather than return the resolves of store.putMany using the same\n              // process used by blockstore.putMany\n              output = pushable({\n                objectMode: true\n              }); // process.nextTick runs on the microtask queue, setImmediate runs on the next\n              // event loop iteration so is slower. Use process.nextTick if it is available.\n              runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : globalThis.setImmediate || globalThis.setTimeout;\n              runner( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n                return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                  while (1) switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.prev = 0;\n                      _context5.next = 3;\n                      return drain(store.putMany(_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                        var _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _step2$value, key, value;\n                        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                          while (1) switch (_context4.prev = _context4.next) {\n                            case 0:\n                              _iteratorAbruptCompletion2 = false;\n                              _didIteratorError2 = false;\n                              _context4.prev = 2;\n                              _iterator2 = _asyncIterator(pairs);\n                            case 4:\n                              _context4.next = 6;\n                              return _awaitAsyncGenerator(_iterator2.next());\n                            case 6:\n                              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context4.sent).done)) {\n                                _context4.next = 15;\n                                break;\n                              }\n                              _step2$value = _step2.value, key = _step2$value.key, value = _step2$value.value;\n                              if (extractContents(key).isIdentity) {\n                                _context4.next = 11;\n                                break;\n                              }\n                              _context4.next = 11;\n                              return {\n                                key: key,\n                                value: value\n                              };\n                            case 11:\n                              // if non identity blocks successfully write, blocks are included in output\n                              output.push({\n                                key: key,\n                                value: value\n                              });\n                            case 12:\n                              _iteratorAbruptCompletion2 = false;\n                              _context4.next = 4;\n                              break;\n                            case 15:\n                              _context4.next = 21;\n                              break;\n                            case 17:\n                              _context4.prev = 17;\n                              _context4.t0 = _context4[\"catch\"](2);\n                              _didIteratorError2 = true;\n                              _iteratorError2 = _context4.t0;\n                            case 21:\n                              _context4.prev = 21;\n                              _context4.prev = 22;\n                              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                                _context4.next = 26;\n                                break;\n                              }\n                              _context4.next = 26;\n                              return _awaitAsyncGenerator(_iterator2.return());\n                            case 26:\n                              _context4.prev = 26;\n                              if (!_didIteratorError2) {\n                                _context4.next = 29;\n                                break;\n                              }\n                              throw _iteratorError2;\n                            case 29:\n                              return _context4.finish(26);\n                            case 30:\n                              return _context4.finish(21);\n                            case 31:\n                            case \"end\":\n                              return _context4.stop();\n                          }\n                        }, _callee4, null, [[2, 17, 21, 31], [22,, 26, 30]]);\n                      }))()));\n                    case 3:\n                      output.end();\n                      _context5.next = 9;\n                      break;\n                    case 6:\n                      _context5.prev = 6;\n                      _context5.t0 = _context5[\"catch\"](0);\n                      output.end(_context5.t0);\n                    case 9:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }, _callee5, null, [[0, 6]]);\n              })));\n              return _context6.delegateYield(_asyncGeneratorDelegate(_asyncIterator(output), _awaitAsyncGenerator), \"t0\", 4);\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    },\n    has: function has(cid, options) {\n      var _extractContents2 = extractContents(cid),\n        isIdentity = _extractContents2.isIdentity;\n      if (isIdentity) {\n        return Promise.resolve(true);\n      }\n      return store.has(cid, options);\n    },\n    delete: function _delete(cid, options) {\n      var _extractContents3 = extractContents(cid),\n        isIdentity = _extractContents3.isIdentity;\n      if (isIdentity) {\n        return Promise.resolve();\n      }\n      return store.delete(cid, options);\n    },\n    deleteMany: function deleteMany(cids, options) {\n      return store.deleteMany(filter(cids, function (cid) {\n        return !extractContents(cid).isIdentity;\n      }), options);\n    },\n    batch: function batch() {\n      var batch = store.batch();\n      return {\n        put: function put(cid, buf) {\n          var _extractContents4 = extractContents(cid),\n            isIdentity = _extractContents4.isIdentity;\n          if (isIdentity) {\n            return;\n          }\n          batch.put(cid, buf);\n        },\n        delete: function _delete(cid) {\n          var _extractContents5 = extractContents(cid),\n            isIdentity = _extractContents5.isIdentity;\n          if (isIdentity) {\n            return;\n          }\n          batch.delete(cid);\n        },\n        commit: function commit(options) {\n          return batch.commit(options);\n        }\n      };\n    }\n  };\n}\n\n/**\n * @param {CID} k\n * @returns {{ isIdentity: false } | { isIdentity: true, digest: Uint8Array}}\n */\nfunction extractContents(k) {\n  var cid = CID.asCID(k);\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID');\n  }\n  if (cid.multihash.code !== identity.code) {\n    return {\n      isIdentity: false\n    };\n  }\n  return {\n    isIdentity: true,\n    digest: cid.multihash.digest\n  };\n}","map":{"version":3,"names":["filter","pushable","drain","CID","errCode","identity","createIdStore","store","open","close","query","options","queryKeys","get","cid","_asyncToGenerator","_regeneratorRuntime","mark","_callee","extracted","wrap","_callee$","_context","prev","next","extractContents","isIdentity","abrupt","Promise","resolve","digest","stop","getMany","cids","_this","_wrapAsyncGenerator","_callee2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","_callee2$","_context2","_asyncIterator","_awaitAsyncGenerator","sent","done","value","t0","return","finish","put","buf","_callee3","_extractContents","_callee3$","_context3","putMany","pairs","_callee6","output","runner","_callee6$","_context6","objectMode","globalThis","process","nextTick","setImmediate","setTimeout","_callee5","_callee5$","_context5","_callee4","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_step2$value","key","_callee4$","_context4","push","end","delegateYield","_asyncGeneratorDelegate","has","_extractContents2","delete","_delete","_extractContents3","deleteMany","batch","_extractContents4","_extractContents5","commit","k","asCID","Error","multihash","code"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-repo/src/idstore.js"],"sourcesContent":["\nimport filter from 'it-filter'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\nimport { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport { identity } from 'multiformats/hashes/identity'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createIdStore (store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      const extracted = extractContents(cid)\n      if (extracted.isIdentity) {\n        return Promise.resolve(extracted.digest)\n      }\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      for await (const cid of cids) {\n        yield this.get(cid, options)\n      }\n    },\n\n    async put (cid, buf, options) {\n      const { isIdentity } = extractContents(cid)\n\n      if (isIdentity) {\n        return\n      }\n\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      // in order to return all blocks. we're going to assemble a seperate iterable\n      // return rather than return the resolves of store.putMany using the same\n      // process used by blockstore.putMany\n      const output = pushable({\n        objectMode: true\n      })\n\n      // process.nextTick runs on the microtask queue, setImmediate runs on the next\n      // event loop iteration so is slower. Use process.nextTick if it is available.\n      const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : (globalThis.setImmediate || globalThis.setTimeout)\n\n      runner(async () => {\n        try {\n          await drain(store.putMany(async function * () {\n            for await (const { key, value } of pairs) {\n              if (!extractContents(key).isIdentity) {\n                yield { key, value }\n              }\n\n              // if non identity blocks successfully write, blocks are included in output\n              output.push({ key, value })\n            }\n          }()))\n\n          output.end()\n        } catch (/** @type {any} */ err) {\n          output.end(err)\n        }\n      })\n\n      yield * output\n    },\n\n    has (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve(true)\n      }\n      return store.has(cid, options)\n    },\n\n    delete (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve()\n      }\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(filter(cids, (cid) => !extractContents(cid).isIdentity), options)\n    },\n\n    batch () {\n      const batch = store.batch()\n\n      return {\n        put (cid, buf) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.put(cid, buf)\n        },\n        delete (cid) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.delete(cid)\n        },\n        commit: (options) => {\n          return batch.commit(options)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {CID} k\n * @returns {{ isIdentity: false } | { isIdentity: true, digest: Uint8Array}}\n */\nfunction extractContents (k) {\n  const cid = CID.asCID(k)\n\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  if (cid.multihash.code !== identity.code) {\n    return {\n      isIdentity: false\n    }\n  }\n\n  return {\n    isIdentity: true,\n    digest: cid.multihash.digest\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}