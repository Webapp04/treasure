{"ast":null,"code":"import _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { Key } from 'interface-datastore';\nimport { readShardFun, SHARDING_FN, README_FN, readme } from './shard.js';\nimport { BaseDatastore } from './base.js';\nimport { KeyTransformDatastore } from './keytransform.js';\nimport * as Errors from './errors.js';\nvar shardKey = new Key(SHARDING_FN);\nvar shardReadmeKey = new Key(README_FN);\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nexport var ShardingDatastore = /*#__PURE__*/function (_BaseDatastore) {\n  _inherits(ShardingDatastore, _BaseDatastore);\n  var _super = _createSuper(ShardingDatastore);\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  function ShardingDatastore(store, shard) {\n    var _this4;\n    _classCallCheck(this, ShardingDatastore);\n    _this4 = _super.call(this);\n    _this4.child = new KeyTransformDatastore(store, {\n      convert: _this4._convertKey.bind(_assertThisInitialized(_this4)),\n      invert: _this4._invertKey.bind(_assertThisInitialized(_this4))\n    });\n    _this4.shard = shard;\n    return _this4;\n  }\n  _createClass(ShardingDatastore, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.child.open();\n            case 2:\n              _context.next = 4;\n              return ShardingDatastore.create(this.child, this.shard);\n            case 4:\n              this.shard = _context.sent;\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function open() {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n    /**\n     * @param {Key} key\n     */\n  }, {\n    key: \"_convertKey\",\n    value: function _convertKey(key) {\n      var s = key.toString();\n      if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n        return key;\n      }\n      var parent = new Key(this.shard.fun(s));\n      return parent.child(key);\n    }\n\n    /**\n     * @param {Key} key\n     */\n  }, {\n    key: \"_invertKey\",\n    value: function _invertKey(key) {\n      var s = key.toString();\n      if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n        return key;\n      }\n      return Key.withNamespaces(key.list().slice(1));\n    }\n\n    /**\n     * @deprecated\n     * @param {Datastore} store\n     * @param {Shard} shard\n     */\n  }, {\n    key: \"put\",\n    value:\n    /**\n     * @param {Key} key\n     * @param {Uint8Array} val\n     * @param {Options} [options]\n     */\n    function put(key, val, options) {\n      return this.child.put(key, val, options);\n    }\n\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"get\",\n    value: function get(key, options) {\n      return this.child.get(key, options);\n    }\n\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"has\",\n    value: function has(key, options) {\n      return this.child.has(key, options);\n    }\n\n    /**\n     * @param {Key} key\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(key, options) {\n      return this.child.delete(key, options);\n    }\n\n    /**\n     * @param {AwaitIterable<Pair>} source\n     * @param {Options} [options]\n     * @returns {AsyncIterable<Pair>}\n     */\n  }, {\n    key: \"putMany\",\n    value: function putMany(source) {\n      var _this = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(_this.child.putMany(source, options)), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n\n    /**\n     * @param {AwaitIterable<Key>} source\n     * @param {Options} [options]\n     * @returns {AsyncIterable<Uint8Array>}\n     */\n  }, {\n    key: \"getMany\",\n    value: function getMany(source) {\n      var _this2 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(_this2.child.getMany(source, options)), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n\n    /**\n     * @param {AwaitIterable<Key>} source\n     * @param {Options} [options]\n     * @returns {AsyncIterable<Key>}\n     */\n  }, {\n    key: \"deleteMany\",\n    value: function deleteMany(source) {\n      var _this3 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.delegateYield(_asyncGeneratorDelegate(_asyncIterator(_this3.child.deleteMany(source, options)), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  }, {\n    key: \"batch\",\n    value: function batch() {\n      return this.child.batch();\n    }\n\n    /**\n     * @param {Query} q\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"query\",\n    value: function query(q, options) {\n      /** @type {Query} */\n      var tq = _objectSpread(_objectSpread({}, q), {}, {\n        filters: [/** @type {QueryFilter} */\n        function (_ref) {\n          var key = _ref.key;\n          return key.toString() !== shardKey.toString();\n        }, /** @type {QueryFilter} */\n        function (_ref2) {\n          var key = _ref2.key;\n          return key.toString() !== shardReadmeKey.toString();\n        }].concat(q.filters || [])\n      });\n      return this.child.query(tq, options);\n    }\n\n    /**\n     * @param {KeyQuery} q\n     * @param {Options} [options]\n     */\n  }, {\n    key: \"queryKeys\",\n    value: function queryKeys(q, options) {\n      /** @type {KeyQuery} */\n      var tq = _objectSpread(_objectSpread({}, q), {}, {\n        filters: [/** @type {KeyQueryFilter} */\n        function (key) {\n          return key.toString() !== shardKey.toString();\n        }, /** @type {KeyQueryFilter} */\n        function (key) {\n          return key.toString() !== shardReadmeKey.toString();\n        }].concat(q.filters || [])\n      });\n      return this.child.queryKeys(tq, options);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      return this.child.close();\n    }\n  }], [{\n    key: \"createOrOpen\",\n    value: function () {\n      var _createOrOpen = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(store, shard) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return ShardingDatastore.create(store, shard);\n            case 3:\n              _context5.next = 9;\n              break;\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n              if (!(_context5.t0 && _context5.t0.message !== 'datastore exists')) {\n                _context5.next = 9;\n                break;\n              }\n              throw _context5.t0;\n            case 9:\n              return _context5.abrupt(\"return\", ShardingDatastore.open(store));\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n      function createOrOpen(_x, _x2) {\n        return _createOrOpen.apply(this, arguments);\n      }\n      return createOrOpen;\n    }()\n    /**\n     * @deprecated\n     * @param {Datastore} store\n     */\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(store) {\n        var shard;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return readShardFun('/', store);\n            case 2:\n              shard = _context6.sent;\n              return _context6.abrupt(\"return\", new ShardingDatastore(store, shard));\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      function open(_x3) {\n        return _open2.apply(this, arguments);\n      }\n      return open;\n    }()\n    /**\n     * @param {Datastore} store\n     * @param {Shard} shard\n     */\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(store, shard) {\n        var hasShard, put, diskShard, a, b;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return store.has(shardKey);\n            case 2:\n              hasShard = _context7.sent;\n              if (!(!hasShard && !shard)) {\n                _context7.next = 5;\n                break;\n              }\n              throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'));\n            case 5:\n              if (hasShard) {\n                _context7.next = 10;\n                break;\n              }\n              // @ts-ignore i have no idea what putRaw is or saw any implementation\n              put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store);\n              _context7.next = 9;\n              return Promise.all([put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')), put(shardReadmeKey, new TextEncoder().encode(readme))]);\n            case 9:\n              return _context7.abrupt(\"return\", shard);\n            case 10:\n              _context7.next = 12;\n              return readShardFun('/', store);\n            case 12:\n              diskShard = _context7.sent;\n              a = (diskShard || '').toString();\n              b = shard.toString();\n              if (!(a !== b)) {\n                _context7.next = 17;\n                break;\n              }\n              throw new Error(\"specified fun \".concat(b, \" does not match repo shard fun \").concat(a));\n            case 17:\n              return _context7.abrupt(\"return\", diskShard);\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      function create(_x4, _x5) {\n        return _create.apply(this, arguments);\n      }\n      return create;\n    }()\n  }]);\n  return ShardingDatastore;\n}(BaseDatastore);","map":{"version":3,"names":["Key","readShardFun","SHARDING_FN","README_FN","readme","BaseDatastore","KeyTransformDatastore","Errors","shardKey","shardReadmeKey","ShardingDatastore","_BaseDatastore","_inherits","_super","_createSuper","store","shard","_this4","_classCallCheck","call","child","convert","_convertKey","bind","_assertThisInitialized","invert","_invertKey","_createClass","key","value","_open","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","open","create","sent","stop","apply","arguments","s","toString","parent","fun","withNamespaces","list","slice","put","val","options","get","has","_delete","delete","putMany","source","_this","length","undefined","_wrapAsyncGenerator","_callee2","_callee2$","_context2","delegateYield","_asyncGeneratorDelegate","_asyncIterator","_awaitAsyncGenerator","getMany","_this2","_callee3","_callee3$","_context3","deleteMany","_this3","_callee4","_callee4$","_context4","batch","query","q","tq","_objectSpread","filters","_ref","_ref2","concat","queryKeys","close","_createOrOpen","_callee5","_callee5$","_context5","t0","message","abrupt","createOrOpen","_x","_x2","_open2","_callee6","_callee6$","_context6","_x3","_create","_callee7","hasShard","diskShard","a","b","_callee7$","_context7","dbOpenFailedError","Error","putRaw","Promise","all","TextEncoder","encode","_x4","_x5"],"sources":["/Users/apple/Documents/treasure/node_modules/datastore-core/src/sharding.js"],"sourcesContent":["import { Key } from 'interface-datastore'\nimport {\n  readShardFun,\n  SHARDING_FN,\n  README_FN,\n  readme\n} from './shard.js'\nimport { BaseDatastore } from './base.js'\nimport { KeyTransformDatastore } from './keytransform.js'\nimport * as Errors from './errors.js'\n\nconst shardKey = new Key(SHARDING_FN)\nconst shardReadmeKey = new Key(README_FN)\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nexport class ShardingDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  constructor (store, shard) {\n    super()\n\n    this.child = new KeyTransformDatastore(store, {\n      convert: this._convertKey.bind(this),\n      invert: this._invertKey.bind(this)\n    })\n    this.shard = shard\n  }\n\n  async open () {\n    await this.child.open()\n\n    this.shard = await ShardingDatastore.create(this.child, this.shard)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _convertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n\n    const parent = new Key(this.shard.fun(s))\n    return parent.child(key)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _invertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n    return Key.withNamespaces(key.list().slice(1))\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async createOrOpen (store, shard) {\n    try {\n      await ShardingDatastore.create(store, shard)\n    } catch (/** @type {any} */ err) {\n      if (err && err.message !== 'datastore exists') throw err\n    }\n    return ShardingDatastore.open(store)\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   */\n  static async open (store) {\n    const shard = await readShardFun('/', store)\n    return new ShardingDatastore(store, shard)\n  }\n\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async create (store, shard) {\n    const hasShard = await store.has(shardKey)\n    if (!hasShard && !shard) {\n      throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'))\n    }\n    if (!hasShard) {\n      // @ts-ignore i have no idea what putRaw is or saw any implementation\n      const put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store)\n      await Promise.all([\n        put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')),\n        put(shardReadmeKey, new TextEncoder().encode(readme))\n      ])\n\n      return shard\n    }\n\n    // test shards\n    const diskShard = await readShardFun('/', store)\n    const a = (diskShard || '').toString()\n    const b = shard.toString()\n    if (a !== b) {\n      throw new Error(`specified fun ${b} does not match repo shard fun ${a}`)\n    }\n    return diskShard\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   */\n  put (key, val, options) {\n    return this.child.put(key, val, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  get (key, options) {\n    return this.child.get(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  has (key, options) {\n    return this.child.has(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  delete (key, options) {\n    return this.child.delete(key, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    yield * this.child.putMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    yield * this.child.getMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    yield * this.child.deleteMany(source, options)\n  }\n\n  batch () {\n    return this.child.batch()\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    /** @type {Query} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardKey.toString(),\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.query(tq, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    /** @type {KeyQuery} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardKey.toString(),\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.queryKeys(tq, options)\n  }\n\n  close () {\n    return this.child.close()\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}