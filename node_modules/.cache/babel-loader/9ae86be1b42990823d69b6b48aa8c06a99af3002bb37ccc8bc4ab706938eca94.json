{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {import('../types').PersistOptions} options\n */\nvar persist = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(buffer, blockstore, options) {\n    var multihash, cid;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!options.codec) {\n            options.codec = dagPb;\n          }\n          if (!options.hasher) {\n            options.hasher = sha256;\n          }\n          if (options.cidVersion === undefined) {\n            options.cidVersion = 1;\n          }\n          if (options.codec === dagPb && options.hasher !== sha256) {\n            options.cidVersion = 1;\n          }\n          _context.next = 6;\n          return options.hasher.digest(buffer);\n        case 6:\n          multihash = _context.sent;\n          cid = CID.create(options.cidVersion, options.codec.code, multihash);\n          if (options.onlyHash) {\n            _context.next = 11;\n            break;\n          }\n          _context.next = 11;\n          return blockstore.put(cid, buffer, {\n            signal: options.signal\n          });\n        case 11:\n          return _context.abrupt(\"return\", cid);\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function persist(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default persist;","map":{"version":3,"names":["CID","dagPb","sha256","persist","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","buffer","blockstore","options","multihash","cid","wrap","_callee$","_context","prev","next","codec","hasher","cidVersion","undefined","digest","sent","create","code","onlyHash","put","signal","abrupt","stop","_x","_x2","_x3","apply","arguments"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-importer/src/utils/persist.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport * as dagPb from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {import('../types').PersistOptions} options\n */\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb\n  }\n\n  if (!options.hasher) {\n    options.hasher = sha256\n  }\n\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1\n  }\n\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1\n  }\n\n  const multihash = await options.hasher.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, {\n      signal: options.signal\n    })\n  }\n\n  return cid\n}\n\nexport default persist\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,SAASC,MAAM,QAAQ,0BAA0B;;AAEjD;AACA;AACA;AACA;AACA;AACA,IAAMC,OAAO;EAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,MAAM,EAAEC,UAAU,EAAEC,OAAO;IAAA,IAAAC,SAAA,EAAAC,GAAA;IAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAChD,IAAI,CAACP,OAAO,CAACQ,KAAK,EAAE;YAClBR,OAAO,CAACQ,KAAK,GAAGlB,KAAK;UACvB;UAEA,IAAI,CAACU,OAAO,CAACS,MAAM,EAAE;YACnBT,OAAO,CAACS,MAAM,GAAGlB,MAAM;UACzB;UAEA,IAAIS,OAAO,CAACU,UAAU,KAAKC,SAAS,EAAE;YACpCX,OAAO,CAACU,UAAU,GAAG,CAAC;UACxB;UAEA,IAAIV,OAAO,CAACQ,KAAK,KAAKlB,KAAK,IAAIU,OAAO,CAACS,MAAM,KAAKlB,MAAM,EAAE;YACxDS,OAAO,CAACU,UAAU,GAAG,CAAC;UACxB;UAACL,QAAA,CAAAE,IAAA;UAAA,OAEuBP,OAAO,CAACS,MAAM,CAACG,MAAM,CAACd,MAAM,CAAC;QAAA;UAA/CG,SAAS,GAAAI,QAAA,CAAAQ,IAAA;UACTX,GAAG,GAAGb,GAAG,CAACyB,MAAM,CAACd,OAAO,CAACU,UAAU,EAAEV,OAAO,CAACQ,KAAK,CAACO,IAAI,EAAEd,SAAS,CAAC;UAAA,IAEpED,OAAO,CAACgB,QAAQ;YAAAX,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACbR,UAAU,CAACkB,GAAG,CAACf,GAAG,EAAEJ,MAAM,EAAE;YAChCoB,MAAM,EAAElB,OAAO,CAACkB;UAClB,CAAC,CAAC;QAAA;UAAA,OAAAb,QAAA,CAAAc,MAAA,WAGGjB,GAAG;QAAA;QAAA;UAAA,OAAAG,QAAA,CAAAe,IAAA;MAAA;IAAA,GAAAvB,OAAA;EAAA,CACX;EAAA,gBA3BKL,OAAOA,CAAA6B,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA9B,IAAA,CAAA+B,KAAA,OAAAC,SAAA;EAAA;AAAA,GA2BZ;AAED,eAAejC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}