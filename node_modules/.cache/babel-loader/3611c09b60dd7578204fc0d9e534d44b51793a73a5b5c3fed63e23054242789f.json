{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as dagPB from '@ipld/dag-pb';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from './get.js';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createStat(_ref) {\n  var repo = _ref.repo,\n    preload = _ref.preload;\n  var get = createGet({\n    repo: repo,\n    preload: preload\n  });\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"stat\"]}\n   */\n  function stat(_x) {\n    return _stat.apply(this, arguments);\n  }\n  function _stat() {\n    _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var options,\n        node,\n        serialized,\n        blockSize,\n        linkLength,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return get(cid, options);\n          case 3:\n            node = _context.sent;\n            serialized = dagPB.encode(node);\n            blockSize = serialized.length;\n            linkLength = node.Links.reduce(function (a, l) {\n              return a + (l.Tsize || 0);\n            }, 0);\n            return _context.abrupt(\"return\", {\n              Hash: cid,\n              NumLinks: node.Links.length,\n              BlockSize: blockSize,\n              LinksSize: blockSize - (node.Data || []).length,\n              DataSize: (node.Data || []).length,\n              CumulativeSize: blockSize + linkLength\n            });\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _stat.apply(this, arguments);\n  }\n  return withTimeoutOption(stat);\n}","map":{"version":3,"names":["dagPB","withTimeoutOption","createGet","createStat","_ref","repo","preload","get","stat","_x","_stat","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cid","options","node","serialized","blockSize","linkLength","_args","wrap","_callee$","_context","prev","next","length","undefined","sent","encode","Links","reduce","a","l","Tsize","abrupt","Hash","NumLinks","BlockSize","LinksSize","Data","DataSize","CumulativeSize","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/object/stat.js"],"sourcesContent":["import * as dagPB from '@ipld/dag-pb'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from './get.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createStat ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const node = await get(cid, options)\n    const serialized = dagPB.encode(node)\n    const blockSize = serialized.length\n    const linkLength = node.Links.reduce((a, l) => a + (l.Tsize || 0), 0)\n\n    return {\n      Hash: cid,\n      NumLinks: node.Links.length,\n      BlockSize: blockSize,\n      LinksSize: blockSize - (node.Data || []).length,\n      DataSize: (node.Data || []).length,\n      CumulativeSize: blockSize + linkLength\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,cAAc;AACrC,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,SAAS,QAAQ,UAAU;;AAEpC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAjBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EACzC,IAAMC,GAAG,GAAGL,SAAS,CAAC;IAAEG,IAAI,EAAJA,IAAI;IAAEC,OAAO,EAAPA;EAAQ,CAAC,CAAC;;EAExC;AACF;AACA;EAFE,SAGeE,IAAIA,CAAAC,EAAA;IAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,MAAA;IAAAA,KAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAnB,SAAAC,QAAqBC,GAAG;MAAA,IAAAC,OAAA;QAAAC,IAAA;QAAAC,UAAA;QAAAC,SAAA;QAAAC,UAAA;QAAAC,KAAA,GAAAX,SAAA;MAAA,OAAAE,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEV,OAAO,GAAAK,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA,OACjBrB,GAAG,CAACU,GAAG,EAAEC,OAAO,CAAC;UAAA;YAA9BC,IAAI,GAAAO,QAAA,CAAAK,IAAA;YACJX,UAAU,GAAGpB,KAAK,CAACgC,MAAM,CAACb,IAAI,CAAC;YAC/BE,SAAS,GAAGD,UAAU,CAACS,MAAM;YAC7BP,UAAU,GAAGH,IAAI,CAACc,KAAK,CAACC,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;cAAA,OAAKD,CAAC,IAAIC,CAAC,CAACC,KAAK,IAAI,CAAC,CAAC;YAAA,GAAE,CAAC,CAAC;YAAA,OAAAX,QAAA,CAAAY,MAAA,WAE9D;cACLC,IAAI,EAAEtB,GAAG;cACTuB,QAAQ,EAAErB,IAAI,CAACc,KAAK,CAACJ,MAAM;cAC3BY,SAAS,EAAEpB,SAAS;cACpBqB,SAAS,EAAErB,SAAS,GAAG,CAACF,IAAI,CAACwB,IAAI,IAAI,EAAE,EAAEd,MAAM;cAC/Ce,QAAQ,EAAE,CAACzB,IAAI,CAACwB,IAAI,IAAI,EAAE,EAAEd,MAAM;cAClCgB,cAAc,EAAExB,SAAS,GAAGC;YAC9B,CAAC;UAAA;UAAA;YAAA,OAAAI,QAAA,CAAAoB,IAAA;QAAA;MAAA,GAAA9B,OAAA;IAAA,CACF;IAAA,OAAAN,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOX,iBAAiB,CAACO,IAAI,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}