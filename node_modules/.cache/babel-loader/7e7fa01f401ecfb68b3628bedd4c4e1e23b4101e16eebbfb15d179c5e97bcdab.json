{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nvar _globalThis$CustomEve;\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventEmitter_listeners;\n/**\n * Adds types to the EventTarget class. Hopefully this won't be necessary forever.\n *\n * https://github.com/microsoft/TypeScript/issues/28357\n * https://github.com/microsoft/TypeScript/issues/43477\n * https://github.com/microsoft/TypeScript/issues/299\n * etc\n */\nexport var EventEmitter = /*#__PURE__*/function (_EventTarget) {\n  _inherits(EventEmitter, _EventTarget);\n  var _super = _createSuper(EventEmitter);\n  function EventEmitter() {\n    var _this;\n    _classCallCheck(this, EventEmitter);\n    _this = _super.apply(this, arguments);\n    _EventEmitter_listeners.set(_assertThisInitialized(_this), new Map());\n    return _this;\n  }\n  _createClass(EventEmitter, [{\n    key: \"listenerCount\",\n    value: function listenerCount(type) {\n      var listeners = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(type);\n      if (listeners == null) {\n        return 0;\n      }\n      return listeners.length;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      var _ref;\n      _get(_getPrototypeOf(EventEmitter.prototype), \"addEventListener\", this).call(this, type, listener, options);\n      var list = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(type);\n      if (list == null) {\n        list = [];\n        __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").set(type, list);\n      }\n      list.push({\n        callback: listener,\n        once: (_ref = options !== true && options !== false && (options === null || options === void 0 ? void 0 : options.once)) !== null && _ref !== void 0 ? _ref : false\n      });\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener, options) {\n      _get(_getPrototypeOf(EventEmitter.prototype), \"removeEventListener\", this).call(this, type.toString(), listener !== null && listener !== void 0 ? listener : null, options);\n      var list = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(type);\n      if (list == null) {\n        return;\n      }\n      list = list.filter(function (_ref2) {\n        var callback = _ref2.callback;\n        return callback !== listener;\n      });\n      __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").set(type, list);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      var result = _get(_getPrototypeOf(EventEmitter.prototype), \"dispatchEvent\", this).call(this, event);\n      var list = __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").get(event.type);\n      if (list == null) {\n        return result;\n      }\n      list = list.filter(function (_ref3) {\n        var once = _ref3.once;\n        return !once;\n      });\n      __classPrivateFieldGet(this, _EventEmitter_listeners, \"f\").set(event.type, list);\n      return result;\n    }\n  }, {\n    key: \"safeDispatchEvent\",\n    value: function safeDispatchEvent(type, detail) {\n      return this.dispatchEvent(new CustomEvent(type, detail));\n    }\n  }]);\n  return EventEmitter;\n}( /*#__PURE__*/_wrapNativeSuper(EventTarget));\n_EventEmitter_listeners = new WeakMap();\n/**\n * CustomEvent is a standard event but it's not supported by node.\n *\n * Remove this when https://github.com/nodejs/node/issues/40678 is closed.\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n */\nvar CustomEventPolyfill = /*#__PURE__*/function (_Event) {\n  _inherits(CustomEventPolyfill, _Event);\n  var _super2 = _createSuper(CustomEventPolyfill);\n  function CustomEventPolyfill(message, data) {\n    var _this2;\n    _classCallCheck(this, CustomEventPolyfill);\n    _this2 = _super2.call(this, message, data);\n    // @ts-expect-error could be undefined\n    _this2.detail = data === null || data === void 0 ? void 0 : data.detail;\n    return _this2;\n  }\n  return _createClass(CustomEventPolyfill);\n}( /*#__PURE__*/_wrapNativeSuper(Event));\nexport var CustomEvent = (_globalThis$CustomEve = globalThis.CustomEvent) !== null && _globalThis$CustomEve !== void 0 ? _globalThis$CustomEve : CustomEventPolyfill;","map":{"version":3,"names":["EventEmitter","_EventTarget","_inherits","_super","_createSuper","_this","_classCallCheck","_EventEmitter_listeners","set","_assertThisInitialized","Map","_createClass","key","value","listenerCount","type","listeners","__classPrivateFieldGet","get","length","addEventListener","listener","options","_ref","_get","_getPrototypeOf","prototype","call","list","push","callback","once","removeEventListener","toString","filter","_ref2","dispatchEvent","event","result","_ref3","safeDispatchEvent","detail","CustomEvent","_wrapNativeSuper","EventTarget","CustomEventPolyfill","_Event","_super2","message","data","_this2","Event","_globalThis$CustomEve","globalThis"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/interfaces/src/events.ts"],"sourcesContent":["\nexport interface EventCallback<EventType> { (evt: EventType): void }\nexport interface EventObject<EventType> { handleEvent: EventCallback<EventType> }\nexport type EventHandler<EventType> = EventCallback<EventType> | EventObject<EventType>\n\ninterface Listener {\n  once: boolean\n  callback: any\n}\n\n/**\n * Adds types to the EventTarget class. Hopefully this won't be necessary forever.\n *\n * https://github.com/microsoft/TypeScript/issues/28357\n * https://github.com/microsoft/TypeScript/issues/43477\n * https://github.com/microsoft/TypeScript/issues/299\n * etc\n */\nexport class EventEmitter<EventMap extends Record<string, any>> extends EventTarget {\n  #listeners: Map<any, Listener[]> = new Map()\n\n  listenerCount (type: string): number {\n    const listeners = this.#listeners.get(type)\n\n    if (listeners == null) {\n      return 0\n    }\n\n    return listeners.length\n  }\n\n  addEventListener<K extends keyof EventMap>(type: K, listener: EventHandler<EventMap[K]> | null, options?: boolean | AddEventListenerOptions): void\n  addEventListener (type: string, listener: EventHandler<Event>, options?: boolean | AddEventListenerOptions): void {\n    super.addEventListener(type, listener, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      list = []\n      this.#listeners.set(type, list)\n    }\n\n    list.push({\n      callback: listener,\n      once: (options !== true && options !== false && options?.once) ?? false\n    })\n  }\n\n  removeEventListener<K extends keyof EventMap>(type: K, listener?: EventHandler<EventMap[K]> | null, options?: boolean | EventListenerOptions): void\n  removeEventListener (type: string, listener?: EventHandler<Event>, options?: boolean | EventListenerOptions): void {\n    super.removeEventListener(type.toString(), listener ?? null, options)\n\n    let list = this.#listeners.get(type)\n\n    if (list == null) {\n      return\n    }\n\n    list = list.filter(({ callback }) => callback !== listener)\n    this.#listeners.set(type, list)\n  }\n\n  dispatchEvent (event: Event): boolean {\n    const result = super.dispatchEvent(event)\n\n    let list = this.#listeners.get(event.type)\n\n    if (list == null) {\n      return result\n    }\n\n    list = list.filter(({ once }) => !once)\n    this.#listeners.set(event.type, list)\n\n    return result\n  }\n\n  safeDispatchEvent<Detail>(type: keyof EventMap, detail: CustomEventInit<Detail>): boolean {\n    return this.dispatchEvent(new CustomEvent<Detail>(type as string, detail))\n  }\n}\n\n/**\n * CustomEvent is a standard event but it's not supported by node.\n *\n * Remove this when https://github.com/nodejs/node/issues/40678 is closed.\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n */\nclass CustomEventPolyfill<T = any> extends Event {\n  /** Returns any custom data event was created with. Typically used for synthetic events. */\n  public detail: T\n\n  constructor (message: string, data?: EventInit & { detail: T }) {\n    super(message, data)\n    // @ts-expect-error could be undefined\n    this.detail = data?.detail\n  }\n}\n\nexport const CustomEvent = globalThis.CustomEvent ?? CustomEventPolyfill\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}