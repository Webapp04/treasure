{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { Message, MESSAGE_TYPE } from '../message/index.js';\nimport parallel from 'it-parallel';\nimport map from 'it-map';\nimport { convertBuffer } from '../utils.js';\nimport { ALPHA } from '../constants.js';\nimport { pipe } from 'it-pipe';\nimport { queryErrorEvent, peerResponseEvent, providerEvent } from '../query/events.js';\nimport { logger } from '@libp2p/logger';\nimport { Components } from '@libp2p/components';\nexport var ContentRouting = /*#__PURE__*/function () {\n  function ContentRouting(init) {\n    _classCallCheck(this, ContentRouting);\n    this.components = new Components();\n    var network = init.network,\n      peerRouting = init.peerRouting,\n      queryManager = init.queryManager,\n      routingTable = init.routingTable,\n      providers = init.providers,\n      lan = init.lan;\n    this.log = logger(\"libp2p:kad-dht:\".concat(lan ? 'lan' : 'wan', \":content-routing\"));\n    this.network = network;\n    this.peerRouting = peerRouting;\n    this.queryManager = queryManager;\n    this.routingTable = routingTable;\n    this.providers = providers;\n  }\n  _createClass(ContentRouting, [{\n    key: \"init\",\n    value: function init(components) {\n      this.components = components;\n    }\n    /**\n     * Announce to the network that we can provide the value for a given key and\n     * are contactable on the given multiaddrs\n     */\n  }, {\n    key: \"provide\",\n    value: function provide(key, multiaddrs) {\n      var _this = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var msg, sent, maybeNotifyPeer;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.log('provide %s', key);\n              // Add peer as provider\n              _context3.next = 3;\n              return _awaitAsyncGenerator(_this.providers.addProvider(key, _this.components.getPeerId()));\n            case 3:\n              msg = new Message(MESSAGE_TYPE.ADD_PROVIDER, key.bytes, 0);\n              msg.providerPeers = [{\n                id: _this.components.getPeerId(),\n                multiaddrs: multiaddrs,\n                protocols: []\n              }];\n              sent = 0;\n              maybeNotifyPeer = function maybeNotifyPeer(event) {\n                return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  var events, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, sendEvent;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(event.name !== 'FINAL_PEER')) {\n                          _context.next = 2;\n                          break;\n                        }\n                        return _context.abrupt(\"return\", [event]);\n                      case 2:\n                        events = [];\n                        _this.log('putProvider %s to %p', key, event.peer.id);\n                        _context.prev = 4;\n                        _this.log('sending provider record for %s to %p', key, event.peer.id);\n                        _iteratorAbruptCompletion = false;\n                        _didIteratorError = false;\n                        _context.prev = 8;\n                        _iterator = _asyncIterator(_this.network.sendMessage(event.peer.id, msg, options));\n                      case 10:\n                        _context.next = 12;\n                        return _iterator.next();\n                      case 12:\n                        if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                          _context.next = 19;\n                          break;\n                        }\n                        sendEvent = _step.value;\n                        if (sendEvent.name === 'PEER_RESPONSE') {\n                          _this.log('sent provider record for %s to %p', key, event.peer.id);\n                          sent++;\n                        }\n                        events.push(sendEvent);\n                      case 16:\n                        _iteratorAbruptCompletion = false;\n                        _context.next = 10;\n                        break;\n                      case 19:\n                        _context.next = 25;\n                        break;\n                      case 21:\n                        _context.prev = 21;\n                        _context.t0 = _context[\"catch\"](8);\n                        _didIteratorError = true;\n                        _iteratorError = _context.t0;\n                      case 25:\n                        _context.prev = 25;\n                        _context.prev = 26;\n                        if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                          _context.next = 30;\n                          break;\n                        }\n                        _context.next = 30;\n                        return _iterator.return();\n                      case 30:\n                        _context.prev = 30;\n                        if (!_didIteratorError) {\n                          _context.next = 33;\n                          break;\n                        }\n                        throw _iteratorError;\n                      case 33:\n                        return _context.finish(30);\n                      case 34:\n                        return _context.finish(25);\n                      case 35:\n                        _context.next = 41;\n                        break;\n                      case 37:\n                        _context.prev = 37;\n                        _context.t1 = _context[\"catch\"](4);\n                        _this.log.error('error sending provide record to peer %p', event.peer.id, _context.t1);\n                        events.push(queryErrorEvent({\n                          from: event.peer.id,\n                          error: _context.t1\n                        }));\n                      case 41:\n                        return _context.abrupt(\"return\", events);\n                      case 42:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee, null, [[4, 37], [8, 21, 25, 35], [26,, 30, 34]]);\n                }));\n              }; // Notify closest peers\n              return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(pipe(_this.peerRouting.getClosestPeers(key.multihash.bytes, options), function (source) {\n                return map(source, function (event) {\n                  return maybeNotifyPeer(event);\n                });\n              }, function (source) {\n                return parallel(source, {\n                  ordered: false,\n                  concurrency: ALPHA\n                });\n              }, /*#__PURE__*/function () {\n                var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(source) {\n                  var _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, events;\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _iteratorAbruptCompletion2 = false;\n                        _didIteratorError2 = false;\n                        _context2.prev = 2;\n                        _iterator2 = _asyncIterator(source);\n                      case 4:\n                        _context2.next = 6;\n                        return _awaitAsyncGenerator(_iterator2.next());\n                      case 6:\n                        if (!(_iteratorAbruptCompletion2 = !(_step2 = _context2.sent).done)) {\n                          _context2.next = 12;\n                          break;\n                        }\n                        events = _step2.value;\n                        return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(events), _awaitAsyncGenerator), \"t0\", 9);\n                      case 9:\n                        _iteratorAbruptCompletion2 = false;\n                        _context2.next = 4;\n                        break;\n                      case 12:\n                        _context2.next = 18;\n                        break;\n                      case 14:\n                        _context2.prev = 14;\n                        _context2.t1 = _context2[\"catch\"](2);\n                        _didIteratorError2 = true;\n                        _iteratorError2 = _context2.t1;\n                      case 18:\n                        _context2.prev = 18;\n                        _context2.prev = 19;\n                        if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                          _context2.next = 23;\n                          break;\n                        }\n                        _context2.next = 23;\n                        return _awaitAsyncGenerator(_iterator2.return());\n                      case 23:\n                        _context2.prev = 23;\n                        if (!_didIteratorError2) {\n                          _context2.next = 26;\n                          break;\n                        }\n                        throw _iteratorError2;\n                      case 26:\n                        return _context2.finish(23);\n                      case 27:\n                        return _context2.finish(18);\n                      case 28:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n                }));\n                return function (_x) {\n                  return _ref.apply(this, arguments);\n                };\n              }())), _awaitAsyncGenerator), \"t0\", 8);\n            case 8:\n              _this.log('sent provider records to %d peers', sent);\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n    /**\n     * Search the dht for up to `K` providers of the given CID.\n     */\n  }, {\n    key: \"findProviders\",\n    value: function findProviders(key, options) {\n      var _this2 = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var toFind, target, id, self, provs, _providers, _iterator4, _step4, _yield$_awaitAsyncGen, peerId, findProvidersQuery, providers, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, event, newProviders, _iterator5, _step5, peer;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              toFind = _this2.routingTable.kBucketSize;\n              target = key.multihash.bytes;\n              _context5.next = 4;\n              return _awaitAsyncGenerator(convertBuffer(target));\n            case 4:\n              id = _context5.sent;\n              self = _this2; // eslint-disable-line @typescript-eslint/no-this-alias\n              _this2.log('findProviders %c', key);\n              _context5.next = 9;\n              return _awaitAsyncGenerator(_this2.providers.getProviders(key));\n            case 9:\n              provs = _context5.sent;\n              if (!(provs.length > 0)) {\n                _context5.next = 48;\n                break;\n              }\n              _providers = [];\n              _iterator4 = _createForOfIteratorHelper(provs.slice(0, toFind));\n              _context5.prev = 13;\n              _iterator4.s();\n            case 15:\n              if ((_step4 = _iterator4.n()).done) {\n                _context5.next = 36;\n                break;\n              }\n              peerId = _step4.value;\n              _context5.t0 = _providers;\n              _context5.t1 = peerId;\n              _context5.next = 21;\n              return _awaitAsyncGenerator(_this2.components.getPeerStore().addressBook.get(peerId));\n            case 21:\n              _context5.t3 = _yield$_awaitAsyncGen = _context5.sent;\n              _context5.t2 = _context5.t3 !== null;\n              if (!_context5.t2) {\n                _context5.next = 25;\n                break;\n              }\n              _context5.t2 = _yield$_awaitAsyncGen !== void 0;\n            case 25:\n              if (!_context5.t2) {\n                _context5.next = 29;\n                break;\n              }\n              _context5.t4 = _yield$_awaitAsyncGen;\n              _context5.next = 30;\n              break;\n            case 29:\n              _context5.t4 = [];\n            case 30:\n              _context5.t5 = _context5.t4.map(function (address) {\n                return address.multiaddr;\n              });\n              _context5.t6 = [];\n              _context5.t7 = {\n                id: _context5.t1,\n                multiaddrs: _context5.t5,\n                protocols: _context5.t6\n              };\n              _context5.t0.push.call(_context5.t0, _context5.t7);\n            case 34:\n              _context5.next = 15;\n              break;\n            case 36:\n              _context5.next = 41;\n              break;\n            case 38:\n              _context5.prev = 38;\n              _context5.t8 = _context5[\"catch\"](13);\n              _iterator4.e(_context5.t8);\n            case 41:\n              _context5.prev = 41;\n              _iterator4.f();\n              return _context5.finish(41);\n            case 44:\n              _context5.next = 46;\n              return peerResponseEvent({\n                from: _this2.components.getPeerId(),\n                messageType: MESSAGE_TYPE.GET_PROVIDERS,\n                providers: _providers\n              });\n            case 46:\n              _context5.next = 48;\n              return providerEvent({\n                from: _this2.components.getPeerId(),\n                providers: _providers\n              });\n            case 48:\n              if (!(provs.length >= toFind)) {\n                _context5.next = 50;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 50:\n              /**\n               * The query function to use on this particular disjoint path\n               */\n              findProvidersQuery = /*#__PURE__*/function () {\n                var _ref2 = _wrapAsyncGenerator(function (_ref4) {\n                  var peer = _ref4.peer,\n                    signal = _ref4.signal;\n                  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                    var request;\n                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                      while (1) switch (_context4.prev = _context4.next) {\n                        case 0:\n                          request = new Message(MESSAGE_TYPE.GET_PROVIDERS, target, 0);\n                          return _context4.delegateYield(_asyncGeneratorDelegate(_asyncIterator(self.network.sendRequest(peer, request, {\n                            signal: signal\n                          })), _awaitAsyncGenerator), \"t0\", 2);\n                        case 2:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }, _callee4);\n                  })();\n                });\n                return function findProvidersQuery(_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n              providers = new Set(provs.map(function (p) {\n                return p.toString();\n              }));\n              _iteratorAbruptCompletion3 = false;\n              _didIteratorError3 = false;\n              _context5.prev = 54;\n              _iterator3 = _asyncIterator(_this2.queryManager.run(target, _this2.routingTable.closestPeers(id), findProvidersQuery, options));\n            case 56:\n              _context5.next = 58;\n              return _awaitAsyncGenerator(_iterator3.next());\n            case 58:\n              if (!(_iteratorAbruptCompletion3 = !(_step3 = _context5.sent).done)) {\n                _context5.next = 92;\n                break;\n              }\n              event = _step3.value;\n              _context5.next = 62;\n              return event;\n            case 62:\n              if (!(event.name === 'PEER_RESPONSE')) {\n                _context5.next = 89;\n                break;\n              }\n              _this2.log('Found %d provider entries for %c and %d closer peers', event.providers.length, key, event.closer.length);\n              newProviders = [];\n              _iterator5 = _createForOfIteratorHelper(event.providers);\n              _context5.prev = 66;\n              _iterator5.s();\n            case 68:\n              if ((_step5 = _iterator5.n()).done) {\n                _context5.next = 76;\n                break;\n              }\n              peer = _step5.value;\n              if (!providers.has(peer.id.toString())) {\n                _context5.next = 72;\n                break;\n              }\n              return _context5.abrupt(\"continue\", 74);\n            case 72:\n              providers.add(peer.id.toString());\n              newProviders.push(peer);\n            case 74:\n              _context5.next = 68;\n              break;\n            case 76:\n              _context5.next = 81;\n              break;\n            case 78:\n              _context5.prev = 78;\n              _context5.t9 = _context5[\"catch\"](66);\n              _iterator5.e(_context5.t9);\n            case 81:\n              _context5.prev = 81;\n              _iterator5.f();\n              return _context5.finish(81);\n            case 84:\n              if (!(newProviders.length > 0)) {\n                _context5.next = 87;\n                break;\n              }\n              _context5.next = 87;\n              return providerEvent({\n                from: event.from,\n                providers: newProviders\n              });\n            case 87:\n              if (!(providers.size === toFind)) {\n                _context5.next = 89;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 89:\n              _iteratorAbruptCompletion3 = false;\n              _context5.next = 56;\n              break;\n            case 92:\n              _context5.next = 98;\n              break;\n            case 94:\n              _context5.prev = 94;\n              _context5.t10 = _context5[\"catch\"](54);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context5.t10;\n            case 98:\n              _context5.prev = 98;\n              _context5.prev = 99;\n              if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {\n                _context5.next = 103;\n                break;\n              }\n              _context5.next = 103;\n              return _awaitAsyncGenerator(_iterator3.return());\n            case 103:\n              _context5.prev = 103;\n              if (!_didIteratorError3) {\n                _context5.next = 106;\n                break;\n              }\n              throw _iteratorError3;\n            case 106:\n              return _context5.finish(103);\n            case 107:\n              return _context5.finish(98);\n            case 108:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[13, 38, 41, 44], [54, 94, 98, 108], [66, 78, 81, 84], [99,, 103, 107]]);\n      }))();\n    }\n  }]);\n  return ContentRouting;\n}();","map":{"version":3,"names":["Message","MESSAGE_TYPE","parallel","map","convertBuffer","ALPHA","pipe","queryErrorEvent","peerResponseEvent","providerEvent","logger","Components","ContentRouting","init","_classCallCheck","components","network","peerRouting","queryManager","routingTable","providers","lan","log","concat","_createClass","key","value","provide","multiaddrs","_this","options","arguments","length","undefined","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee3","msg","sent","maybeNotifyPeer","wrap","_callee3$","_context3","prev","next","_awaitAsyncGenerator","addProvider","getPeerId","ADD_PROVIDER","bytes","providerPeers","id","protocols","event","_asyncToGenerator","_callee","events","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","sendEvent","_callee$","_context","name","abrupt","peer","_asyncIterator","sendMessage","done","push","t0","return","finish","t1","error","from","stop","delegateYield","_asyncGeneratorDelegate","getClosestPeers","multihash","source","ordered","concurrency","_ref","_callee2","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee2$","_context2","_x","apply","findProviders","_this2","_callee5","toFind","target","self","provs","_providers","_iterator4","_step4","_yield$_awaitAsyncGen","peerId","findProvidersQuery","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","newProviders","_iterator5","_step5","_callee5$","_context5","kBucketSize","getProviders","_createForOfIteratorHelper","slice","s","n","getPeerStore","addressBook","get","t3","t2","t4","t5","address","multiaddr","t6","t7","call","t8","e","f","messageType","GET_PROVIDERS","_ref2","_ref4","signal","_callee4","request","_callee4$","_context4","sendRequest","_x2","Set","p","toString","run","closestPeers","closer","has","add","t9","size","t10"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/content-routing/index.ts"],"sourcesContent":["import { Message, MESSAGE_TYPE } from '../message/index.js'\nimport parallel from 'it-parallel'\nimport map from 'it-map'\nimport { convertBuffer } from '../utils.js'\nimport { ALPHA } from '../constants.js'\nimport { pipe } from 'it-pipe'\nimport {\n  queryErrorEvent,\n  peerResponseEvent,\n  providerEvent\n} from '../query/events.js'\nimport { logger } from '@libp2p/logger'\nimport type { QueryEvent, QueryOptions } from '@libp2p/interface-dht'\nimport type { PeerRouting } from '../peer-routing/index.js'\nimport type { QueryManager } from '../query/manager.js'\nimport type { RoutingTable } from '../routing-table/index.js'\nimport type { Network } from '../network.js'\nimport type { Logger } from '@libp2p/logger'\nimport type { Providers } from '../providers.js'\nimport type { QueryFunc } from '../query/types.js'\nimport type { CID } from 'multiformats/cid'\nimport type { AbortOptions } from '@libp2p/interfaces'\nimport type { Multiaddr } from '@multiformats/multiaddr'\nimport type { PeerInfo } from '@libp2p/interface-peer-info'\nimport { Components, Initializable } from '@libp2p/components'\n\nexport interface ContentRoutingInit {\n  network: Network\n  peerRouting: PeerRouting\n  queryManager: QueryManager\n  routingTable: RoutingTable\n  providers: Providers\n  lan: boolean\n}\n\nexport class ContentRouting implements Initializable {\n  private readonly log: Logger\n  private components: Components = new Components()\n  private readonly network: Network\n  private readonly peerRouting: PeerRouting\n  private readonly queryManager: QueryManager\n  private readonly routingTable: RoutingTable\n  private readonly providers: Providers\n\n  constructor (init: ContentRoutingInit) {\n    const { network, peerRouting, queryManager, routingTable, providers, lan } = init\n\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:content-routing`)\n    this.network = network\n    this.peerRouting = peerRouting\n    this.queryManager = queryManager\n    this.routingTable = routingTable\n    this.providers = providers\n  }\n\n  init (components: Components): void {\n    this.components = components\n  }\n\n  /**\n   * Announce to the network that we can provide the value for a given key and\n   * are contactable on the given multiaddrs\n   */\n  async * provide (key: CID, multiaddrs: Multiaddr[], options: AbortOptions = {}) {\n    this.log('provide %s', key)\n\n    // Add peer as provider\n    await this.providers.addProvider(key, this.components.getPeerId())\n\n    const msg = new Message(MESSAGE_TYPE.ADD_PROVIDER, key.bytes, 0)\n    msg.providerPeers = [{\n      id: this.components.getPeerId(),\n      multiaddrs,\n      protocols: []\n    }]\n\n    let sent = 0\n\n    const maybeNotifyPeer = (event: QueryEvent) => {\n      return async () => {\n        if (event.name !== 'FINAL_PEER') {\n          return [event]\n        }\n\n        const events = []\n\n        this.log('putProvider %s to %p', key, event.peer.id)\n\n        try {\n          this.log('sending provider record for %s to %p', key, event.peer.id)\n\n          for await (const sendEvent of this.network.sendMessage(event.peer.id, msg, options)) {\n            if (sendEvent.name === 'PEER_RESPONSE') {\n              this.log('sent provider record for %s to %p', key, event.peer.id)\n              sent++\n            }\n\n            events.push(sendEvent)\n          }\n        } catch (err: any) {\n          this.log.error('error sending provide record to peer %p', event.peer.id, err)\n          events.push(queryErrorEvent({ from: event.peer.id, error: err }))\n        }\n\n        return events\n      }\n    }\n\n    // Notify closest peers\n    yield * pipe(\n      this.peerRouting.getClosestPeers(key.multihash.bytes, options),\n      (source) => map(source, (event) => maybeNotifyPeer(event)),\n      (source) => parallel(source, {\n        ordered: false,\n        concurrency: ALPHA\n      }),\n      async function * (source) {\n        for await (const events of source) {\n          yield * events\n        }\n      }\n    )\n\n    this.log('sent provider records to %d peers', sent)\n  }\n\n  /**\n   * Search the dht for up to `K` providers of the given CID.\n   */\n  async * findProviders (key: CID, options: QueryOptions) {\n    const toFind = this.routingTable.kBucketSize\n    const target = key.multihash.bytes\n    const id = await convertBuffer(target)\n    const self = this // eslint-disable-line @typescript-eslint/no-this-alias\n\n    this.log('findProviders %c', key)\n\n    const provs = await this.providers.getProviders(key)\n\n    // yield values if we have some, also slice because maybe we got lucky and already have too many?\n    if (provs.length > 0) {\n      const providers: PeerInfo[] = []\n\n      for (const peerId of provs.slice(0, toFind)) {\n        providers.push({\n          id: peerId,\n          multiaddrs: ((await this.components.getPeerStore().addressBook.get(peerId)) ?? []).map(address => address.multiaddr),\n          protocols: []\n        })\n      }\n\n      yield peerResponseEvent({ from: this.components.getPeerId(), messageType: MESSAGE_TYPE.GET_PROVIDERS, providers })\n      yield providerEvent({ from: this.components.getPeerId(), providers: providers })\n    }\n\n    // All done\n    if (provs.length >= toFind) {\n      return\n    }\n\n    /**\n     * The query function to use on this particular disjoint path\n     */\n    const findProvidersQuery: QueryFunc = async function * ({ peer, signal }) {\n      const request = new Message(MESSAGE_TYPE.GET_PROVIDERS, target, 0)\n\n      yield * self.network.sendRequest(peer, request, { signal })\n    }\n\n    const providers = new Set(provs.map(p => p.toString()))\n\n    for await (const event of this.queryManager.run(target, this.routingTable.closestPeers(id), findProvidersQuery, options)) {\n      yield event\n\n      if (event.name === 'PEER_RESPONSE') {\n        this.log('Found %d provider entries for %c and %d closer peers', event.providers.length, key, event.closer.length)\n\n        const newProviders = []\n\n        for (const peer of event.providers) {\n          if (providers.has(peer.id.toString())) {\n            continue\n          }\n\n          providers.add(peer.id.toString())\n          newProviders.push(peer)\n        }\n\n        if (newProviders.length > 0) {\n          yield providerEvent({ from: event.from, providers: newProviders })\n        }\n\n        if (providers.size === toFind) {\n          return\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}