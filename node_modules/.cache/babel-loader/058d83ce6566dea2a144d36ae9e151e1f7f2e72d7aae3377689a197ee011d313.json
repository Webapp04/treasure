{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import AirdropApi from\"api/AirdropApi\";import{ACTIVATE_KEY_ALERT,ALERT_STATUS_FAILURE,ALERT_STATUS_SUCCESS}from\"constant/alert\";import{useContractNFKeyStakingWithSigner}from\"hooks/blockchain/useHandleContracts\";import useHandleToken from\"hooks/token/useHandleToken\";import{useDispatch,useSelector}from\"react-redux\";import ACTIONS from\"redux/action\";import{selectNftSelected}from\"redux/slice/nftSlice\";import{selectUser}from\"redux/slice/userSlice\";export default function useStake(){var dispatch=useDispatch();var user=useSelector(selectUser);var nftSelected=useSelector(selectNftSelected);var handleToken=useHandleToken();var handleContractNFKeyStakingWithSigner=useContractNFKeyStakingWithSigner();var stake=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var contractNFKeyStakingWithSigner;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return handleContractNFKeyStakingWithSigner;case 2:contractNFKeyStakingWithSigner=_context2.sent;_context2.next=5;return contractNFKeyStakingWithSigner.stake(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(tx){var _token;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return new AirdropApi().logger({wallet_id:user===null||user===void 0?void 0:user.wallet_id,type:\"PENDING\",action:\"stakeNFT\",description:\"tokenId: \".concat(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId),tx:JSON.stringify(tx)});case 2:_context.next=4;return tx.wait();case 4:_context.next=6;return handleToken.getcheckTxEvent(tx===null||tx===void 0?void 0:tx.hash,\"Staked\");case 6:_context.next=8;return handleToken.checkToken(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId);case 8:_token=_context.sent;if(_token){_context.next=11;break;}return _context.abrupt(\"return\");case 11:ACTIONS.SET_NFT_LIST_ITEM(dispatch,_token);ACTIONS.SET_NFT_SELECTED(dispatch,_token);ACTIONS.SET_TRANSANCTION_HASH(dispatch,tx===null||tx===void 0?void 0:tx.hash);ACTIONS.SET_ALERT(dispatch,true,ALERT_STATUS_SUCCESS,ACTIVATE_KEY_ALERT(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId,true));case 15:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}()).catch(function(err){new AirdropApi().logger({wallet_id:user===null||user===void 0?void 0:user.wallet_id,type:\"ERROR\",action:\"stakeNFT\",description:\"tokenId: \".concat(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId),error:JSON.stringify(err)});ACTIONS.SET_ALERT(dispatch,true,ALERT_STATUS_FAILURE,ACTIVATE_KEY_ALERT(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tokenId,false));return null;});case 5:case\"end\":return _context2.stop();}},_callee2);}));return function stake(){return _ref.apply(this,arguments);};}();return{stake:stake};}","map":{"version":3,"names":["AirdropApi","ACTIVATE_KEY_ALERT","ALERT_STATUS_FAILURE","ALERT_STATUS_SUCCESS","useContractNFKeyStakingWithSigner","useHandleToken","useDispatch","useSelector","ACTIONS","selectNftSelected","selectUser","useStake","dispatch","user","nftSelected","handleToken","handleContractNFKeyStakingWithSigner","stake","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","contractNFKeyStakingWithSigner","wrap","_callee2$","_context2","prev","next","sent","tokenId","then","_ref2","_callee","tx","_token","_callee$","_context","logger","wallet_id","type","action","description","concat","JSON","stringify","wait","getcheckTxEvent","hash","checkToken","abrupt","SET_NFT_LIST_ITEM","SET_NFT_SELECTED","SET_TRANSANCTION_HASH","SET_ALERT","stop","_x","apply","arguments","catch","err","error"],"sources":["/Users/apple/Documents/treasure/src/hooks/nft/useStake.js"],"sourcesContent":["import AirdropApi from \"api/AirdropApi\";\nimport {\n  ACTIVATE_KEY_ALERT,\n  ALERT_STATUS_FAILURE,\n  ALERT_STATUS_SUCCESS,\n} from \"constant/alert\";\nimport { useContractNFKeyStakingWithSigner } from \"hooks/blockchain/useHandleContracts\";\nimport useHandleToken from \"hooks/token/useHandleToken\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport { selectNftSelected } from \"redux/slice/nftSlice\";\nimport { selectUser } from \"redux/slice/userSlice\";\n\nexport default function useStake() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const nftSelected = useSelector(selectNftSelected);\n  const handleToken = useHandleToken();\n  const handleContractNFKeyStakingWithSigner =\n    useContractNFKeyStakingWithSigner();\n\n  const stake = async () => {\n    const contractNFKeyStakingWithSigner =\n      await handleContractNFKeyStakingWithSigner;\n    await contractNFKeyStakingWithSigner\n      .stake(nftSelected?.tokenId)\n      .then(async (tx) => {\n        await new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"PENDING\",\n          action: \"stakeNFT\",\n          description: `tokenId: ${nftSelected?.tokenId}`,\n          tx: JSON.stringify(tx),\n        });\n        await tx.wait();\n        await handleToken.getcheckTxEvent(tx?.hash, \"Staked\");\n        const _token = await handleToken.checkToken(nftSelected?.tokenId);\n        if (!_token) return;\n        ACTIONS.SET_NFT_LIST_ITEM(dispatch, _token);\n        ACTIONS.SET_NFT_SELECTED(dispatch, _token);\n        ACTIONS.SET_TRANSANCTION_HASH(dispatch, tx?.hash);\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_SUCCESS,\n          ACTIVATE_KEY_ALERT(nftSelected?.tokenId, true)\n        );\n      })\n      .catch((err) => {\n        new AirdropApi().logger({\n          wallet_id: user?.wallet_id,\n          type: \"ERROR\",\n          action: \"stakeNFT\",\n          description: `tokenId: ${nftSelected?.tokenId}`,\n          error: JSON.stringify(err),\n        });\n        ACTIONS.SET_ALERT(\n          dispatch,\n          true,\n          ALERT_STATUS_FAILURE,\n          ACTIVATE_KEY_ALERT(nftSelected?.tokenId, false)\n        );\n        return null;\n      });\n  };\n  return { stake };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}