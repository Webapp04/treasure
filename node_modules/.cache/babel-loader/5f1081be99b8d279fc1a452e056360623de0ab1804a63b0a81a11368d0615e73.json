{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classPrivateFieldInitSpec from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldSet from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nimport _classPrivateFieldGet from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _defineProperty from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _Symbol$iterator;\n/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\nvar Node = /*#__PURE__*/_createClass(function Node(value) {\n  _classCallCheck(this, Node);\n  _defineProperty(this, \"value\", void 0);\n  _defineProperty(this, \"next\", void 0);\n  this.value = value;\n});\nvar _head = /*#__PURE__*/new WeakMap();\nvar _tail = /*#__PURE__*/new WeakMap();\nvar _size = /*#__PURE__*/new WeakMap();\n_Symbol$iterator = Symbol.iterator;\nvar Queue = /*#__PURE__*/function () {\n  function Queue() {\n    _classCallCheck(this, Queue);\n    _classPrivateFieldInitSpec(this, _head, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _tail, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _size, {\n      writable: true,\n      value: void 0\n    });\n    this.clear();\n  }\n  _createClass(Queue, [{\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      var _this$size, _this$size2;\n      var node = new Node(value);\n      if (_classPrivateFieldGet(this, _head)) {\n        _classPrivateFieldGet(this, _tail).next = node;\n        _classPrivateFieldSet(this, _tail, node);\n      } else {\n        _classPrivateFieldSet(this, _head, node);\n        _classPrivateFieldSet(this, _tail, node);\n      }\n      _classPrivateFieldSet(this, _size, (_this$size = _classPrivateFieldGet(this, _size), _this$size2 = _this$size++, _this$size)), _this$size2;\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      var _this$size3, _this$size4;\n      var current = _classPrivateFieldGet(this, _head);\n      if (!current) {\n        return;\n      }\n      _classPrivateFieldSet(this, _head, _classPrivateFieldGet(this, _head).next);\n      _classPrivateFieldSet(this, _size, (_this$size3 = _classPrivateFieldGet(this, _size), _this$size4 = _this$size3--, _this$size3)), _this$size4;\n      return current.value;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      _classPrivateFieldSet(this, _head, undefined);\n      _classPrivateFieldSet(this, _tail, undefined);\n      _classPrivateFieldSet(this, _size, 0);\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return _classPrivateFieldGet(this, _size);\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      var current;\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            current = _classPrivateFieldGet(this, _head);\n          case 1:\n            if (!current) {\n              _context.next = 7;\n              break;\n            }\n            _context.next = 4;\n            return current.value;\n          case 4:\n            current = current.next;\n            _context.next = 1;\n            break;\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, value, this);\n    })\n  }]);\n  return Queue;\n}();\nexport { Queue as default };","map":{"version":3,"names":["Node","_createClass","value","_classCallCheck","_defineProperty","_head","WeakMap","_tail","_size","_Symbol$iterator","Symbol","iterator","Queue","_classPrivateFieldInitSpec","writable","clear","key","enqueue","_this$size","_this$size2","node","_classPrivateFieldGet","next","_classPrivateFieldSet","dequeue","_this$size3","_this$size4","current","undefined","get","_regeneratorRuntime","mark","wrap","value$","_context","prev","stop","default"],"sources":["/Users/apple/Documents/treasure/node_modules/p-settle/node_modules/yocto-queue/index.js"],"sourcesContent":["/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport default class Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}