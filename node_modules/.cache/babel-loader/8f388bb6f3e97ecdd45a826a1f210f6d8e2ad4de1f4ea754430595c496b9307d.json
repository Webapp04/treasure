{"ast":null,"code":"import _regeneratorRuntime from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{ethers}from\"ethers\";import{AVALANCHE_TESTNET_PARAMS}from\"../../constant/blockchain\";import{hexToNumber,isAvalancheChain}from\"../../utils/blockchain\";import{useDispatch}from\"react-redux\";import ACTIONS from\"redux/action\";import{useContractNFKeyWithSigner,useContractWhitelistWithSigner}from\"./useHandleContracts\";export default function useWalletConnect(){var dispatch=useDispatch();var handleContractNFKeyWithSigner=useContractNFKeyWithSigner();var handleContractWhitelistWithSigner=useContractWhitelistWithSigner();var switchToAvalancheChain=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return window.ethereum.request({method:\"wallet_addEthereumChain\",params:[AVALANCHE_TESTNET_PARAMS]}).catch(function(){return null;});case 2:case\"end\":return _context.stop();}},_callee);}));return function switchToAvalancheChain(){return _ref.apply(this,arguments);};}();var balanceOf=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(address){var contractNFKeyWithSigner;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return handleContractNFKeyWithSigner;case 2:contractNFKeyWithSigner=_context2.sent;_context2.next=5;return contractNFKeyWithSigner.balanceOf(address).then(function(res){return ACTIONS.SET_TOKENS_COUNT(dispatch,hexToNumber(res===null||res===void 0?void 0:res._hex));}).catch(function(){return null;});case 5:case\"end\":return _context2.stop();}},_callee2);}));return function balanceOf(_x){return _ref2.apply(this,arguments);};}();var ethereumListener=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(callback){var _window,provider,_yield$provider$getNe,chainId;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;if(!((_window=window)!==null&&_window!==void 0&&_window.ethereum)){_context3.next=14;break;}provider=new ethers.providers.Web3Provider(window.ethereum);_context3.next=5;return provider.getNetwork();case 5:_yield$provider$getNe=_context3.sent;chainId=_yield$provider$getNe.chainId;if(isAvalancheChain(chainId.toString(16))){_context3.next=10;break;}_context3.next=10;return switchToAvalancheChain();case 10:_context3.next=12;return provider.send(\"eth_requestAccounts\",[]);case 12:window.ethereum.on(\"accountsChanged\",callback);window.ethereum.on(\"chainChanged\",callback);case 14:_context3.next=18;break;case 16:_context3.prev=16;_context3.t0=_context3[\"catch\"](0);case 18:case\"end\":return _context3.stop();}},_callee3,null,[[0,16]]);}));return function ethereumListener(_x2){return _ref3.apply(this,arguments);};}();var connectWallet=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(address){var _network$chainId;var provider,network;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:provider=new ethers.providers.Web3Provider(window.ethereum);_context4.next=3;return provider.getNetwork().catch(function(){return null;});case 3:network=_context4.sent;if(network){_context4.next=6;break;}return _context4.abrupt(\"return\");case 6:if(isAvalancheChain(network===null||network===void 0?void 0:(_network$chainId=network.chainId)===null||_network$chainId===void 0?void 0:_network$chainId.toString(16))){_context4.next=9;break;}_context4.next=9;return switchToAvalancheChain();case 9:_context4.next=11;return findWallet(address);case 11:case\"end\":return _context4.stop();}},_callee4);}));return function connectWallet(_x3){return _ref4.apply(this,arguments);};}();var findWallet=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(address){var contractWhitelistWithSigner;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return balanceOf(address);case 2:_context5.next=4;return handleContractWhitelistWithSigner;case 4:contractWhitelistWithSigner=_context5.sent;contractWhitelistWithSigner.getAddressToWhitelist(address).then(function(res){return ACTIONS.SET_WHITELIST_STATUS(dispatch,{whitelistAddress:address,level:hexToNumber(res===null||res===void 0?void 0:res._hex)});});case 6:case\"end\":return _context5.stop();}},_callee5);}));return function findWallet(_x4){return _ref5.apply(this,arguments);};}();return{connectWallet:connectWallet,ethereumListener:ethereumListener};}","map":{"version":3,"names":["ethers","AVALANCHE_TESTNET_PARAMS","hexToNumber","isAvalancheChain","useDispatch","ACTIONS","useContractNFKeyWithSigner","useContractWhitelistWithSigner","useWalletConnect","dispatch","handleContractNFKeyWithSigner","handleContractWhitelistWithSigner","switchToAvalancheChain","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","window","ethereum","request","method","params","catch","stop","apply","arguments","balanceOf","_ref2","_callee2","address","contractNFKeyWithSigner","_callee2$","_context2","sent","then","res","SET_TOKENS_COUNT","_hex","_x","ethereumListener","_ref3","_callee3","callback","_window","provider","_yield$provider$getNe","chainId","_callee3$","_context3","providers","Web3Provider","getNetwork","toString","send","on","t0","_x2","connectWallet","_ref4","_callee4","_network$chainId","network","_callee4$","_context4","abrupt","findWallet","_x3","_ref5","_callee5","contractWhitelistWithSigner","_callee5$","_context5","getAddressToWhitelist","SET_WHITELIST_STATUS","whitelistAddress","level","_x4"],"sources":["/Users/apple/Documents/treasure/src/hooks/blockchain/useWalletConnect.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { AVALANCHE_TESTNET_PARAMS } from \"../../constant/blockchain\";\nimport { hexToNumber, isAvalancheChain } from \"../../utils/blockchain\";\nimport { useDispatch } from \"react-redux\";\nimport ACTIONS from \"redux/action\";\nimport {\n  useContractNFKeyWithSigner,\n  useContractWhitelistWithSigner,\n} from \"./useHandleContracts\";\n\nexport default function useWalletConnect() {\n  const dispatch = useDispatch();\n  const handleContractNFKeyWithSigner = useContractNFKeyWithSigner();\n  const handleContractWhitelistWithSigner = useContractWhitelistWithSigner();\n\n  const switchToAvalancheChain = async () => {\n    await window.ethereum\n      .request({\n        method: \"wallet_addEthereumChain\",\n        params: [AVALANCHE_TESTNET_PARAMS],\n      })\n      .catch(() => null);\n  };\n\n  const balanceOf = async (address) => {\n    const contractNFKeyWithSigner = await handleContractNFKeyWithSigner;\n    await contractNFKeyWithSigner\n      .balanceOf(address)\n      .then((res) => ACTIONS.SET_TOKENS_COUNT(dispatch, hexToNumber(res?._hex)))\n      .catch(() => null);\n  };\n\n  const ethereumListener = async (callback) => {\n    try {\n      if (window?.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const { chainId } = await provider.getNetwork();\n        if (!isAvalancheChain(chainId.toString(16)))\n          await switchToAvalancheChain();\n        await provider.send(\"eth_requestAccounts\", []);\n\n        window.ethereum.on(\"accountsChanged\", callback);\n        window.ethereum.on(\"chainChanged\", callback);\n      }\n    } catch (err) {}\n  };\n\n  const connectWallet = async (address) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const network = await provider.getNetwork().catch(() => null);\n    if (!network) return;\n\n    if (!isAvalancheChain(network?.chainId?.toString(16)))\n      await switchToAvalancheChain();\n\n    await findWallet(address);\n  };\n\n  const findWallet = async (address) => {\n    await balanceOf(address);\n    const contractWhitelistWithSigner = await handleContractWhitelistWithSigner;\n    contractWhitelistWithSigner.getAddressToWhitelist(address).then((res) =>\n      ACTIONS.SET_WHITELIST_STATUS(dispatch, {\n        whitelistAddress: address,\n        level: hexToNumber(res?._hex),\n      })\n    );\n  };\n\n  return {\n    connectWallet,\n    ethereumListener,\n  };\n}\n"],"mappings":"0PAAA,OAASA,MAAM,KAAQ,QAAQ,CAC/B,OAASC,wBAAwB,KAAQ,2BAA2B,CACpE,OAASC,WAAW,CAAEC,gBAAgB,KAAQ,wBAAwB,CACtE,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,CAAAC,OAAO,KAAM,cAAc,CAClC,OACEC,0BAA0B,CAC1BC,8BAA8B,KACzB,sBAAsB,CAE7B,cAAe,SAAS,CAAAC,gBAAgBA,CAAA,CAAG,CACzC,GAAM,CAAAC,QAAQ,CAAGL,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAM,6BAA6B,CAAGJ,0BAA0B,CAAC,CAAC,CAClE,GAAM,CAAAK,iCAAiC,CAAGJ,8BAA8B,CAAC,CAAC,CAE1E,GAAM,CAAAK,sBAAsB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,SAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACvB,CAAAC,MAAM,CAACC,QAAQ,CAClBC,OAAO,CAAC,CACPC,MAAM,CAAE,yBAAyB,CACjCC,MAAM,CAAE,CAAC1B,wBAAwB,CACnC,CAAC,CAAC,CACD2B,KAAK,CAAC,iBAAM,KAAI,GAAC,yBAAAR,QAAA,CAAAS,IAAA,MAAAZ,OAAA,GACrB,kBAPK,CAAAL,sBAAsBA,CAAA,SAAAC,IAAA,CAAAiB,KAAA,MAAAC,SAAA,OAO3B,CAED,GAAM,CAAAC,SAAS,6BAAAC,KAAA,CAAAnB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAkB,SAAOC,OAAO,MAAAC,uBAAA,QAAArB,mBAAA,GAAAG,IAAA,UAAAmB,UAAAC,SAAA,iBAAAA,SAAA,CAAAjB,IAAA,CAAAiB,SAAA,CAAAhB,IAAA,SAAAgB,SAAA,CAAAhB,IAAA,SACQ,CAAAZ,6BAA6B,QAA7D0B,uBAAuB,CAAAE,SAAA,CAAAC,IAAA,CAAAD,SAAA,CAAAhB,IAAA,SACvB,CAAAc,uBAAuB,CAC1BJ,SAAS,CAACG,OAAO,CAAC,CAClBK,IAAI,CAAC,SAACC,GAAG,QAAK,CAAApC,OAAO,CAACqC,gBAAgB,CAACjC,QAAQ,CAAEP,WAAW,CAACuC,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEE,IAAI,CAAC,CAAC,GAAC,CACzEf,KAAK,CAAC,iBAAM,KAAI,GAAC,yBAAAU,SAAA,CAAAT,IAAA,MAAAK,QAAA,GACrB,kBANK,CAAAF,SAASA,CAAAY,EAAA,SAAAX,KAAA,CAAAH,KAAA,MAAAC,SAAA,OAMd,CAED,GAAM,CAAAc,gBAAgB,6BAAAC,KAAA,CAAAhC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA+B,SAAOC,QAAQ,MAAAC,OAAA,CAAAC,QAAA,CAAAC,qBAAA,CAAAC,OAAA,QAAArC,mBAAA,GAAAG,IAAA,UAAAmC,UAAAC,SAAA,iBAAAA,SAAA,CAAAjC,IAAA,CAAAiC,SAAA,CAAAhC,IAAA,SAAAgC,SAAA,CAAAjC,IAAA,SAAA4B,OAAA,CAEhC1B,MAAM,UAAA0B,OAAA,WAANA,OAAA,CAAQzB,QAAQ,GAAA8B,SAAA,CAAAhC,IAAA,WACZ4B,QAAQ,CAAG,GAAI,CAAAlD,MAAM,CAACuD,SAAS,CAACC,YAAY,CAACjC,MAAM,CAACC,QAAQ,CAAC,CAAA8B,SAAA,CAAAhC,IAAA,SACzC,CAAA4B,QAAQ,CAACO,UAAU,CAAC,CAAC,QAAAN,qBAAA,CAAAG,SAAA,CAAAf,IAAA,CAAvCa,OAAO,CAAAD,qBAAA,CAAPC,OAAO,IACVjD,gBAAgB,CAACiD,OAAO,CAACM,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAAJ,SAAA,CAAAhC,IAAA,WAAAgC,SAAA,CAAAhC,IAAA,UACnC,CAAAV,sBAAsB,CAAC,CAAC,SAAA0C,SAAA,CAAAhC,IAAA,UAC1B,CAAA4B,QAAQ,CAACS,IAAI,CAAC,qBAAqB,CAAE,EAAE,CAAC,SAE9CpC,MAAM,CAACC,QAAQ,CAACoC,EAAE,CAAC,iBAAiB,CAAEZ,QAAQ,CAAC,CAC/CzB,MAAM,CAACC,QAAQ,CAACoC,EAAE,CAAC,cAAc,CAAEZ,QAAQ,CAAC,CAAC,QAAAM,SAAA,CAAAhC,IAAA,kBAAAgC,SAAA,CAAAjC,IAAA,IAAAiC,SAAA,CAAAO,EAAA,CAAAP,SAAA,sCAAAA,SAAA,CAAAzB,IAAA,MAAAkB,QAAA,iBAGlD,kBAbK,CAAAF,gBAAgBA,CAAAiB,GAAA,SAAAhB,KAAA,CAAAhB,KAAA,MAAAC,SAAA,OAarB,CAED,GAAM,CAAAgC,aAAa,6BAAAC,KAAA,CAAAlD,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAiD,SAAO9B,OAAO,MAAA+B,gBAAA,KAAAhB,QAAA,CAAAiB,OAAA,QAAApD,mBAAA,GAAAG,IAAA,UAAAkD,UAAAC,SAAA,iBAAAA,SAAA,CAAAhD,IAAA,CAAAgD,SAAA,CAAA/C,IAAA,SAC5B4B,QAAQ,CAAG,GAAI,CAAAlD,MAAM,CAACuD,SAAS,CAACC,YAAY,CAACjC,MAAM,CAACC,QAAQ,CAAC,CAAA6C,SAAA,CAAA/C,IAAA,SAC7C,CAAA4B,QAAQ,CAACO,UAAU,CAAC,CAAC,CAAC7B,KAAK,CAAC,iBAAM,KAAI,GAAC,QAAvDuC,OAAO,CAAAE,SAAA,CAAA9B,IAAA,IACR4B,OAAO,EAAAE,SAAA,CAAA/C,IAAA,iBAAA+C,SAAA,CAAAC,MAAA,qBAEPnE,gBAAgB,CAACgE,OAAO,SAAPA,OAAO,kBAAAD,gBAAA,CAAPC,OAAO,CAAEf,OAAO,UAAAc,gBAAA,iBAAhBA,gBAAA,CAAkBR,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAAW,SAAA,CAAA/C,IAAA,UAAA+C,SAAA,CAAA/C,IAAA,SAC7C,CAAAV,sBAAsB,CAAC,CAAC,QAAAyD,SAAA,CAAA/C,IAAA,UAE1B,CAAAiD,UAAU,CAACpC,OAAO,CAAC,0BAAAkC,SAAA,CAAAxC,IAAA,MAAAoC,QAAA,GAC1B,kBATK,CAAAF,aAAaA,CAAAS,GAAA,SAAAR,KAAA,CAAAlC,KAAA,MAAAC,SAAA,OASlB,CAED,GAAM,CAAAwC,UAAU,6BAAAE,KAAA,CAAA3D,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA0D,SAAOvC,OAAO,MAAAwC,2BAAA,QAAA5D,mBAAA,GAAAG,IAAA,UAAA0D,UAAAC,SAAA,iBAAAA,SAAA,CAAAxD,IAAA,CAAAwD,SAAA,CAAAvD,IAAA,SAAAuD,SAAA,CAAAvD,IAAA,SACzB,CAAAU,SAAS,CAACG,OAAO,CAAC,QAAA0C,SAAA,CAAAvD,IAAA,SACkB,CAAAX,iCAAiC,QAArEgE,2BAA2B,CAAAE,SAAA,CAAAtC,IAAA,CACjCoC,2BAA2B,CAACG,qBAAqB,CAAC3C,OAAO,CAAC,CAACK,IAAI,CAAC,SAACC,GAAG,QAClE,CAAApC,OAAO,CAAC0E,oBAAoB,CAACtE,QAAQ,CAAE,CACrCuE,gBAAgB,CAAE7C,OAAO,CACzB8C,KAAK,CAAE/E,WAAW,CAACuC,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEE,IAAI,CAC9B,CAAC,CAAC,EACJ,CAAC,CAAC,wBAAAkC,SAAA,CAAAhD,IAAA,MAAA6C,QAAA,GACH,kBATK,CAAAH,UAAUA,CAAAW,GAAA,SAAAT,KAAA,CAAA3C,KAAA,MAAAC,SAAA,OASf,CAED,MAAO,CACLgC,aAAa,CAAbA,aAAa,CACblB,gBAAgB,CAAhBA,gBACF,CAAC,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}