{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nexport function computeScoreWeights(peer, pstats, params, peerIPs, topicStrToLabel) {\n  var score = 0;\n  var byTopic = new Map();\n  // topic stores\n  Object.entries(pstats.topics).forEach(function (_ref) {\n    var _topicStrToLabel$get;\n    var _ref2 = _slicedToArray(_ref, 2),\n      topic = _ref2[0],\n      tstats = _ref2[1];\n    // the topic parameters\n    // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n    var topicLabel = (_topicStrToLabel$get = topicStrToLabel.get(topic)) !== null && _topicStrToLabel$get !== void 0 ? _topicStrToLabel$get : 'unknown';\n    var topicParams = params.topics[topic];\n    if (topicParams === undefined) {\n      // we are not scoring this topic\n      return;\n    }\n    var topicScores = byTopic.get(topicLabel);\n    if (!topicScores) {\n      topicScores = {\n        p1w: 0,\n        p2w: 0,\n        p3w: 0,\n        p3bw: 0,\n        p4w: 0\n      };\n      byTopic.set(topicLabel, topicScores);\n    }\n    var p1w = 0;\n    var p2w = 0;\n    var p3w = 0;\n    var p3bw = 0;\n    var p4w = 0;\n    // P1: time in Mesh\n    if (tstats.inMesh) {\n      var p1 = Math.max(tstats.meshTime / topicParams.timeInMeshQuantum, topicParams.timeInMeshCap);\n      p1w += p1 * topicParams.timeInMeshWeight;\n    }\n    // P2: first message deliveries\n    var p2 = tstats.firstMessageDeliveries;\n    if (p2 > topicParams.firstMessageDeliveriesCap) {\n      p2 = topicParams.firstMessageDeliveriesCap;\n    }\n    p2w += p2 * topicParams.firstMessageDeliveriesWeight;\n    // P3: mesh message deliveries\n    if (tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold) {\n      var deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries;\n      var p3 = deficit * deficit;\n      p3w += p3 * topicParams.meshMessageDeliveriesWeight;\n    }\n    // P3b:\n    // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n    var p3b = tstats.meshFailurePenalty;\n    p3bw += p3b * topicParams.meshFailurePenaltyWeight;\n    // P4: invalid messages\n    // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n    var p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries;\n    p4w += p4 * topicParams.invalidMessageDeliveriesWeight;\n    // update score, mixing with topic weight\n    score += (p1w + p2w + p3w + p3bw + p4w) * topicParams.topicWeight;\n    topicScores.p1w += p1w;\n    topicScores.p2w += p2w;\n    topicScores.p3w += p3w;\n    topicScores.p3bw += p3bw;\n    topicScores.p4w += p4w;\n  });\n  // apply the topic score cap, if any\n  if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n    score = params.topicScoreCap;\n    // Proportionally apply cap to all individual contributions\n    var capF = params.topicScoreCap / score;\n    var _iterator = _createForOfIteratorHelper(byTopic.values()),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var ws = _step.value;\n        ws.p1w *= capF;\n        ws.p2w *= capF;\n        ws.p3w *= capF;\n        ws.p3bw *= capF;\n        ws.p4w *= capF;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  var p5w = 0;\n  var p6w = 0;\n  var p7w = 0;\n  // P5: application-specific score\n  var p5 = params.appSpecificScore(peer);\n  p5w += p5 * params.appSpecificWeight;\n  // P6: IP colocation factor\n  pstats.ips.forEach(function (ip) {\n    if (params.IPColocationFactorWhitelist.has(ip)) {\n      return;\n    }\n    // P6 has a cliff (IPColocationFactorThreshold)\n    // It's only applied if at least that many peers are connected to us from that source IP addr.\n    // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n    var peersInIP = peerIPs.get(ip);\n    var numPeersInIP = peersInIP ? peersInIP.size : 0;\n    if (numPeersInIP > params.IPColocationFactorThreshold) {\n      var surplus = numPeersInIP - params.IPColocationFactorThreshold;\n      var p6 = surplus * surplus;\n      p6w += p6 * params.IPColocationFactorWeight;\n    }\n  });\n  // P7: behavioural pattern penalty\n  var p7 = pstats.behaviourPenalty * pstats.behaviourPenalty;\n  p7w += p7 * params.behaviourPenaltyWeight;\n  score += p5w + p6w + p7w;\n  return {\n    byTopic: byTopic,\n    p5w: p5w,\n    p6w: p6w,\n    p7w: p7w,\n    score: score\n  };\n}\nexport function computeAllPeersScoreWeights(peerIdStrs, peerStats, params, peerIPs, topicStrToLabel) {\n  var sw = {\n    byTopic: new Map(),\n    p5w: [],\n    p6w: [],\n    p7w: [],\n    score: []\n  };\n  var _iterator2 = _createForOfIteratorHelper(peerIdStrs),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var peerIdStr = _step2.value;\n      var pstats = peerStats.get(peerIdStr);\n      if (pstats) {\n        var swPeer = computeScoreWeights(peerIdStr, pstats, params, peerIPs, topicStrToLabel);\n        var _iterator3 = _createForOfIteratorHelper(swPeer.byTopic),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _step3$value = _slicedToArray(_step3.value, 2),\n              topic = _step3$value[0],\n              swPeerTopic = _step3$value[1];\n            var swTopic = sw.byTopic.get(topic);\n            if (!swTopic) {\n              swTopic = {\n                p1w: [],\n                p2w: [],\n                p3w: [],\n                p3bw: [],\n                p4w: []\n              };\n              sw.byTopic.set(topic, swTopic);\n            }\n            swTopic.p1w.push(swPeerTopic.p1w);\n            swTopic.p2w.push(swPeerTopic.p2w);\n            swTopic.p3w.push(swPeerTopic.p3w);\n            swTopic.p3bw.push(swPeerTopic.p3bw);\n            swTopic.p4w.push(swPeerTopic.p4w);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n        sw.p5w.push(swPeer.p5w);\n        sw.p6w.push(swPeer.p6w);\n        sw.p7w.push(swPeer.p7w);\n        sw.score.push(swPeer.score);\n      } else {\n        sw.p5w.push(0);\n        sw.p6w.push(0);\n        sw.p7w.push(0);\n        sw.score.push(0);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return sw;\n}","map":{"version":3,"names":["computeScoreWeights","peer","pstats","params","peerIPs","topicStrToLabel","score","byTopic","Map","Object","entries","topics","forEach","_ref","_topicStrToLabel$get","_ref2","_slicedToArray","topic","tstats","topicLabel","get","topicParams","undefined","topicScores","p1w","p2w","p3w","p3bw","p4w","set","inMesh","p1","Math","max","meshTime","timeInMeshQuantum","timeInMeshCap","timeInMeshWeight","p2","firstMessageDeliveries","firstMessageDeliveriesCap","firstMessageDeliveriesWeight","meshMessageDeliveriesActive","meshMessageDeliveries","meshMessageDeliveriesThreshold","deficit","p3","meshMessageDeliveriesWeight","p3b","meshFailurePenalty","meshFailurePenaltyWeight","p4","invalidMessageDeliveries","invalidMessageDeliveriesWeight","topicWeight","topicScoreCap","capF","_iterator","_createForOfIteratorHelper","values","_step","s","n","done","ws","value","err","e","f","p5w","p6w","p7w","p5","appSpecificScore","appSpecificWeight","ips","ip","IPColocationFactorWhitelist","has","peersInIP","numPeersInIP","size","IPColocationFactorThreshold","surplus","p6","IPColocationFactorWeight","p7","behaviourPenalty","behaviourPenaltyWeight","computeAllPeersScoreWeights","peerIdStrs","peerStats","sw","_iterator2","_step2","peerIdStr","swPeer","_iterator3","_step3","_step3$value","swPeerTopic","swTopic","push"],"sources":["../../../src/score/scoreMetrics.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}