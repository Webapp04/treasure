{"ast":null,"code":"// load websocket library if we are not in the browser\nimport WebSocket from './web-socket.js';\nimport duplex from './duplex.js';\nimport wsurl from './ws-url.js';\nexport function connect(addr, opts) {\n  var _opts;\n  var location = typeof window === 'undefined' ? '' : window.location;\n  opts = (_opts = opts) !== null && _opts !== void 0 ? _opts : {};\n  var url = wsurl(addr, location.toString());\n  var socket = new WebSocket(url, opts.websocket);\n  return duplex(socket, opts);\n}","map":{"version":3,"names":["WebSocket","duplex","wsurl","connect","addr","opts","_opts","location","window","url","toString","socket","websocket"],"sources":["/Users/apple/Documents/treasure/node_modules/it-ws/src/client.ts"],"sourcesContent":["// load websocket library if we are not in the browser\nimport WebSocket from './web-socket.js'\nimport duplex from './duplex.js'\nimport wsurl from './ws-url.js'\nimport type { ClientOptions } from 'ws'\nimport type { DuplexWebSocket } from './duplex.js'\nimport type { SinkOptions } from './sink.js'\n\nexport interface WebSocketOptions extends SinkOptions {\n  websocket?: ClientOptions\n}\n\nexport function connect (addr: string, opts?: WebSocketOptions): DuplexWebSocket {\n  const location = typeof window === 'undefined' ? '' : window.location\n  opts = opts ?? {}\n\n  const url = wsurl(addr, location.toString())\n  const socket = new WebSocket(url, opts.websocket)\n\n  return duplex(socket, opts)\n}\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,KAAK,MAAM,aAAa;AAS/B,OAAM,SAAUC,OAAOA,CAAEC,IAAY,EAAEC,IAAuB;EAAA,IAAAC,KAAA;EAC5D,IAAMC,QAAQ,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAG,EAAE,GAAGA,MAAM,CAACD,QAAQ;EACrEF,IAAI,IAAAC,KAAA,GAAGD,IAAI,cAAAC,KAAA,cAAAA,KAAA,GAAI,EAAE;EAEjB,IAAMG,GAAG,GAAGP,KAAK,CAACE,IAAI,EAAEG,QAAQ,CAACG,QAAQ,EAAE,CAAC;EAC5C,IAAMC,MAAM,GAAG,IAAIX,SAAS,CAACS,GAAG,EAAEJ,IAAI,CAACO,SAAS,CAAC;EAEjD,OAAOX,MAAM,CAACU,MAAM,EAAEN,IAAI,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}