{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { pushable } from 'it-pushable';\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n */\nexport default function merge() {\n  return _merge.apply(this, arguments);\n}\nfunction _merge() {\n  _merge = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var _len,\n      sources,\n      _key,\n      output,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          for (_len = _args3.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n            sources[_key] = _args3[_key];\n          }\n          output = pushable({\n            objectMode: true\n          });\n          void Promise.resolve().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return Promise.all(sources.map( /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(source) {\n                      var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, item;\n                      return _regeneratorRuntime().wrap(function _callee$(_context) {\n                        while (1) switch (_context.prev = _context.next) {\n                          case 0:\n                            _iteratorAbruptCompletion = false;\n                            _didIteratorError = false;\n                            _context.prev = 2;\n                            _iterator = _asyncIterator(source);\n                          case 4:\n                            _context.next = 6;\n                            return _iterator.next();\n                          case 6:\n                            if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                              _context.next = 12;\n                              break;\n                            }\n                            item = _step.value;\n                            output.push(item);\n                          case 9:\n                            _iteratorAbruptCompletion = false;\n                            _context.next = 4;\n                            break;\n                          case 12:\n                            _context.next = 18;\n                            break;\n                          case 14:\n                            _context.prev = 14;\n                            _context.t0 = _context[\"catch\"](2);\n                            _didIteratorError = true;\n                            _iteratorError = _context.t0;\n                          case 18:\n                            _context.prev = 18;\n                            _context.prev = 19;\n                            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                              _context.next = 23;\n                              break;\n                            }\n                            _context.next = 23;\n                            return _iterator.return();\n                          case 23:\n                            _context.prev = 23;\n                            if (!_didIteratorError) {\n                              _context.next = 26;\n                              break;\n                            }\n                            throw _iteratorError;\n                          case 26:\n                            return _context.finish(23);\n                          case 27:\n                            return _context.finish(18);\n                          case 28:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }, _callee, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n                    }));\n                    return function (_x) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }()));\n                case 3:\n                  output.end();\n                  _context2.next = 9;\n                  break;\n                case 6:\n                  _context2.prev = 6;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  output.end(_context2.t0);\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2, null, [[0, 6]]);\n          })));\n          return _context3.delegateYield(_asyncGeneratorDelegate(_asyncIterator(output), _awaitAsyncGenerator), \"t0\", 4);\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _merge.apply(this, arguments);\n}","map":{"version":3,"names":["pushable","merge","_merge","apply","arguments","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee3","_len","sources","_key","output","_args3","wrap","_callee3$","_context3","prev","next","length","Array","objectMode","Promise","resolve","then","_asyncToGenerator","_callee2","_callee2$","_context2","all","map","_ref2","_callee","source","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","item","_callee$","_context","_asyncIterator","sent","done","value","push","t0","return","finish","stop","_x","end","delegateYield","_asyncGeneratorDelegate","_awaitAsyncGenerator"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/multistream-select/node_modules/it-merge/src/index.ts"],"sourcesContent":["import { pushable } from 'it-pushable'\n\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n */\nexport default async function * merge <T> (...sources: Array<AsyncIterable<T> | Iterable<T>>): AsyncGenerator<T, void, undefined> {\n  const output = pushable<T>({\n    objectMode: true\n  })\n\n  void Promise.resolve().then(async () => {\n    try {\n      await Promise.all(\n        sources.map(async (source) => {\n          for await (const item of source) {\n            output.push(item)\n          }\n        })\n      )\n\n      output.end()\n    } catch (err: any) {\n      output.end(err)\n    }\n  })\n\n  yield * output\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}