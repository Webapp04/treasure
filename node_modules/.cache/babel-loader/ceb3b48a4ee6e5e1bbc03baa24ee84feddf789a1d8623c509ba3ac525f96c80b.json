{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var DefaultMovingAverage = /*#__PURE__*/function () {\n  function DefaultMovingAverage(timespan) {\n    _classCallCheck(this, DefaultMovingAverage);\n    if (typeof timespan !== 'number') {\n      throw new Error('must provide a timespan to the moving average constructor');\n    }\n    if (timespan <= 0) {\n      throw new Error('must provide a timespan > 0 to the moving average constructor');\n    }\n    this.timespan = timespan;\n    this.movingAverage = 0;\n    this.variance = 0;\n    this.deviation = 0;\n    this.forecast = 0;\n  }\n  _createClass(DefaultMovingAverage, [{\n    key: \"alpha\",\n    value: function alpha(t, pt) {\n      return 1 - Math.exp(-(t - pt) / this.timespan);\n    }\n  }, {\n    key: \"push\",\n    value: function push(time, value) {\n      if (this.previousTime != null) {\n        // calculate moving average\n        var a = this.alpha(time, this.previousTime);\n        var diff = value - this.movingAverage;\n        var incr = a * diff;\n        this.movingAverage = a * value + (1 - a) * this.movingAverage;\n        // calculate variance & deviation\n        this.variance = (1 - a) * (this.variance + diff * incr);\n        this.deviation = Math.sqrt(this.variance);\n        // calculate forecast\n        this.forecast = this.movingAverage + a * diff;\n      } else {\n        this.movingAverage = value;\n      }\n      this.previousTime = time;\n    }\n  }]);\n  return DefaultMovingAverage;\n}();\nexport function createMovingAverage(timespan) {\n  return new DefaultMovingAverage(timespan);\n}","map":{"version":3,"names":["DefaultMovingAverage","timespan","_classCallCheck","Error","movingAverage","variance","deviation","forecast","_createClass","key","value","alpha","t","pt","Math","exp","push","time","previousTime","a","diff","incr","sqrt","createMovingAverage"],"sources":["/Users/apple/Documents/treasure/node_modules/libp2p/src/metrics/moving-average.ts"],"sourcesContent":["import type { MovingAverage } from '@libp2p/interface-metrics'\n\nexport class DefaultMovingAverage {\n  public movingAverage: number\n  public variance: number\n  public deviation: number\n  public forecast: number\n  private readonly timespan: number\n  private previousTime?: number\n\n  constructor (timespan: number) {\n    if (typeof timespan !== 'number') {\n      throw new Error('must provide a timespan to the moving average constructor')\n    }\n\n    if (timespan <= 0) {\n      throw new Error('must provide a timespan > 0 to the moving average constructor')\n    }\n\n    this.timespan = timespan\n    this.movingAverage = 0\n    this.variance = 0\n    this.deviation = 0\n    this.forecast = 0\n  }\n\n  alpha (t: number, pt: number) {\n    return 1 - (Math.exp(-(t - pt) / this.timespan))\n  }\n\n  push (time: number, value: number) {\n    if (this.previousTime != null) {\n      // calculate moving average\n      const a = this.alpha(time, this.previousTime)\n      const diff = value - this.movingAverage\n      const incr = a * diff\n      this.movingAverage = a * value + (1 - a) * this.movingAverage\n      // calculate variance & deviation\n      this.variance = (1 - a) * (this.variance + diff * incr)\n      this.deviation = Math.sqrt(this.variance)\n      // calculate forecast\n      this.forecast = this.movingAverage + a * diff\n    } else {\n      this.movingAverage = value\n    }\n\n    this.previousTime = time\n  }\n}\n\nexport function createMovingAverage (timespan: number): MovingAverage {\n  return new DefaultMovingAverage(timespan)\n}\n"],"mappings":";;AAEA,WAAaA,oBAAoB;EAQ/B,SAAAA,qBAAaC,QAAgB;IAAAC,eAAA,OAAAF,oBAAA;IAC3B,IAAI,OAAOC,QAAQ,KAAK,QAAQ,EAAE;MAChC,MAAM,IAAIE,KAAK,CAAC,2DAA2D,CAAC;;IAG9E,IAAIF,QAAQ,IAAI,CAAC,EAAE;MACjB,MAAM,IAAIE,KAAK,CAAC,+DAA+D,CAAC;;IAGlF,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACG,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,QAAQ,GAAG,CAAC;EACnB;EAACC,YAAA,CAAAR,oBAAA;IAAAS,GAAA;IAAAC,KAAA,EAED,SAAAC,MAAOC,CAAS,EAAEC,EAAU;MAC1B,OAAO,CAAC,GAAIC,IAAI,CAACC,GAAG,CAAC,EAAEH,CAAC,GAAGC,EAAE,CAAC,GAAG,IAAI,CAACZ,QAAQ,CAAE;IAClD;EAAC;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAM,KAAMC,IAAY,EAAEP,KAAa;MAC/B,IAAI,IAAI,CAACQ,YAAY,IAAI,IAAI,EAAE;QAC7B;QACA,IAAMC,CAAC,GAAG,IAAI,CAACR,KAAK,CAACM,IAAI,EAAE,IAAI,CAACC,YAAY,CAAC;QAC7C,IAAME,IAAI,GAAGV,KAAK,GAAG,IAAI,CAACN,aAAa;QACvC,IAAMiB,IAAI,GAAGF,CAAC,GAAGC,IAAI;QACrB,IAAI,CAAChB,aAAa,GAAGe,CAAC,GAAGT,KAAK,GAAG,CAAC,CAAC,GAAGS,CAAC,IAAI,IAAI,CAACf,aAAa;QAC7D;QACA,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC,GAAGc,CAAC,KAAK,IAAI,CAACd,QAAQ,GAAGe,IAAI,GAAGC,IAAI,CAAC;QACvD,IAAI,CAACf,SAAS,GAAGQ,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAAC;QACzC;QACA,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACH,aAAa,GAAGe,CAAC,GAAGC,IAAI;OAC9C,MAAM;QACL,IAAI,CAAChB,aAAa,GAAGM,KAAK;;MAG5B,IAAI,CAACQ,YAAY,GAAGD,IAAI;IAC1B;EAAC;EAAA,OAAAjB,oBAAA;AAAA;AAGH,OAAM,SAAUuB,mBAAmBA,CAAEtB,QAAgB;EACnD,OAAO,IAAID,oBAAoB,CAACC,QAAQ,CAAC;AAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}