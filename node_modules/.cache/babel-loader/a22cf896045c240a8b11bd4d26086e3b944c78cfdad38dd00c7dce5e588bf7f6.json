{"ast":null,"code":"import _objectSpread from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { MESSAGE_TYPE_LOOKUP } from '../message/index.js';\nexport function sendingQueryEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'SENDING_QUERY',\n    type: 0,\n    messageName: fields.type,\n    messageType: MESSAGE_TYPE_LOOKUP.indexOf(fields.type.toString())\n  });\n}\nexport function peerResponseEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'PEER_RESPONSE',\n    type: 1,\n    messageName: fields.messageType,\n    closer: fields.closer != null ? fields.closer : [],\n    providers: fields.providers != null ? fields.providers : []\n  });\n}\nexport function finalPeerEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'FINAL_PEER',\n    type: 2\n  });\n}\nexport function queryErrorEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'QUERY_ERROR',\n    type: 3\n  });\n}\nexport function providerEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'PROVIDER',\n    type: 4\n  });\n}\nexport function valueEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'VALUE',\n    type: 5\n  });\n}\nexport function addingPeerEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'ADDING_PEER',\n    type: 6\n  });\n}\nexport function dialingPeerEvent(fields) {\n  return _objectSpread(_objectSpread({}, fields), {}, {\n    name: 'DIALING_PEER',\n    type: 7\n  });\n}","map":{"version":3,"names":["MESSAGE_TYPE_LOOKUP","sendingQueryEvent","fields","_objectSpread","name","type","messageName","messageType","indexOf","toString","peerResponseEvent","closer","providers","finalPeerEvent","queryErrorEvent","providerEvent","valueEvent","addingPeerEvent","dialingPeerEvent"],"sources":["/Users/apple/Documents/treasure/node_modules/@libp2p/kad-dht/src/query/events.ts"],"sourcesContent":["import { MESSAGE_TYPE_LOOKUP } from '../message/index.js'\nimport type { Message } from '../message/dht.js'\nimport type { SendingQueryEvent, PeerResponseEvent, DialingPeerEvent, AddingPeerEvent, ValueEvent, ProviderEvent, QueryErrorEvent, FinalPeerEvent } from '@libp2p/interface-dht'\nimport type { PeerInfo } from '@libp2p/interface-peer-info'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { Libp2pRecord } from '@libp2p/record'\n\nexport interface QueryEventFields {\n  to: PeerId\n  type: Message.MessageType\n}\n\nexport function sendingQueryEvent (fields: QueryEventFields): SendingQueryEvent {\n  return {\n    ...fields,\n    name: 'SENDING_QUERY',\n    type: 0,\n    messageName: fields.type,\n    messageType: MESSAGE_TYPE_LOOKUP.indexOf(fields.type.toString())\n  }\n}\n\nexport interface PeerResponseEventField {\n  from: PeerId\n  messageType: Message.MessageType\n  closer?: PeerInfo[]\n  providers?: PeerInfo[]\n  record?: Libp2pRecord\n}\n\nexport function peerResponseEvent (fields: PeerResponseEventField): PeerResponseEvent {\n  return {\n    ...fields,\n    name: 'PEER_RESPONSE',\n    type: 1,\n    messageName: fields.messageType,\n    closer: (fields.closer != null) ? fields.closer : [],\n    providers: (fields.providers != null) ? fields.providers : []\n  }\n}\n\nexport interface FinalPeerEventFields {\n  from: PeerId\n  peer: PeerInfo\n}\n\nexport function finalPeerEvent (fields: FinalPeerEventFields): FinalPeerEvent {\n  return {\n    ...fields,\n    name: 'FINAL_PEER',\n    type: 2\n  }\n}\n\nexport interface ErrorEventFields {\n  from: PeerId\n  error: Error\n}\n\nexport function queryErrorEvent (fields: ErrorEventFields): QueryErrorEvent {\n  return {\n    ...fields,\n    name: 'QUERY_ERROR',\n    type: 3\n  }\n}\n\nexport interface ProviderEventFields {\n  from: PeerId\n  providers: PeerInfo[]\n}\n\nexport function providerEvent (fields: ProviderEventFields): ProviderEvent {\n  return {\n    ...fields,\n    name: 'PROVIDER',\n    type: 4\n  }\n}\n\nexport interface ValueEventFields {\n  from: PeerId\n  value: Uint8Array\n}\n\nexport function valueEvent (fields: ValueEventFields): ValueEvent {\n  return {\n    ...fields,\n    name: 'VALUE',\n    type: 5\n  }\n}\n\nexport interface PeerEventFields {\n  peer: PeerId\n}\n\nexport function addingPeerEvent (fields: PeerEventFields): AddingPeerEvent {\n  return {\n    ...fields,\n    name: 'ADDING_PEER',\n    type: 6\n  }\n}\n\nexport interface DialingPeerEventFields {\n  peer: PeerId\n}\n\nexport function dialingPeerEvent (fields: DialingPeerEventFields): DialingPeerEvent {\n  return {\n    ...fields,\n    name: 'DIALING_PEER',\n    type: 7\n  }\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,qBAAqB;AAYzD,OAAM,SAAUC,iBAAiBA,CAAEC,MAAwB;EACzD,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE,CAAC;IACPC,WAAW,EAAEJ,MAAM,CAACG,IAAI;IACxBE,WAAW,EAAEP,mBAAmB,CAACQ,OAAO,CAACN,MAAM,CAACG,IAAI,CAACI,QAAQ,EAAE;EAAC;AAEpE;AAUA,OAAM,SAAUC,iBAAiBA,CAAER,MAA8B;EAC/D,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE,CAAC;IACPC,WAAW,EAAEJ,MAAM,CAACK,WAAW;IAC/BI,MAAM,EAAGT,MAAM,CAACS,MAAM,IAAI,IAAI,GAAIT,MAAM,CAACS,MAAM,GAAG,EAAE;IACpDC,SAAS,EAAGV,MAAM,CAACU,SAAS,IAAI,IAAI,GAAIV,MAAM,CAACU,SAAS,GAAG;EAAE;AAEjE;AAOA,OAAM,SAAUC,cAAcA,CAAEX,MAA4B;EAC1D,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE;EAAC;AAEX;AAOA,OAAM,SAAUS,eAAeA,CAAEZ,MAAwB;EACvD,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE;EAAC;AAEX;AAOA,OAAM,SAAUU,aAAaA,CAAEb,MAA2B;EACxD,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EAAC;AAEX;AAOA,OAAM,SAAUW,UAAUA,CAAEd,MAAwB;EAClD,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;EAAC;AAEX;AAMA,OAAM,SAAUY,eAAeA,CAAEf,MAAuB;EACtD,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE;EAAC;AAEX;AAMA,OAAM,SAAUa,gBAAgBA,CAAEhB,MAA8B;EAC9D,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;IACTE,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}