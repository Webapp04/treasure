{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { cleanCid } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\nexport function createStat(_ref) {\n  var repo = _ref.repo,\n    preload = _ref.preload;\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"stat\"]}\n   */\n  function stat(_x) {\n    return _stat.apply(this, arguments);\n  }\n  function _stat() {\n    _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cid) {\n      var options,\n        block,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            cid = cleanCid(cid);\n            if (options.preload !== false) {\n              preload(cid);\n            }\n            _context.next = 5;\n            return repo.blocks.get(cid);\n          case 5:\n            block = _context.sent;\n            return _context.abrupt(\"return\", {\n              cid: cid,\n              size: block.length\n            });\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _stat.apply(this, arguments);\n  }\n  return withTimeoutOption(stat);\n}","map":{"version":3,"names":["cleanCid","withTimeoutOption","createStat","_ref","repo","preload","stat","_x","_stat","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cid","options","block","_args","wrap","_callee$","_context","prev","next","length","undefined","blocks","get","sent","abrupt","size","stop"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-core/src/components/block/stat.js"],"sourcesContent":["import { cleanCid } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\nexport function createStat ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    cid = cleanCid(cid)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid)\n\n    return { cid, size: block.length }\n  }\n\n  return withTimeoutOption(stat)\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAjBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EACzC;AACF;AACA;EAFE,SAGeC,IAAIA,CAAAC,EAAA;IAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,MAAA;IAAAA,KAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAnB,SAAAC,QAAqBC,GAAG;MAAA,IAAAC,OAAA;QAAAC,KAAA;QAAAC,KAAA,GAAAR,SAAA;MAAA,OAAAE,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAEP,OAAO,GAAAE,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,CAAC,CAAC;YACpCH,GAAG,GAAGf,QAAQ,CAACe,GAAG,CAAC;YAEnB,IAAIC,OAAO,CAACX,OAAO,KAAK,KAAK,EAAE;cAC7BA,OAAO,CAACU,GAAG,CAAC;YACd;YAACM,QAAA,CAAAE,IAAA;YAAA,OAEmBnB,IAAI,CAACsB,MAAM,CAACC,GAAG,CAACZ,GAAG,CAAC;UAAA;YAAlCE,KAAK,GAAAI,QAAA,CAAAO,IAAA;YAAA,OAAAP,QAAA,CAAAQ,MAAA,WAEJ;cAAEd,GAAG,EAAHA,GAAG;cAAEe,IAAI,EAAEb,KAAK,CAACO;YAAO,CAAC;UAAA;UAAA;YAAA,OAAAH,QAAA,CAAAU,IAAA;QAAA;MAAA,GAAAjB,OAAA;IAAA,CACnC;IAAA,OAAAN,KAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,OAAOT,iBAAiB,CAACK,IAAI,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}