{"ast":null,"code":"import _slicedToArray from\"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{BASE_REWARD,MAX_CHEST_TIER}from\"../../../constant/blockchain\";import{formatterUS}from\"../../../utils\";import{useSelector}from\"react-redux\";import{selectNftSelected}from\"redux/slice/nftSlice\";import TreasureBox from\"storybook/molecule/TreasureBox/treasureBox\";import{useCountdown}from\"hooks/useCountdown\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function DashboardTreasureTile(_ref){var onOpenModal=_ref.onOpenModal,onOpenWarningModal=_ref.onOpenWarningModal,amountOpenChest=_ref.amountOpenChest,isAnimated=_ref.isAnimated;var nftSelected=useSelector(selectNftSelected);var _useCountdown=useCountdown(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tierExpireTime),_useCountdown2=_slicedToArray(_useCountdown,4),hours=_useCountdown2[0],minutes=_useCountdown2[1],seconds=_useCountdown2[2],days=_useCountdown2[3];var progressWidth=nftSelected!==null&&nftSelected!==void 0&&nftSelected.tierTresr?100/(MAX_CHEST_TIER/(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tierTresr)):0;var isMaxLevel=MAX_CHEST_TIER===(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tierTresr);var isActive=!!(nftSelected!==null&&nftSelected!==void 0&&nftSelected.staked);var openAttemptTitle=isMaxLevel?\"-\":\"\".concat(formatterUS(amountOpenChest),\" TRESR\");var nextTierEstTitle=isMaxLevel?\"-\":\"\".concat(+(nftSelected===null||nftSelected===void 0?void 0:nftSelected.tier)*((nftSelected===null||nftSelected===void 0?void 0:nftSelected.tierTresr)+1)*BASE_REWARD*30,\" TRESR\");var onAction=function onAction(){return isActive?onOpenModal():onOpenWarningModal();};return/*#__PURE__*/_jsx(TreasureBox,{isAnimated:isAnimated,nftSelected:nftSelected,openAttemptTitle:openAttemptTitle,nextTierEstTitle:nextTierEstTitle,progressWidth:progressWidth,onAction:onAction,hours:hours,minutes:minutes,seconds:seconds,days:days});}","map":{"version":3,"names":["BASE_REWARD","MAX_CHEST_TIER","formatterUS","useSelector","selectNftSelected","TreasureBox","useCountdown","jsx","_jsx","DashboardTreasureTile","_ref","onOpenModal","onOpenWarningModal","amountOpenChest","isAnimated","nftSelected","_useCountdown","tierExpireTime","_useCountdown2","_slicedToArray","hours","minutes","seconds","days","progressWidth","tierTresr","isMaxLevel","isActive","staked","openAttemptTitle","concat","nextTierEstTitle","tier","onAction"],"sources":["/Users/apple/Documents/treasure/src/components/Dashboard/DashboardTreasureTile/index.js"],"sourcesContent":["import { BASE_REWARD, MAX_CHEST_TIER } from \"../../../constant/blockchain\";\nimport { formatterUS } from \"../../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectNftSelected } from \"redux/slice/nftSlice\";\nimport TreasureBox from \"storybook/molecule/TreasureBox/treasureBox\";\nimport { useCountdown } from \"hooks/useCountdown\";\n\nexport default function DashboardTreasureTile({\n  onOpenModal,\n  onOpenWarningModal,\n  amountOpenChest,\n  isAnimated,\n}) {\n  const nftSelected = useSelector(selectNftSelected);\n  const [hours, minutes, seconds, days] = useCountdown(\n    nftSelected?.tierExpireTime\n  );\n  const progressWidth = nftSelected?.tierTresr\n    ? 100 / (MAX_CHEST_TIER / nftSelected?.tierTresr)\n    : 0;\n  const isMaxLevel = MAX_CHEST_TIER === nftSelected?.tierTresr;\n  const isActive = !!nftSelected?.staked;\n  const openAttemptTitle = isMaxLevel\n    ? \"-\"\n    : `${formatterUS(amountOpenChest)} TRESR`;\n  const nextTierEstTitle = isMaxLevel\n    ? \"-\"\n    : `${\n        +nftSelected?.tier * (nftSelected?.tierTresr + 1) * BASE_REWARD * 30\n      } TRESR`;\n\n  const onAction = () => (isActive ? onOpenModal() : onOpenWarningModal());\n\n  return (\n    <TreasureBox\n      isAnimated={isAnimated}\n      nftSelected={nftSelected}\n      openAttemptTitle={openAttemptTitle}\n      nextTierEstTitle={nextTierEstTitle}\n      progressWidth={progressWidth}\n      onAction={onAction}\n      hours={hours}\n      minutes={minutes}\n      seconds={seconds}\n      days={days}\n    />\n  );\n}\n"],"mappings":"qHAAA,OAASA,WAAW,CAAEC,cAAc,KAAQ,8BAA8B,CAC1E,OAASC,WAAW,KAAQ,gBAAgB,CAC5C,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,iBAAiB,KAAQ,sBAAsB,CACxD,MAAO,CAAAC,WAAW,KAAM,4CAA4C,CACpE,OAASC,YAAY,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElD,cAAe,SAAS,CAAAC,qBAAqBA,CAAAC,IAAA,CAK1C,IAJD,CAAAC,WAAW,CAAAD,IAAA,CAAXC,WAAW,CACXC,kBAAkB,CAAAF,IAAA,CAAlBE,kBAAkB,CAClBC,eAAe,CAAAH,IAAA,CAAfG,eAAe,CACfC,UAAU,CAAAJ,IAAA,CAAVI,UAAU,CAEV,GAAM,CAAAC,WAAW,CAAGZ,WAAW,CAACC,iBAAiB,CAAC,CAClD,IAAAY,aAAA,CAAwCV,YAAY,CAClDS,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEE,cACf,CAAC,CAAAC,cAAA,CAAAC,cAAA,CAAAH,aAAA,IAFMI,KAAK,CAAAF,cAAA,IAAEG,OAAO,CAAAH,cAAA,IAAEI,OAAO,CAAAJ,cAAA,IAAEK,IAAI,CAAAL,cAAA,IAGpC,GAAM,CAAAM,aAAa,CAAGT,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEU,SAAS,CACxC,GAAG,EAAIxB,cAAc,EAAGc,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEU,SAAS,EAAC,CAC/C,CAAC,CACL,GAAM,CAAAC,UAAU,CAAGzB,cAAc,IAAKc,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEU,SAAS,EAC5D,GAAM,CAAAE,QAAQ,CAAG,CAAC,EAACZ,WAAW,SAAXA,WAAW,WAAXA,WAAW,CAAEa,MAAM,EACtC,GAAM,CAAAC,gBAAgB,CAAGH,UAAU,CAC/B,GAAG,IAAAI,MAAA,CACA5B,WAAW,CAACW,eAAe,CAAC,UAAQ,CAC3C,GAAM,CAAAkB,gBAAgB,CAAGL,UAAU,CAC/B,GAAG,IAAAI,MAAA,CAED,EAACf,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEiB,IAAI,GAAI,CAAAjB,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEU,SAAS,EAAG,CAAC,CAAC,CAAGzB,WAAW,CAAG,EAAE,UAC9D,CAEZ,GAAM,CAAAiC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,QAAU,CAAAN,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAAGC,kBAAkB,CAAC,CAAC,EAAC,CAExE,mBACEJ,IAAA,CAACH,WAAW,EACVS,UAAU,CAAEA,UAAW,CACvBC,WAAW,CAAEA,WAAY,CACzBc,gBAAgB,CAAEA,gBAAiB,CACnCE,gBAAgB,CAAEA,gBAAiB,CACnCP,aAAa,CAAEA,aAAc,CAC7BS,QAAQ,CAAEA,QAAS,CACnBb,KAAK,CAAEA,KAAM,CACbC,OAAO,CAAEA,OAAQ,CACjBC,OAAO,CAAEA,OAAQ,CACjBC,IAAI,CAAEA,IAAK,CACZ,CAAC,CAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}