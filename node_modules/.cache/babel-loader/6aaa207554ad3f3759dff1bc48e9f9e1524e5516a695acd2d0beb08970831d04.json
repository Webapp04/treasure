{"ast":null,"code":"import _regeneratorRuntime from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncGeneratorDelegate from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport _awaitAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/apple/Documents/treasure/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport dirBuilder from './dir.js';\nimport fileBuilder from './file/index.js';\nimport errCode from 'err-code';\nimport rabin from '../chunker/rabin.js';\nimport fixedSize from '../chunker/fixed-size.js';\nimport validateChunks from './validate-chunks.js';\n\n/**\n * @typedef {import('../types').File} File\n * @typedef {import('../types').Directory} Directory\n * @typedef {import('../types').DAGBuilder} DAGBuilder\n * @typedef {import('../types').Chunker} Chunker\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @param {any} thing\n * @returns {thing is Iterable<any>}\n */\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterable<any>}\n */\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\n\n/**\n * @param {Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>} content\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return content;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    } else if (isIterable(content)) {\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(content), _awaitAsyncGenerator), \"t0\", 1);\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch (_unused) {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\n\n/**\n * @type {DAGBuilder}\n */\nfunction dagBuilder(_x, _x2, _x3) {\n  return _dagBuilder.apply(this, arguments);\n}\nfunction _dagBuilder() {\n  _dagBuilder = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(source, blockstore, options) {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step;\n    return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context4.prev = 2;\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n            var entry, chunker, chunkValidator, file, dir;\n            return _regeneratorRuntime().wrap(function _loop$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  entry = _step.value;\n                  if (entry.path) {\n                    if (entry.path.substring(0, 2) === './') {\n                      options.wrapWithDirectory = true;\n                    }\n                    entry.path = entry.path.split('/').filter(function (path) {\n                      return path && path !== '.';\n                    }).join('/');\n                  }\n                  if (!entry.content) {\n                    _context3.next = 10;\n                    break;\n                  }\n                  /**\n                   * @type {Chunker}\n                   */\n\n                  if (typeof options.chunker === 'function') {\n                    chunker = options.chunker;\n                  } else if (options.chunker === 'rabin') {\n                    chunker = rabin;\n                  } else {\n                    chunker = fixedSize;\n                  }\n\n                  /**\n                   * @type {ChunkValidator}\n                   */\n\n                  if (typeof options.chunkValidator === 'function') {\n                    chunkValidator = options.chunkValidator;\n                  } else {\n                    chunkValidator = validateChunks;\n                  }\n\n                  /** @type {File} */\n                  file = {\n                    path: entry.path,\n                    mtime: entry.mtime,\n                    mode: entry.mode,\n                    content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n                  };\n                  _context3.next = 8;\n                  return function () {\n                    return fileBuilder(file, blockstore, options);\n                  };\n                case 8:\n                  _context3.next = 17;\n                  break;\n                case 10:\n                  if (!entry.path) {\n                    _context3.next = 16;\n                    break;\n                  }\n                  /** @type {Directory} */\n                  dir = {\n                    path: entry.path,\n                    mtime: entry.mtime,\n                    mode: entry.mode\n                  };\n                  _context3.next = 14;\n                  return function () {\n                    return dirBuilder(dir, blockstore, options);\n                  };\n                case 14:\n                  _context3.next = 17;\n                  break;\n                case 16:\n                  throw new Error('Import candidate must have content or path or both');\n                case 17:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _loop);\n          });\n          _iterator = _asyncIterator(source);\n        case 5:\n          _context4.next = 7;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 7:\n          if (!(_iteratorAbruptCompletion = !(_step = _context4.sent).done)) {\n            _context4.next = 12;\n            break;\n          }\n          return _context4.delegateYield(_loop(), \"t0\", 9);\n        case 9:\n          _iteratorAbruptCompletion = false;\n          _context4.next = 5;\n          break;\n        case 12:\n          _context4.next = 18;\n          break;\n        case 14:\n          _context4.prev = 14;\n          _context4.t1 = _context4[\"catch\"](2);\n          _didIteratorError = true;\n          _iteratorError = _context4.t1;\n        case 18:\n          _context4.prev = 18;\n          _context4.prev = 19;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context4.next = 23;\n            break;\n          }\n          _context4.next = 23;\n          return _awaitAsyncGenerator(_iterator.return());\n        case 23:\n          _context4.prev = 23;\n          if (!_didIteratorError) {\n            _context4.next = 26;\n            break;\n          }\n          throw _iteratorError;\n        case 26:\n          return _context4.finish(23);\n        case 27:\n          return _context4.finish(18);\n        case 28:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee3, null, [[2, 14, 18, 28], [19,, 23, 27]]);\n  }));\n  return _dagBuilder.apply(this, arguments);\n}\nexport default dagBuilder;","map":{"version":3,"names":["dirBuilder","fileBuilder","errCode","rabin","fixedSize","validateChunks","isIterable","thing","Symbol","iterator","isAsyncIterable","asyncIterator","contentAsAsyncIterable","content","Uint8Array","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","_callee2","_callee2$","_context2","delegateYield","_asyncGeneratorDelegate","_asyncIterator","_awaitAsyncGenerator","_unused","Error","dagBuilder","_x","_x2","_x3","_dagBuilder","apply","arguments","_callee3","source","blockstore","options","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_loop","_iterator","_step","_callee3$","_context4","entry","chunker","chunkValidator","file","dir","_loop$","_context3","value","path","substring","wrapWithDirectory","split","filter","join","mtime","mode","sent","done","t1","return","finish"],"sources":["/Users/apple/Documents/treasure/node_modules/ipfs-unixfs-importer/src/dag-builder/index.js"],"sourcesContent":["import dirBuilder from './dir.js'\nimport fileBuilder from './file/index.js'\nimport errCode from 'err-code'\nimport rabin from '../chunker/rabin.js'\nimport fixedSize from '../chunker/fixed-size.js'\nimport validateChunks from './validate-chunks.js'\n\n/**\n * @typedef {import('../types').File} File\n * @typedef {import('../types').Directory} Directory\n * @typedef {import('../types').DAGBuilder} DAGBuilder\n * @typedef {import('../types').Chunker} Chunker\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @param {any} thing\n * @returns {thing is Iterable<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterable<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>} content\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction contentAsAsyncIterable (content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return (async function * () {\n        yield content\n      }())\n    } else if (isIterable(content)) {\n      return (async function * () {\n        yield * content\n      }())\n    } else if (isAsyncIterable(content)) {\n      return content\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n  }\n\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n}\n\n/**\n * @type {DAGBuilder}\n */\nasync function * dagBuilder (source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true\n      }\n\n      entry.path = entry.path\n        .split('/')\n        .filter(path => path && path !== '.')\n        .join('/')\n    }\n\n    if (entry.content) {\n      /**\n       * @type {Chunker}\n       */\n      let chunker\n\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin\n      } else {\n        chunker = fixedSize\n      }\n\n      /**\n       * @type {ChunkValidator}\n       */\n      let chunkValidator\n\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator\n      } else {\n        chunkValidator = validateChunks\n      }\n\n      /** @type {File} */\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      }\n\n      yield () => fileBuilder(file, blockstore, options)\n    } else if (entry.path) {\n      /** @type {Directory} */\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      }\n\n      yield () => dirBuilder(dir, blockstore, options)\n    } else {\n      throw new Error('Import candidate must have content or path or both')\n    }\n  }\n}\n\nexport default dagBuilder\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}